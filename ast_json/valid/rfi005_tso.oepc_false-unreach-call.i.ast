TranslationUnitDecl 0x55d3a23f0f88 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x55d3a23f1848 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x55d3a23f1520 '__int128'
|-TypedefDecl 0x55d3a23f18b8 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x55d3a23f1540 'unsigned __int128'
|-TypedefDecl 0x55d3a23f1bc0 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x55d3a23f1990 'struct __NSConstantString_tag'
|   `-Record 0x55d3a23f1910 '__NSConstantString_tag'
|-TypedefDecl 0x55d3a23f1c68 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x55d3a23f1c20 'char *'
|   `-BuiltinType 0x55d3a23f1020 'char'
|-TypedefDecl 0x55d3a2430b60 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x55d3a23f1f00 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x55d3a23f1d40 'struct __va_list_tag'
|     `-Record 0x55d3a23f1cc0 '__va_list_tag'
|-FunctionDecl 0x55d3a2430c80 <pthread-wmm/rfi005_tso.oepc_false-unreach-call.i:1:1, col:41> col:14 used __VERIFIER_nondet_bool '_Bool (void)' extern
|-FunctionDecl 0x55d3a2430e50 <line:2:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x55d3a2430d80 <col:31> col:34 'int'
|-FunctionDecl 0x55d3a2430fc8 <line:3:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x55d3a24310f0 <line:4:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x55d3a2431238 <line:5:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x55d3a24311a8 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x55d3a2431468 <col:40, col:99>
|   |-IfStmt 0x55d3a2431438 <col:42, col:88>
|   | |-UnaryOperator 0x55d3a2431318 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x55d3a2431300 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x55d3a24312e0 <col:47> 'int' lvalue ParmVar 0x55d3a24311a8 'expression' 'int'
|   | `-CompoundStmt 0x55d3a2431420 <col:59, col:88>
|   |   `-LabelStmt 0x55d3a2431408 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x55d3a2431398 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x55d3a2431380 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x55d3a2431330 <col:68> 'void () __attribute__((noreturn))' Function 0x55d3a24310f0 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x55d3a2431450 <col:89>
|   `-ReturnStmt 0x55d3a2431458 <col:91>
|-FunctionDecl 0x55d3a24314b0 <line:6:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x55d3a2431570 <line:7:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x55d3a24318f0 <line:9:1, line:11:76> line:9:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55d3a2431628 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x55d3a24316a8 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x55d3a2431728 <line:10:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x55d3a24317a8 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x55d3a24319b0 <line:11:22>
|-FunctionDecl 0x55d3a2456f10 <line:12:1, line:14:76> line:12:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55d3a2431a20 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x55d3a2431aa0 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x55d3a2456d40 <line:13:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x55d3a2456dc0 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x55d3a2456fd0 <line:14:22>
|-FunctionDecl 0x55d3a2457280 <line:15:1, line:16:76> line:15:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55d3a2457040 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x55d3a24570c0 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x55d3a2457140 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x55d3a2457338 <line:16:22>
|-TypedefDecl 0x55d3a24573a8 <line:18:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x55d3a23f10e0 'unsigned char'
|-TypedefDecl 0x55d3a2457418 <line:19:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x55d3a23f1100 'unsigned short'
|-TypedefDecl 0x55d3a2457488 <line:20:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x55d3a23f1120 'unsigned int'
|-TypedefDecl 0x55d3a24574f8 <line:21:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x55d3a23f1140 'unsigned long'
|-TypedefDecl 0x55d3a2457568 <line:22:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x55d3a23f1040 'signed char'
|-TypedefDecl 0x55d3a24575d8 <line:23:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x55d3a23f10e0 'unsigned char'
|-TypedefDecl 0x55d3a2457648 <line:24:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x55d3a23f1060 'short'
|-TypedefDecl 0x55d3a24576b8 <line:25:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x55d3a23f1100 'unsigned short'
|-TypedefDecl 0x55d3a2457728 <line:26:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x55d3a23f1080 'int'
|-TypedefDecl 0x55d3a2457798 <line:27:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x55d3a23f1120 'unsigned int'
|-TypedefDecl 0x55d3a2457808 <line:28:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x55d3a23f10a0 'long'
|-TypedefDecl 0x55d3a2457878 <line:29:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x55d3a23f1140 'unsigned long'
|-TypedefDecl 0x55d3a24578e8 <line:30:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x55d3a23f10a0 'long'
|-TypedefDecl 0x55d3a2457958 <line:31:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x55d3a23f1140 'unsigned long'
|-TypedefDecl 0x55d3a24579c8 <line:32:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x55d3a23f1140 'unsigned long'
|-TypedefDecl 0x55d3a2457a38 <line:33:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x55d3a23f1120 'unsigned int'
|-TypedefDecl 0x55d3a2457aa8 <line:34:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x55d3a23f1120 'unsigned int'
|-TypedefDecl 0x55d3a2457b18 <line:35:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x55d3a23f1140 'unsigned long'
|-TypedefDecl 0x55d3a2457b88 <line:36:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x55d3a23f1140 'unsigned long'
|-TypedefDecl 0x55d3a2457bf8 <line:37:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x55d3a23f1120 'unsigned int'
|-TypedefDecl 0x55d3a2457c68 <line:38:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x55d3a23f1140 'unsigned long'
|-TypedefDecl 0x55d3a2457cd8 <line:39:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x55d3a23f10a0 'long'
|-TypedefDecl 0x55d3a2457d68 <line:40:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x55d3a23f10a0 'long'
|-TypedefDecl 0x55d3a2457dd8 <line:41:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x55d3a23f1080 'int'
|-RecordDecl 0x55d3a2457e30 <line:42:9, col:32> col:9 struct definition
| `-FieldDecl 0x55d3a2457f78 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x55d3a2458030 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x55d3a2457fd0 'struct __fsid_t' sugar
|   `-RecordType 0x55d3a2457eb0 '__fsid_t'
|     `-Record 0x55d3a2457e30 ''
|-TypedefDecl 0x55d3a24580b8 <line:43:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x55d3a23f10a0 'long'
|-TypedefDecl 0x55d3a2458128 <line:44:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x55d3a23f1140 'unsigned long'
|-TypedefDecl 0x55d3a2458198 <line:45:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x55d3a23f1140 'unsigned long'
|-TypedefDecl 0x55d3a2458208 <line:46:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x55d3a23f1120 'unsigned int'
|-TypedefDecl 0x55d3a2458278 <line:47:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x55d3a23f10a0 'long'
|-TypedefDecl 0x55d3a24582e8 <line:48:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x55d3a23f1120 'unsigned int'
|-TypedefDecl 0x55d3a2458358 <line:49:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x55d3a23f10a0 'long'
|-TypedefDecl 0x55d3a24583c8 <line:50:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x55d3a23f1080 'int'
|-TypedefDecl 0x55d3a2458438 <line:51:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x55d3a23f1080 'int'
|-TypedefDecl 0x55d3a24584a8 <line:52:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x55d3a23f1080 'int'
|-TypedefDecl 0x55d3a2458518 <line:53:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x55d3a23f17a0 'void *'
|   `-BuiltinType 0x55d3a23f0fe0 'void'
|-TypedefDecl 0x55d3a2458588 <line:54:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x55d3a23f10a0 'long'
|-TypedefDecl 0x55d3a24585f8 <line:55:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x55d3a23f10a0 'long'
|-TypedefDecl 0x55d3a2458668 <line:56:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x55d3a23f10a0 'long'
|-TypedefDecl 0x55d3a24586d8 <line:57:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x55d3a23f1140 'unsigned long'
|-TypedefDecl 0x55d3a2458748 <line:58:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x55d3a23f1140 'unsigned long'
|-TypedefDecl 0x55d3a24587b8 <line:59:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x55d3a23f1140 'unsigned long'
|-TypedefDecl 0x55d3a2458828 <line:60:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x55d3a23f1140 'unsigned long'
|-TypedefDecl 0x55d3a2458898 <line:61:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x55d3a23f10a0 'long'
|-TypedefDecl 0x55d3a2458908 <line:62:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x55d3a23f10a0 'long'
|-TypedefDecl 0x55d3a2458978 <line:63:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x55d3a23f10a0 'long'
|-TypedefDecl 0x55d3a24589e8 <line:64:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x55d3a23f1140 'unsigned long'
|-TypedefDecl 0x55d3a2458a78 <line:65:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x55d3a2458a40 '__off64_t' sugar
|   |-Typedef 0x55d3a2457d68 '__off64_t'
|   `-BuiltinType 0x55d3a23f10a0 'long'
|-TypedefDecl 0x55d3a2458b70 <line:66:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x55d3a2458b30 '__quad_t *'
|   `-TypedefType 0x55d3a2458ad0 '__quad_t' sugar
|     |-Typedef 0x55d3a24578e8 '__quad_t'
|     `-BuiltinType 0x55d3a23f10a0 'long'
|-TypedefDecl 0x55d3a2458be0 <line:67:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x55d3a23f1c20 'char *'
|   `-BuiltinType 0x55d3a23f1020 'char'
|-TypedefDecl 0x55d3a2458c50 <line:68:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x55d3a23f10a0 'long'
|-TypedefDecl 0x55d3a2458cc0 <line:69:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x55d3a23f1120 'unsigned int'
|-FunctionDecl 0x55d3a2458e38 <line:70:1, line:74:1> line:71:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x55d3a2458d60 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x55d3a2459148 <line:72:1, line:74:1>
|   `-ReturnStmt 0x55d3a2459138 <line:73:3, col:34>
|     `-CallExpr 0x55d3a24590f8 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x55d3a24590e0 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x55d3a2459070 <col:10> '<builtin fn type>' Function 0x55d3a2458ee0 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x55d3a2459120 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x55d3a2459090 <col:29> 'unsigned int' lvalue ParmVar 0x55d3a2458d60 '__bsx' 'unsigned int'
|-FunctionDecl 0x55d3a2458ee0 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x55d3a2458f80 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x55d3a2458ff0 <col:10> Implicit
| `-ConstAttr 0x55d3a2459048 <col:10> Implicit
|-FunctionDecl 0x55d3a24592a0 <line:75:1, line:79:1> line:76:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x55d3a2459198 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x55d3a24595b8 <line:77:1, line:79:1>
|   `-ReturnStmt 0x55d3a24595a8 <line:78:3, col:34>
|     `-CallExpr 0x55d3a2459568 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x55d3a2459550 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x55d3a24594d8 <col:10> '<builtin fn type>' Function 0x55d3a2459348 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x55d3a2459590 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x55d3a24594f8 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x55d3a2459198 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x55d3a2459348 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x55d3a24593e8 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x55d3a2459458 <col:10> Implicit
| `-ConstAttr 0x55d3a24594b0 <col:10> Implicit
|-TypedefDecl 0x55d3a24595e8 <line:80:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x55d3a23f1140 'unsigned long'
|-TypedefDecl 0x55d3a2459678 <line:82:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x55d3a2459640 '__time_t' sugar
|   |-Typedef 0x55d3a2458278 '__time_t'
|   `-BuiltinType 0x55d3a23f10a0 'long'
|-RecordDecl 0x55d3a24596d0 <line:85:1, line:89:3> line:85:8 struct timespec definition
| |-FieldDecl 0x55d3a2459788 <line:87:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x55d3a2459818 <line:88:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x55d3a24598a8 <line:90:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x55d3a2459870 '__pid_t' sugar
|   |-Typedef 0x55d3a2457dd8 '__pid_t'
|   `-BuiltinType 0x55d3a23f1080 'int'
|-RecordDecl 0x55d3a2459900 <line:91:1, line:94:3> line:91:8 struct sched_param definition
| `-FieldDecl 0x55d3a24599c0 <line:93:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x55d3a2459a10 <line:97:1, line:100:3> line:97:8 struct __sched_param definition
| `-FieldDecl 0x55d3a2459ad0 <line:99:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x55d3a2459b38 <line:101:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x55d3a23f1140 'unsigned long'
|-RecordDecl 0x55d3a2459b90 <line:102:9, line:105:1> line:102:9 struct definition
| `-FieldDecl 0x55d3a245be70 <line:104:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x55d3a245bf20 <line:102:1, line:105:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x55d3a245bec0 'struct cpu_set_t' sugar
|   `-RecordType 0x55d3a2459c10 'cpu_set_t'
|     `-Record 0x55d3a2459b90 ''
|-FunctionDecl 0x55d3a245c1f8 <line:107:1, line:108:42> line:107:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x55d3a245bfc8 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x55d3a245c0d0 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x55d3a245c2a8 <line:108:19>
|-FunctionDecl 0x55d3a245c480 <line:109:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x55d3a245c310 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x55d3a245c528 <col:69>
|-FunctionDecl 0x55d3a245c6a0 <line:110:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x55d3a245c590 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x55d3a245c748 <col:64>
|-FunctionDecl 0x55d3a245ca08 <line:113:1, line:114:45> line:113:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x55d3a245c7b0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55d3a245c8e8 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x55d3a245cab8 <line:114:22>
|-FunctionDecl 0x55d3a245ce60 <line:115:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x55d3a245cb20 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55d3a245cc18 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x55d3a245cf10 <col:88>
|-FunctionDecl 0x55d3a245d1c8 <line:116:1, line:117:85> line:116:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x55d3a245cf78 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55d3a245cff8 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x55d3a245d088 <line:117:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x55d3a245d280 <col:62>
|-FunctionDecl 0x55d3a245d3f8 <line:118:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x55d3a245d2e8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x55d3a245d4a0 <col:63>
|-FunctionDecl 0x55d3a245d5c8 <line:119:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x55d3a245d668 <col:47>
|-FunctionDecl 0x55d3a245d770 <line:120:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x55d3a245d6d8 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x55d3a245d818 <col:69>
|-FunctionDecl 0x55d3a245d920 <line:121:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x55d3a245d888 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x55d3a245d9c8 <col:69>
|-FunctionDecl 0x55d3a245dc88 <line:122:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x55d3a245da30 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55d3a245db68 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x55d3a245dd38 <col:88>
|-TypedefDecl 0x55d3a245ddc8 <line:126:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x55d3a245dd90 '__clock_t' sugar
|   |-Typedef 0x55d3a24580b8 '__clock_t'
|   `-BuiltinType 0x55d3a23f10a0 'long'
|-TypedefDecl 0x55d3a245e7e0 <line:129:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x55d3a245de20 '__clockid_t' sugar
|   |-Typedef 0x55d3a24584a8 '__clockid_t'
|   `-BuiltinType 0x55d3a23f1080 'int'
|-TypedefDecl 0x55d3a245e878 <line:130:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x55d3a245e840 '__timer_t' sugar
|   |-Typedef 0x55d3a2458518 '__timer_t'
|   `-PointerType 0x55d3a23f17a0 'void *'
|     `-BuiltinType 0x55d3a23f0fe0 'void'
|-RecordDecl 0x55d3a245e8d0 <line:132:1, line:145:1> line:132:8 struct tm definition
| |-FieldDecl 0x55d3a245e990 <line:134:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x55d3a245e9f8 <line:135:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x55d3a245ea60 <line:136:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x55d3a245eac8 <line:137:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x55d3a245eb30 <line:138:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x55d3a245eb98 <line:139:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x55d3a245ec00 <line:140:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x55d3a245ec68 <line:141:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x55d3a245ecd0 <line:142:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x55d3a245ed38 <line:143:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x55d3a245eda0 <line:144:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x55d3a245edf0 <line:148:1, line:152:3> line:148:8 struct itimerspec definition
| |-FieldDecl 0x55d3a245eeb8 <line:150:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x55d3a245ef28 <line:151:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x55d3a245efd0 <line:153:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x55d3a245f1a0 <line:155:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x55d3a245f240 <col:45>
|-FunctionDecl 0x55d3a245f420 <line:156:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x55d3a245f310 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x55d3a245f4c8 <col:54>
|-FunctionDecl 0x55d3a245f6c8 <line:157:1, line:158:73> line:157:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x55d3a245f530 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x55d3a245f5a8 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x55d3a245f778 <line:158:22>
| `-ConstAttr 0x55d3a2460410 <col:63>
|-FunctionDecl 0x55d3a2460610 <line:159:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x55d3a2460508 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x55d3a24606b8 <col:56>
|-FunctionDecl 0x55d3a2460a60 <line:160:1, line:162:77> line:160:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x55d3a2460728 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x55d3a24607a0 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x55d3a2460820 <line:161:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x55d3a2460918 <line:162:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x55d3a2460b20 <col:54>
|-RecordDecl 0x55d3a2460b78 <line:164:9, line:171:1> line:164:16 struct __locale_struct definition
| |-RecordDecl 0x55d3a2460c28 parent 0x55d3a23f0f88 <line:166:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x55d3a2460e88 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x55d3a2460f28 <line:167:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x55d3a2460f90 <line:168:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x55d3a2460ff8 <line:169:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x55d3a24610e8 <line:170:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x55d3a2461208 <line:164:1, line:171:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x55d3a24611b0 'struct __locale_struct *'
|   `-ElaboratedType 0x55d3a2461140 'struct __locale_struct' sugar
|     `-RecordType 0x55d3a2460c00 'struct __locale_struct'
|       `-Record 0x55d3a2460b78 '__locale_struct'
|-TypedefDecl 0x55d3a24612b8 <line:172:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x55d3a2461280 '__locale_t' sugar
|   |-Typedef 0x55d3a2461208 '__locale_t'
|   `-PointerType 0x55d3a24611b0 'struct __locale_struct *'
|     `-ElaboratedType 0x55d3a2461140 'struct __locale_struct' sugar
|       `-RecordType 0x55d3a2460c00 'struct __locale_struct'
|         `-Record 0x55d3a2460b78 '__locale_struct'
|-FunctionDecl 0x55d3a24616b0 <line:173:1, line:176:63> line:173:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x55d3a2461328 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x55d3a24613a0 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x55d3a2461438 <line:174:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x55d3a24614c8 <line:175:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x55d3a2461540 <line:176:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x55d3a2461778 <col:40>
|-FunctionDecl 0x55d3a2461968 <line:178:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x55d3a2461840 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x55d3a2461a10 <col:66>
|-FunctionDecl 0x55d3a2461b20 <line:179:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x55d3a2461a78 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x55d3a2461bc8 <col:69>
|-FunctionDecl 0x55d3a2461df8 <line:181:1, line:182:75> line:181:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x55d3a2461c30 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x55d3a2461cc0 <line:182:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x55d3a2461ea8 <col:52>
|-FunctionDecl 0x55d3a2462050 <line:183:1, line:184:78> line:183:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x55d3a2461f10 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x55d3a2461fa0 <line:184:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x55d3a2462100 <col:55>
|-FunctionDecl 0x55d3a2462298 <line:186:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x55d3a2462180 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x55d3a2462340 <col:62>
|-FunctionDecl 0x55d3a2462578 <line:187:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x55d3a24623a8 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x55d3a2462620 <col:60>
|-FunctionDecl 0x55d3a2462848 <line:189:1, line:190:67> line:189:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x55d3a24626a0 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x55d3a2462720 <line:190:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x55d3a24628f8 <col:44>
|-FunctionDecl 0x55d3a2462b08 <line:191:1, line:192:72> line:191:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x55d3a2462960 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x55d3a24629e0 <line:192:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x55d3a2462bb8 <col:49>
|-VarDecl 0x55d3a2462cb8 <line:193:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x55d3a2462d38 <line:194:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x55d3a2462db8 <line:195:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x55d3a2462e80 <line:196:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x55d3a2462fb0 <line:197:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x55d3a2463050 <col:42>
|-VarDecl 0x55d3a24630c0 <line:198:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x55d3a2463140 <line:199:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x55d3a24632c8 <line:200:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x55d3a24631b8 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x55d3a2463370 <col:57>
|-FunctionDecl 0x55d3a24644f0 <line:201:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x55d3a24633f0 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x55d3a2464598 <col:56>
|-FunctionDecl 0x55d3a24646a8 <line:202:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x55d3a2464618 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x55d3a2464750 <col:59>
|-FunctionDecl 0x55d3a2464858 <line:203:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x55d3a24647c0 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x55d3a2464900 <col:48>
| `-ConstAttr 0x55d3a2464958 <col:89>
|-FunctionDecl 0x55d3a2464bb8 <line:204:1, line:205:37> line:204:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x55d3a2464a08 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x55d3a2464a98 <line:205:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x55d3a2464e18 <line:206:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x55d3a2464ca8 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55d3a2464d38 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x55d3a2464ec8 <col:88>
|-FunctionDecl 0x55d3a2465060 <line:207:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x55d3a2464f30 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55d3a2464fc0 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x55d3a2465110 <col:88>
|-FunctionDecl 0x55d3a2465328 <line:208:1, line:209:45> line:208:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x55d3a2465178 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55d3a2465208 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x55d3a24653d8 <line:209:22>
|-FunctionDecl 0x55d3a2465778 <line:210:1, line:212:30> line:210:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x55d3a2465440 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55d3a2465500 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x55d3a2465590 <line:211:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x55d3a2465620 <line:212:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x55d3a2465a78 <line:213:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x55d3a2465878 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x55d3a2465950 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x55d3a2465b28 <col:85>
|-FunctionDecl 0x55d3a2465f18 <line:214:1, line:216:75> line:214:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x55d3a2465b90 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55d3a2465cc8 <line:215:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x55d3a2465dd0 <line:216:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x55d3a2465fd0 <col:52>
|-FunctionDecl 0x55d3a2466148 <line:217:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x55d3a2466038 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x55d3a24661f0 <col:61>
|-FunctionDecl 0x55d3a2466668 <line:218:1, line:220:85> line:218:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x55d3a2466258 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x55d3a24662d8 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x55d3a2466408 <line:219:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x55d3a2466510 <line:220:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x55d3a2466728 <col:62>
|-FunctionDecl 0x55d3a2466948 <line:221:1, line:222:45> line:221:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x55d3a2466790 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x55d3a2466820 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x55d3a24669f8 <line:222:22>
|-FunctionDecl 0x55d3a2466af8 <line:223:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x55d3a2466a60 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x55d3a2466ba0 <col:65>
|-TypedefDecl 0x55d3a2466c10 <line:225:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x55d3a23f1140 'unsigned long'
|-RecordDecl 0x55d3a2466c68 <line:226:1, line:230:1> line:226:7 union pthread_attr_t definition
| |-FieldDecl 0x55d3a2466db0 <line:228:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x55d3a2466e18 <line:229:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55d3a2466ec8 <line:231:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x55d3a2466e70 'union pthread_attr_t' sugar
|   `-RecordType 0x55d3a2466cf0 'union pthread_attr_t'
|     `-Record 0x55d3a2466c68 'pthread_attr_t'
|-RecordDecl 0x55d3a2466f20 <line:232:9, line:236:1> line:232:16 struct __pthread_internal_list definition
| |-FieldDecl 0x55d3a2467098 <line:234:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x55d3a2467110 <line:235:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x55d3a24671c0 <line:232:1, line:236:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x55d3a2467160 'struct __pthread_internal_list' sugar
|   `-RecordType 0x55d3a2466fa0 'struct __pthread_internal_list'
|     `-Record 0x55d3a2466f20 '__pthread_internal_list'
|-RecordDecl 0x55d3a2467230 <line:237:9, line:251:1> line:237:9 union definition
| |-RecordDecl 0x55d3a24672d8 parent 0x55d3a23f0f88 <line:239:3, line:248:3> line:239:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x55d3a24673b0 <line:241:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x55d3a2467418 <line:242:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x55d3a2467480 <line:243:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x55d3a246b530 <line:244:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x55d3a246b598 <line:245:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x55d3a246b600 <line:246:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x55d3a246b688 <line:247:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x55d3a246b740 <line:239:3, line:248:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x55d3a246b830 <line:249:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x55d3a246b898 <line:250:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55d3a246ba20 <line:237:1, line:251:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x55d3a246b9c0 'union pthread_mutex_t' sugar
|   `-RecordType 0x55d3a24672b0 'pthread_mutex_t'
|     `-Record 0x55d3a2467230 ''
|-RecordDecl 0x55d3a246ba90 <line:252:9, line:256:1> line:252:9 union definition
| |-FieldDecl 0x55d3a246bbd0 <line:254:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x55d3a246bc38 <line:255:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x55d3a246bcf0 <line:252:1, line:256:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x55d3a246bc90 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x55d3a246bb10 'pthread_mutexattr_t'
|     `-Record 0x55d3a246ba90 ''
|-RecordDecl 0x55d3a246bd60 <line:257:9, line:272:1> line:257:9 union definition
| |-RecordDecl 0x55d3a246be08 <line:259:3, line:269:3> line:259:3 struct definition
| | |-FieldDecl 0x55d3a246bed0 <line:261:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x55d3a246bf38 <line:262:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x55d3a246bfa0 <line:263:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x55d3a246c008 <line:264:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x55d3a246c070 <line:265:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x55d3a246c0d8 <line:266:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x55d3a246c140 <line:267:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x55d3a246c1a8 <line:268:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x55d3a246c260 <line:259:3, line:269:5> col:5 __data 'struct (anonymous struct at pthread-wmm/rfi005_tso.oepc_false-unreach-call.i:259:3)':'struct pthread_cond_t::(anonymous at pthread-wmm/rfi005_tso.oepc_false-unreach-call.i:259:3)'
| |-FieldDecl 0x55d3a246c350 <line:270:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x55d3a246c3b8 <line:271:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x55d3a246c540 <line:257:1, line:272:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x55d3a246c490 'union pthread_cond_t' sugar
|   `-RecordType 0x55d3a246bde0 'pthread_cond_t'
|     `-Record 0x55d3a246bd60 ''
|-RecordDecl 0x55d3a246c5b0 <line:273:9, line:277:1> line:273:9 union definition
| |-FieldDecl 0x55d3a246c6b0 <line:275:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x55d3a246c718 <line:276:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x55d3a246c7d0 <line:273:1, line:277:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x55d3a246c770 'union pthread_condattr_t' sugar
|   `-RecordType 0x55d3a246c630 'pthread_condattr_t'
|     `-Record 0x55d3a246c5b0 ''
|-TypedefDecl 0x55d3a246c858 <line:278:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x55d3a23f1120 'unsigned int'
|-TypedefDecl 0x55d3a246c8c8 <line:279:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x55d3a23f1080 'int'
|-RecordDecl 0x55d3a246c920 <line:280:9, line:298:1> line:280:9 union definition
| |-RecordDecl 0x55d3a246c9c8 <line:282:3, line:295:3> line:282:3 struct definition
| | |-FieldDecl 0x55d3a246ca90 <line:284:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x55d3a246caf8 <line:285:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x55d3a246cb60 <line:286:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x55d3a246cbc8 <line:287:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x55d3a246cc30 <line:288:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x55d3a246cc98 <line:289:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x55d3a246cd00 <line:290:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x55d3a246cd68 <line:291:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x55d3a246cdd0 <line:292:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x55d3a246ce38 <line:293:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x55d3a246cea0 <line:294:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x55d3a246cf50 <line:282:3, line:295:5> col:5 __data 'struct (anonymous struct at pthread-wmm/rfi005_tso.oepc_false-unreach-call.i:282:3)':'struct pthread_rwlock_t::(anonymous at pthread-wmm/rfi005_tso.oepc_false-unreach-call.i:282:3)'
| |-FieldDecl 0x55d3a246cff8 <line:296:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x55d3a246d060 <line:297:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55d3a246d1b0 <line:280:1, line:298:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x55d3a246d150 'union pthread_rwlock_t' sugar
|   `-RecordType 0x55d3a246c9a0 'pthread_rwlock_t'
|     `-Record 0x55d3a246c920 ''
|-RecordDecl 0x55d3a246d220 <line:299:9, line:303:1> line:299:9 union definition
| |-FieldDecl 0x55d3a246d360 <line:301:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x55d3a246d3c8 <line:302:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55d3a246d480 <line:299:1, line:303:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x55d3a246d420 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x55d3a246d2a0 'pthread_rwlockattr_t'
|     `-Record 0x55d3a246d220 ''
|-TypedefDecl 0x55d3a246f560 <line:304:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x55d3a23f1084 'volatile int' volatile
|   `-BuiltinType 0x55d3a23f1080 'int'
|-RecordDecl 0x55d3a246f5b8 <line:305:9, line:309:1> line:305:9 union definition
| |-FieldDecl 0x55d3a246f700 <line:307:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x55d3a246f768 <line:308:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55d3a246f820 <line:305:1, line:309:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x55d3a246f7c0 'union pthread_barrier_t' sugar
|   `-RecordType 0x55d3a246f640 'pthread_barrier_t'
|     `-Record 0x55d3a246f5b8 ''
|-RecordDecl 0x55d3a246f890 <line:310:9, line:314:1> line:310:9 union definition
| |-FieldDecl 0x55d3a246f990 <line:312:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x55d3a246f9f8 <line:313:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x55d3a246fab0 <line:310:1, line:314:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x55d3a246fa50 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x55d3a246f910 'pthread_barrierattr_t'
|     `-Record 0x55d3a246f890 ''
|-TypedefDecl 0x55d3a246fbc8 <line:315:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x55d3a246fb60 'long [8]' 8 
|   `-BuiltinType 0x55d3a23f10a0 'long'
|-EnumDecl 0x55d3a246fc20 <line:316:1, line:320:1> line:316:1
| |-EnumConstantDecl 0x55d3a246fce8 <line:318:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x55d3a246fd38 <line:319:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x55d3a246fd88 <line:321:1, line:332:1> line:321:1
| |-EnumConstantDecl 0x55d3a246fe58 <line:323:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x55d3a246fea8 <line:324:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x55d3a246fef8 <line:325:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x55d3a246ff48 <line:326:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x55d3a246ffd0 <line:328:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x55d3a246ffb8 <col:26> 'int'
| |   `-DeclRefExpr 0x55d3a246ff98 <col:26> 'int' EnumConstant 0x55d3a246fe58 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x55d3a2470058 <line:329:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x55d3a2470040 <col:29> 'int'
| |   `-DeclRefExpr 0x55d3a2470020 <col:29> 'int' EnumConstant 0x55d3a246fea8 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x55d3a24700e0 <line:330:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x55d3a24700c8 <col:30> 'int'
| |   `-DeclRefExpr 0x55d3a24700a8 <col:30> 'int' EnumConstant 0x55d3a246fef8 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x55d3a2470168 <line:331:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x55d3a2470150 <col:27> 'int'
|     `-DeclRefExpr 0x55d3a2470130 <col:27> 'int' EnumConstant 0x55d3a246ffd0 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x55d3a24701b8 <line:333:1, line:339:1> line:333:1
| |-EnumConstantDecl 0x55d3a2470288 <line:335:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x55d3a2470310 <line:336:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x55d3a24702f8 <col:30> 'int'
| |   `-DeclRefExpr 0x55d3a24702d8 <col:30> 'int' EnumConstant 0x55d3a2470288 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x55d3a2470360 <line:337:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x55d3a24703e8 <line:338:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x55d3a24703d0 <col:29> 'int'
|     `-DeclRefExpr 0x55d3a24703b0 <col:29> 'int' EnumConstant 0x55d3a2470360 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x55d3a2470438 <line:340:1, line:345:1> line:340:1
| |-EnumConstantDecl 0x55d3a2470508 <line:342:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x55d3a2470570 <line:343:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x55d3a24705c0 <line:344:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x55d3a2470610 <line:346:1, line:352:1> line:346:1
| |-EnumConstantDecl 0x55d3a24706d8 <line:348:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x55d3a2470728 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x55d3a2470778 <line:350:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x55d3a2470800 <line:351:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x55d3a24707e8 <col:31> 'int'
|     `-DeclRefExpr 0x55d3a24707c8 <col:31> 'int' EnumConstant 0x55d3a24706d8 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x55d3a2470850 <line:353:1, line:357:1> line:353:1
| |-EnumConstantDecl 0x55d3a2470918 <line:355:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x55d3a2470968 <line:356:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x55d3a24709b8 <line:358:1, line:362:1> line:358:1
| |-EnumConstantDecl 0x55d3a2470a88 <line:360:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x55d3a2470ad8 <line:361:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x55d3a2470b28 <line:363:1, line:367:1> line:363:1
| |-EnumConstantDecl 0x55d3a2470bf8 <line:365:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x55d3a2470c48 <line:366:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x55d3a2470c98 <line:368:1, line:374:1> line:368:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x55d3a2470ed8 <line:370:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x55d3a2470f40 <line:371:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x55d3a2470fa8 <line:372:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x55d3a24710c8 <line:373:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x55d3a2471118 <line:375:1, line:379:1> line:375:1
| |-EnumConstantDecl 0x55d3a24711e8 <line:377:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x55d3a2471238 <line:378:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x55d3a2471288 <line:380:1, line:384:1> line:380:1
| |-EnumConstantDecl 0x55d3a2471358 <line:382:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x55d3a24713a8 <line:383:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x55d3a24719d8 <line:386:1, line:389:96> line:386:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x55d3a24714a0 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x55d3a24715c0 <line:387:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55d3a24717c0 <line:388:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x55d3a2471840 <line:389:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x55d3a2471a98 <col:47>
| |-NonNullAttr 0x55d3a2471af0 <col:77, col:94> 1 3
| `-CallbackAttr 0x55d3a2471b28 <line:386:12> Implicit 2 3
|-FunctionDecl 0x55d3a2471c50 <line:390:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x55d3a2471b80 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x55d3a2471ea8 <line:391:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x55d3a2471d08 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x55d3a2471d88 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x55d3a2472078 <line:392:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x55d3a2471f68 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x55d3a2472120 <col:60>
|-FunctionDecl 0x55d3a2472270 <line:393:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x55d3a2472310 <col:54>
| `-ConstAttr 0x55d3a2472368 <col:95>
|-FunctionDecl 0x55d3a2472da0 <line:394:1, line:395:70> line:394:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x55d3a24723a0 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55d3a2472418 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x55d3a2472e50 <line:395:19>
| `-ConstAttr 0x55d3a2472ea8 <col:60>
|-FunctionDecl 0x55d3a2473078 <line:396:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x55d3a2472f40 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x55d3a2473120 <col:71>
| `-NonNullAttr 0x55d3a2473178 <col:112, col:126> 1
|-FunctionDecl 0x55d3a2473280 <line:397:1, line:398:79> line:397:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x55d3a24731c8 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x55d3a2473328 <line:398:22>
| `-NonNullAttr 0x55d3a2473380 <col:63, col:77> 1
|-FunctionDecl 0x55d3a24735a8 <line:399:1, line:401:82> line:399:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x55d3a24733c8 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x55d3a2473448 <line:400:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x55d3a2473658 <line:401:22>
| `-NonNullAttr 0x55d3a24736b0 <col:63, col:80> 1 2
|-FunctionDecl 0x55d3a24738b8 <line:402:1, line:404:79> line:402:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55d3a24736f8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55d3a2473778 <line:403:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x55d3a2473968 <line:404:22>
| `-NonNullAttr 0x55d3a24739c0 <col:63, col:77> 1
|-FunctionDecl 0x55d3a2473c18 <line:405:1, line:407:82> line:405:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x55d3a2473a08 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x55d3a2473ab0 <line:406:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x55d3a2473cc8 <line:407:22>
| `-NonNullAttr 0x55d3a2473d20 <col:63, col:80> 1 2
|-FunctionDecl 0x55d3a2474f78 <line:408:1, line:410:79> line:408:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x55d3a2474dc0 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55d3a2474e38 <line:409:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x55d3a2475028 <line:410:22>
| `-NonNullAttr 0x55d3a2475080 <col:63, col:77> 1
|-FunctionDecl 0x55d3a24752b8 <line:411:1, line:413:82> line:411:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x55d3a24750c8 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55d3a2475158 <line:412:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x55d3a2475368 <line:413:22>
| `-NonNullAttr 0x55d3a24753c0 <col:63, col:80> 1 2
|-FunctionDecl 0x55d3a24755f8 <line:414:1, line:416:97> line:414:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x55d3a2475408 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x55d3a2475498 <line:415:12, line:416:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x55d3a24756a8 <col:37>
| `-NonNullAttr 0x55d3a2475700 <col:78, col:95> 1 2
|-FunctionDecl 0x55d3a24758e8 <line:417:1, line:419:82> line:417:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55d3a2475748 <col:41, line:418:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55d3a24757c8 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x55d3a2475998 <line:419:22>
| `-NonNullAttr 0x55d3a24759f0 <col:63, col:80> 1 2
|-FunctionDecl 0x55d3a2475b78 <line:420:1, line:421:79> line:420:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55d3a2475a38 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55d3a2475ab8 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x55d3a2475c28 <line:421:22>
| `-NonNullAttr 0x55d3a2475c80 <col:63, col:77> 1
|-FunctionDecl 0x55d3a2476e58 <line:422:1, line:424:82> line:422:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55d3a2475cc8 <col:42, line:423:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55d3a2475d48 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x55d3a2476f08 <line:424:22>
| `-NonNullAttr 0x55d3a2476f60 <col:63, col:80> 1 2
|-FunctionDecl 0x55d3a24770e8 <line:425:1, line:427:79> line:425:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55d3a2476fa8 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55d3a2477028 <line:426:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x55d3a2477198 <line:427:22>
| `-NonNullAttr 0x55d3a24771f0 <col:63, col:77> 1
|-FunctionDecl 0x55d3a2477398 <line:428:1, line:430:82> line:428:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55d3a2477238 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55d3a24772b8 <line:429:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x55d3a2477448 <line:430:22>
| `-NonNullAttr 0x55d3a24774a0 <col:63, col:80> 1 2
|-FunctionDecl 0x55d3a2477628 <line:431:1, line:432:79> line:431:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55d3a24774e8 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55d3a2477568 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x55d3a24776d8 <line:432:22>
| `-NonNullAttr 0x55d3a2477730 <col:63, col:77> 1
|-FunctionDecl 0x55d3a2477958 <line:433:1, line:435:115> line:433:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x55d3a2477778 <col:39, line:434:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55d3a24777f8 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x55d3a2477a08 <line:435:22>
| |-NonNullAttr 0x55d3a2477a60 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x55d3a2477a98 <col:100> "" ""
|-FunctionDecl 0x55d3a2477ca8 <line:436:1, line:438:112> line:436:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x55d3a2477ae8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55d3a2477b68 <line:437:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x55d3a2477d58 <line:438:22>
| |-NonNullAttr 0x55d3a2477db0 <col:63, col:77> 1
| `-DeprecatedAttr 0x55d3a2477df8 <col:97> "" ""
|-FunctionDecl 0x55d3a2477fe8 <line:439:1, line:441:82> line:439:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x55d3a2477e48 <col:39, line:440:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55d3a2477ec0 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x55d3a2478098 <line:441:22>
| `-NonNullAttr 0x55d3a24780f0 <col:63, col:80> 1 2
|-FunctionDecl 0x55d3a2478270 <line:442:1, line:444:79> line:442:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x55d3a2478138 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55d3a24781b0 <line:443:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x55d3a2478320 <line:444:22>
| `-NonNullAttr 0x55d3a2478378 <col:63, col:77> 1
|-FunctionDecl 0x55d3a2478668 <line:445:1, line:448:85> line:445:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x55d3a24783c8 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55d3a2478448 <line:446:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x55d3a24784c0 <line:447:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x55d3a2478720 <line:448:22>
| `-NonNullAttr 0x55d3a2478778 <col:63, col:83> 1 2 3
|-FunctionDecl 0x55d3a2478a28 <line:449:1, line:450:100> line:449:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x55d3a24787d0 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55d3a2478850 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x55d3a24788c8 <line:450:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x55d3a2478ae0 <col:43>
| `-NonNullAttr 0x55d3a2478b38 <col:84, col:98> 1
|-FunctionDecl 0x55d3a2478e40 <line:451:1, line:453:79> line:451:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x55d3a2478b88 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55d3a2478c08 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x55d3a2478c98 <line:452:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x55d3a2478ef8 <line:453:22>
| `-NonNullAttr 0x55d3a2478f50 <col:63, col:77> 3
|-FunctionDecl 0x55d3a2479228 <line:454:1, line:457:82> line:454:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x55d3a2478f98 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55d3a2479018 <line:455:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x55d3a24790a8 <line:456:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x55d3a24792e0 <line:457:22>
| `-NonNullAttr 0x55d3a2479338 <col:63, col:80> 2 3
|-FunctionDecl 0x55d3a2479528 <line:458:1, line:459:45> line:458:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x55d3a2479388 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55d3a2479408 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x55d3a24795d8 <line:459:22>
|-FunctionDecl 0x55d3a24799a8 <line:460:1, line:461:71> line:460:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x55d3a24796a0 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x55d3a2479840 <line:461:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x55d3a2479a58 <col:52, col:69> 1 2
|-FunctionDecl 0x55d3a2479c00 <line:462:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x55d3a2479ae0 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x55d3a2479b60 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x55d3a2479e10 <line:463:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x55d3a2479cc8 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x55d3a2479d48 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x55d3a2479f68 <line:464:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x55d3a2479ed0 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x55d3a247a0a8 <line:465:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x55d3a247a148 <line:466:9, line:474:1> line:466:9 struct definition
| |-RecordDecl 0x55d3a247a1f8 <line:468:3, line:472:3> line:468:3 struct definition
| | |-FieldDecl 0x55d3a247a2e8 <line:470:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x55d3a247a350 <line:471:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x55d3a247a520 <line:468:3, line:472:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at pthread-wmm/rfi005_tso.oepc_false-unreach-call.i:468:3) [1]'
| `-FieldDecl 0x55d3a247a618 <line:473:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x55d3a247a6d0 <line:466:1, line:474:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x55d3a247a670 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x55d3a247a1d0 '__pthread_unwind_buf_t'
| |   `-Record 0x55d3a247a148 ''
| `-AlignedAttr 0x55d3a247a728 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x55d3a247a7a0 <line:475:1, line:481:1> line:475:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x55d3a247a900 <line:477:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x55d3a247a968 <line:478:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x55d3a247a9d0 <line:479:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x55d3a247aa38 <line:480:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x55d3a247ac40 <line:482:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x55d3a247ab30 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x55d3a247ae20 <line:484:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x55d3a247acf8 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x55d3a247afe0 <line:486:1, line:488:31> line:486:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55d3a247aed8 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x55d3a247b088 <line:488:22>
|-RecordDecl 0x55d3a247b0e0 <line:490:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x55d3a247b3f8 <line:491:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x55d3a247b258 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x55d3a247b2d8 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x55d3a247b4a8 <col:86>
| `-ReturnsTwiceAttr 0x55d3a247b500 <col:12> Implicit
|-FunctionDecl 0x55d3a247b828 <line:492:1, line:494:79> line:492:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x55d3a247b5d0 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x55d3a247b6e0 <line:493:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x55d3a247b8d8 <line:494:22>
| `-NonNullAttr 0x55d3a247b930 <col:63, col:77> 1
|-FunctionDecl 0x55d3a247baa8 <line:495:1, line:496:79> line:495:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55d3a247b978 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55d3a247bb50 <line:496:22>
| `-NonNullAttr 0x55d3a247bba8 <col:63, col:77> 1
|-FunctionDecl 0x55d3a247bcb0 <line:497:1, line:498:68> line:497:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55d3a247bbf8 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55d3a247bd58 <line:498:22>
| `-NonNullAttr 0x55d3a247bdb0 <col:52, col:66> 1
|-FunctionDecl 0x55d3a247bee8 <line:499:1, line:500:68> line:499:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55d3a247be30 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55d3a247bf90 <line:500:22>
| `-NonNullAttr 0x55d3a247bfe8 <col:52, col:66> 1
|-FunctionDecl 0x55d3a247c228 <line:501:1, line:503:85> line:501:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55d3a247c038 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55d3a247c0c8 <line:502:9, line:503:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x55d3a247c2d8 <col:36>
| `-NonNullAttr 0x55d3a247c330 <col:66, col:83> 1 2
|-FunctionDecl 0x55d3a247c430 <line:504:1, line:505:68> line:504:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55d3a247c378 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55d3a247c4d8 <line:505:22>
| `-NonNullAttr 0x55d3a247c530 <col:52, col:66> 1
|-FunctionDecl 0x55d3a247c7c8 <line:506:1, line:509:82> line:506:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55d3a247c5e0 <col:42, line:507:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55d3a247c660 <line:508:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x55d3a247c878 <line:509:22>
| `-NonNullAttr 0x55d3a247c8d0 <col:63, col:80> 1 2
|-FunctionDecl 0x55d3a247cb98 <line:510:1, line:513:82> line:510:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x55d3a247c918 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55d3a247c998 <line:511:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x55d3a247ca18 <line:512:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x55d3a247cc50 <line:513:22>
| `-NonNullAttr 0x55d3a247cca8 <col:63, col:80> 1 3
|-FunctionDecl 0x55d3a247ce40 <line:514:1, line:515:79> line:514:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55d3a247ccf8 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55d3a247cee8 <line:515:22>
| `-NonNullAttr 0x55d3a247cf40 <col:63, col:77> 1
|-FunctionDecl 0x55d3a247d128 <line:516:1, line:517:79> line:516:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x55d3a247cff0 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x55d3a247d1d0 <line:517:22>
| `-NonNullAttr 0x55d3a247d228 <col:63, col:77> 1
|-FunctionDecl 0x55d3a247d330 <line:518:1, line:519:79> line:518:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x55d3a247d278 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x55d3a247d3d8 <line:519:22>
| `-NonNullAttr 0x55d3a247d430 <col:63, col:77> 1
|-FunctionDecl 0x55d3a247d658 <line:520:1, line:523:82> line:520:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55d3a247d478 <col:42, line:521:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55d3a247d4f8 <line:522:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x55d3a247d708 <line:523:22>
| `-NonNullAttr 0x55d3a247d760 <col:63, col:80> 1 2
|-FunctionDecl 0x55d3a247d968 <line:524:1, line:526:79> line:524:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55d3a247d7a8 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55d3a247d828 <line:525:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x55d3a247da18 <line:526:22>
| `-NonNullAttr 0x55d3a247da70 <col:63, col:77> 1
|-FunctionDecl 0x55d3a247dc18 <line:527:1, line:529:82> line:527:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55d3a247dab8 <col:39, line:528:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55d3a247db38 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x55d3a247dcc8 <line:529:22>
| `-NonNullAttr 0x55d3a247dd20 <col:63, col:80> 1 2
|-FunctionDecl 0x55d3a247ef20 <line:530:1, line:531:79> line:530:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55d3a247dd68 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55d3a247ee60 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x55d3a247efd0 <line:531:22>
| `-NonNullAttr 0x55d3a247f028 <col:63, col:77> 1
|-FunctionDecl 0x55d3a247f1d8 <line:532:1, line:535:82> line:532:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55d3a247f078 <col:43, line:533:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55d3a247f0f8 <line:534:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x55d3a247f288 <line:535:22>
| `-NonNullAttr 0x55d3a247f2e0 <col:63, col:80> 1 2
|-FunctionDecl 0x55d3a247f468 <line:536:1, line:538:79> line:536:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55d3a247f328 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55d3a247f3a8 <line:537:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x55d3a247f518 <line:538:22>
| `-NonNullAttr 0x55d3a247f570 <col:63, col:77> 1
|-FunctionDecl 0x55d3a247f718 <line:539:1, line:542:82> line:539:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55d3a247f5b8 <col:46, line:540:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55d3a247f638 <line:541:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x55d3a247f7c8 <line:542:22>
| `-NonNullAttr 0x55d3a247f820 <col:63, col:80> 1 2
|-FunctionDecl 0x55d3a247f9a8 <line:543:1, line:545:79> line:543:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55d3a247f868 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55d3a247f8e8 <line:544:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x55d3a247fa58 <line:545:22>
| `-NonNullAttr 0x55d3a247fab0 <col:63, col:77> 1
|-FunctionDecl 0x55d3a247fc98 <line:546:1, line:548:82> line:546:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x55d3a247faf8 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x55d3a247fb78 <line:547:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x55d3a247fd48 <line:548:22>
| `-NonNullAttr 0x55d3a247fda0 <col:63, col:80> 1 2
|-FunctionDecl 0x55d3a2480f58 <line:549:1, line:551:79> line:549:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55d3a247fde8 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55d3a2480e98 <line:550:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x55d3a2481008 <line:551:22>
| `-NonNullAttr 0x55d3a2481060 <col:63, col:77> 1
|-FunctionDecl 0x55d3a2481398 <line:552:1, line:554:86> line:552:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x55d3a2481140 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x55d3a2481250 <line:553:5, line:554:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x55d3a2481448 <col:29>
| `-NonNullAttr 0x55d3a24814a0 <col:70, col:84> 1
|-FunctionDecl 0x55d3a2481618 <line:555:1, line:556:79> line:555:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55d3a24814e8 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55d3a24816c0 <line:556:22>
| `-NonNullAttr 0x55d3a2481718 <col:63, col:77> 1
|-FunctionDecl 0x55d3a2481820 <line:557:1, line:558:68> line:557:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55d3a2481768 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55d3a24818c8 <line:558:22>
| `-NonNullAttr 0x55d3a2481920 <col:52, col:66> 1
|-FunctionDecl 0x55d3a2481a20 <line:559:1, line:560:65> line:559:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55d3a2481968 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55d3a2481ac8 <line:560:19>
| `-NonNullAttr 0x55d3a2481b20 <col:49, col:63> 1
|-FunctionDecl 0x55d3a2481d58 <line:561:1, line:563:88> line:561:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55d3a2481b68 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x55d3a2481bf8 <line:562:12, line:563:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x55d3a2481e08 <col:39>
| `-NonNullAttr 0x55d3a2481e90 <col:69, col:86> 1 2
|-FunctionDecl 0x55d3a2481f90 <line:564:1, line:565:68> line:564:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55d3a2481ed8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55d3a2482038 <line:565:22>
| `-NonNullAttr 0x55d3a2482090 <col:52, col:66> 1
|-FunctionDecl 0x55d3a2482190 <line:566:1, line:567:68> line:566:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55d3a24820d8 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55d3a2482238 <line:567:22>
| `-NonNullAttr 0x55d3a2482290 <col:52, col:66> 1
|-FunctionDecl 0x55d3a2482448 <line:568:1, line:570:88> line:568:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55d3a24822d8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x55d3a2482368 <line:569:12, line:570:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x55d3a24824f8 <col:39>
| `-NonNullAttr 0x55d3a2482550 <col:69, col:86> 1 2
|-FunctionDecl 0x55d3a2482650 <line:571:1, line:572:68> line:571:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55d3a2482598 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55d3a24826f8 <line:572:22>
| `-NonNullAttr 0x55d3a2482750 <col:52, col:66> 1
|-FunctionDecl 0x55d3a2482938 <line:573:1, line:574:79> line:573:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x55d3a2482800 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x55d3a24829e0 <line:574:22>
| `-NonNullAttr 0x55d3a2482a38 <col:63, col:77> 1
|-FunctionDecl 0x55d3a2482b40 <line:575:1, line:576:79> line:575:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x55d3a2482a88 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x55d3a2482be8 <line:576:22>
| `-NonNullAttr 0x55d3a2482c40 <col:63, col:77> 1
|-FunctionDecl 0x55d3a2482ea0 <line:577:1, line:580:82> line:577:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55d3a2482c88 <col:43, line:578:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x55d3a2482d08 <line:579:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x55d3a2482f50 <line:580:22>
| `-NonNullAttr 0x55d3a2482fa8 <col:63, col:80> 1 2
|-FunctionDecl 0x55d3a24831b8 <line:581:1, line:583:79> line:581:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x55d3a2482ff8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x55d3a2483078 <line:582:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x55d3a2483268 <line:583:22>
| `-NonNullAttr 0x55d3a24832c0 <col:63, col:77> 1
|-FunctionDecl 0x55d3a2483468 <line:584:1, line:587:82> line:584:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55d3a2483308 <col:43, line:585:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x55d3a2483388 <line:586:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x55d3a2483518 <line:587:22>
| `-NonNullAttr 0x55d3a2483570 <col:63, col:80> 1 2
|-FunctionDecl 0x55d3a24836f8 <line:588:1, line:589:93> line:588:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x55d3a24835b8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x55d3a2483638 <line:589:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x55d3a24837a8 <col:36>
| `-NonNullAttr 0x55d3a2483800 <col:77, col:91> 1
|-FunctionDecl 0x55d3a2483b38 <line:590:1, line:592:79> line:590:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x55d3a24838e0 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x55d3a24839f0 <line:591:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x55d3a2483be8 <line:592:22>
| `-NonNullAttr 0x55d3a2483c40 <col:63, col:77> 1
|-FunctionDecl 0x55d3a2483db8 <line:593:1, line:594:79> line:593:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x55d3a2483c88 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x55d3a2483e60 <line:594:22>
| `-NonNullAttr 0x55d3a2483ee0 <col:63, col:77> 1
|-FunctionDecl 0x55d3a2483fe0 <line:595:1, line:596:68> line:595:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x55d3a2483f28 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x55d3a2484088 <line:596:22>
| `-NonNullAttr 0x55d3a24840e0 <col:52, col:66> 1
|-FunctionDecl 0x55d3a24841e0 <line:597:1, line:598:68> line:597:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x55d3a2484128 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x55d3a2484288 <line:598:22>
| `-NonNullAttr 0x55d3a24842e0 <col:52, col:66> 1
|-FunctionDecl 0x55d3a2484508 <line:599:1, line:601:41> line:599:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x55d3a2484328 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x55d3a24843a0 <line:600:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x55d3a24845b8 <line:601:22, col:39> 1 2
|-FunctionDecl 0x55d3a24848e8 <line:602:1, line:605:44> line:602:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55d3a2484638 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x55d3a24846b0 <line:603:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55d3a2484740 <line:604:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x55d3a24849a0 <line:605:22, col:42> 1 2 3
|-FunctionDecl 0x55d3a2484bb8 <line:606:1, line:607:79> line:606:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x55d3a2484a80 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x55d3a2484c60 <line:607:22>
| `-NonNullAttr 0x55d3a2484cb8 <col:63, col:77> 1
|-FunctionDecl 0x55d3a2484dc0 <line:608:1, line:609:79> line:608:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x55d3a2484d08 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x55d3a2484e68 <line:609:22>
| `-NonNullAttr 0x55d3a2484ef0 <col:63, col:77> 1
|-FunctionDecl 0x55d3a2485118 <line:610:1, line:613:82> line:610:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55d3a2484f38 <col:41, line:611:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x55d3a2484fb8 <line:612:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x55d3a24851c8 <line:613:22>
| `-NonNullAttr 0x55d3a2485220 <col:63, col:80> 1 2
|-FunctionDecl 0x55d3a2485428 <line:614:1, line:615:94> line:614:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x55d3a2485268 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x55d3a24852e8 <line:615:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x55d3a24854d8 <col:37>
| `-NonNullAttr 0x55d3a2485530 <col:78, col:92> 1
|-FunctionDecl 0x55d3a2485748 <line:616:1, line:619:82> line:616:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x55d3a2485578 <col:39, line:617:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x55d3a2485620 <line:618:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x55d3a24857f8 <line:619:22>
| `-NonNullAttr 0x55d3a2485850 <col:63, col:80> 1 2
|-FunctionDecl 0x55d3a2485a18 <line:620:1, line:622:79> line:620:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x55d3a2485898 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x55d3a2485910 <line:621:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x55d3a2485ac8 <line:622:22>
| `-NonNullAttr 0x55d3a2485b20 <col:63, col:77> 1
|-FunctionDecl 0x55d3a2485dc8 <line:623:1, line:624:79> line:623:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x55d3a2485c00 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x55d3a2485c80 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x55d3a2485e78 <line:624:22>
| `-NonNullAttr 0x55d3a2485f00 <col:63, col:77> 1
|-FunctionDecl 0x55d3a2486078 <line:625:1, line:626:79> line:625:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55d3a2485f48 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55d3a2486120 <line:626:22>
| `-NonNullAttr 0x55d3a2486178 <col:63, col:77> 1
|-FunctionDecl 0x55d3a2486280 <line:627:1, line:628:68> line:627:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55d3a24861c8 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55d3a2486328 <line:628:22>
| `-NonNullAttr 0x55d3a2486380 <col:52, col:66> 1
|-FunctionDecl 0x55d3a2486480 <line:629:1, line:630:68> line:629:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55d3a24863c8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55d3a2486528 <line:630:22>
| `-NonNullAttr 0x55d3a2486580 <col:52, col:66> 1
|-FunctionDecl 0x55d3a2486680 <line:631:1, line:632:68> line:631:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55d3a24865c8 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55d3a2486728 <line:632:22>
| `-NonNullAttr 0x55d3a2486780 <col:52, col:66> 1
|-FunctionDecl 0x55d3a2486b58 <line:633:1, line:636:79> line:633:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x55d3a2486860 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x55d3a2486970 <line:634:6, line:635:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x55d3a24869f0 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x55d3a2486c10 <line:636:22>
| `-NonNullAttr 0x55d3a2486c68 <col:63, col:77> 1
|-FunctionDecl 0x55d3a2486de8 <line:637:1, line:638:79> line:637:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x55d3a2486cb8 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x55d3a2486e90 <line:638:22>
| `-NonNullAttr 0x55d3a2486f10 <col:63, col:77> 1
|-FunctionDecl 0x55d3a2487010 <line:639:1, line:640:68> line:639:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x55d3a2486f58 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x55d3a24870b8 <line:640:22>
| `-NonNullAttr 0x55d3a2487110 <col:52, col:66> 1
|-FunctionDecl 0x55d3a24872f8 <line:641:1, line:642:79> line:641:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x55d3a24871c0 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x55d3a24873a0 <line:642:22>
| `-NonNullAttr 0x55d3a24873f8 <col:63, col:77> 1
|-FunctionDecl 0x55d3a2487500 <line:643:1, line:644:79> line:643:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x55d3a2487448 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x55d3a24875a8 <line:644:22>
| `-NonNullAttr 0x55d3a2487600 <col:63, col:77> 1
|-FunctionDecl 0x55d3a2487828 <line:645:1, line:648:82> line:645:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55d3a2487648 <col:44, line:646:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x55d3a24876c8 <line:647:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x55d3a24878d8 <line:648:22>
| `-NonNullAttr 0x55d3a2487930 <col:63, col:80> 1 2
|-FunctionDecl 0x55d3a2487b38 <line:649:1, line:651:79> line:649:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x55d3a2487978 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x55d3a24879f8 <line:650:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x55d3a2487be8 <line:651:22>
| `-NonNullAttr 0x55d3a2487c40 <col:63, col:77> 1
|-FunctionDecl 0x55d3a2487fa8 <line:652:1, line:654:79> line:652:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x55d3a2487d20 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x55d3a2487e40 <line:653:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x55d3a2488058 <line:654:22>
| `-NonNullAttr 0x55d3a24880b0 <col:63, col:77> 1
|-FunctionDecl 0x55d3a2488208 <line:655:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x55d3a24880f8 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x55d3a24882b0 <col:69>
|-FunctionDecl 0x55d3a2488428 <line:656:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x55d3a2488318 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x55d3a24884d0 <col:72>
|-FunctionDecl 0x55d3a2488708 <line:657:1, line:658:67> line:657:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x55d3a2488538 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x55d3a24885e8 <line:658:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x55d3a24887b8 <col:44>
|-FunctionDecl 0x55d3a24889d8 <line:659:1, line:661:79> line:659:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x55d3a2488820 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55d3a2488898 <line:660:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x55d3a2488a88 <line:661:22>
| `-NonNullAttr 0x55d3a2488ae0 <col:63, col:77> 2
|-FunctionDecl 0x55d3a2489f50 <line:662:1, line:664:70> line:662:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x55d3a2488bc0 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x55d3a2488cd0 <line:663:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x55d3a2488de0 <line:664:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x55d3a248a008 <col:47>
|-FunctionDecl 0x55d3a248a110 <line:666:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x55d3a248a078 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x55d3a248a268 <line:667:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x55d3a248a1d0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x55d3a248a330 <line:668:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x55d3a248a3f0 <line:669:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x55d3a248a4b0 <line:670:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x55d3a248a568 <line:671:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x55d3a248a5e8 prev 0x55d3a248a568 <line:672:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x55d3a248a650 <col:24> 'int' 0
|-VarDecl 0x55d3a248a688 <line:673:1, col:5> col:5 used __unbuffered_p0_EAX 'int'
|-VarDecl 0x55d3a248a708 prev 0x55d3a248a688 <line:674:1, col:27> col:5 used __unbuffered_p0_EAX 'int' cinit
| `-IntegerLiteral 0x55d3a248a770 <col:27> 'int' 0
|-VarDecl 0x55d3a248a7a8 <line:675:1, col:5> col:5 used __unbuffered_p1_EAX 'int'
|-VarDecl 0x55d3a248a828 prev 0x55d3a248a7a8 <line:676:1, col:27> col:5 used __unbuffered_p1_EAX 'int' cinit
| `-IntegerLiteral 0x55d3a248a890 <col:27> 'int' 0
|-VarDecl 0x55d3a248a8c8 <line:677:1, col:5> col:5 used __unbuffered_p1_EBX 'int'
|-VarDecl 0x55d3a248a948 prev 0x55d3a248a8c8 <line:678:1, col:27> col:5 used __unbuffered_p1_EBX 'int' cinit
| `-IntegerLiteral 0x55d3a248a9b0 <col:27> 'int' 0
|-VarDecl 0x55d3a248a9e0 <line:679:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x55d3a248aa58 <line:680:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x55d3a248aad8 <line:681:1, col:5> col:5 used x 'int'
|-VarDecl 0x55d3a248ab58 prev 0x55d3a248aad8 <line:682:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x55d3a248abc0 <col:9> 'int' 0
|-VarDecl 0x55d3a248abf8 <line:683:1, col:5> col:5 used y 'int'
|-VarDecl 0x55d3a248ac78 prev 0x55d3a248abf8 <line:684:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x55d3a248ace0 <col:9> 'int' 0
|-VarDecl 0x55d3a248ad10 <line:685:1, col:7> col:7 used y$flush_delayed '_Bool'
|-VarDecl 0x55d3a248ad90 <line:686:1, col:5> col:5 used y$mem_tmp 'int'
|-VarDecl 0x55d3a248ae08 <line:687:1, col:7> col:7 used y$r_buff0_thd0 '_Bool'
|-VarDecl 0x55d3a248ae80 <line:688:1, col:7> col:7 used y$r_buff0_thd1 '_Bool'
|-VarDecl 0x55d3a248af20 <line:689:1, col:7> col:7 used y$r_buff0_thd2 '_Bool'
|-VarDecl 0x55d3a248af98 <line:690:1, col:7> col:7 used y$r_buff1_thd0 '_Bool'
|-VarDecl 0x55d3a248b010 <line:691:1, col:7> col:7 used y$r_buff1_thd1 '_Bool'
|-VarDecl 0x55d3a248b088 <line:692:1, col:7> col:7 used y$r_buff1_thd2 '_Bool'
|-VarDecl 0x55d3a248b100 <line:693:1, col:7> col:7 y$read_delayed '_Bool'
|-VarDecl 0x55d3a248b180 <line:694:1, col:6> col:6 y$read_delayed_var 'int *'
|-VarDecl 0x55d3a248b200 <line:695:1, col:5> col:5 used y$w_buff0 'int'
|-VarDecl 0x55d3a248b278 <line:696:1, col:7> col:7 used y$w_buff0_used '_Bool'
|-VarDecl 0x55d3a248b2f8 <line:697:1, col:5> col:5 used y$w_buff1 'int'
|-VarDecl 0x55d3a248b370 <line:698:1, col:7> col:7 used y$w_buff1_used '_Bool'
|-VarDecl 0x55d3a248b3e8 <line:699:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x55d3a248b460 <line:700:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x55d3a248b578 prev 0x55d3a248a110 <line:701:1, line:730:1> line:701:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x55d3a248b4e0 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x55d3a248e5b8 <line:702:1, line:730:1>
|   |-CallExpr 0x55d3a248b688 <line:703:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55d3a248b670 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55d3a248b620 <col:3> 'void ()' Function 0x55d3a24314b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55d3a248b6e8 <line:704:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x55d3a248b6a8 <col:3> 'int' lvalue Var 0x55d3a248ab58 'x' 'int'
|   | `-IntegerLiteral 0x55d3a248b6c8 <col:7> 'int' 1
|   |-CallExpr 0x55d3a248b740 <line:705:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55d3a248b728 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55d3a248b708 <col:3> 'void ()' Function 0x55d3a2431570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55d3a248b798 <line:706:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55d3a248b780 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55d3a248b760 <col:3> 'void ()' Function 0x55d3a24314b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-CallExpr 0x55d3a248b7f0 <line:707:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55d3a248b7d8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55d3a248b7b8 <col:3> 'void ()' Function 0x55d3a2431570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55d3a248b848 <line:708:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55d3a248b830 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55d3a248b810 <col:3> 'void ()' Function 0x55d3a24314b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55d3a248b918 <line:709:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x55d3a248b868 <col:3> '_Bool' lvalue Var 0x55d3a248b3e8 'weak$$choice0' '_Bool'
|   | `-CallExpr 0x55d3a248b8f8 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x55d3a248b8e0 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x55d3a248b888 <col:19> '_Bool (void)' Function 0x55d3a2430c80 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x55d3a248b9b0 <line:710:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x55d3a248b938 <col:3> '_Bool' lvalue Var 0x55d3a248b460 'weak$$choice2' '_Bool'
|   | `-CallExpr 0x55d3a248b990 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x55d3a248b978 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x55d3a248b958 <col:19> '_Bool (void)' Function 0x55d3a2430c80 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x55d3a248ba28 <line:711:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x55d3a248b9d0 <col:3> '_Bool' lvalue Var 0x55d3a248ad10 'y$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x55d3a248ba10 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55d3a248b9f0 <col:21> '_Bool' lvalue Var 0x55d3a248b460 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x55d3a248baa0 <line:712:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x55d3a248ba48 <col:3> 'int' lvalue Var 0x55d3a248ad90 'y$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x55d3a248ba88 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55d3a248ba68 <col:15> 'int' lvalue Var 0x55d3a248ac78 'y' 'int'
|   |-BinaryOperator 0x55d3a248bed8 <line:713:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x55d3a248bac0 <col:3> 'int' lvalue Var 0x55d3a248ac78 'y' 'int'
|   | `-ConditionalOperator 0x55d3a248bea8 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x55d3a248bcd0 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x55d3a248bbf0 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x55d3a248bb18 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x55d3a248bb00 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x55d3a248bae0 <col:8> '_Bool' lvalue Var 0x55d3a248b278 'y$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x55d3a248bbd0 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x55d3a248bb68 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x55d3a248bb50 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x55d3a248bb30 <col:27> '_Bool' lvalue Var 0x55d3a248ae80 'y$r_buff0_thd1' '_Bool'
|   |   | |   `-UnaryOperator 0x55d3a248bbb8 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x55d3a248bba0 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x55d3a248bb80 <col:46> '_Bool' lvalue Var 0x55d3a248b370 'y$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x55d3a248bcb0 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x55d3a248bc48 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x55d3a248bc30 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x55d3a248bc10 <col:65> '_Bool' lvalue Var 0x55d3a248ae80 'y$r_buff0_thd1' '_Bool'
|   |   |   `-UnaryOperator 0x55d3a248bc98 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x55d3a248bc80 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x55d3a248bc60 <col:84> '_Bool' lvalue Var 0x55d3a248b010 'y$r_buff1_thd1' '_Bool'
|   |   |-ImplicitCastExpr 0x55d3a248be90 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55d3a248bcf0 <col:101> 'int' lvalue Var 0x55d3a248ac78 'y' 'int'
|   |   `-ParenExpr 0x55d3a248be70 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x55d3a248be40 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x55d3a248bdb0 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55d3a248bd68 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55d3a248bd50 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55d3a248bd10 <col:106> '_Bool' lvalue Var 0x55d3a248b278 'y$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55d3a248bd98 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55d3a248bd80 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55d3a248bd30 <col:124> '_Bool' lvalue Var 0x55d3a248ae80 'y$r_buff0_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x55d3a248be10 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55d3a248bdd0 <col:141> 'int' lvalue Var 0x55d3a248b200 'y$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x55d3a248be28 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55d3a248bdf0 <col:153> 'int' lvalue Var 0x55d3a248b2f8 'y$w_buff1' 'int'
|   |-BinaryOperator 0x55d3a248c400 <line:714:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x55d3a248bef8 <col:3> 'int' lvalue Var 0x55d3a248b200 'y$w_buff0' 'int'
|   | `-ConditionalOperator 0x55d3a248c3d0 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x55d3a248c3a0 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55d3a248c388 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55d3a248bf30 <col:15> '_Bool' lvalue Var 0x55d3a248b460 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x55d3a248c3b8 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55d3a248bf50 <col:31> 'int' lvalue Var 0x55d3a248b200 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x55d3a248c368 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x55d3a248c338 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x55d3a248c160 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x55d3a248c080 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x55d3a248bfa8 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x55d3a248bf90 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x55d3a248bf70 <col:45> '_Bool' lvalue Var 0x55d3a248b278 'y$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x55d3a248c060 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x55d3a248bff8 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x55d3a248bfe0 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x55d3a248bfc0 <col:64> '_Bool' lvalue Var 0x55d3a248ae80 'y$r_buff0_thd1' '_Bool'
|   |       | |   `-UnaryOperator 0x55d3a248c048 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x55d3a248c030 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x55d3a248c010 <col:83> '_Bool' lvalue Var 0x55d3a248b370 'y$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x55d3a248c140 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x55d3a248c0d8 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x55d3a248c0c0 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x55d3a248c0a0 <col:102> '_Bool' lvalue Var 0x55d3a248ae80 'y$r_buff0_thd1' '_Bool'
|   |       |   `-UnaryOperator 0x55d3a248c128 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x55d3a248c110 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x55d3a248c0f0 <col:121> '_Bool' lvalue Var 0x55d3a248b010 'y$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x55d3a248c320 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55d3a248c180 <col:138> 'int' lvalue Var 0x55d3a248b200 'y$w_buff0' 'int'
|   |       `-ParenExpr 0x55d3a248c300 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x55d3a248c2d0 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x55d3a248c240 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x55d3a248c1f8 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x55d3a248c1e0 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x55d3a248c1a0 <col:151> '_Bool' lvalue Var 0x55d3a248b278 'y$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x55d3a248c228 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x55d3a248c210 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x55d3a248c1c0 <col:169> '_Bool' lvalue Var 0x55d3a248ae80 'y$r_buff0_thd1' '_Bool'
|   |           |-ImplicitCastExpr 0x55d3a248c2a0 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x55d3a248c260 <col:186> 'int' lvalue Var 0x55d3a248b200 'y$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x55d3a248c2b8 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x55d3a248c280 <col:198> 'int' lvalue Var 0x55d3a248b200 'y$w_buff0' 'int'
|   |-BinaryOperator 0x55d3a248c910 <line:715:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x55d3a248c420 <col:3> 'int' lvalue Var 0x55d3a248b2f8 'y$w_buff1' 'int'
|   | `-ConditionalOperator 0x55d3a248c8e0 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x55d3a248c8b0 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55d3a248c898 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55d3a248c440 <col:15> '_Bool' lvalue Var 0x55d3a248b460 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x55d3a248c8c8 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55d3a248c460 <col:31> 'int' lvalue Var 0x55d3a248b2f8 'y$w_buff1' 'int'
|   |   `-ParenExpr 0x55d3a248c878 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x55d3a248c848 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x55d3a248c670 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x55d3a248c590 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x55d3a248c4b8 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x55d3a248c4a0 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x55d3a248c480 <col:45> '_Bool' lvalue Var 0x55d3a248b278 'y$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x55d3a248c570 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x55d3a248c508 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x55d3a248c4f0 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x55d3a248c4d0 <col:64> '_Bool' lvalue Var 0x55d3a248ae80 'y$r_buff0_thd1' '_Bool'
|   |       | |   `-UnaryOperator 0x55d3a248c558 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x55d3a248c540 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x55d3a248c520 <col:83> '_Bool' lvalue Var 0x55d3a248b370 'y$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x55d3a248c650 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x55d3a248c5e8 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x55d3a248c5d0 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x55d3a248c5b0 <col:102> '_Bool' lvalue Var 0x55d3a248ae80 'y$r_buff0_thd1' '_Bool'
|   |       |   `-UnaryOperator 0x55d3a248c638 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x55d3a248c620 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x55d3a248c600 <col:121> '_Bool' lvalue Var 0x55d3a248b010 'y$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x55d3a248c830 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55d3a248c690 <col:138> 'int' lvalue Var 0x55d3a248b2f8 'y$w_buff1' 'int'
|   |       `-ParenExpr 0x55d3a248c810 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x55d3a248c7e0 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x55d3a248c750 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x55d3a248c708 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x55d3a248c6f0 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x55d3a248c6b0 <col:151> '_Bool' lvalue Var 0x55d3a248b278 'y$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x55d3a248c738 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x55d3a248c720 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x55d3a248c6d0 <col:169> '_Bool' lvalue Var 0x55d3a248ae80 'y$r_buff0_thd1' '_Bool'
|   |           |-ImplicitCastExpr 0x55d3a248c7b0 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x55d3a248c770 <col:186> 'int' lvalue Var 0x55d3a248b2f8 'y$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x55d3a248c7c8 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x55d3a248c790 <col:198> 'int' lvalue Var 0x55d3a248b2f8 'y$w_buff1' 'int'
|   |-BinaryOperator 0x55d3a248ceb8 <line:716:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x55d3a248c930 <col:3> '_Bool' lvalue Var 0x55d3a248b278 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55d3a248cea0 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55d3a248ce70 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x55d3a248ce28 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55d3a248ce10 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55d3a248c950 <col:20> '_Bool' lvalue Var 0x55d3a248b460 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55d3a248ce58 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55d3a248ce40 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55d3a248c970 <col:36> '_Bool' lvalue Var 0x55d3a248b278 'y$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x55d3a248cdf0 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x55d3a248cdc0 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x55d3a248cb80 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55d3a248caa0 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55d3a248c9c8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55d3a248c9b0 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55d3a248c990 <col:55> '_Bool' lvalue Var 0x55d3a248b278 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55d3a248ca80 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55d3a248ca18 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55d3a248ca00 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55d3a248c9e0 <col:74> '_Bool' lvalue Var 0x55d3a248ae80 'y$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x55d3a248ca68 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55d3a248ca50 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55d3a248ca30 <col:93> '_Bool' lvalue Var 0x55d3a248b370 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55d3a248cb60 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55d3a248caf8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55d3a248cae0 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55d3a248cac0 <col:112> '_Bool' lvalue Var 0x55d3a248ae80 'y$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x55d3a248cb48 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55d3a248cb30 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55d3a248cb10 <col:131> '_Bool' lvalue Var 0x55d3a248b010 'y$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x55d3a248cda8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55d3a248cd90 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55d3a248cba0 <col:148> '_Bool' lvalue Var 0x55d3a248b278 'y$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x55d3a248cd70 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x55d3a248cd40 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x55d3a248cc60 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55d3a248cc18 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55d3a248cc00 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55d3a248cbc0 <col:166> '_Bool' lvalue Var 0x55d3a248b278 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55d3a248cc48 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55d3a248cc30 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55d3a248cbe0 <col:184> '_Bool' lvalue Var 0x55d3a248ae80 'y$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x55d3a248ccf8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55d3a248ccb0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55d3a248cc80 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55d3a248cd28 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x55d3a248cd10 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x55d3a248ccd8 <col:212> '_Bool' lvalue Var 0x55d3a248b278 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55d3a248d4a8 <line:717:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x55d3a248ced8 <col:3> '_Bool' lvalue Var 0x55d3a248b370 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55d3a248d490 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55d3a248d460 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x55d3a248d418 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55d3a248d400 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55d3a248cef8 <col:20> '_Bool' lvalue Var 0x55d3a248b460 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55d3a248d448 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55d3a248d430 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55d3a248cf40 <col:36> '_Bool' lvalue Var 0x55d3a248b370 'y$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x55d3a248d3e0 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x55d3a248d3b0 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x55d3a248d150 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55d3a248d070 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55d3a248cf98 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55d3a248cf80 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55d3a248cf60 <col:55> '_Bool' lvalue Var 0x55d3a248b278 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55d3a248d050 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55d3a248cfe8 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55d3a248cfd0 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55d3a248cfb0 <col:74> '_Bool' lvalue Var 0x55d3a248ae80 'y$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x55d3a248d038 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55d3a248d020 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55d3a248d000 <col:93> '_Bool' lvalue Var 0x55d3a248b370 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55d3a248d130 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55d3a248d0c8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55d3a248d0b0 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55d3a248d090 <col:112> '_Bool' lvalue Var 0x55d3a248ae80 'y$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x55d3a248d118 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55d3a248d100 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55d3a248d0e0 <col:131> '_Bool' lvalue Var 0x55d3a248b010 'y$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x55d3a248d398 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55d3a248d380 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55d3a248d170 <col:148> '_Bool' lvalue Var 0x55d3a248b370 'y$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x55d3a248d360 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x55d3a248d330 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x55d3a248d230 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55d3a248d1e8 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55d3a248d1d0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55d3a248d190 <col:166> '_Bool' lvalue Var 0x55d3a248b278 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55d3a248d218 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55d3a248d200 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55d3a248d1b0 <col:184> '_Bool' lvalue Var 0x55d3a248ae80 'y$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x55d3a248d300 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55d3a248d280 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55d3a248d250 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55d3a248d318 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x55d3a248d2d8 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x55d3a248d2a8 <col:219> 'int' 0
|   |-BinaryOperator 0x55d3a248da50 <line:718:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x55d3a248d4c8 <col:3> '_Bool' lvalue Var 0x55d3a248ae80 'y$r_buff0_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x55d3a248da38 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55d3a248da08 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x55d3a248d9c0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55d3a248d9a8 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55d3a248d4e8 <col:20> '_Bool' lvalue Var 0x55d3a248b460 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55d3a248d9f0 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55d3a248d9d8 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55d3a248d508 <col:36> '_Bool' lvalue Var 0x55d3a248ae80 'y$r_buff0_thd1' '_Bool'
|   |     `-ParenExpr 0x55d3a248d988 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x55d3a248d958 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x55d3a248d718 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55d3a248d638 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55d3a248d560 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55d3a248d548 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55d3a248d528 <col:55> '_Bool' lvalue Var 0x55d3a248b278 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55d3a248d618 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55d3a248d5b0 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55d3a248d598 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55d3a248d578 <col:74> '_Bool' lvalue Var 0x55d3a248ae80 'y$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x55d3a248d600 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55d3a248d5e8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55d3a248d5c8 <col:93> '_Bool' lvalue Var 0x55d3a248b370 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55d3a248d6f8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55d3a248d690 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55d3a248d678 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55d3a248d658 <col:112> '_Bool' lvalue Var 0x55d3a248ae80 'y$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x55d3a248d6e0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55d3a248d6c8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55d3a248d6a8 <col:131> '_Bool' lvalue Var 0x55d3a248b010 'y$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x55d3a248d940 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55d3a248d928 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55d3a248d738 <col:148> '_Bool' lvalue Var 0x55d3a248ae80 'y$r_buff0_thd1' '_Bool'
|   |         `-ParenExpr 0x55d3a248d908 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x55d3a248d8d8 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x55d3a248d7f8 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55d3a248d7b0 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55d3a248d798 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55d3a248d758 <col:166> '_Bool' lvalue Var 0x55d3a248b278 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55d3a248d7e0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55d3a248d7c8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55d3a248d778 <col:184> '_Bool' lvalue Var 0x55d3a248ae80 'y$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x55d3a248d890 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55d3a248d848 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55d3a248d818 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55d3a248d8c0 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x55d3a248d8a8 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x55d3a248d870 <col:212> '_Bool' lvalue Var 0x55d3a248ae80 'y$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x55d3a248e048 <line:719:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x55d3a248da70 <col:3> '_Bool' lvalue Var 0x55d3a248b010 'y$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x55d3a248e030 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55d3a248e000 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x55d3a248dfb8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55d3a248dfa0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55d3a248da90 <col:20> '_Bool' lvalue Var 0x55d3a248b460 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55d3a248dfe8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55d3a248dfd0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55d3a248dab0 <col:36> '_Bool' lvalue Var 0x55d3a248b010 'y$r_buff1_thd1' '_Bool'
|   |     `-ParenExpr 0x55d3a248df80 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x55d3a248df50 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x55d3a248dcc0 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55d3a248dbe0 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55d3a248db08 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55d3a248daf0 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55d3a248dad0 <col:55> '_Bool' lvalue Var 0x55d3a248b278 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55d3a248dbc0 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55d3a248db58 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55d3a248db40 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55d3a248db20 <col:74> '_Bool' lvalue Var 0x55d3a248ae80 'y$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x55d3a248dba8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55d3a248db90 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55d3a248db70 <col:93> '_Bool' lvalue Var 0x55d3a248b370 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55d3a248dca0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55d3a248dc38 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55d3a248dc20 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55d3a248dc00 <col:112> '_Bool' lvalue Var 0x55d3a248ae80 'y$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x55d3a248dc88 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55d3a248dc70 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55d3a248dc50 <col:131> '_Bool' lvalue Var 0x55d3a248b010 'y$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x55d3a248df08 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55d3a248def0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55d3a248dce0 <col:148> '_Bool' lvalue Var 0x55d3a248b010 'y$r_buff1_thd1' '_Bool'
|   |         `-ParenExpr 0x55d3a248ded0 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x55d3a248dea0 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x55d3a248dda0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55d3a248dd58 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55d3a248dd40 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55d3a248dd00 <col:166> '_Bool' lvalue Var 0x55d3a248b278 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55d3a248dd88 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55d3a248dd70 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55d3a248dd20 <col:184> '_Bool' lvalue Var 0x55d3a248ae80 'y$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x55d3a248de70 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55d3a248ddf0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55d3a248ddc0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55d3a248de88 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x55d3a248de48 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x55d3a248de18 <col:219> 'int' 0
|   |-BinaryOperator 0x55d3a248e0c0 <line:720:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x55d3a248e068 <col:3> 'int' lvalue Var 0x55d3a248a708 '__unbuffered_p0_EAX' 'int'
|   | `-ImplicitCastExpr 0x55d3a248e0a8 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55d3a248e088 <col:25> 'int' lvalue Var 0x55d3a248ac78 'y' 'int'
|   |-BinaryOperator 0x55d3a248e1f0 <line:721:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x55d3a248e0e0 <col:3> 'int' lvalue Var 0x55d3a248ac78 'y' 'int'
|   | `-ConditionalOperator 0x55d3a248e1c0 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x55d3a248e178 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55d3a248e160 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55d3a248e100 <col:7> '_Bool' lvalue Var 0x55d3a248ad10 'y$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x55d3a248e190 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55d3a248e120 <col:25> 'int' lvalue Var 0x55d3a248ad90 'y$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x55d3a248e1a8 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x55d3a248e140 <col:37> 'int' lvalue Var 0x55d3a248ac78 'y' 'int'
|   |-BinaryOperator 0x55d3a248e288 <line:722:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x55d3a248e210 <col:3> '_Bool' lvalue Var 0x55d3a248ad10 'y$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x55d3a248e260 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x55d3a248e230 <col:28> 'int' 0
|   |-CallExpr 0x55d3a248e2e0 <line:723:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55d3a248e2c8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55d3a248e2a8 <col:3> 'void ()' Function 0x55d3a2431570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55d3a248e338 <line:724:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55d3a248e320 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55d3a248e300 <col:3> 'void ()' Function 0x55d3a24314b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-CallExpr 0x55d3a248e390 <line:725:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55d3a248e378 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55d3a248e358 <col:3> 'void ()' Function 0x55d3a2431570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55d3a248e3e8 <line:726:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55d3a248e3d0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55d3a248e3b0 <col:3> 'void ()' Function 0x55d3a24314b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55d3a248e4a0 <line:727:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x55d3a248e408 <col:3> 'int' lvalue Var 0x55d3a248a5e8 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x55d3a248e480 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x55d3a248e468 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55d3a248e428 <col:22> 'int' lvalue Var 0x55d3a248a5e8 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x55d3a248e448 <col:41> 'int' 1
|   |-CallExpr 0x55d3a248e4f8 <line:728:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55d3a248e4e0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55d3a248e4c0 <col:3> 'void ()' Function 0x55d3a2431570 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x55d3a248e5a8 <line:729:3, col:36>
|     `-CallExpr 0x55d3a248e588 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x55d3a248e570 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x55d3a248e518 <col:10> 'void *(void)' Function 0x55d3a2430fc8 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x55d3a248e750 prev 0x55d3a248a268 <line:731:1, line:785:1> line:731:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x55d3a248e6b8 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x55d3a2492fa0 <line:732:1, line:785:1>
|   |-CallExpr 0x55d3a248e830 <line:733:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55d3a248e818 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55d3a248e7f8 <col:3> 'void ()' Function 0x55d3a24314b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55d3a248e8a8 <line:734:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x55d3a248e850 <col:3> 'int' lvalue Var 0x55d3a248b2f8 'y$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x55d3a248e890 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55d3a248e870 <col:15> 'int' lvalue Var 0x55d3a248b200 'y$w_buff0' 'int'
|   |-BinaryOperator 0x55d3a248e908 <line:735:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x55d3a248e8c8 <col:3> 'int' lvalue Var 0x55d3a248b200 'y$w_buff0' 'int'
|   | `-IntegerLiteral 0x55d3a248e8e8 <col:15> 'int' 1
|   |-BinaryOperator 0x55d3a248e980 <line:736:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55d3a248e928 <col:3> '_Bool' lvalue Var 0x55d3a248b370 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55d3a248e968 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55d3a248e948 <col:20> '_Bool' lvalue Var 0x55d3a248b278 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55d3a248ea18 <line:737:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x55d3a248e9a0 <col:3> '_Bool' lvalue Var 0x55d3a248b278 'y$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x55d3a248e9f0 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x55d3a248e9c0 <col:27> 'int' 1
|   |-CallExpr 0x55d3a248eb98 <line:738:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x55d3a248eb80 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x55d3a248ea38 <col:3> 'void (int)' Function 0x55d3a2431238 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x55d3a248eb38 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x55d3a248eb18 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x55d3a248eaf8 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x55d3a248eab0 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x55d3a248ea98 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x55d3a248ea58 <col:23> '_Bool' lvalue Var 0x55d3a248b370 'y$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x55d3a248eae0 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x55d3a248eac8 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x55d3a248ea78 <col:41> '_Bool' lvalue Var 0x55d3a248b278 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55d3a248ec18 <line:739:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55d3a248ebc0 <col:3> '_Bool' lvalue Var 0x55d3a248af98 'y$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x55d3a248ec00 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55d3a248ebe0 <col:20> '_Bool' lvalue Var 0x55d3a248ae08 'y$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x55d3a248ec90 <line:740:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55d3a248ec38 <col:3> '_Bool' lvalue Var 0x55d3a248b010 'y$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x55d3a248ec78 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55d3a248ec58 <col:20> '_Bool' lvalue Var 0x55d3a248ae80 'y$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x55d3a248ed08 <line:741:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55d3a248ecb0 <col:3> '_Bool' lvalue Var 0x55d3a248b088 'y$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x55d3a248ecf0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55d3a248ecd0 <col:20> '_Bool' lvalue Var 0x55d3a248af20 'y$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x55d3a248eda0 <line:742:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x55d3a248ed28 <col:3> '_Bool' lvalue Var 0x55d3a248af20 'y$r_buff0_thd2' '_Bool'
|   | `-CStyleCastExpr 0x55d3a248ed78 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x55d3a248ed48 <col:27> 'int' 1
|   |-CallExpr 0x55d3a248edf8 <line:743:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55d3a248ede0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55d3a248edc0 <col:3> 'void ()' Function 0x55d3a2431570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55d3a248ee50 <line:744:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55d3a248ee38 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55d3a248ee18 <col:3> 'void ()' Function 0x55d3a24314b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55d3a248eec8 <line:745:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x55d3a248ee70 <col:3> 'int' lvalue Var 0x55d3a248b2f8 'y$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x55d3a248eeb0 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55d3a248ee90 <col:15> 'int' lvalue Var 0x55d3a248b200 'y$w_buff0' 'int'
|   |-BinaryOperator 0x55d3a248ef28 <line:746:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x55d3a248eee8 <col:3> 'int' lvalue Var 0x55d3a248b200 'y$w_buff0' 'int'
|   | `-IntegerLiteral 0x55d3a248ef08 <col:15> 'int' 2
|   |-BinaryOperator 0x55d3a248efb8 <line:747:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55d3a248ef60 <col:3> '_Bool' lvalue Var 0x55d3a248b370 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55d3a248efa0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55d3a248ef80 <col:20> '_Bool' lvalue Var 0x55d3a248b278 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55d3a248f050 <line:748:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x55d3a248efd8 <col:3> '_Bool' lvalue Var 0x55d3a248b278 'y$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x55d3a248f028 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x55d3a248eff8 <col:27> 'int' 1
|   |-CallExpr 0x55d3a248f1a0 <line:749:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x55d3a248f188 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x55d3a248f070 <col:3> 'void (int)' Function 0x55d3a2431238 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x55d3a248f170 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x55d3a248f150 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x55d3a248f130 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x55d3a248f0e8 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x55d3a248f0d0 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x55d3a248f090 <col:23> '_Bool' lvalue Var 0x55d3a248b370 'y$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x55d3a248f118 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x55d3a248f100 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x55d3a248f0b0 <col:41> '_Bool' lvalue Var 0x55d3a248b278 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55d3a248f220 <line:750:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55d3a248f1c8 <col:3> '_Bool' lvalue Var 0x55d3a248af98 'y$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x55d3a248f208 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55d3a248f1e8 <col:20> '_Bool' lvalue Var 0x55d3a248ae08 'y$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x55d3a248f298 <line:751:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55d3a248f240 <col:3> '_Bool' lvalue Var 0x55d3a248b010 'y$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x55d3a248f280 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55d3a248f260 <col:20> '_Bool' lvalue Var 0x55d3a248ae80 'y$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x55d3a248f310 <line:752:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55d3a248f2b8 <col:3> '_Bool' lvalue Var 0x55d3a248b088 'y$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x55d3a248f2f8 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55d3a248f2d8 <col:20> '_Bool' lvalue Var 0x55d3a248af20 'y$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x55d3a248f3a8 <line:753:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x55d3a248f330 <col:3> '_Bool' lvalue Var 0x55d3a248af20 'y$r_buff0_thd2' '_Bool'
|   | `-CStyleCastExpr 0x55d3a248f380 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x55d3a248f350 <col:27> 'int' 1
|   |-CallExpr 0x55d3a248f400 <line:754:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55d3a248f3e8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55d3a248f3c8 <col:3> 'void ()' Function 0x55d3a2431570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55d3a248f458 <line:755:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55d3a248f440 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55d3a248f420 <col:3> 'void ()' Function 0x55d3a24314b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55d3a248f4f0 <line:756:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x55d3a248f478 <col:3> '_Bool' lvalue Var 0x55d3a248b3e8 'weak$$choice0' '_Bool'
|   | `-CallExpr 0x55d3a248f4d0 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x55d3a248f4b8 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x55d3a248f498 <col:19> '_Bool (void)' Function 0x55d3a2430c80 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x55d3a248f588 <line:757:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x55d3a248f510 <col:3> '_Bool' lvalue Var 0x55d3a248b460 'weak$$choice2' '_Bool'
|   | `-CallExpr 0x55d3a248f568 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x55d3a248f550 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x55d3a248f530 <col:19> '_Bool (void)' Function 0x55d3a2430c80 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x55d3a248f600 <line:758:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x55d3a248f5a8 <col:3> '_Bool' lvalue Var 0x55d3a248ad10 'y$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x55d3a248f5e8 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55d3a248f5c8 <col:21> '_Bool' lvalue Var 0x55d3a248b460 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x55d3a248f678 <line:759:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x55d3a248f620 <col:3> 'int' lvalue Var 0x55d3a248ad90 'y$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x55d3a248f660 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55d3a248f640 <col:15> 'int' lvalue Var 0x55d3a248ac78 'y' 'int'
|   |-BinaryOperator 0x55d3a248fab0 <line:760:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x55d3a248f698 <col:3> 'int' lvalue Var 0x55d3a248ac78 'y' 'int'
|   | `-ConditionalOperator 0x55d3a248fa80 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x55d3a248f8a8 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x55d3a248f7c8 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x55d3a248f6f0 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x55d3a248f6d8 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x55d3a248f6b8 <col:8> '_Bool' lvalue Var 0x55d3a248b278 'y$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x55d3a248f7a8 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x55d3a248f740 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x55d3a248f728 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x55d3a248f708 <col:27> '_Bool' lvalue Var 0x55d3a248af20 'y$r_buff0_thd2' '_Bool'
|   |   | |   `-UnaryOperator 0x55d3a248f790 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x55d3a248f778 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x55d3a248f758 <col:46> '_Bool' lvalue Var 0x55d3a248b370 'y$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x55d3a248f888 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x55d3a248f820 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x55d3a248f808 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x55d3a248f7e8 <col:65> '_Bool' lvalue Var 0x55d3a248af20 'y$r_buff0_thd2' '_Bool'
|   |   |   `-UnaryOperator 0x55d3a248f870 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x55d3a248f858 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x55d3a248f838 <col:84> '_Bool' lvalue Var 0x55d3a248b088 'y$r_buff1_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x55d3a248fa68 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55d3a248f8c8 <col:101> 'int' lvalue Var 0x55d3a248ac78 'y' 'int'
|   |   `-ParenExpr 0x55d3a248fa48 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x55d3a248fa18 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x55d3a248f988 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55d3a248f940 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55d3a248f928 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55d3a248f8e8 <col:106> '_Bool' lvalue Var 0x55d3a248b278 'y$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55d3a248f970 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55d3a248f958 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55d3a248f908 <col:124> '_Bool' lvalue Var 0x55d3a248af20 'y$r_buff0_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x55d3a248f9e8 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55d3a248f9a8 <col:141> 'int' lvalue Var 0x55d3a248b200 'y$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x55d3a248fa00 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55d3a248f9c8 <col:153> 'int' lvalue Var 0x55d3a248b2f8 'y$w_buff1' 'int'
|   |-BinaryOperator 0x55d3a248ffd0 <line:761:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x55d3a248fad0 <col:3> 'int' lvalue Var 0x55d3a248b200 'y$w_buff0' 'int'
|   | `-ConditionalOperator 0x55d3a248ffa0 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x55d3a248ff70 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55d3a248ff48 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55d3a248faf0 <col:15> '_Bool' lvalue Var 0x55d3a248b460 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x55d3a248ff88 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55d3a248fb10 <col:31> 'int' lvalue Var 0x55d3a248b200 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x55d3a248ff28 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x55d3a248fef8 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x55d3a248fd20 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x55d3a248fc40 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x55d3a248fb68 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x55d3a248fb50 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x55d3a248fb30 <col:45> '_Bool' lvalue Var 0x55d3a248b278 'y$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x55d3a248fc20 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x55d3a248fbb8 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x55d3a248fba0 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x55d3a248fb80 <col:64> '_Bool' lvalue Var 0x55d3a248af20 'y$r_buff0_thd2' '_Bool'
|   |       | |   `-UnaryOperator 0x55d3a248fc08 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x55d3a248fbf0 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x55d3a248fbd0 <col:83> '_Bool' lvalue Var 0x55d3a248b370 'y$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x55d3a248fd00 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x55d3a248fc98 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x55d3a248fc80 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x55d3a248fc60 <col:102> '_Bool' lvalue Var 0x55d3a248af20 'y$r_buff0_thd2' '_Bool'
|   |       |   `-UnaryOperator 0x55d3a248fce8 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x55d3a248fcd0 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x55d3a248fcb0 <col:121> '_Bool' lvalue Var 0x55d3a248b088 'y$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x55d3a248fee0 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55d3a248fd40 <col:138> 'int' lvalue Var 0x55d3a248b200 'y$w_buff0' 'int'
|   |       `-ParenExpr 0x55d3a248fec0 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x55d3a248fe90 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x55d3a248fe00 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x55d3a248fdb8 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x55d3a248fda0 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x55d3a248fd60 <col:151> '_Bool' lvalue Var 0x55d3a248b278 'y$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x55d3a248fde8 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x55d3a248fdd0 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x55d3a248fd80 <col:169> '_Bool' lvalue Var 0x55d3a248af20 'y$r_buff0_thd2' '_Bool'
|   |           |-ImplicitCastExpr 0x55d3a248fe60 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x55d3a248fe20 <col:186> 'int' lvalue Var 0x55d3a248b200 'y$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x55d3a248fe78 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x55d3a248fe40 <col:198> 'int' lvalue Var 0x55d3a248b200 'y$w_buff0' 'int'
|   |-BinaryOperator 0x55d3a24904e0 <line:762:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x55d3a248fff0 <col:3> 'int' lvalue Var 0x55d3a248b2f8 'y$w_buff1' 'int'
|   | `-ConditionalOperator 0x55d3a24904b0 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x55d3a2490480 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55d3a2490468 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55d3a2490010 <col:15> '_Bool' lvalue Var 0x55d3a248b460 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x55d3a2490498 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55d3a2490030 <col:31> 'int' lvalue Var 0x55d3a248b2f8 'y$w_buff1' 'int'
|   |   `-ParenExpr 0x55d3a2490448 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x55d3a2490418 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x55d3a2490240 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x55d3a2490160 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x55d3a2490088 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x55d3a2490070 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x55d3a2490050 <col:45> '_Bool' lvalue Var 0x55d3a248b278 'y$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x55d3a2490140 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x55d3a24900d8 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x55d3a24900c0 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x55d3a24900a0 <col:64> '_Bool' lvalue Var 0x55d3a248af20 'y$r_buff0_thd2' '_Bool'
|   |       | |   `-UnaryOperator 0x55d3a2490128 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x55d3a2490110 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x55d3a24900f0 <col:83> '_Bool' lvalue Var 0x55d3a248b370 'y$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x55d3a2490220 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x55d3a24901b8 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x55d3a24901a0 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x55d3a2490180 <col:102> '_Bool' lvalue Var 0x55d3a248af20 'y$r_buff0_thd2' '_Bool'
|   |       |   `-UnaryOperator 0x55d3a2490208 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x55d3a24901f0 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x55d3a24901d0 <col:121> '_Bool' lvalue Var 0x55d3a248b088 'y$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x55d3a2490400 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55d3a2490260 <col:138> 'int' lvalue Var 0x55d3a248b2f8 'y$w_buff1' 'int'
|   |       `-ParenExpr 0x55d3a24903e0 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x55d3a24903b0 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x55d3a2490320 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x55d3a24902d8 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x55d3a24902c0 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x55d3a2490280 <col:151> '_Bool' lvalue Var 0x55d3a248b278 'y$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x55d3a2490308 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x55d3a24902f0 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x55d3a24902a0 <col:169> '_Bool' lvalue Var 0x55d3a248af20 'y$r_buff0_thd2' '_Bool'
|   |           |-ImplicitCastExpr 0x55d3a2490380 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x55d3a2490340 <col:186> 'int' lvalue Var 0x55d3a248b2f8 'y$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x55d3a2490398 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x55d3a2490360 <col:198> 'int' lvalue Var 0x55d3a248b2f8 'y$w_buff1' 'int'
|   |-BinaryOperator 0x55d3a2490a88 <line:763:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x55d3a2490500 <col:3> '_Bool' lvalue Var 0x55d3a248b278 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55d3a2490a70 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55d3a2490a40 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x55d3a24909f8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55d3a24909e0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55d3a2490520 <col:20> '_Bool' lvalue Var 0x55d3a248b460 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55d3a2490a28 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55d3a2490a10 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55d3a2490540 <col:36> '_Bool' lvalue Var 0x55d3a248b278 'y$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x55d3a24909c0 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x55d3a2490990 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x55d3a2490750 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55d3a2490670 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55d3a2490598 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55d3a2490580 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55d3a2490560 <col:55> '_Bool' lvalue Var 0x55d3a248b278 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55d3a2490650 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55d3a24905e8 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55d3a24905d0 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55d3a24905b0 <col:74> '_Bool' lvalue Var 0x55d3a248af20 'y$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x55d3a2490638 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55d3a2490620 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55d3a2490600 <col:93> '_Bool' lvalue Var 0x55d3a248b370 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55d3a2490730 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55d3a24906c8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55d3a24906b0 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55d3a2490690 <col:112> '_Bool' lvalue Var 0x55d3a248af20 'y$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x55d3a2490718 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55d3a2490700 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55d3a24906e0 <col:131> '_Bool' lvalue Var 0x55d3a248b088 'y$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x55d3a2490978 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55d3a2490960 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55d3a2490770 <col:148> '_Bool' lvalue Var 0x55d3a248b278 'y$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x55d3a2490940 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x55d3a2490910 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x55d3a2490830 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55d3a24907e8 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55d3a24907d0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55d3a2490790 <col:166> '_Bool' lvalue Var 0x55d3a248b278 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55d3a2490818 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55d3a2490800 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55d3a24907b0 <col:184> '_Bool' lvalue Var 0x55d3a248af20 'y$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x55d3a24908c8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55d3a2490880 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55d3a2490850 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55d3a24908f8 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x55d3a24908e0 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x55d3a24908a8 <col:212> '_Bool' lvalue Var 0x55d3a248b278 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55d3a2491078 <line:764:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x55d3a2490aa8 <col:3> '_Bool' lvalue Var 0x55d3a248b370 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55d3a2491060 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55d3a2491030 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x55d3a2490fe8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55d3a2490fd0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55d3a2490ac8 <col:20> '_Bool' lvalue Var 0x55d3a248b460 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55d3a2491018 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55d3a2491000 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55d3a2490ae8 <col:36> '_Bool' lvalue Var 0x55d3a248b370 'y$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x55d3a2490fb0 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x55d3a2490f80 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x55d3a2490cf8 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55d3a2490c18 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55d3a2490b40 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55d3a2490b28 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55d3a2490b08 <col:55> '_Bool' lvalue Var 0x55d3a248b278 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55d3a2490bf8 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55d3a2490b90 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55d3a2490b78 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55d3a2490b58 <col:74> '_Bool' lvalue Var 0x55d3a248af20 'y$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x55d3a2490be0 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55d3a2490bc8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55d3a2490ba8 <col:93> '_Bool' lvalue Var 0x55d3a248b370 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55d3a2490cd8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55d3a2490c70 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55d3a2490c58 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55d3a2490c38 <col:112> '_Bool' lvalue Var 0x55d3a248af20 'y$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x55d3a2490cc0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55d3a2490ca8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55d3a2490c88 <col:131> '_Bool' lvalue Var 0x55d3a248b088 'y$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x55d3a2490f40 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55d3a2490f28 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55d3a2490d18 <col:148> '_Bool' lvalue Var 0x55d3a248b370 'y$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x55d3a2490f08 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x55d3a2490ed8 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x55d3a2490dd8 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55d3a2490d90 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55d3a2490d78 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55d3a2490d38 <col:166> '_Bool' lvalue Var 0x55d3a248b278 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55d3a2490dc0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55d3a2490da8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55d3a2490d58 <col:184> '_Bool' lvalue Var 0x55d3a248af20 'y$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x55d3a2490ea8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55d3a2490e28 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55d3a2490df8 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55d3a2490ec0 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x55d3a2490e80 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x55d3a2490e50 <col:219> 'int' 0
|   |-BinaryOperator 0x55d3a2491620 <line:765:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x55d3a2491098 <col:3> '_Bool' lvalue Var 0x55d3a248af20 'y$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x55d3a2491608 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55d3a24915d8 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x55d3a2491590 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55d3a2491578 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55d3a24910b8 <col:20> '_Bool' lvalue Var 0x55d3a248b460 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55d3a24915c0 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55d3a24915a8 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55d3a24910d8 <col:36> '_Bool' lvalue Var 0x55d3a248af20 'y$r_buff0_thd2' '_Bool'
|   |     `-ParenExpr 0x55d3a2491558 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x55d3a2491528 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x55d3a24912e8 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55d3a2491208 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55d3a2491130 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55d3a2491118 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55d3a24910f8 <col:55> '_Bool' lvalue Var 0x55d3a248b278 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55d3a24911e8 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55d3a2491180 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55d3a2491168 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55d3a2491148 <col:74> '_Bool' lvalue Var 0x55d3a248af20 'y$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x55d3a24911d0 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55d3a24911b8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55d3a2491198 <col:93> '_Bool' lvalue Var 0x55d3a248b370 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55d3a24912c8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55d3a2491260 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55d3a2491248 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55d3a2491228 <col:112> '_Bool' lvalue Var 0x55d3a248af20 'y$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x55d3a24912b0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55d3a2491298 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55d3a2491278 <col:131> '_Bool' lvalue Var 0x55d3a248b088 'y$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x55d3a2491510 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55d3a24914f8 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55d3a2491308 <col:148> '_Bool' lvalue Var 0x55d3a248af20 'y$r_buff0_thd2' '_Bool'
|   |         `-ParenExpr 0x55d3a24914d8 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x55d3a24914a8 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x55d3a24913c8 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55d3a2491380 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55d3a2491368 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55d3a2491328 <col:166> '_Bool' lvalue Var 0x55d3a248b278 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55d3a24913b0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55d3a2491398 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55d3a2491348 <col:184> '_Bool' lvalue Var 0x55d3a248af20 'y$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x55d3a2491460 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55d3a2491418 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55d3a24913e8 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55d3a2491490 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x55d3a2491478 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x55d3a2491440 <col:212> '_Bool' lvalue Var 0x55d3a248af20 'y$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x55d3a2491be8 <line:766:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x55d3a2491640 <col:3> '_Bool' lvalue Var 0x55d3a248b088 'y$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x55d3a2491bd0 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55d3a2491ba0 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x55d3a2491b58 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55d3a2491b40 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55d3a2491660 <col:20> '_Bool' lvalue Var 0x55d3a248b460 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55d3a2491b88 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55d3a2491b70 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55d3a2491680 <col:36> '_Bool' lvalue Var 0x55d3a248b088 'y$r_buff1_thd2' '_Bool'
|   |     `-ParenExpr 0x55d3a2491b20 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x55d3a2491af0 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x55d3a2491890 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55d3a24917b0 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55d3a24916d8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55d3a24916c0 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55d3a24916a0 <col:55> '_Bool' lvalue Var 0x55d3a248b278 'y$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55d3a2491790 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55d3a2491728 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55d3a2491710 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55d3a24916f0 <col:74> '_Bool' lvalue Var 0x55d3a248af20 'y$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x55d3a2491778 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55d3a2491760 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55d3a2491740 <col:93> '_Bool' lvalue Var 0x55d3a248b370 'y$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55d3a2491870 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55d3a2491808 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55d3a24917f0 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55d3a24917d0 <col:112> '_Bool' lvalue Var 0x55d3a248af20 'y$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x55d3a2491858 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55d3a2491840 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55d3a2491820 <col:131> '_Bool' lvalue Var 0x55d3a248b088 'y$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x55d3a2491ad8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55d3a2491ac0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55d3a24918b0 <col:148> '_Bool' lvalue Var 0x55d3a248b088 'y$r_buff1_thd2' '_Bool'
|   |         `-ParenExpr 0x55d3a2491aa0 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x55d3a2491a70 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x55d3a2491970 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55d3a2491928 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55d3a2491910 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55d3a24918d0 <col:166> '_Bool' lvalue Var 0x55d3a248b278 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55d3a2491958 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55d3a2491940 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55d3a24918f0 <col:184> '_Bool' lvalue Var 0x55d3a248af20 'y$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x55d3a2491a40 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55d3a24919c0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55d3a2491990 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55d3a2491a58 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x55d3a2491a18 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x55d3a24919e8 <col:219> 'int' 0
|   |-BinaryOperator 0x55d3a2491c60 <line:767:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x55d3a2491c08 <col:3> 'int' lvalue Var 0x55d3a248a828 '__unbuffered_p1_EAX' 'int'
|   | `-ImplicitCastExpr 0x55d3a2491c48 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55d3a2491c28 <col:25> 'int' lvalue Var 0x55d3a248ac78 'y' 'int'
|   |-BinaryOperator 0x55d3a2491d90 <line:768:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x55d3a2491c80 <col:3> 'int' lvalue Var 0x55d3a248ac78 'y' 'int'
|   | `-ConditionalOperator 0x55d3a2491d60 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x55d3a2491d18 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55d3a2491d00 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55d3a2491ca0 <col:7> '_Bool' lvalue Var 0x55d3a248ad10 'y$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x55d3a2491d30 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55d3a2491cc0 <col:25> 'int' lvalue Var 0x55d3a248ad90 'y$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x55d3a2491d48 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x55d3a2491ce0 <col:37> 'int' lvalue Var 0x55d3a248ac78 'y' 'int'
|   |-BinaryOperator 0x55d3a2491e28 <line:769:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x55d3a2491db0 <col:3> '_Bool' lvalue Var 0x55d3a248ad10 'y$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x55d3a2491e00 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x55d3a2491dd0 <col:28> 'int' 0
|   |-CallExpr 0x55d3a2491e80 <line:770:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55d3a2491e68 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55d3a2491e48 <col:3> 'void ()' Function 0x55d3a2431570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55d3a2491ed8 <line:771:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55d3a2491ec0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55d3a2491ea0 <col:3> 'void ()' Function 0x55d3a24314b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55d3a2491f50 <line:772:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x55d3a2491ef8 <col:3> 'int' lvalue Var 0x55d3a248a948 '__unbuffered_p1_EBX' 'int'
|   | `-ImplicitCastExpr 0x55d3a2491f38 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55d3a2491f18 <col:25> 'int' lvalue Var 0x55d3a248ab58 'x' 'int'
|   |-CallExpr 0x55d3a2491fc8 <line:773:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55d3a2491fb0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55d3a2491f90 <col:3> 'void ()' Function 0x55d3a2431570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55d3a2492020 <line:774:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55d3a2492008 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55d3a2491fe8 <col:3> 'void ()' Function 0x55d3a24314b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55d3a2492308 <line:775:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x55d3a2492040 <col:3> 'int' lvalue Var 0x55d3a248ac78 'y' 'int'
|   | `-ConditionalOperator 0x55d3a24922d8 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x55d3a2492100 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x55d3a24920b8 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x55d3a24920a0 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x55d3a2492060 <col:7> '_Bool' lvalue Var 0x55d3a248b278 'y$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x55d3a24920e8 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x55d3a24920d0 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x55d3a2492080 <col:25> '_Bool' lvalue Var 0x55d3a248af20 'y$r_buff0_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x55d3a24922c0 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55d3a2492120 <col:42> 'int' lvalue Var 0x55d3a248b200 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x55d3a24922a0 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x55d3a2492270 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x55d3a24921e0 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55d3a2492198 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55d3a2492180 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55d3a2492140 <col:55> '_Bool' lvalue Var 0x55d3a248b370 'y$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55d3a24921c8 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55d3a24921b0 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55d3a2492160 <col:73> '_Bool' lvalue Var 0x55d3a248b088 'y$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x55d3a2492240 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55d3a2492200 <col:90> 'int' lvalue Var 0x55d3a248b2f8 'y$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x55d3a2492258 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55d3a2492220 <col:102> 'int' lvalue Var 0x55d3a248ac78 'y' 'int'
|   |-BinaryOperator 0x55d3a2492510 <line:776:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55d3a2492328 <col:3> '_Bool' lvalue Var 0x55d3a248b278 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55d3a24924f8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55d3a24924c8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55d3a24923e8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55d3a24923a0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55d3a2492388 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55d3a2492348 <col:20> '_Bool' lvalue Var 0x55d3a248b278 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55d3a24923d0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55d3a24923b8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55d3a2492368 <col:38> '_Bool' lvalue Var 0x55d3a248af20 'y$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x55d3a2492480 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55d3a2492438 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55d3a2492408 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55d3a24924b0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55d3a2492498 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55d3a2492460 <col:66> '_Bool' lvalue Var 0x55d3a248b278 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55d3a24927f8 <line:777:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55d3a2492530 <col:3> '_Bool' lvalue Var 0x55d3a248b370 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55d3a24927e0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55d3a24927b0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55d3a24926d0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55d3a24925f0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55d3a24925a8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55d3a2492590 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55d3a2492550 <col:20> '_Bool' lvalue Var 0x55d3a248b278 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55d3a24925d8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55d3a24925c0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55d3a2492570 <col:38> '_Bool' lvalue Var 0x55d3a248af20 'y$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x55d3a24926b0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55d3a2492668 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55d3a2492650 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55d3a2492610 <col:56> '_Bool' lvalue Var 0x55d3a248b370 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55d3a2492698 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55d3a2492680 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55d3a2492630 <col:74> '_Bool' lvalue Var 0x55d3a248b088 'y$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x55d3a2492768 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55d3a2492720 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55d3a24926f0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55d3a2492798 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55d3a2492780 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55d3a2492748 <col:102> '_Bool' lvalue Var 0x55d3a248b370 'y$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x55d3a2492a00 <line:778:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55d3a2492818 <col:3> '_Bool' lvalue Var 0x55d3a248af20 'y$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x55d3a24929e8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55d3a24929b8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55d3a24928d8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55d3a2492890 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55d3a2492878 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55d3a2492838 <col:20> '_Bool' lvalue Var 0x55d3a248b278 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55d3a24928c0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55d3a24928a8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55d3a2492858 <col:38> '_Bool' lvalue Var 0x55d3a248af20 'y$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x55d3a2492970 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55d3a2492928 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55d3a24928f8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55d3a24929a0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55d3a2492988 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55d3a2492950 <col:66> '_Bool' lvalue Var 0x55d3a248af20 'y$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x55d3a2492ce8 <line:779:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55d3a2492a20 <col:3> '_Bool' lvalue Var 0x55d3a248b088 'y$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x55d3a2492cd0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55d3a2492ca0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55d3a2492bc0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55d3a2492ae0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55d3a2492a98 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55d3a2492a80 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55d3a2492a40 <col:20> '_Bool' lvalue Var 0x55d3a248b278 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55d3a2492ac8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55d3a2492ab0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55d3a2492a60 <col:38> '_Bool' lvalue Var 0x55d3a248af20 'y$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x55d3a2492ba0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55d3a2492b58 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55d3a2492b40 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55d3a2492b00 <col:56> '_Bool' lvalue Var 0x55d3a248b370 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55d3a2492b88 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55d3a2492b70 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55d3a2492b20 <col:74> '_Bool' lvalue Var 0x55d3a248b088 'y$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x55d3a2492c58 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55d3a2492c10 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55d3a2492be0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55d3a2492c88 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55d3a2492c70 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55d3a2492c38 <col:102> '_Bool' lvalue Var 0x55d3a248b088 'y$r_buff1_thd2' '_Bool'
|   |-CallExpr 0x55d3a2492d40 <line:780:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55d3a2492d28 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55d3a2492d08 <col:3> 'void ()' Function 0x55d3a2431570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55d3a2492d98 <line:781:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55d3a2492d80 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55d3a2492d60 <col:3> 'void ()' Function 0x55d3a24314b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55d3a2492e50 <line:782:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x55d3a2492db8 <col:3> 'int' lvalue Var 0x55d3a248a5e8 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x55d3a2492e30 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x55d3a2492e18 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55d3a2492dd8 <col:22> 'int' lvalue Var 0x55d3a248a5e8 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x55d3a2492df8 <col:41> 'int' 1
|   |-CallExpr 0x55d3a2492ea8 <line:783:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55d3a2492e90 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55d3a2492e70 <col:3> 'void ()' Function 0x55d3a2431570 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x55d3a2492f20 <line:784:3, col:36>
|     `-CallExpr 0x55d3a2492f00 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x55d3a2492ee8 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x55d3a2492ec8 <col:10> 'void *(void)' Function 0x55d3a2430fc8 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x55d3a2493170 prev 0x55d3a248a330 <line:786:1, line:788:1> line:786:6 fence 'void ()'
| `-CompoundStmt 0x55d3a2493210 <line:787:1, line:788:1>
|-FunctionDecl 0x55d3a2493240 prev 0x55d3a248a3f0 <line:789:1, line:791:1> line:789:6 isync 'void ()'
| `-CompoundStmt 0x55d3a24932e0 <line:790:1, line:791:1>
|-FunctionDecl 0x55d3a2493310 prev 0x55d3a248a4b0 <line:792:1, line:794:1> line:792:6 lwfence 'void ()'
| `-CompoundStmt 0x55d3a24933b0 <line:793:1, line:794:1>
`-FunctionDecl 0x55d3a2493418 <line:795:1, line:830:1> line:795:5 main 'int ()'
  `-CompoundStmt 0x55d3a24977d0 <line:796:1, line:830:1>
    |-DeclStmt 0x55d3a2493530 <line:797:3, col:18>
    | `-VarDecl 0x55d3a24934c8 <col:3, col:13> col:13 used t1679 'pthread_t':'unsigned long'
    |-CallExpr 0x55d3a2493738 <line:798:3, col:54> 'int'
    | |-ImplicitCastExpr 0x55d3a2493720 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55d3a2493548 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x55d3a24719d8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x55d3a2493588 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x55d3a2493568 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x55d3a24934c8 't1679' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x55d3a2493778 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x55d3a2493600 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x55d3a24935d8 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x55d3a24935a0 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x55d3a2493790 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55d3a2493620 <col:39> 'void *(void *)' Function 0x55d3a248b578 'P0' 'void *(void *)'
    | `-ParenExpr 0x55d3a24936a0 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x55d3a2493678 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x55d3a2493640 <col:52> 'int' 0
    |-DeclStmt 0x55d3a2493820 <line:799:3, col:18>
    | `-VarDecl 0x55d3a24937b8 <col:3, col:13> col:13 used t1680 'pthread_t':'unsigned long'
    |-CallExpr 0x55d3a24939c8 <line:800:3, col:54> 'int'
    | |-ImplicitCastExpr 0x55d3a24939b0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55d3a2493838 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x55d3a24719d8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x55d3a2493878 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x55d3a2493858 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x55d3a24937b8 't1680' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x55d3a2493a08 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x55d3a24938f0 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x55d3a24938c8 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x55d3a2493890 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x55d3a2493a20 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55d3a2493910 <col:39> 'void *(void *)' Function 0x55d3a248e750 'P1' 'void *(void *)'
    | `-ParenExpr 0x55d3a2493990 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x55d3a2493968 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x55d3a2493930 <col:52> 'int' 0
    |-CallExpr 0x55d3a2493a70 <line:801:3, col:27> 'void'
    | `-ImplicitCastExpr 0x55d3a2493a58 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55d3a2493a38 <col:3> 'void ()' Function 0x55d3a24314b0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x55d3a2493b40 <line:802:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x55d3a2493a90 <col:3> '_Bool' lvalue Var 0x55d3a248a9e0 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x55d3a2493b28 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x55d3a2493b08 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x55d3a2493af0 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x55d3a2493ab0 <col:21> 'int' lvalue Var 0x55d3a248a5e8 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x55d3a2493ad0 <col:41> 'int' 2
    |-CallExpr 0x55d3a2493b98 <line:803:3, col:25> 'void'
    | `-ImplicitCastExpr 0x55d3a2493b80 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55d3a2493b60 <col:3> 'void ()' Function 0x55d3a2431570 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x55d3a2493c10 <line:804:3, col:36> 'void'
    | |-ImplicitCastExpr 0x55d3a2493bf8 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55d3a2493bb8 <col:3> 'void (int)' Function 0x55d3a2430e50 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x55d3a2493c50 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x55d3a2493c38 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x55d3a2493bd8 <col:21> '_Bool' lvalue Var 0x55d3a248a9e0 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x55d3a2493ca0 <line:805:3, col:27> 'void'
    | `-ImplicitCastExpr 0x55d3a2493c88 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55d3a2493c68 <col:3> 'void ()' Function 0x55d3a24314b0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x55d3a2493fb0 <line:806:3, col:103> 'int' '='
    | |-DeclRefExpr 0x55d3a2493cc0 <col:3> 'int' lvalue Var 0x55d3a248ac78 'y' 'int'
    | `-ConditionalOperator 0x55d3a2493f58 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x55d3a2493d80 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x55d3a2493d38 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x55d3a2493d20 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x55d3a2493ce0 <col:7> '_Bool' lvalue Var 0x55d3a248b278 'y$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x55d3a2493d68 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x55d3a2493d50 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x55d3a2493d00 <col:25> '_Bool' lvalue Var 0x55d3a248ae08 'y$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x55d3a2493f40 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x55d3a2493da0 <col:42> 'int' lvalue Var 0x55d3a248b200 'y$w_buff0' 'int'
    |   `-ParenExpr 0x55d3a2493f20 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x55d3a2493ef0 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x55d3a2493e60 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x55d3a2493e18 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x55d3a2493e00 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x55d3a2493dc0 <col:55> '_Bool' lvalue Var 0x55d3a248b370 'y$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x55d3a2493e48 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x55d3a2493e30 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x55d3a2493de0 <col:73> '_Bool' lvalue Var 0x55d3a248af98 'y$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x55d3a2493ec0 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x55d3a2493e80 <col:90> 'int' lvalue Var 0x55d3a248b2f8 'y$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x55d3a2493ed8 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x55d3a2493ea0 <col:102> 'int' lvalue Var 0x55d3a248ac78 'y' 'int'
    |-BinaryOperator 0x55d3a24941b8 <line:807:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x55d3a2493fd0 <col:3> '_Bool' lvalue Var 0x55d3a248b278 'y$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x55d3a24941a0 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55d3a2494170 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x55d3a2494090 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x55d3a2494048 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x55d3a2494030 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x55d3a2493ff0 <col:20> '_Bool' lvalue Var 0x55d3a248b278 'y$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x55d3a2494078 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x55d3a2494060 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x55d3a2494010 <col:38> '_Bool' lvalue Var 0x55d3a248ae08 'y$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55d3a2494128 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55d3a24940e0 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55d3a24940b0 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x55d3a2494158 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55d3a2494140 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55d3a2494108 <col:66> '_Bool' lvalue Var 0x55d3a248b278 'y$w_buff0_used' '_Bool'
    |-BinaryOperator 0x55d3a24944a0 <line:808:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x55d3a24941d8 <col:3> '_Bool' lvalue Var 0x55d3a248b370 'y$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x55d3a2494488 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55d3a2494458 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x55d3a2494378 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x55d3a2494298 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x55d3a2494250 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x55d3a2494238 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x55d3a24941f8 <col:20> '_Bool' lvalue Var 0x55d3a248b278 'y$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x55d3a2494280 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x55d3a2494268 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x55d3a2494218 <col:38> '_Bool' lvalue Var 0x55d3a248ae08 'y$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x55d3a2494358 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x55d3a2494310 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x55d3a24942f8 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x55d3a24942b8 <col:56> '_Bool' lvalue Var 0x55d3a248b370 'y$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x55d3a2494340 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x55d3a2494328 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x55d3a24942d8 <col:74> '_Bool' lvalue Var 0x55d3a248af98 'y$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55d3a2494410 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55d3a24943c8 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55d3a2494398 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x55d3a2494440 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55d3a2494428 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55d3a24943f0 <col:102> '_Bool' lvalue Var 0x55d3a248b370 'y$w_buff1_used' '_Bool'
    |-BinaryOperator 0x55d3a24946a8 <line:809:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x55d3a24944c0 <col:3> '_Bool' lvalue Var 0x55d3a248ae08 'y$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x55d3a2494690 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55d3a2494660 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x55d3a2494580 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x55d3a2494538 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x55d3a2494520 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x55d3a24944e0 <col:20> '_Bool' lvalue Var 0x55d3a248b278 'y$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x55d3a2494568 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x55d3a2494550 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x55d3a2494500 <col:38> '_Bool' lvalue Var 0x55d3a248ae08 'y$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55d3a2494618 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55d3a24945d0 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55d3a24945a0 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x55d3a2494648 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55d3a2494630 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55d3a24945f8 <col:66> '_Bool' lvalue Var 0x55d3a248ae08 'y$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x55d3a2494990 <line:810:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x55d3a24946c8 <col:3> '_Bool' lvalue Var 0x55d3a248af98 'y$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x55d3a2494978 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55d3a2494948 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x55d3a2494868 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x55d3a2494788 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x55d3a2494740 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x55d3a2494728 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x55d3a24946e8 <col:20> '_Bool' lvalue Var 0x55d3a248b278 'y$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x55d3a2494770 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x55d3a2494758 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x55d3a2494708 <col:38> '_Bool' lvalue Var 0x55d3a248ae08 'y$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x55d3a2494848 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x55d3a2494800 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x55d3a24947e8 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x55d3a24947a8 <col:56> '_Bool' lvalue Var 0x55d3a248b370 'y$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x55d3a2494830 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x55d3a2494818 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x55d3a24947c8 <col:74> '_Bool' lvalue Var 0x55d3a248af98 'y$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55d3a2494900 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55d3a24948b8 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55d3a2494888 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x55d3a2494930 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55d3a2494918 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55d3a24948e0 <col:102> '_Bool' lvalue Var 0x55d3a248af98 'y$r_buff1_thd0' '_Bool'
    |-CallExpr 0x55d3a24949e8 <line:811:3, col:25> 'void'
    | `-ImplicitCastExpr 0x55d3a24949d0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55d3a24949b0 <col:3> 'void ()' Function 0x55d3a2431570 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x55d3a2494a40 <line:812:3, col:27> 'void'
    | `-ImplicitCastExpr 0x55d3a2494a28 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55d3a2494a08 <col:3> 'void ()' Function 0x55d3a24314b0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x55d3a2494ad8 <line:813:3, col:42> '_Bool' '='
    | |-DeclRefExpr 0x55d3a2494a60 <col:3> '_Bool' lvalue Var 0x55d3a248b3e8 'weak$$choice0' '_Bool'
    | `-CallExpr 0x55d3a2494ab8 <col:19, col:42> '_Bool'
    |   `-ImplicitCastExpr 0x55d3a2494aa0 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
    |     `-DeclRefExpr 0x55d3a2494a80 <col:19> '_Bool (void)' Function 0x55d3a2430c80 '__VERIFIER_nondet_bool' '_Bool (void)'
    |-BinaryOperator 0x55d3a2494b70 <line:814:3, col:42> '_Bool' '='
    | |-DeclRefExpr 0x55d3a2494af8 <col:3> '_Bool' lvalue Var 0x55d3a248b460 'weak$$choice2' '_Bool'
    | `-CallExpr 0x55d3a2494b50 <col:19, col:42> '_Bool'
    |   `-ImplicitCastExpr 0x55d3a2494b38 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
    |     `-DeclRefExpr 0x55d3a2494b18 <col:19> '_Bool (void)' Function 0x55d3a2430c80 '__VERIFIER_nondet_bool' '_Bool (void)'
    |-BinaryOperator 0x55d3a2494be8 <line:815:3, col:21> '_Bool' '='
    | |-DeclRefExpr 0x55d3a2494b90 <col:3> '_Bool' lvalue Var 0x55d3a248ad10 'y$flush_delayed' '_Bool'
    | `-ImplicitCastExpr 0x55d3a2494bd0 <col:21> '_Bool' <LValueToRValue>
    |   `-DeclRefExpr 0x55d3a2494bb0 <col:21> '_Bool' lvalue Var 0x55d3a248b460 'weak$$choice2' '_Bool'
    |-BinaryOperator 0x55d3a2494c60 <line:816:3, col:15> 'int' '='
    | |-DeclRefExpr 0x55d3a2494c08 <col:3> 'int' lvalue Var 0x55d3a248ad90 'y$mem_tmp' 'int'
    | `-ImplicitCastExpr 0x55d3a2494c48 <col:15> 'int' <LValueToRValue>
    |   `-DeclRefExpr 0x55d3a2494c28 <col:15> 'int' lvalue Var 0x55d3a248ac78 'y' 'int'
    |-BinaryOperator 0x55d3a24950a8 <line:817:3, col:162> 'int' '='
    | |-DeclRefExpr 0x55d3a2494c80 <col:3> 'int' lvalue Var 0x55d3a248ac78 'y' 'int'
    | `-ConditionalOperator 0x55d3a2495078 <col:7, col:162> 'int'
    |   |-BinaryOperator 0x55d3a2494e90 <col:7, col:84> 'int' '||'
    |   | |-BinaryOperator 0x55d3a2494db0 <col:7, col:46> 'int' '||'
    |   | | |-UnaryOperator 0x55d3a2494cd8 <col:7, col:8> 'int' prefix '!' cannot overflow
    |   | | | `-ImplicitCastExpr 0x55d3a2494cc0 <col:8> '_Bool' <LValueToRValue>
    |   | | |   `-DeclRefExpr 0x55d3a2494ca0 <col:8> '_Bool' lvalue Var 0x55d3a248b278 'y$w_buff0_used' '_Bool'
    |   | | `-BinaryOperator 0x55d3a2494d90 <col:26, col:46> 'int' '&&'
    |   | |   |-UnaryOperator 0x55d3a2494d28 <col:26, col:27> 'int' prefix '!' cannot overflow
    |   | |   | `-ImplicitCastExpr 0x55d3a2494d10 <col:27> '_Bool' <LValueToRValue>
    |   | |   |   `-DeclRefExpr 0x55d3a2494cf0 <col:27> '_Bool' lvalue Var 0x55d3a248ae08 'y$r_buff0_thd0' '_Bool'
    |   | |   `-UnaryOperator 0x55d3a2494d78 <col:45, col:46> 'int' prefix '!' cannot overflow
    |   | |     `-ImplicitCastExpr 0x55d3a2494d60 <col:46> '_Bool' <LValueToRValue>
    |   | |       `-DeclRefExpr 0x55d3a2494d40 <col:46> '_Bool' lvalue Var 0x55d3a248b370 'y$w_buff1_used' '_Bool'
    |   | `-BinaryOperator 0x55d3a2494e70 <col:64, col:84> 'int' '&&'
    |   |   |-UnaryOperator 0x55d3a2494e08 <col:64, col:65> 'int' prefix '!' cannot overflow
    |   |   | `-ImplicitCastExpr 0x55d3a2494df0 <col:65> '_Bool' <LValueToRValue>
    |   |   |   `-DeclRefExpr 0x55d3a2494dd0 <col:65> '_Bool' lvalue Var 0x55d3a248ae08 'y$r_buff0_thd0' '_Bool'
    |   |   `-UnaryOperator 0x55d3a2494e58 <col:83, col:84> 'int' prefix '!' cannot overflow
    |   |     `-ImplicitCastExpr 0x55d3a2494e40 <col:84> '_Bool' <LValueToRValue>
    |   |       `-DeclRefExpr 0x55d3a2494e20 <col:84> '_Bool' lvalue Var 0x55d3a248af98 'y$r_buff1_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x55d3a2495060 <col:101> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x55d3a2494eb0 <col:101> 'int' lvalue Var 0x55d3a248ac78 'y' 'int'
    |   `-ParenExpr 0x55d3a2495040 <col:105, col:162> 'int'
    |     `-ConditionalOperator 0x55d3a2495010 <col:106, col:153> 'int'
    |       |-BinaryOperator 0x55d3a2494f70 <col:106, col:124> 'int' '&&'
    |       | |-ImplicitCastExpr 0x55d3a2494f28 <col:106> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x55d3a2494f10 <col:106> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x55d3a2494ed0 <col:106> '_Bool' lvalue Var 0x55d3a248b278 'y$w_buff0_used' '_Bool'
    |       | `-ImplicitCastExpr 0x55d3a2494f58 <col:124> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x55d3a2494f40 <col:124> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x55d3a2494ef0 <col:124> '_Bool' lvalue Var 0x55d3a248ae08 'y$r_buff0_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x55d3a2494fe0 <col:141> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x55d3a2494f90 <col:141> 'int' lvalue Var 0x55d3a248b200 'y$w_buff0' 'int'
    |       `-ImplicitCastExpr 0x55d3a2494ff8 <col:153> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x55d3a2494fc0 <col:153> 'int' lvalue Var 0x55d3a248b2f8 'y$w_buff1' 'int'
    |-BinaryOperator 0x55d3a24955b8 <line:818:3, col:208> 'int' '='
    | |-DeclRefExpr 0x55d3a24950c8 <col:3> 'int' lvalue Var 0x55d3a248b200 'y$w_buff0' 'int'
    | `-ConditionalOperator 0x55d3a2495588 <col:15, col:208> 'int'
    |   |-ImplicitCastExpr 0x55d3a2495558 <col:15> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x55d3a2495540 <col:15> '_Bool' <LValueToRValue>
    |   |   `-DeclRefExpr 0x55d3a24950e8 <col:15> '_Bool' lvalue Var 0x55d3a248b460 'weak$$choice2' '_Bool'
    |   |-ImplicitCastExpr 0x55d3a2495570 <col:31> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x55d3a2495108 <col:31> 'int' lvalue Var 0x55d3a248b200 'y$w_buff0' 'int'
    |   `-ParenExpr 0x55d3a2495520 <col:43, col:208> 'int'
    |     `-ConditionalOperator 0x55d3a24954f0 <col:44, col:207> 'int'
    |       |-BinaryOperator 0x55d3a2495318 <col:44, col:121> 'int' '||'
    |       | |-BinaryOperator 0x55d3a2495238 <col:44, col:83> 'int' '||'
    |       | | |-UnaryOperator 0x55d3a2495160 <col:44, col:45> 'int' prefix '!' cannot overflow
    |       | | | `-ImplicitCastExpr 0x55d3a2495148 <col:45> '_Bool' <LValueToRValue>
    |       | | |   `-DeclRefExpr 0x55d3a2495128 <col:45> '_Bool' lvalue Var 0x55d3a248b278 'y$w_buff0_used' '_Bool'
    |       | | `-BinaryOperator 0x55d3a2495218 <col:63, col:83> 'int' '&&'
    |       | |   |-UnaryOperator 0x55d3a24951b0 <col:63, col:64> 'int' prefix '!' cannot overflow
    |       | |   | `-ImplicitCastExpr 0x55d3a2495198 <col:64> '_Bool' <LValueToRValue>
    |       | |   |   `-DeclRefExpr 0x55d3a2495178 <col:64> '_Bool' lvalue Var 0x55d3a248ae08 'y$r_buff0_thd0' '_Bool'
    |       | |   `-UnaryOperator 0x55d3a2495200 <col:82, col:83> 'int' prefix '!' cannot overflow
    |       | |     `-ImplicitCastExpr 0x55d3a24951e8 <col:83> '_Bool' <LValueToRValue>
    |       | |       `-DeclRefExpr 0x55d3a24951c8 <col:83> '_Bool' lvalue Var 0x55d3a248b370 'y$w_buff1_used' '_Bool'
    |       | `-BinaryOperator 0x55d3a24952f8 <col:101, col:121> 'int' '&&'
    |       |   |-UnaryOperator 0x55d3a2495290 <col:101, col:102> 'int' prefix '!' cannot overflow
    |       |   | `-ImplicitCastExpr 0x55d3a2495278 <col:102> '_Bool' <LValueToRValue>
    |       |   |   `-DeclRefExpr 0x55d3a2495258 <col:102> '_Bool' lvalue Var 0x55d3a248ae08 'y$r_buff0_thd0' '_Bool'
    |       |   `-UnaryOperator 0x55d3a24952e0 <col:120, col:121> 'int' prefix '!' cannot overflow
    |       |     `-ImplicitCastExpr 0x55d3a24952c8 <col:121> '_Bool' <LValueToRValue>
    |       |       `-DeclRefExpr 0x55d3a24952a8 <col:121> '_Bool' lvalue Var 0x55d3a248af98 'y$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x55d3a24954d8 <col:138> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x55d3a2495338 <col:138> 'int' lvalue Var 0x55d3a248b200 'y$w_buff0' 'int'
    |       `-ParenExpr 0x55d3a24954b8 <col:150, col:207> 'int'
    |         `-ConditionalOperator 0x55d3a2495488 <col:151, col:198> 'int'
    |           |-BinaryOperator 0x55d3a24953f8 <col:151, col:169> 'int' '&&'
    |           | |-ImplicitCastExpr 0x55d3a24953b0 <col:151> 'int' <IntegralCast>
    |           | | `-ImplicitCastExpr 0x55d3a2495398 <col:151> '_Bool' <LValueToRValue>
    |           | |   `-DeclRefExpr 0x55d3a2495358 <col:151> '_Bool' lvalue Var 0x55d3a248b278 'y$w_buff0_used' '_Bool'
    |           | `-ImplicitCastExpr 0x55d3a24953e0 <col:169> 'int' <IntegralCast>
    |           |   `-ImplicitCastExpr 0x55d3a24953c8 <col:169> '_Bool' <LValueToRValue>
    |           |     `-DeclRefExpr 0x55d3a2495378 <col:169> '_Bool' lvalue Var 0x55d3a248ae08 'y$r_buff0_thd0' '_Bool'
    |           |-ImplicitCastExpr 0x55d3a2495458 <col:186> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x55d3a2495418 <col:186> 'int' lvalue Var 0x55d3a248b200 'y$w_buff0' 'int'
    |           `-ImplicitCastExpr 0x55d3a2495470 <col:198> 'int' <LValueToRValue>
    |             `-DeclRefExpr 0x55d3a2495438 <col:198> 'int' lvalue Var 0x55d3a248b200 'y$w_buff0' 'int'
    |-BinaryOperator 0x55d3a2495ac8 <line:819:3, col:208> 'int' '='
    | |-DeclRefExpr 0x55d3a24955d8 <col:3> 'int' lvalue Var 0x55d3a248b2f8 'y$w_buff1' 'int'
    | `-ConditionalOperator 0x55d3a2495a98 <col:15, col:208> 'int'
    |   |-ImplicitCastExpr 0x55d3a2495a68 <col:15> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x55d3a2495a50 <col:15> '_Bool' <LValueToRValue>
    |   |   `-DeclRefExpr 0x55d3a24955f8 <col:15> '_Bool' lvalue Var 0x55d3a248b460 'weak$$choice2' '_Bool'
    |   |-ImplicitCastExpr 0x55d3a2495a80 <col:31> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x55d3a2495618 <col:31> 'int' lvalue Var 0x55d3a248b2f8 'y$w_buff1' 'int'
    |   `-ParenExpr 0x55d3a2495a30 <col:43, col:208> 'int'
    |     `-ConditionalOperator 0x55d3a2495a00 <col:44, col:207> 'int'
    |       |-BinaryOperator 0x55d3a2495828 <col:44, col:121> 'int' '||'
    |       | |-BinaryOperator 0x55d3a2495748 <col:44, col:83> 'int' '||'
    |       | | |-UnaryOperator 0x55d3a2495670 <col:44, col:45> 'int' prefix '!' cannot overflow
    |       | | | `-ImplicitCastExpr 0x55d3a2495658 <col:45> '_Bool' <LValueToRValue>
    |       | | |   `-DeclRefExpr 0x55d3a2495638 <col:45> '_Bool' lvalue Var 0x55d3a248b278 'y$w_buff0_used' '_Bool'
    |       | | `-BinaryOperator 0x55d3a2495728 <col:63, col:83> 'int' '&&'
    |       | |   |-UnaryOperator 0x55d3a24956c0 <col:63, col:64> 'int' prefix '!' cannot overflow
    |       | |   | `-ImplicitCastExpr 0x55d3a24956a8 <col:64> '_Bool' <LValueToRValue>
    |       | |   |   `-DeclRefExpr 0x55d3a2495688 <col:64> '_Bool' lvalue Var 0x55d3a248ae08 'y$r_buff0_thd0' '_Bool'
    |       | |   `-UnaryOperator 0x55d3a2495710 <col:82, col:83> 'int' prefix '!' cannot overflow
    |       | |     `-ImplicitCastExpr 0x55d3a24956f8 <col:83> '_Bool' <LValueToRValue>
    |       | |       `-DeclRefExpr 0x55d3a24956d8 <col:83> '_Bool' lvalue Var 0x55d3a248b370 'y$w_buff1_used' '_Bool'
    |       | `-BinaryOperator 0x55d3a2495808 <col:101, col:121> 'int' '&&'
    |       |   |-UnaryOperator 0x55d3a24957a0 <col:101, col:102> 'int' prefix '!' cannot overflow
    |       |   | `-ImplicitCastExpr 0x55d3a2495788 <col:102> '_Bool' <LValueToRValue>
    |       |   |   `-DeclRefExpr 0x55d3a2495768 <col:102> '_Bool' lvalue Var 0x55d3a248ae08 'y$r_buff0_thd0' '_Bool'
    |       |   `-UnaryOperator 0x55d3a24957f0 <col:120, col:121> 'int' prefix '!' cannot overflow
    |       |     `-ImplicitCastExpr 0x55d3a24957d8 <col:121> '_Bool' <LValueToRValue>
    |       |       `-DeclRefExpr 0x55d3a24957b8 <col:121> '_Bool' lvalue Var 0x55d3a248af98 'y$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x55d3a24959e8 <col:138> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x55d3a2495848 <col:138> 'int' lvalue Var 0x55d3a248b2f8 'y$w_buff1' 'int'
    |       `-ParenExpr 0x55d3a24959c8 <col:150, col:207> 'int'
    |         `-ConditionalOperator 0x55d3a2495998 <col:151, col:198> 'int'
    |           |-BinaryOperator 0x55d3a2495908 <col:151, col:169> 'int' '&&'
    |           | |-ImplicitCastExpr 0x55d3a24958c0 <col:151> 'int' <IntegralCast>
    |           | | `-ImplicitCastExpr 0x55d3a24958a8 <col:151> '_Bool' <LValueToRValue>
    |           | |   `-DeclRefExpr 0x55d3a2495868 <col:151> '_Bool' lvalue Var 0x55d3a248b278 'y$w_buff0_used' '_Bool'
    |           | `-ImplicitCastExpr 0x55d3a24958f0 <col:169> 'int' <IntegralCast>
    |           |   `-ImplicitCastExpr 0x55d3a24958d8 <col:169> '_Bool' <LValueToRValue>
    |           |     `-DeclRefExpr 0x55d3a2495888 <col:169> '_Bool' lvalue Var 0x55d3a248ae08 'y$r_buff0_thd0' '_Bool'
    |           |-ImplicitCastExpr 0x55d3a2495968 <col:186> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x55d3a2495928 <col:186> 'int' lvalue Var 0x55d3a248b2f8 'y$w_buff1' 'int'
    |           `-ImplicitCastExpr 0x55d3a2495980 <col:198> 'int' <LValueToRValue>
    |             `-DeclRefExpr 0x55d3a2495948 <col:198> 'int' lvalue Var 0x55d3a248b2f8 'y$w_buff1' 'int'
    |-BinaryOperator 0x55d3a2496098 <line:820:3, col:227> '_Bool' '='
    | |-DeclRefExpr 0x55d3a2495ae8 <col:3> '_Bool' lvalue Var 0x55d3a248b278 'y$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x55d3a2496080 <col:20, col:227> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55d3a2496050 <col:20, col:227> 'int'
    |     |-ImplicitCastExpr 0x55d3a2496008 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x55d3a2495ff0 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x55d3a2495b08 <col:20> '_Bool' lvalue Var 0x55d3a248b460 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x55d3a2496038 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x55d3a2496020 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x55d3a2495b28 <col:36> '_Bool' lvalue Var 0x55d3a248b278 'y$w_buff0_used' '_Bool'
    |     `-ParenExpr 0x55d3a2495fd0 <col:53, col:227> 'int'
    |       `-ConditionalOperator 0x55d3a2495f78 <col:54, col:226> 'int'
    |         |-BinaryOperator 0x55d3a2495d38 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x55d3a2495c58 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x55d3a2495b80 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x55d3a2495b68 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x55d3a2495b48 <col:55> '_Bool' lvalue Var 0x55d3a248b278 'y$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x55d3a2495c38 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x55d3a2495bd0 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x55d3a2495bb8 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x55d3a2495b98 <col:74> '_Bool' lvalue Var 0x55d3a248ae08 'y$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x55d3a2495c20 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x55d3a2495c08 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x55d3a2495be8 <col:93> '_Bool' lvalue Var 0x55d3a248b370 'y$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x55d3a2495d18 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x55d3a2495cb0 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x55d3a2495c98 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x55d3a2495c78 <col:112> '_Bool' lvalue Var 0x55d3a248ae08 'y$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x55d3a2495d00 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x55d3a2495ce8 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x55d3a2495cc8 <col:131> '_Bool' lvalue Var 0x55d3a248af98 'y$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x55d3a2495f60 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x55d3a2495f48 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x55d3a2495d58 <col:148> '_Bool' lvalue Var 0x55d3a248b278 'y$w_buff0_used' '_Bool'
    |         `-ParenExpr 0x55d3a2495f28 <col:165, col:226> 'int'
    |           `-ConditionalOperator 0x55d3a2495ef8 <col:166, col:212> 'int'
    |             |-BinaryOperator 0x55d3a2495e18 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x55d3a2495dd0 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x55d3a2495db8 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x55d3a2495d78 <col:166> '_Bool' lvalue Var 0x55d3a248b278 'y$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x55d3a2495e00 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x55d3a2495de8 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x55d3a2495d98 <col:184> '_Bool' lvalue Var 0x55d3a248ae08 'y$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x55d3a2495eb0 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x55d3a2495e68 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x55d3a2495e38 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x55d3a2495ee0 <col:212> 'int' <IntegralCast>
    |               `-ImplicitCastExpr 0x55d3a2495ec8 <col:212> '_Bool' <LValueToRValue>
    |                 `-DeclRefExpr 0x55d3a2495e90 <col:212> '_Bool' lvalue Var 0x55d3a248b278 'y$w_buff0_used' '_Bool'
    |-BinaryOperator 0x55d3a2496660 <line:821:3, col:221> '_Bool' '='
    | |-DeclRefExpr 0x55d3a24960b8 <col:3> '_Bool' lvalue Var 0x55d3a248b370 'y$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x55d3a2496648 <col:20, col:221> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55d3a2496618 <col:20, col:221> 'int'
    |     |-ImplicitCastExpr 0x55d3a24965d0 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x55d3a24965b8 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x55d3a24960d8 <col:20> '_Bool' lvalue Var 0x55d3a248b460 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x55d3a2496600 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x55d3a24965e8 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x55d3a24960f8 <col:36> '_Bool' lvalue Var 0x55d3a248b370 'y$w_buff1_used' '_Bool'
    |     `-ParenExpr 0x55d3a2496598 <col:53, col:221> 'int'
    |       `-ConditionalOperator 0x55d3a2496568 <col:54, col:220> 'int'
    |         |-BinaryOperator 0x55d3a2496308 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x55d3a2496228 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x55d3a2496150 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x55d3a2496138 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x55d3a2496118 <col:55> '_Bool' lvalue Var 0x55d3a248b278 'y$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x55d3a2496208 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x55d3a24961a0 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x55d3a2496188 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x55d3a2496168 <col:74> '_Bool' lvalue Var 0x55d3a248ae08 'y$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x55d3a24961f0 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x55d3a24961d8 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x55d3a24961b8 <col:93> '_Bool' lvalue Var 0x55d3a248b370 'y$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x55d3a24962e8 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x55d3a2496280 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x55d3a2496268 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x55d3a2496248 <col:112> '_Bool' lvalue Var 0x55d3a248ae08 'y$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x55d3a24962d0 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x55d3a24962b8 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x55d3a2496298 <col:131> '_Bool' lvalue Var 0x55d3a248af98 'y$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x55d3a2496550 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x55d3a2496538 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x55d3a2496328 <col:148> '_Bool' lvalue Var 0x55d3a248b370 'y$w_buff1_used' '_Bool'
    |         `-ParenExpr 0x55d3a2496518 <col:165, col:220> 'int'
    |           `-ConditionalOperator 0x55d3a24964e8 <col:166, col:219> 'int'
    |             |-BinaryOperator 0x55d3a24963e8 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x55d3a24963a0 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x55d3a2496388 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x55d3a2496348 <col:166> '_Bool' lvalue Var 0x55d3a248b278 'y$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x55d3a24963d0 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x55d3a24963b8 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x55d3a2496368 <col:184> '_Bool' lvalue Var 0x55d3a248ae08 'y$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x55d3a24964b8 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x55d3a2496438 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x55d3a2496408 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x55d3a24964d0 <col:212, col:219> 'int' <IntegralCast>
    |               `-CStyleCastExpr 0x55d3a2496490 <col:212, col:219> '_Bool' <IntegralToBoolean>
    |                 `-IntegerLiteral 0x55d3a2496460 <col:219> 'int' 0
    |-BinaryOperator 0x55d3a2496c08 <line:822:3, col:227> '_Bool' '='
    | |-DeclRefExpr 0x55d3a2496680 <col:3> '_Bool' lvalue Var 0x55d3a248ae08 'y$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x55d3a2496bf0 <col:20, col:227> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55d3a2496bc0 <col:20, col:227> 'int'
    |     |-ImplicitCastExpr 0x55d3a2496b78 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x55d3a2496b60 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x55d3a24966a0 <col:20> '_Bool' lvalue Var 0x55d3a248b460 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x55d3a2496ba8 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x55d3a2496b90 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x55d3a24966c0 <col:36> '_Bool' lvalue Var 0x55d3a248ae08 'y$r_buff0_thd0' '_Bool'
    |     `-ParenExpr 0x55d3a2496b40 <col:53, col:227> 'int'
    |       `-ConditionalOperator 0x55d3a2496b10 <col:54, col:226> 'int'
    |         |-BinaryOperator 0x55d3a24968d0 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x55d3a24967f0 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x55d3a2496718 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x55d3a2496700 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x55d3a24966e0 <col:55> '_Bool' lvalue Var 0x55d3a248b278 'y$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x55d3a24967d0 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x55d3a2496768 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x55d3a2496750 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x55d3a2496730 <col:74> '_Bool' lvalue Var 0x55d3a248ae08 'y$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x55d3a24967b8 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x55d3a24967a0 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x55d3a2496780 <col:93> '_Bool' lvalue Var 0x55d3a248b370 'y$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x55d3a24968b0 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x55d3a2496848 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x55d3a2496830 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x55d3a2496810 <col:112> '_Bool' lvalue Var 0x55d3a248ae08 'y$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x55d3a2496898 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x55d3a2496880 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x55d3a2496860 <col:131> '_Bool' lvalue Var 0x55d3a248af98 'y$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x55d3a2496af8 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x55d3a2496ae0 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x55d3a24968f0 <col:148> '_Bool' lvalue Var 0x55d3a248ae08 'y$r_buff0_thd0' '_Bool'
    |         `-ParenExpr 0x55d3a2496ac0 <col:165, col:226> 'int'
    |           `-ConditionalOperator 0x55d3a2496a90 <col:166, col:212> 'int'
    |             |-BinaryOperator 0x55d3a24969b0 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x55d3a2496968 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x55d3a2496950 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x55d3a2496910 <col:166> '_Bool' lvalue Var 0x55d3a248b278 'y$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x55d3a2496998 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x55d3a2496980 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x55d3a2496930 <col:184> '_Bool' lvalue Var 0x55d3a248ae08 'y$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x55d3a2496a48 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x55d3a2496a00 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x55d3a24969d0 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x55d3a2496a78 <col:212> 'int' <IntegralCast>
    |               `-ImplicitCastExpr 0x55d3a2496a60 <col:212> '_Bool' <LValueToRValue>
    |                 `-DeclRefExpr 0x55d3a2496a28 <col:212> '_Bool' lvalue Var 0x55d3a248ae08 'y$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x55d3a24971e0 <line:823:3, col:221> '_Bool' '='
    | |-DeclRefExpr 0x55d3a2496c28 <col:3> '_Bool' lvalue Var 0x55d3a248af98 'y$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x55d3a24971c8 <col:20, col:221> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55d3a2497198 <col:20, col:221> 'int'
    |     |-ImplicitCastExpr 0x55d3a2497150 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x55d3a2497138 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x55d3a2496c48 <col:20> '_Bool' lvalue Var 0x55d3a248b460 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x55d3a2497180 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x55d3a2497168 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x55d3a2496c68 <col:36> '_Bool' lvalue Var 0x55d3a248af98 'y$r_buff1_thd0' '_Bool'
    |     `-ParenExpr 0x55d3a2497118 <col:53, col:221> 'int'
    |       `-ConditionalOperator 0x55d3a24970e8 <col:54, col:220> 'int'
    |         |-BinaryOperator 0x55d3a2496e78 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x55d3a2496d98 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x55d3a2496cc0 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x55d3a2496ca8 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x55d3a2496c88 <col:55> '_Bool' lvalue Var 0x55d3a248b278 'y$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x55d3a2496d78 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x55d3a2496d10 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x55d3a2496cf8 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x55d3a2496cd8 <col:74> '_Bool' lvalue Var 0x55d3a248ae08 'y$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x55d3a2496d60 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x55d3a2496d48 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x55d3a2496d28 <col:93> '_Bool' lvalue Var 0x55d3a248b370 'y$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x55d3a2496e58 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x55d3a2496df0 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x55d3a2496dd8 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x55d3a2496db8 <col:112> '_Bool' lvalue Var 0x55d3a248ae08 'y$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x55d3a2496e40 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x55d3a2496e28 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x55d3a2496e08 <col:131> '_Bool' lvalue Var 0x55d3a248af98 'y$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x55d3a24970d0 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x55d3a24970b8 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x55d3a2496e98 <col:148> '_Bool' lvalue Var 0x55d3a248af98 'y$r_buff1_thd0' '_Bool'
    |         `-ParenExpr 0x55d3a2497098 <col:165, col:220> 'int'
    |           `-ConditionalOperator 0x55d3a2497068 <col:166, col:219> 'int'
    |             |-BinaryOperator 0x55d3a2496f58 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x55d3a2496f10 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x55d3a2496ef8 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x55d3a2496eb8 <col:166> '_Bool' lvalue Var 0x55d3a248b278 'y$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x55d3a2496f40 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x55d3a2496f28 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x55d3a2496ed8 <col:184> '_Bool' lvalue Var 0x55d3a248ae08 'y$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x55d3a2497038 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x55d3a2496fa8 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x55d3a2496f78 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x55d3a2497050 <col:212, col:219> 'int' <IntegralCast>
    |               `-CStyleCastExpr 0x55d3a2497010 <col:212, col:219> '_Bool' <IntegralToBoolean>
    |                 `-IntegerLiteral 0x55d3a2496fe0 <col:219> 'int' 0
    |-BinaryOperator 0x55d3a24974b0 <line:824:3, col:113> '_Bool' '='
    | |-DeclRefExpr 0x55d3a2497200 <col:3> '_Bool' lvalue Var 0x55d3a248aa58 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x55d3a2497498 <col:21, col:113> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x55d3a2497480 <col:21, col:113> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x55d3a2497460 <col:22, col:113> 'int'
    |       `-BinaryOperator 0x55d3a2497440 <col:23, col:112> 'int' '&&'
    |         |-BinaryOperator 0x55d3a24973a8 <col:23, col:84> 'int' '&&'
    |         | |-BinaryOperator 0x55d3a2497310 <col:23, col:56> 'int' '&&'
    |         | | |-BinaryOperator 0x55d3a2497278 <col:23, col:28> 'int' '=='
    |         | | | |-ImplicitCastExpr 0x55d3a2497260 <col:23> 'int' <LValueToRValue>
    |         | | | | `-DeclRefExpr 0x55d3a2497220 <col:23> 'int' lvalue Var 0x55d3a248ac78 'y' 'int'
    |         | | | `-IntegerLiteral 0x55d3a2497240 <col:28> 'int' 2
    |         | | `-BinaryOperator 0x55d3a24972f0 <col:33, col:56> 'int' '=='
    |         | |   |-ImplicitCastExpr 0x55d3a24972d8 <col:33> 'int' <LValueToRValue>
    |         | |   | `-DeclRefExpr 0x55d3a2497298 <col:33> 'int' lvalue Var 0x55d3a248a708 '__unbuffered_p0_EAX' 'int'
    |         | |   `-IntegerLiteral 0x55d3a24972b8 <col:56> 'int' 0
    |         | `-BinaryOperator 0x55d3a2497388 <col:61, col:84> 'int' '=='
    |         |   |-ImplicitCastExpr 0x55d3a2497370 <col:61> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x55d3a2497330 <col:61> 'int' lvalue Var 0x55d3a248a828 '__unbuffered_p1_EAX' 'int'
    |         |   `-IntegerLiteral 0x55d3a2497350 <col:84> 'int' 2
    |         `-BinaryOperator 0x55d3a2497420 <col:89, col:112> 'int' '=='
    |           |-ImplicitCastExpr 0x55d3a2497408 <col:89> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x55d3a24973c8 <col:89> 'int' lvalue Var 0x55d3a248a948 '__unbuffered_p1_EBX' 'int'
    |           `-IntegerLiteral 0x55d3a24973e8 <col:112> 'int' 0
    |-BinaryOperator 0x55d3a24975e0 <line:825:3, col:37> 'int' '='
    | |-DeclRefExpr 0x55d3a24974d0 <col:3> 'int' lvalue Var 0x55d3a248ac78 'y' 'int'
    | `-ConditionalOperator 0x55d3a24975b0 <col:7, col:37> 'int'
    |   |-ImplicitCastExpr 0x55d3a2497568 <col:7> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x55d3a2497550 <col:7> '_Bool' <LValueToRValue>
    |   |   `-DeclRefExpr 0x55d3a24974f0 <col:7> '_Bool' lvalue Var 0x55d3a248ad10 'y$flush_delayed' '_Bool'
    |   |-ImplicitCastExpr 0x55d3a2497580 <col:25> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x55d3a2497510 <col:25> 'int' lvalue Var 0x55d3a248ad90 'y$mem_tmp' 'int'
    |   `-ImplicitCastExpr 0x55d3a2497598 <col:37> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x55d3a2497530 <col:37> 'int' lvalue Var 0x55d3a248ac78 'y' 'int'
    |-BinaryOperator 0x55d3a2497678 <line:826:3, col:28> '_Bool' '='
    | |-DeclRefExpr 0x55d3a2497600 <col:3> '_Bool' lvalue Var 0x55d3a248ad10 'y$flush_delayed' '_Bool'
    | `-CStyleCastExpr 0x55d3a2497650 <col:21, col:28> '_Bool' <IntegralToBoolean>
    |   `-IntegerLiteral 0x55d3a2497620 <col:28> 'int' 0
    |-CallExpr 0x55d3a24976d0 <line:827:3, col:25> 'void'
    | `-ImplicitCastExpr 0x55d3a24976b8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55d3a2497698 <col:3> 'void ()' Function 0x55d3a2431570 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x55d3a2497748 <line:828:3, col:36> 'void'
    | |-ImplicitCastExpr 0x55d3a2497730 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55d3a24976f0 <col:3> 'void (int)' Function 0x55d3a2431238 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x55d3a2497788 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x55d3a2497770 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x55d3a2497710 <col:21> '_Bool' lvalue Var 0x55d3a248aa58 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x55d3a24977c0 <line:829:3, col:10>
      `-IntegerLiteral 0x55d3a24977a0 <col:10> 'int' 0
