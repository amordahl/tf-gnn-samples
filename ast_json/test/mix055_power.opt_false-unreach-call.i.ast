TranslationUnitDecl 0x560638dc5f88 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x560638dc6848 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x560638dc6520 '__int128'
|-TypedefDecl 0x560638dc68b8 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x560638dc6540 'unsigned __int128'
|-TypedefDecl 0x560638dc6bc0 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x560638dc6990 'struct __NSConstantString_tag'
|   `-Record 0x560638dc6910 '__NSConstantString_tag'
|-TypedefDecl 0x560638dc6c68 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x560638dc6c20 'char *'
|   `-BuiltinType 0x560638dc6020 'char'
|-TypedefDecl 0x560638e05b60 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x560638dc6f00 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x560638dc6d40 'struct __va_list_tag'
|     `-Record 0x560638dc6cc0 '__va_list_tag'
|-FunctionDecl 0x560638e05ca0 <pthread-wmm/mix055_power.opt_false-unreach-call.i:1:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x560638e05bd0 <col:31> col:34 'int'
|-FunctionDecl 0x560638e05e68 <line:2:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x560638e05f90 <line:3:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x560638e060d8 <line:4:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x560638e06048 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x560638e06308 <col:40, col:99>
|   |-IfStmt 0x560638e062d8 <col:42, col:88>
|   | |-UnaryOperator 0x560638e061b8 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x560638e061a0 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x560638e06180 <col:47> 'int' lvalue ParmVar 0x560638e06048 'expression' 'int'
|   | `-CompoundStmt 0x560638e062c0 <col:59, col:88>
|   |   `-LabelStmt 0x560638e062a8 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x560638e06238 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x560638e06220 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x560638e061d0 <col:68> 'void () __attribute__((noreturn))' Function 0x560638e05f90 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x560638e062f0 <col:89>
|   `-ReturnStmt 0x560638e062f8 <col:91>
|-FunctionDecl 0x560638e06350 <line:5:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x560638e06410 <line:6:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x560638e06790 <line:8:1, line:10:76> line:8:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x560638e064c8 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x560638e06548 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x560638e065c8 <line:9:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x560638e06648 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x560638e06850 <line:10:22>
|-FunctionDecl 0x560638e2c8a0 <line:11:1, line:13:76> line:11:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x560638e068c0 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x560638e06940 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x560638e069c0 <line:12:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x560638e06a40 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x560638e2c960 <line:13:22>
|-FunctionDecl 0x560638e2cc10 <line:14:1, line:15:76> line:14:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x560638e2c9d0 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x560638e2ca50 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x560638e2cad0 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x560638e2ccc8 <line:15:22>
|-TypedefDecl 0x560638e2cd38 <line:17:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x560638dc60e0 'unsigned char'
|-TypedefDecl 0x560638e2cda8 <line:18:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x560638dc6100 'unsigned short'
|-TypedefDecl 0x560638e2ce18 <line:19:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x560638dc6120 'unsigned int'
|-TypedefDecl 0x560638e2ce88 <line:20:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x560638dc6140 'unsigned long'
|-TypedefDecl 0x560638e2cef8 <line:21:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x560638dc6040 'signed char'
|-TypedefDecl 0x560638e2cf68 <line:22:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x560638dc60e0 'unsigned char'
|-TypedefDecl 0x560638e2cfd8 <line:23:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x560638dc6060 'short'
|-TypedefDecl 0x560638e2d048 <line:24:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x560638dc6100 'unsigned short'
|-TypedefDecl 0x560638e2d0b8 <line:25:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x560638dc6080 'int'
|-TypedefDecl 0x560638e2d128 <line:26:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x560638dc6120 'unsigned int'
|-TypedefDecl 0x560638e2d198 <line:27:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x560638dc60a0 'long'
|-TypedefDecl 0x560638e2d208 <line:28:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x560638dc6140 'unsigned long'
|-TypedefDecl 0x560638e2d278 <line:29:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x560638dc60a0 'long'
|-TypedefDecl 0x560638e2d2e8 <line:30:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x560638dc6140 'unsigned long'
|-TypedefDecl 0x560638e2d358 <line:31:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x560638dc6140 'unsigned long'
|-TypedefDecl 0x560638e2d3c8 <line:32:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x560638dc6120 'unsigned int'
|-TypedefDecl 0x560638e2d438 <line:33:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x560638dc6120 'unsigned int'
|-TypedefDecl 0x560638e2d4a8 <line:34:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x560638dc6140 'unsigned long'
|-TypedefDecl 0x560638e2d518 <line:35:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x560638dc6140 'unsigned long'
|-TypedefDecl 0x560638e2d588 <line:36:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x560638dc6120 'unsigned int'
|-TypedefDecl 0x560638e2d5f8 <line:37:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x560638dc6140 'unsigned long'
|-TypedefDecl 0x560638e2d668 <line:38:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x560638dc60a0 'long'
|-TypedefDecl 0x560638e2d6d8 <line:39:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x560638dc60a0 'long'
|-TypedefDecl 0x560638e2d748 <line:40:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x560638dc6080 'int'
|-RecordDecl 0x560638e2d7a0 <line:41:9, col:32> col:9 struct definition
| `-FieldDecl 0x560638e2d918 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x560638e2d9d0 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x560638e2d970 'struct __fsid_t' sugar
|   `-RecordType 0x560638e2d820 '__fsid_t'
|     `-Record 0x560638e2d7a0 ''
|-TypedefDecl 0x560638e2da58 <line:42:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x560638dc60a0 'long'
|-TypedefDecl 0x560638e2dac8 <line:43:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x560638dc6140 'unsigned long'
|-TypedefDecl 0x560638e2db38 <line:44:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x560638dc6140 'unsigned long'
|-TypedefDecl 0x560638e2dba8 <line:45:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x560638dc6120 'unsigned int'
|-TypedefDecl 0x560638e2dc18 <line:46:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x560638dc60a0 'long'
|-TypedefDecl 0x560638e2dc88 <line:47:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x560638dc6120 'unsigned int'
|-TypedefDecl 0x560638e2dcf8 <line:48:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x560638dc60a0 'long'
|-TypedefDecl 0x560638e2dd68 <line:49:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x560638dc6080 'int'
|-TypedefDecl 0x560638e2ddd8 <line:50:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x560638dc6080 'int'
|-TypedefDecl 0x560638e2de48 <line:51:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x560638dc6080 'int'
|-TypedefDecl 0x560638e2deb8 <line:52:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x560638dc67a0 'void *'
|   `-BuiltinType 0x560638dc5fe0 'void'
|-TypedefDecl 0x560638e2df28 <line:53:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x560638dc60a0 'long'
|-TypedefDecl 0x560638e2df98 <line:54:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x560638dc60a0 'long'
|-TypedefDecl 0x560638e2e008 <line:55:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x560638dc60a0 'long'
|-TypedefDecl 0x560638e2e078 <line:56:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x560638dc6140 'unsigned long'
|-TypedefDecl 0x560638e2e0e8 <line:57:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x560638dc6140 'unsigned long'
|-TypedefDecl 0x560638e2e158 <line:58:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x560638dc6140 'unsigned long'
|-TypedefDecl 0x560638e2e1c8 <line:59:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x560638dc6140 'unsigned long'
|-TypedefDecl 0x560638e2e238 <line:60:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x560638dc60a0 'long'
|-TypedefDecl 0x560638e2e2a8 <line:61:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x560638dc60a0 'long'
|-TypedefDecl 0x560638e2e318 <line:62:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x560638dc60a0 'long'
|-TypedefDecl 0x560638e2e388 <line:63:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x560638dc6140 'unsigned long'
|-TypedefDecl 0x560638e2e418 <line:64:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x560638e2e3e0 '__off64_t' sugar
|   |-Typedef 0x560638e2d6d8 '__off64_t'
|   `-BuiltinType 0x560638dc60a0 'long'
|-TypedefDecl 0x560638e2e510 <line:65:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x560638e2e4d0 '__quad_t *'
|   `-TypedefType 0x560638e2e470 '__quad_t' sugar
|     |-Typedef 0x560638e2d278 '__quad_t'
|     `-BuiltinType 0x560638dc60a0 'long'
|-TypedefDecl 0x560638e2e580 <line:66:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x560638dc6c20 'char *'
|   `-BuiltinType 0x560638dc6020 'char'
|-TypedefDecl 0x560638e2e5f0 <line:67:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x560638dc60a0 'long'
|-TypedefDecl 0x560638e2e660 <line:68:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x560638dc6120 'unsigned int'
|-FunctionDecl 0x560638e2e7a8 <line:69:1, line:73:1> line:70:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x560638e2e6d0 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x560638e2eae8 <line:71:1, line:73:1>
|   `-ReturnStmt 0x560638e2ead8 <line:72:3, col:34>
|     `-CallExpr 0x560638e2ea98 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x560638e2ea80 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x560638e2ea10 <col:10> '<builtin fn type>' Function 0x560638e2e880 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x560638e2eac0 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x560638e2ea30 <col:29> 'unsigned int' lvalue ParmVar 0x560638e2e6d0 '__bsx' 'unsigned int'
|-FunctionDecl 0x560638e2e880 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x560638e2e920 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x560638e2e990 <col:10> Implicit
| `-ConstAttr 0x560638e2e9e8 <col:10> Implicit
|-FunctionDecl 0x560638e2ec40 <line:74:1, line:78:1> line:75:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x560638e2eb38 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x560638e2ef58 <line:76:1, line:78:1>
|   `-ReturnStmt 0x560638e2ef48 <line:77:3, col:34>
|     `-CallExpr 0x560638e2ef08 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x560638e2eef0 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x560638e2ee78 <col:10> '<builtin fn type>' Function 0x560638e2ece8 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x560638e2ef30 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x560638e2ee98 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x560638e2eb38 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x560638e2ece8 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x560638e2ed88 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x560638e2edf8 <col:10> Implicit
| `-ConstAttr 0x560638e2ee50 <col:10> Implicit
|-TypedefDecl 0x560638e2ef88 <line:79:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x560638dc6140 'unsigned long'
|-TypedefDecl 0x560638e2f018 <line:81:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x560638e2efe0 '__time_t' sugar
|   |-Typedef 0x560638e2dc18 '__time_t'
|   `-BuiltinType 0x560638dc60a0 'long'
|-RecordDecl 0x560638e2f070 <line:84:1, line:88:3> line:84:8 struct timespec definition
| |-FieldDecl 0x560638e2f128 <line:86:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x560638e2f1b8 <line:87:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x560638e2f248 <line:89:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x560638e2f210 '__pid_t' sugar
|   |-Typedef 0x560638e2d748 '__pid_t'
|   `-BuiltinType 0x560638dc6080 'int'
|-RecordDecl 0x560638e2f2a0 <line:90:1, line:93:3> line:90:8 struct sched_param definition
| `-FieldDecl 0x560638e2f360 <line:92:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x560638e2f3b0 <line:96:1, line:99:3> line:96:8 struct __sched_param definition
| `-FieldDecl 0x560638e2f470 <line:98:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x560638e2f4d8 <line:100:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x560638dc6140 'unsigned long'
|-RecordDecl 0x560638e2f530 <line:101:9, line:104:1> line:101:9 struct definition
| `-FieldDecl 0x560638e2f7c0 <line:103:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x560638e318b0 <line:101:1, line:104:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x560638e2f810 'struct cpu_set_t' sugar
|   `-RecordType 0x560638e2f5b0 'cpu_set_t'
|     `-Record 0x560638e2f530 ''
|-FunctionDecl 0x560638e31b88 <line:106:1, line:107:42> line:106:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x560638e31958 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x560638e31a60 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x560638e31c38 <line:107:19>
|-FunctionDecl 0x560638e31e10 <line:108:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x560638e31ca0 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x560638e31eb8 <col:69>
|-FunctionDecl 0x560638e32030 <line:109:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x560638e31f20 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x560638e320d8 <col:64>
|-FunctionDecl 0x560638e32398 <line:112:1, line:113:45> line:112:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x560638e32140 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x560638e32278 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x560638e32448 <line:113:22>
|-FunctionDecl 0x560638e326c8 <line:114:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x560638e324b0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x560638e325a8 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x560638e32778 <col:88>
|-FunctionDecl 0x560638e32a98 <line:115:1, line:116:85> line:115:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x560638e327e0 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x560638e328c0 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x560638e32950 <line:116:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x560638e32b50 <col:62>
|-FunctionDecl 0x560638e32cc8 <line:117:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x560638e32bb8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x560638e32d70 <col:63>
|-FunctionDecl 0x560638e32e98 <line:118:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x560638e32f38 <col:47>
|-FunctionDecl 0x560638e33040 <line:119:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x560638e32fa8 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x560638e330e8 <col:69>
|-FunctionDecl 0x560638e331f0 <line:120:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x560638e33158 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x560638e33298 <col:69>
|-FunctionDecl 0x560638e33558 <line:121:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x560638e33300 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x560638e33438 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x560638e33608 <col:88>
|-TypedefDecl 0x560638e33698 <line:125:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x560638e33660 '__clock_t' sugar
|   |-Typedef 0x560638e2da58 '__clock_t'
|   `-BuiltinType 0x560638dc60a0 'long'
|-TypedefDecl 0x560638e33728 <line:128:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x560638e336f0 '__clockid_t' sugar
|   |-Typedef 0x560638e2de48 '__clockid_t'
|   `-BuiltinType 0x560638dc6080 'int'
|-TypedefDecl 0x560638e337b8 <line:129:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x560638e33780 '__timer_t' sugar
|   |-Typedef 0x560638e2deb8 '__timer_t'
|   `-PointerType 0x560638dc67a0 'void *'
|     `-BuiltinType 0x560638dc5fe0 'void'
|-RecordDecl 0x560638e33810 <line:131:1, line:144:1> line:131:8 struct tm definition
| |-FieldDecl 0x560638e338e8 <line:133:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x560638e33950 <line:134:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x560638e339b8 <line:135:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x560638e33a20 <line:136:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x560638e33a88 <line:137:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x560638e33af0 <line:138:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x560638e33b58 <line:139:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x560638e33bc0 <line:140:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x560638e33c28 <line:141:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x560638e33c90 <line:142:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x560638e33cf8 <line:143:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x560638e33d48 <line:147:1, line:151:3> line:147:8 struct itimerspec definition
| |-FieldDecl 0x560638e33e18 <line:149:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x560638e33e88 <line:150:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x560638e33f30 <line:152:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x560638e34100 <line:154:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x560638e341a0 <col:45>
|-FunctionDecl 0x560638e34380 <line:155:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x560638e34270 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x560638e34428 <col:54>
|-FunctionDecl 0x560638e34628 <line:156:1, line:157:73> line:156:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x560638e34490 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x560638e34508 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x560638e346d8 <line:157:22>
| `-ConstAttr 0x560638e34730 <col:63>
|-FunctionDecl 0x560638e35560 <line:158:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x560638e34828 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x560638e35608 <col:56>
|-FunctionDecl 0x560638e359b0 <line:159:1, line:161:77> line:159:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x560638e35678 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x560638e356f0 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x560638e35770 <line:160:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x560638e35868 <line:161:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x560638e35a70 <col:54>
|-RecordDecl 0x560638e35ac8 <line:163:9, line:170:1> line:163:16 struct __locale_struct definition
| |-RecordDecl 0x560638e35b78 parent 0x560638dc5f88 <line:165:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x560638e35dd8 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x560638e35e78 <line:166:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x560638e35ee0 <line:167:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x560638e35f48 <line:168:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x560638e36038 <line:169:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x560638e36158 <line:163:1, line:170:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x560638e36100 'struct __locale_struct *'
|   `-ElaboratedType 0x560638e36090 'struct __locale_struct' sugar
|     `-RecordType 0x560638e35b50 'struct __locale_struct'
|       `-Record 0x560638e35ac8 '__locale_struct'
|-TypedefDecl 0x560638e36208 <line:171:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x560638e361d0 '__locale_t' sugar
|   |-Typedef 0x560638e36158 '__locale_t'
|   `-PointerType 0x560638e36100 'struct __locale_struct *'
|     `-ElaboratedType 0x560638e36090 'struct __locale_struct' sugar
|       `-RecordType 0x560638e35b50 'struct __locale_struct'
|         `-Record 0x560638e35ac8 '__locale_struct'
|-FunctionDecl 0x560638e36610 <line:172:1, line:175:63> line:172:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x560638e36278 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x560638e362f0 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x560638e36370 <line:173:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x560638e36400 <line:174:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x560638e36478 <line:175:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x560638e366d8 <col:40>
|-FunctionDecl 0x560638e368c8 <line:177:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x560638e367a0 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x560638e36970 <col:66>
|-FunctionDecl 0x560638e36a80 <line:178:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x560638e369d8 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x560638e36b28 <col:69>
|-FunctionDecl 0x560638e36d58 <line:180:1, line:181:75> line:180:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x560638e36b90 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x560638e36c20 <line:181:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x560638e36e08 <col:52>
|-FunctionDecl 0x560638e36fb0 <line:182:1, line:183:78> line:182:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x560638e36e70 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x560638e36f00 <line:183:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x560638e37060 <col:55>
|-FunctionDecl 0x560638e371f8 <line:185:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x560638e370e0 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x560638e372a0 <col:62>
|-FunctionDecl 0x560638e37418 <line:186:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x560638e37308 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x560638e374c0 <col:60>
|-FunctionDecl 0x560638e37718 <line:188:1, line:189:67> line:188:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x560638e37578 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x560638e375f8 <line:189:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x560638e377c8 <col:44>
|-FunctionDecl 0x560638e379d8 <line:190:1, line:191:72> line:190:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x560638e37830 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x560638e378b0 <line:191:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x560638e37a88 <col:49>
|-VarDecl 0x560638e37b88 <line:192:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x560638e37c08 <line:193:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x560638e37c88 <line:194:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x560638e37d50 <line:195:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x560638e37e80 <line:196:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x560638e37f20 <col:42>
|-VarDecl 0x560638e37f90 <line:197:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x560638e38010 <line:198:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x560638e38198 <line:199:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x560638e38088 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x560638e38240 <col:57>
|-FunctionDecl 0x560638e38350 <line:200:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x560638e382c0 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x560638e383f8 <col:56>
|-FunctionDecl 0x560638e39540 <line:201:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x560638e38478 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x560638e395e8 <col:59>
|-FunctionDecl 0x560638e396f0 <line:202:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x560638e39658 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x560638e39798 <col:48>
| `-ConstAttr 0x560638e397f0 <col:89>
|-FunctionDecl 0x560638e39a58 <line:203:1, line:204:37> line:203:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x560638e398a8 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x560638e39938 <line:204:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x560638e39cb8 <line:205:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x560638e39b48 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x560638e39bd8 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x560638e39d68 <col:88>
|-FunctionDecl 0x560638e39f00 <line:206:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x560638e39dd0 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x560638e39e60 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x560638e39fb0 <col:88>
|-FunctionDecl 0x560638e3a1c8 <line:207:1, line:208:45> line:207:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x560638e3a018 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x560638e3a0a8 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x560638e3a278 <line:208:22>
|-FunctionDecl 0x560638e3a5e8 <line:209:1, line:211:30> line:209:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x560638e3a2e0 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x560638e3a360 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x560638e3a3f0 <line:210:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x560638e3a480 <line:211:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x560638e3a8e8 <line:212:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x560638e3a6e8 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x560638e3a7c0 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x560638e3a998 <col:85>
|-FunctionDecl 0x560638e3ad88 <line:213:1, line:215:75> line:213:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x560638e3aa00 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x560638e3ab38 <line:214:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x560638e3ac40 <line:215:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x560638e3ae40 <col:52>
|-FunctionDecl 0x560638e3afb8 <line:216:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x560638e3aea8 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x560638e3b060 <col:61>
|-FunctionDecl 0x560638e3b560 <line:217:1, line:219:85> line:217:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x560638e3b0c8 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x560638e3b148 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x560638e3b278 <line:218:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x560638e3b368 <line:219:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x560638e3b620 <col:62>
|-FunctionDecl 0x560638e3b838 <line:220:1, line:221:45> line:220:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x560638e3b688 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x560638e3b718 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x560638e3b8e8 <line:221:22>
|-FunctionDecl 0x560638e3b9e8 <line:222:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x560638e3b950 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x560638e3ba90 <col:65>
|-TypedefDecl 0x560638e3bb00 <line:224:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x560638dc6140 'unsigned long'
|-RecordDecl 0x560638e3bb58 <line:225:1, line:229:1> line:225:7 union pthread_attr_t definition
| |-FieldDecl 0x560638e3bca0 <line:227:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x560638e3bd08 <line:228:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x560638e3bdb8 <line:230:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x560638e3bd60 'union pthread_attr_t' sugar
|   `-RecordType 0x560638e3bbe0 'union pthread_attr_t'
|     `-Record 0x560638e3bb58 'pthread_attr_t'
|-RecordDecl 0x560638e3be10 <line:231:9, line:235:1> line:231:16 struct __pthread_internal_list definition
| |-FieldDecl 0x560638e3bf88 <line:233:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x560638e3c000 <line:234:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x560638e3c0b0 <line:231:1, line:235:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x560638e3c050 'struct __pthread_internal_list' sugar
|   `-RecordType 0x560638e3be90 'struct __pthread_internal_list'
|     `-Record 0x560638e3be10 '__pthread_internal_list'
|-RecordDecl 0x560638e3c120 <line:236:9, line:250:1> line:236:9 union definition
| |-RecordDecl 0x560638e3c1c8 parent 0x560638dc5f88 <line:238:3, line:247:3> line:238:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x560638e3c2a0 <line:240:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x560638e3c308 <line:241:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x560638e3c370 <line:242:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x560638e3c3d8 <line:243:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x560638e3c440 <line:244:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x560638e3c4a8 <line:245:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x560638e40580 <line:246:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x560638e40630 <line:238:3, line:247:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x560638e40720 <line:248:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x560638e40788 <line:249:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x560638e40910 <line:236:1, line:250:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x560638e408b0 'union pthread_mutex_t' sugar
|   `-RecordType 0x560638e3c1a0 'pthread_mutex_t'
|     `-Record 0x560638e3c120 ''
|-RecordDecl 0x560638e40980 <line:251:9, line:255:1> line:251:9 union definition
| |-FieldDecl 0x560638e40ac0 <line:253:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x560638e40b28 <line:254:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x560638e40be0 <line:251:1, line:255:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x560638e40b80 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x560638e40a00 'pthread_mutexattr_t'
|     `-Record 0x560638e40980 ''
|-RecordDecl 0x560638e40c50 <line:256:9, line:271:1> line:256:9 union definition
| |-RecordDecl 0x560638e40cf8 <line:258:3, line:268:3> line:258:3 struct definition
| | |-FieldDecl 0x560638e40dc0 <line:260:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x560638e40e28 <line:261:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x560638e40e90 <line:262:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x560638e40ef8 <line:263:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x560638e40f60 <line:264:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x560638e40fc8 <line:265:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x560638e41030 <line:266:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x560638e41098 <line:267:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x560638e41150 <line:258:3, line:268:5> col:5 __data 'struct (anonymous struct at pthread-wmm/mix055_power.opt_false-unreach-call.i:258:3)':'struct pthread_cond_t::(anonymous at pthread-wmm/mix055_power.opt_false-unreach-call.i:258:3)'
| |-FieldDecl 0x560638e41240 <line:269:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x560638e412a8 <line:270:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x560638e413e0 <line:256:1, line:271:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x560638e41380 'union pthread_cond_t' sugar
|   `-RecordType 0x560638e40cd0 'pthread_cond_t'
|     `-Record 0x560638e40c50 ''
|-RecordDecl 0x560638e41450 <line:272:9, line:276:1> line:272:9 union definition
| |-FieldDecl 0x560638e41590 <line:274:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x560638e415f8 <line:275:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x560638e416b0 <line:272:1, line:276:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x560638e41650 'union pthread_condattr_t' sugar
|   `-RecordType 0x560638e414d0 'pthread_condattr_t'
|     `-Record 0x560638e41450 ''
|-TypedefDecl 0x560638e41738 <line:277:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x560638dc6120 'unsigned int'
|-TypedefDecl 0x560638e417a8 <line:278:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x560638dc6080 'int'
|-RecordDecl 0x560638e41800 <line:279:9, line:297:1> line:279:9 union definition
| |-RecordDecl 0x560638e418a8 <line:281:3, line:294:3> line:281:3 struct definition
| | |-FieldDecl 0x560638e41970 <line:283:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x560638e419d8 <line:284:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x560638e41a40 <line:285:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x560638e41aa8 <line:286:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x560638e41b10 <line:287:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x560638e41b78 <line:288:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x560638e41be0 <line:289:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x560638e41c48 <line:290:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x560638e41cb0 <line:291:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x560638e41d18 <line:292:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x560638e41d80 <line:293:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x560638e41e30 <line:281:3, line:294:5> col:5 __data 'struct (anonymous struct at pthread-wmm/mix055_power.opt_false-unreach-call.i:281:3)':'struct pthread_rwlock_t::(anonymous at pthread-wmm/mix055_power.opt_false-unreach-call.i:281:3)'
| |-FieldDecl 0x560638e41ed8 <line:295:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x560638e41f40 <line:296:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x560638e42090 <line:279:1, line:297:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x560638e42030 'union pthread_rwlock_t' sugar
|   `-RecordType 0x560638e41880 'pthread_rwlock_t'
|     `-Record 0x560638e41800 ''
|-RecordDecl 0x560638e42100 <line:298:9, line:302:1> line:298:9 union definition
| |-FieldDecl 0x560638e42240 <line:300:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x560638e422a8 <line:301:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x560638e42360 <line:298:1, line:302:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x560638e42300 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x560638e42180 'pthread_rwlockattr_t'
|     `-Record 0x560638e42100 ''
|-TypedefDecl 0x560638e423e8 <line:303:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x560638dc6084 'volatile int' volatile
|   `-BuiltinType 0x560638dc6080 'int'
|-RecordDecl 0x560638e42440 <line:304:9, line:308:1> line:304:9 union definition
| |-FieldDecl 0x560638e445b0 <line:306:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x560638e44618 <line:307:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x560638e446d0 <line:304:1, line:308:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x560638e44670 'union pthread_barrier_t' sugar
|   `-RecordType 0x560638e424c0 'pthread_barrier_t'
|     `-Record 0x560638e42440 ''
|-RecordDecl 0x560638e44740 <line:309:9, line:313:1> line:309:9 union definition
| |-FieldDecl 0x560638e44840 <line:311:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x560638e448a8 <line:312:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x560638e44960 <line:309:1, line:313:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x560638e44900 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x560638e447c0 'pthread_barrierattr_t'
|     `-Record 0x560638e44740 ''
|-TypedefDecl 0x560638e44a78 <line:314:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x560638e44a10 'long [8]' 8 
|   `-BuiltinType 0x560638dc60a0 'long'
|-EnumDecl 0x560638e44ad0 <line:315:1, line:319:1> line:315:1
| |-EnumConstantDecl 0x560638e44b98 <line:317:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x560638e44be8 <line:318:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x560638e44c38 <line:320:1, line:331:1> line:320:1
| |-EnumConstantDecl 0x560638e44d08 <line:322:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x560638e44d58 <line:323:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x560638e44da8 <line:324:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x560638e44df8 <line:325:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x560638e44e80 <line:327:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x560638e44e68 <col:26> 'int'
| |   `-DeclRefExpr 0x560638e44e48 <col:26> 'int' EnumConstant 0x560638e44d08 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x560638e44f08 <line:328:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x560638e44ef0 <col:29> 'int'
| |   `-DeclRefExpr 0x560638e44ed0 <col:29> 'int' EnumConstant 0x560638e44d58 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x560638e44f90 <line:329:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x560638e44f78 <col:30> 'int'
| |   `-DeclRefExpr 0x560638e44f58 <col:30> 'int' EnumConstant 0x560638e44da8 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x560638e45018 <line:330:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x560638e45000 <col:27> 'int'
|     `-DeclRefExpr 0x560638e44fe0 <col:27> 'int' EnumConstant 0x560638e44e80 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x560638e45068 <line:332:1, line:338:1> line:332:1
| |-EnumConstantDecl 0x560638e45138 <line:334:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x560638e451c0 <line:335:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x560638e451a8 <col:30> 'int'
| |   `-DeclRefExpr 0x560638e45188 <col:30> 'int' EnumConstant 0x560638e45138 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x560638e45210 <line:336:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x560638e45298 <line:337:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x560638e45280 <col:29> 'int'
|     `-DeclRefExpr 0x560638e45260 <col:29> 'int' EnumConstant 0x560638e45210 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x560638e452e8 <line:339:1, line:344:1> line:339:1
| |-EnumConstantDecl 0x560638e453b8 <line:341:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x560638e45408 <line:342:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x560638e45458 <line:343:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x560638e454a8 <line:345:1, line:351:1> line:345:1
| |-EnumConstantDecl 0x560638e455c0 <line:347:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x560638e45610 <line:348:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x560638e45660 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x560638e456e8 <line:350:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x560638e456d0 <col:31> 'int'
|     `-DeclRefExpr 0x560638e456b0 <col:31> 'int' EnumConstant 0x560638e455c0 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x560638e45738 <line:352:1, line:356:1> line:352:1
| |-EnumConstantDecl 0x560638e45808 <line:354:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x560638e45858 <line:355:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x560638e458a8 <line:357:1, line:361:1> line:357:1
| |-EnumConstantDecl 0x560638e45978 <line:359:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x560638e459c8 <line:360:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x560638e45a18 <line:362:1, line:366:1> line:362:1
| |-EnumConstantDecl 0x560638e45ae8 <line:364:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x560638e45b38 <line:365:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x560638e45b88 <line:367:1, line:373:1> line:367:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x560638e45dc8 <line:369:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x560638e45e30 <line:370:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x560638e45e98 <line:371:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x560638e45fb8 <line:372:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x560638e46008 <line:374:1, line:378:1> line:374:1
| |-EnumConstantDecl 0x560638e460d8 <line:376:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x560638e46128 <line:377:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x560638e46178 <line:379:1, line:383:1> line:379:1
| |-EnumConstantDecl 0x560638e46248 <line:381:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x560638e46298 <line:382:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x560638e468f8 <line:385:1, line:388:96> line:385:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x560638e46390 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x560638e464a0 <line:386:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x560638e466e0 <line:387:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x560638e46760 <line:388:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x560638e469b8 <col:47>
| |-NonNullAttr 0x560638e46a10 <col:77, col:94> 1 3
| `-CallbackAttr 0x560638e46a48 <line:385:12> Implicit 2 3
|-FunctionDecl 0x560638e46b70 <line:389:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x560638e46aa0 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x560638e46dc8 <line:390:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x560638e46c28 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x560638e46ca8 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x560638e46f98 <line:391:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x560638e46e88 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x560638e47040 <col:60>
|-FunctionDecl 0x560638e47190 <line:392:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x560638e47230 <col:54>
| `-ConstAttr 0x560638e47288 <col:95>
|-FunctionDecl 0x560638e47458 <line:393:1, line:394:70> line:393:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x560638e472c0 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x560638e47338 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x560638e47508 <line:394:19>
| `-ConstAttr 0x560638e47560 <col:60>
|-FunctionDecl 0x560638e47f68 <line:395:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x560638e47e30 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x560638e48010 <col:71>
| `-NonNullAttr 0x560638e48068 <col:112, col:126> 1
|-FunctionDecl 0x560638e48170 <line:396:1, line:397:79> line:396:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x560638e480b8 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x560638e48218 <line:397:22>
| `-NonNullAttr 0x560638e48270 <col:63, col:77> 1
|-FunctionDecl 0x560638e48498 <line:398:1, line:400:82> line:398:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x560638e482b8 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x560638e48338 <line:399:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x560638e48548 <line:400:22>
| `-NonNullAttr 0x560638e485a0 <col:63, col:80> 1 2
|-FunctionDecl 0x560638e487a8 <line:401:1, line:403:79> line:401:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x560638e485e8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x560638e48668 <line:402:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x560638e48858 <line:403:22>
| `-NonNullAttr 0x560638e488b0 <col:63, col:77> 1
|-FunctionDecl 0x560638e48b08 <line:404:1, line:406:82> line:404:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x560638e488f8 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x560638e489a0 <line:405:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x560638e48bb8 <line:406:22>
| `-NonNullAttr 0x560638e48c10 <col:63, col:80> 1 2
|-FunctionDecl 0x560638e49e48 <line:407:1, line:409:79> line:407:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x560638e48c58 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x560638e48cd0 <line:408:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x560638e49ef8 <line:409:22>
| `-NonNullAttr 0x560638e49f50 <col:63, col:77> 1
|-FunctionDecl 0x560638e4a188 <line:410:1, line:412:82> line:410:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x560638e49f98 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x560638e4a028 <line:411:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x560638e4a238 <line:412:22>
| `-NonNullAttr 0x560638e4a290 <col:63, col:80> 1 2
|-FunctionDecl 0x560638e4a4c8 <line:413:1, line:415:97> line:413:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x560638e4a2d8 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x560638e4a368 <line:414:12, line:415:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x560638e4a578 <col:37>
| `-NonNullAttr 0x560638e4a5d0 <col:78, col:95> 1 2
|-FunctionDecl 0x560638e4a7b8 <line:416:1, line:418:82> line:416:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x560638e4a618 <col:41, line:417:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x560638e4a698 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x560638e4a868 <line:418:22>
| `-NonNullAttr 0x560638e4a8c0 <col:63, col:80> 1 2
|-FunctionDecl 0x560638e4aa48 <line:419:1, line:420:79> line:419:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x560638e4a908 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x560638e4a988 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x560638e4aaf8 <line:420:22>
| `-NonNullAttr 0x560638e4ab50 <col:63, col:77> 1
|-FunctionDecl 0x560638e4acf8 <line:421:1, line:423:82> line:421:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x560638e4ab98 <col:42, line:422:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x560638e4ac18 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x560638e4ada8 <line:423:22>
| `-NonNullAttr 0x560638e4be30 <col:63, col:80> 1 2
|-FunctionDecl 0x560638e4bfb8 <line:424:1, line:426:79> line:424:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x560638e4be78 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x560638e4bef8 <line:425:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x560638e4c068 <line:426:22>
| `-NonNullAttr 0x560638e4c0c0 <col:63, col:77> 1
|-FunctionDecl 0x560638e4c268 <line:427:1, line:429:82> line:427:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x560638e4c108 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x560638e4c188 <line:428:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x560638e4c318 <line:429:22>
| `-NonNullAttr 0x560638e4c370 <col:63, col:80> 1 2
|-FunctionDecl 0x560638e4c4f8 <line:430:1, line:431:79> line:430:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x560638e4c3b8 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x560638e4c438 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x560638e4c5a8 <line:431:22>
| `-NonNullAttr 0x560638e4c600 <col:63, col:77> 1
|-FunctionDecl 0x560638e4c828 <line:432:1, line:434:115> line:432:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x560638e4c648 <col:39, line:433:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x560638e4c6c8 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x560638e4c8d8 <line:434:22>
| |-NonNullAttr 0x560638e4c930 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x560638e4c968 <col:100> "" ""
|-FunctionDecl 0x560638e4cb78 <line:435:1, line:437:112> line:435:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x560638e4c9b8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x560638e4ca38 <line:436:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x560638e4cc28 <line:437:22>
| |-NonNullAttr 0x560638e4cc80 <col:63, col:77> 1
| `-DeprecatedAttr 0x560638e4ccb8 <col:97> "" ""
|-FunctionDecl 0x560638e4ceb8 <line:438:1, line:440:82> line:438:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x560638e4cd08 <col:39, line:439:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x560638e4cd80 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x560638e4cf68 <line:440:22>
| `-NonNullAttr 0x560638e4cfc0 <col:63, col:80> 1 2
|-FunctionDecl 0x560638e4d140 <line:441:1, line:443:79> line:441:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x560638e4d008 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x560638e4d080 <line:442:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x560638e4d1f0 <line:443:22>
| `-NonNullAttr 0x560638e4d248 <col:63, col:77> 1
|-FunctionDecl 0x560638e4d538 <line:444:1, line:447:85> line:444:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x560638e4d298 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x560638e4d318 <line:445:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x560638e4d390 <line:446:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x560638e4d5f0 <line:447:22>
| `-NonNullAttr 0x560638e4d648 <col:63, col:83> 1 2 3
|-FunctionDecl 0x560638e4d8f8 <line:448:1, line:449:100> line:448:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x560638e4d6a0 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x560638e4d720 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x560638e4d798 <line:449:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x560638e4d9b0 <col:43>
| `-NonNullAttr 0x560638e4da08 <col:84, col:98> 1
|-FunctionDecl 0x560638e4dcc8 <line:450:1, line:452:79> line:450:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x560638e4da58 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x560638e4dad8 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x560638e4db68 <line:451:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x560638e4dd80 <line:452:22>
| `-NonNullAttr 0x560638e4ddd8 <col:63, col:77> 3
|-FunctionDecl 0x560638e4e0e8 <line:453:1, line:456:82> line:453:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x560638e4de50 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x560638e4ded0 <line:454:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x560638e4df60 <line:455:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x560638e4e1a0 <line:456:22>
| `-NonNullAttr 0x560638e4e1f8 <col:63, col:80> 2 3
|-FunctionDecl 0x560638e4e3e8 <line:457:1, line:458:45> line:457:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x560638e4e248 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x560638e4e2c8 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x560638e4e498 <line:458:22>
|-FunctionDecl 0x560638e4e868 <line:459:1, line:460:71> line:459:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x560638e4e560 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x560638e4e700 <line:460:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x560638e4e918 <col:52, col:69> 1 2
|-FunctionDecl 0x560638e4eac0 <line:461:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x560638e4e9a0 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x560638e4ea20 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x560638e4eca8 <line:462:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x560638e4eb88 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x560638e4ec08 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x560638e4ee60 <line:463:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x560638e4ed68 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x560638e4efa0 <line:464:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x560638e4f040 <line:465:9, line:473:1> line:465:9 struct definition
| |-RecordDecl 0x560638e4f0e8 <line:467:3, line:471:3> line:467:3 struct definition
| | |-FieldDecl 0x560638e4f1d8 <line:469:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x560638e4f240 <line:470:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x560638e4f410 <line:467:3, line:471:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at pthread-wmm/mix055_power.opt_false-unreach-call.i:467:3) [1]'
| `-FieldDecl 0x560638e4f508 <line:472:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x560638e4f5c0 <line:465:1, line:473:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x560638e4f560 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x560638e4f0c0 '__pthread_unwind_buf_t'
| |   `-Record 0x560638e4f040 ''
| `-AlignedAttr 0x560638e4f618 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x560638e4f690 <line:474:1, line:480:1> line:474:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x560638e4f7f0 <line:476:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x560638e4f858 <line:477:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x560638e4f8c0 <line:478:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x560638e4f928 <line:479:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x560638e4fb30 <line:481:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x560638e4fa20 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x560638e4fc78 <line:483:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x560638e4fbe8 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x560638e4fe70 <line:485:1, line:487:31> line:485:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x560638e4fd30 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x560638e4ff18 <line:487:22>
|-RecordDecl 0x560638e4ff70 <line:489:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x560638e50288 <line:490:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x560638e500e8 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x560638e50168 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x560638e50338 <col:86>
| `-ReturnsTwiceAttr 0x560638e50390 <col:12> Implicit
|-FunctionDecl 0x560638e506b8 <line:491:1, line:493:79> line:491:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x560638e50460 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x560638e50570 <line:492:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x560638e50768 <line:493:22>
| `-NonNullAttr 0x560638e507c0 <col:63, col:77> 1
|-FunctionDecl 0x560638e50938 <line:494:1, line:495:79> line:494:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x560638e50808 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x560638e509e0 <line:495:22>
| `-NonNullAttr 0x560638e50a38 <col:63, col:77> 1
|-FunctionDecl 0x560638e50b40 <line:496:1, line:497:68> line:496:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x560638e50a88 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x560638e50be8 <line:497:22>
| `-NonNullAttr 0x560638e50c40 <col:52, col:66> 1
|-FunctionDecl 0x560638e50d40 <line:498:1, line:499:68> line:498:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x560638e50c88 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x560638e50de8 <line:499:22>
| `-NonNullAttr 0x560638e50e40 <col:52, col:66> 1
|-FunctionDecl 0x560638e51088 <line:500:1, line:502:85> line:500:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x560638e50e98 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x560638e50f28 <line:501:9, line:502:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x560638e51138 <col:36>
| `-NonNullAttr 0x560638e51190 <col:66, col:83> 1 2
|-FunctionDecl 0x560638e51290 <line:503:1, line:504:68> line:503:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x560638e511d8 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x560638e51338 <line:504:22>
| `-NonNullAttr 0x560638e51390 <col:52, col:66> 1
|-FunctionDecl 0x560638e51628 <line:505:1, line:508:82> line:505:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x560638e51440 <col:42, line:506:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x560638e514c0 <line:507:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x560638e516d8 <line:508:22>
| `-NonNullAttr 0x560638e51730 <col:63, col:80> 1 2
|-FunctionDecl 0x560638e519f8 <line:509:1, line:512:82> line:509:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x560638e51778 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x560638e517f8 <line:510:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x560638e51878 <line:511:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x560638e51ab0 <line:512:22>
| `-NonNullAttr 0x560638e51b08 <col:63, col:80> 1 3
|-FunctionDecl 0x560638e51c10 <line:513:1, line:514:79> line:513:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x560638e51b58 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x560638e51cb8 <line:514:22>
| `-NonNullAttr 0x560638e51d10 <col:63, col:77> 1
|-FunctionDecl 0x560638e51f38 <line:515:1, line:516:79> line:515:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x560638e51dc0 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x560638e51fe0 <line:516:22>
| `-NonNullAttr 0x560638e52038 <col:63, col:77> 1
|-FunctionDecl 0x560638e52140 <line:517:1, line:518:79> line:517:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x560638e52088 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x560638e521e8 <line:518:22>
| `-NonNullAttr 0x560638e52240 <col:63, col:77> 1
|-FunctionDecl 0x560638e52468 <line:519:1, line:522:82> line:519:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x560638e52288 <col:42, line:520:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x560638e52308 <line:521:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x560638e52518 <line:522:22>
| `-NonNullAttr 0x560638e52570 <col:63, col:80> 1 2
|-FunctionDecl 0x560638e52778 <line:523:1, line:525:79> line:523:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x560638e525b8 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x560638e52638 <line:524:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x560638e52828 <line:525:22>
| `-NonNullAttr 0x560638e52880 <col:63, col:77> 1
|-FunctionDecl 0x560638e52a28 <line:526:1, line:528:82> line:526:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x560638e528c8 <col:39, line:527:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x560638e52948 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x560638e52ad8 <line:528:22>
| `-NonNullAttr 0x560638e52b30 <col:63, col:80> 1 2
|-FunctionDecl 0x560638e52cb8 <line:529:1, line:530:79> line:529:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x560638e52b78 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x560638e52bf8 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x560638e52d68 <line:530:22>
| `-NonNullAttr 0x560638e52dc0 <col:63, col:77> 1
|-FunctionDecl 0x560638e53f90 <line:531:1, line:534:82> line:531:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x560638e52e08 <col:43, line:532:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x560638e53eb0 <line:533:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x560638e54040 <line:534:22>
| `-NonNullAttr 0x560638e54098 <col:63, col:80> 1 2
|-FunctionDecl 0x560638e54228 <line:535:1, line:537:79> line:535:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x560638e540e8 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x560638e54168 <line:536:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x560638e542d8 <line:537:22>
| `-NonNullAttr 0x560638e54330 <col:63, col:77> 1
|-FunctionDecl 0x560638e544d8 <line:538:1, line:541:82> line:538:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x560638e54378 <col:46, line:539:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x560638e543f8 <line:540:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x560638e54588 <line:541:22>
| `-NonNullAttr 0x560638e545e0 <col:63, col:80> 1 2
|-FunctionDecl 0x560638e54768 <line:542:1, line:544:79> line:542:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x560638e54628 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x560638e546a8 <line:543:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x560638e54818 <line:544:22>
| `-NonNullAttr 0x560638e54870 <col:63, col:77> 1
|-FunctionDecl 0x560638e54a58 <line:545:1, line:547:82> line:545:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x560638e548b8 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x560638e54938 <line:546:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x560638e54b08 <line:547:22>
| `-NonNullAttr 0x560638e54b60 <col:63, col:80> 1 2
|-FunctionDecl 0x560638e54ce8 <line:548:1, line:550:79> line:548:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x560638e54ba8 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x560638e54c28 <line:549:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x560638e54d98 <line:550:22>
| `-NonNullAttr 0x560638e54df0 <col:63, col:77> 1
|-FunctionDecl 0x560638e56168 <line:551:1, line:553:86> line:551:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x560638e55f10 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x560638e56020 <line:552:5, line:553:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x560638e56218 <col:29>
| `-NonNullAttr 0x560638e56270 <col:70, col:84> 1
|-FunctionDecl 0x560638e563e8 <line:554:1, line:555:79> line:554:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x560638e562b8 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x560638e56490 <line:555:22>
| `-NonNullAttr 0x560638e564e8 <col:63, col:77> 1
|-FunctionDecl 0x560638e565f0 <line:556:1, line:557:68> line:556:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x560638e56538 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x560638e56698 <line:557:22>
| `-NonNullAttr 0x560638e566f0 <col:52, col:66> 1
|-FunctionDecl 0x560638e567f0 <line:558:1, line:559:65> line:558:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x560638e56738 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x560638e56898 <line:559:19>
| `-NonNullAttr 0x560638e568f0 <col:49, col:63> 1
|-FunctionDecl 0x560638e56b28 <line:560:1, line:562:88> line:560:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x560638e56938 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x560638e569c8 <line:561:12, line:562:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x560638e56bd8 <col:39>
| `-NonNullAttr 0x560638e56c30 <col:69, col:86> 1 2
|-FunctionDecl 0x560638e56d30 <line:563:1, line:564:68> line:563:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x560638e56c78 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x560638e56dd8 <line:564:22>
| `-NonNullAttr 0x560638e56e30 <col:52, col:66> 1
|-FunctionDecl 0x560638e56f98 <line:565:1, line:566:68> line:565:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x560638e56ee0 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x560638e57040 <line:566:22>
| `-NonNullAttr 0x560638e57098 <col:52, col:66> 1
|-FunctionDecl 0x560638e57258 <line:567:1, line:569:88> line:567:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x560638e570e8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x560638e57178 <line:568:12, line:569:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x560638e57308 <col:39>
| `-NonNullAttr 0x560638e57360 <col:69, col:86> 1 2
|-FunctionDecl 0x560638e57460 <line:570:1, line:571:68> line:570:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x560638e573a8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x560638e57508 <line:571:22>
| `-NonNullAttr 0x560638e57560 <col:52, col:66> 1
|-FunctionDecl 0x560638e57748 <line:572:1, line:573:79> line:572:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x560638e57610 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x560638e577f0 <line:573:22>
| `-NonNullAttr 0x560638e57848 <col:63, col:77> 1
|-FunctionDecl 0x560638e57950 <line:574:1, line:575:79> line:574:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x560638e57898 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x560638e579f8 <line:575:22>
| `-NonNullAttr 0x560638e57a50 <col:63, col:77> 1
|-FunctionDecl 0x560638e57c78 <line:576:1, line:579:82> line:576:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x560638e57a98 <col:43, line:577:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x560638e57b18 <line:578:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x560638e57d28 <line:579:22>
| `-NonNullAttr 0x560638e57d80 <col:63, col:80> 1 2
|-FunctionDecl 0x560638e57fa8 <line:580:1, line:582:79> line:580:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x560638e57dc8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x560638e57e48 <line:581:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x560638e58058 <line:582:22>
| `-NonNullAttr 0x560638e580b0 <col:63, col:77> 1
|-FunctionDecl 0x560638e58258 <line:583:1, line:586:82> line:583:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x560638e580f8 <col:43, line:584:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x560638e58178 <line:585:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x560638e58308 <line:586:22>
| `-NonNullAttr 0x560638e58360 <col:63, col:80> 1 2
|-FunctionDecl 0x560638e584e8 <line:587:1, line:588:93> line:587:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x560638e583a8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x560638e58428 <line:588:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x560638e58598 <col:36>
| `-NonNullAttr 0x560638e585f0 <col:77, col:91> 1
|-FunctionDecl 0x560638e58928 <line:589:1, line:591:79> line:589:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x560638e586d0 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x560638e587e0 <line:590:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x560638e589d8 <line:591:22>
| `-NonNullAttr 0x560638e58a30 <col:63, col:77> 1
|-FunctionDecl 0x560638e58ba8 <line:592:1, line:593:79> line:592:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x560638e58a78 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x560638e58c50 <line:593:22>
| `-NonNullAttr 0x560638e58ca8 <col:63, col:77> 1
|-FunctionDecl 0x560638e58db0 <line:594:1, line:595:68> line:594:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x560638e58cf8 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x560638e58e58 <line:595:22>
| `-NonNullAttr 0x560638e58eb0 <col:52, col:66> 1
|-FunctionDecl 0x560638e58fc8 <line:596:1, line:597:68> line:596:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x560638e58f10 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x560638e59070 <line:597:22>
| `-NonNullAttr 0x560638e590c8 <col:52, col:66> 1
|-FunctionDecl 0x560638e592f8 <line:598:1, line:600:41> line:598:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x560638e59118 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x560638e59190 <line:599:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x560638e593a8 <line:600:22, col:39> 1 2
|-FunctionDecl 0x560638e596d8 <line:601:1, line:604:44> line:601:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x560638e59428 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x560638e594a0 <line:602:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x560638e59530 <line:603:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x560638e59790 <line:604:22, col:42> 1 2 3
|-FunctionDecl 0x560638e599a8 <line:605:1, line:606:79> line:605:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x560638e59870 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x560638e59a50 <line:606:22>
| `-NonNullAttr 0x560638e59aa8 <col:63, col:77> 1
|-FunctionDecl 0x560638e59bb0 <line:607:1, line:608:79> line:607:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x560638e59af8 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x560638e59c58 <line:608:22>
| `-NonNullAttr 0x560638e59cb0 <col:63, col:77> 1
|-FunctionDecl 0x560638e59f10 <line:609:1, line:612:82> line:609:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x560638e59cf8 <col:41, line:610:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x560638e59d78 <line:611:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x560638e59fc0 <line:612:22>
| `-NonNullAttr 0x560638e5a018 <col:63, col:80> 1 2
|-FunctionDecl 0x560638e5a228 <line:613:1, line:614:94> line:613:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x560638e5a068 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x560638e5a0e8 <line:614:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x560638e5a2d8 <col:37>
| `-NonNullAttr 0x560638e5a330 <col:78, col:92> 1
|-FunctionDecl 0x560638e5a548 <line:615:1, line:618:82> line:615:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x560638e5a378 <col:39, line:616:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x560638e5a420 <line:617:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x560638e5a5f8 <line:618:22>
| `-NonNullAttr 0x560638e5a650 <col:63, col:80> 1 2
|-FunctionDecl 0x560638e5a818 <line:619:1, line:621:79> line:619:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x560638e5a698 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x560638e5a710 <line:620:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x560638e5a8c8 <line:621:22>
| `-NonNullAttr 0x560638e5a920 <col:63, col:77> 1
|-FunctionDecl 0x560638e5abc8 <line:622:1, line:623:79> line:622:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x560638e5aa00 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x560638e5aa80 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x560638e5ac78 <line:623:22>
| `-NonNullAttr 0x560638e5acd0 <col:63, col:77> 1
|-FunctionDecl 0x560638e5ae48 <line:624:1, line:625:79> line:624:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x560638e5ad18 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x560638e5af20 <line:625:22>
| `-NonNullAttr 0x560638e5af78 <col:63, col:77> 1
|-FunctionDecl 0x560638e5b080 <line:626:1, line:627:68> line:626:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x560638e5afc8 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x560638e5b128 <line:627:22>
| `-NonNullAttr 0x560638e5b180 <col:52, col:66> 1
|-FunctionDecl 0x560638e5b280 <line:628:1, line:629:68> line:628:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x560638e5b1c8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x560638e5b328 <line:629:22>
| `-NonNullAttr 0x560638e5b380 <col:52, col:66> 1
|-FunctionDecl 0x560638e5b480 <line:630:1, line:631:68> line:630:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x560638e5b3c8 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x560638e5b528 <line:631:22>
| `-NonNullAttr 0x560638e5b580 <col:52, col:66> 1
|-FunctionDecl 0x560638e5b958 <line:632:1, line:635:79> line:632:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x560638e5b660 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x560638e5b770 <line:633:6, line:634:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x560638e5b7f0 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x560638e5ba10 <line:635:22>
| `-NonNullAttr 0x560638e5ba68 <col:63, col:77> 1
|-FunctionDecl 0x560638e5bbe8 <line:636:1, line:637:79> line:636:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x560638e5bab8 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x560638e5bc90 <line:637:22>
| `-NonNullAttr 0x560638e5bce8 <col:63, col:77> 1
|-FunctionDecl 0x560638e5bdf0 <line:638:1, line:639:68> line:638:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x560638e5bd38 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x560638e5be98 <line:639:22>
| `-NonNullAttr 0x560638e5bef0 <col:52, col:66> 1
|-FunctionDecl 0x560638e5c0e8 <line:640:1, line:641:79> line:640:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x560638e5bfb0 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x560638e5c190 <line:641:22>
| `-NonNullAttr 0x560638e5c1e8 <col:63, col:77> 1
|-FunctionDecl 0x560638e5c2f0 <line:642:1, line:643:79> line:642:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x560638e5c238 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x560638e5c398 <line:643:22>
| `-NonNullAttr 0x560638e5c3f0 <col:63, col:77> 1
|-FunctionDecl 0x560638e5c618 <line:644:1, line:647:82> line:644:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x560638e5c438 <col:44, line:645:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x560638e5c4b8 <line:646:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x560638e5c6c8 <line:647:22>
| `-NonNullAttr 0x560638e5c720 <col:63, col:80> 1 2
|-FunctionDecl 0x560638e5c928 <line:648:1, line:650:79> line:648:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x560638e5c768 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x560638e5c7e8 <line:649:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x560638e5c9d8 <line:650:22>
| `-NonNullAttr 0x560638e5ca30 <col:63, col:77> 1
|-FunctionDecl 0x560638e5cd78 <line:651:1, line:653:79> line:651:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x560638e5cb10 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x560638e5cc30 <line:652:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x560638e5ce28 <line:653:22>
| `-NonNullAttr 0x560638e5ce80 <col:63, col:77> 1
|-FunctionDecl 0x560638e5cfe8 <line:654:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x560638e5cec8 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x560638e5d090 <col:69>
|-FunctionDecl 0x560638e5d208 <line:655:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x560638e5d0f8 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x560638e5d2b0 <col:72>
|-FunctionDecl 0x560638e5d4e8 <line:656:1, line:657:67> line:656:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x560638e5d318 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x560638e5d3c8 <line:657:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x560638e5d598 <col:44>
|-FunctionDecl 0x560638e5d7b8 <line:658:1, line:660:79> line:658:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x560638e5d600 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x560638e5d678 <line:659:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x560638e5d868 <line:660:22>
| `-NonNullAttr 0x560638e5d8c0 <col:63, col:77> 2
|-FunctionDecl 0x560638e5dd08 <line:661:1, line:663:70> line:661:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x560638e5d9a0 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x560638e5dab0 <line:662:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x560638e5dbc0 <line:663:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x560638e5ddc0 <col:47>
|-FunctionDecl 0x560638e5ef60 <line:665:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x560638e5de30 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x560638e5f0b8 <line:666:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x560638e5f020 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x560638e5f210 <line:667:1, col:20> col:8 used P2 'void *(void *)'
| `-ParmVarDecl 0x560638e5f178 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x560638e5f368 <line:668:1, col:20> col:8 used P3 'void *(void *)'
| `-ParmVarDecl 0x560638e5f2d0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x560638e5f430 <line:669:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x560638e5f4f0 <line:670:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x560638e5f5b0 <line:671:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x560638e5f668 <line:672:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x560638e5f6e8 prev 0x560638e5f668 <line:673:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x560638e5f750 <col:24> 'int' 0
|-VarDecl 0x560638e5f788 <line:674:1, col:5> col:5 used __unbuffered_p1_EAX 'int'
|-VarDecl 0x560638e5f808 prev 0x560638e5f788 <line:675:1, col:27> col:5 used __unbuffered_p1_EAX 'int' cinit
| `-IntegerLiteral 0x560638e5f870 <col:27> 'int' 0
|-VarDecl 0x560638e5f8a8 <line:676:1, col:5> col:5 used __unbuffered_p3_EAX 'int'
|-VarDecl 0x560638e5f928 prev 0x560638e5f8a8 <line:677:1, col:27> col:5 used __unbuffered_p3_EAX 'int' cinit
| `-IntegerLiteral 0x560638e5f990 <col:27> 'int' 0
|-VarDecl 0x560638e5f9c8 <line:678:1, col:5> col:5 used a 'int'
|-VarDecl 0x560638e5fa48 prev 0x560638e5f9c8 <line:679:1, col:9> col:5 used a 'int' cinit
| `-IntegerLiteral 0x560638e5fab0 <col:9> 'int' 0
|-VarDecl 0x560638e5fae0 <line:680:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x560638e5fb58 <line:681:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x560638e5fbd8 <line:682:1, col:5> col:5 used x 'int'
|-VarDecl 0x560638e5fc58 prev 0x560638e5fbd8 <line:683:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x560638e5fcc0 <col:9> 'int' 0
|-VarDecl 0x560638e5fcf8 <line:684:1, col:5> col:5 used y 'int'
|-VarDecl 0x560638e5fd78 prev 0x560638e5fcf8 <line:685:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x560638e5fde0 <col:9> 'int' 0
|-VarDecl 0x560638e5fe18 <line:686:1, col:5> col:5 used z 'int'
|-VarDecl 0x560638e5fe98 prev 0x560638e5fe18 <line:687:1, col:9> col:5 used z 'int' cinit
| `-IntegerLiteral 0x560638e5ff00 <col:9> 'int' 0
|-VarDecl 0x560638e5ff70 <line:688:1, col:7> col:7 used z$flush_delayed '_Bool'
|-VarDecl 0x560638e5fff0 <line:689:1, col:5> col:5 used z$mem_tmp 'int'
|-VarDecl 0x560638e60068 <line:690:1, col:7> col:7 used z$r_buff0_thd0 '_Bool'
|-VarDecl 0x560638e600e0 <line:691:1, col:7> col:7 used z$r_buff0_thd1 '_Bool'
|-VarDecl 0x560638e60158 <line:692:1, col:7> col:7 used z$r_buff0_thd2 '_Bool'
|-VarDecl 0x560638e601d0 <line:693:1, col:7> col:7 used z$r_buff0_thd3 '_Bool'
|-VarDecl 0x560638e60248 <line:694:1, col:7> col:7 used z$r_buff0_thd4 '_Bool'
|-VarDecl 0x560638e602c0 <line:695:1, col:7> col:7 used z$r_buff1_thd0 '_Bool'
|-VarDecl 0x560638e60338 <line:696:1, col:7> col:7 used z$r_buff1_thd1 '_Bool'
|-VarDecl 0x560638e603b0 <line:697:1, col:7> col:7 used z$r_buff1_thd2 '_Bool'
|-VarDecl 0x560638e60428 <line:698:1, col:7> col:7 used z$r_buff1_thd3 '_Bool'
|-VarDecl 0x560638e604a0 <line:699:1, col:7> col:7 used z$r_buff1_thd4 '_Bool'
|-VarDecl 0x560638e60518 <line:700:1, col:7> col:7 z$read_delayed '_Bool'
|-VarDecl 0x560638e60598 <line:701:1, col:6> col:6 z$read_delayed_var 'int *'
|-VarDecl 0x560638e60618 <line:702:1, col:5> col:5 used z$w_buff0 'int'
|-VarDecl 0x560638e60690 <line:703:1, col:7> col:7 used z$w_buff0_used '_Bool'
|-VarDecl 0x560638e60710 <line:704:1, col:5> col:5 used z$w_buff1 'int'
|-VarDecl 0x560638e60788 <line:705:1, col:7> col:7 used z$w_buff1_used '_Bool'
|-VarDecl 0x560638e60800 <line:706:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x560638e60878 <line:707:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x560638e60990 prev 0x560638e5ef60 <line:708:1, line:722:1> line:708:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x560638e608f8 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x560638e60f80 <line:709:1, line:722:1>
|   |-CallExpr 0x560638e60aa8 <line:710:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x560638e60a90 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560638e60a38 <col:3> 'void ()' Function 0x560638e06350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x560638e60b08 <line:711:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x560638e60ac8 <col:3> 'int' lvalue Var 0x560638e5fa48 'a' 'int'
|   | `-IntegerLiteral 0x560638e60ae8 <col:7> 'int' 1
|   |-CallExpr 0x560638e60b60 <line:712:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x560638e60b48 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560638e60b28 <col:3> 'void ()' Function 0x560638e06410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x560638e60bb8 <line:713:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x560638e60ba0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560638e60b80 <col:3> 'void ()' Function 0x560638e06350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x560638e60c18 <line:714:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x560638e60bd8 <col:3> 'int' lvalue Var 0x560638e5fc58 'x' 'int'
|   | `-IntegerLiteral 0x560638e60bf8 <col:7> 'int' 1
|   |-CallExpr 0x560638e60c70 <line:715:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x560638e60c58 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560638e60c38 <col:3> 'void ()' Function 0x560638e06410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x560638e60cc8 <line:716:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x560638e60cb0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560638e60c90 <col:3> 'void ()' Function 0x560638e06350 '__VERIFIER_atomic_begin' 'void ()'
|   |-CallExpr 0x560638e60d20 <line:717:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x560638e60d08 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560638e60ce8 <col:3> 'void ()' Function 0x560638e06410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x560638e60d78 <line:718:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x560638e60d60 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560638e60d40 <col:3> 'void ()' Function 0x560638e06350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x560638e60e30 <line:719:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x560638e60d98 <col:3> 'int' lvalue Var 0x560638e5f6e8 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x560638e60e10 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x560638e60df8 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x560638e60db8 <col:22> 'int' lvalue Var 0x560638e5f6e8 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x560638e60dd8 <col:41> 'int' 1
|   |-CallExpr 0x560638e60e88 <line:720:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x560638e60e70 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560638e60e50 <col:3> 'void ()' Function 0x560638e06410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x560638e60f38 <line:721:3, col:36>
|     `-CallExpr 0x560638e60f18 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x560638e60f00 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x560638e60ea8 <col:10> 'void *(void)' Function 0x560638e05e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x560638e610a0 prev 0x560638e5f0b8 <line:723:1, line:737:1> line:723:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x560638e61008 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x560638e61600 <line:724:1, line:737:1>
|   |-CallExpr 0x560638e61180 <line:725:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x560638e61168 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560638e61148 <col:3> 'void ()' Function 0x560638e06350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x560638e611e0 <line:726:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x560638e611a0 <col:3> 'int' lvalue Var 0x560638e5fc58 'x' 'int'
|   | `-IntegerLiteral 0x560638e611c0 <col:7> 'int' 2
|   |-CallExpr 0x560638e61238 <line:727:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x560638e61220 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560638e61200 <col:3> 'void ()' Function 0x560638e06410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x560638e61290 <line:728:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x560638e61278 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560638e61258 <col:3> 'void ()' Function 0x560638e06350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x560638e61308 <line:729:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x560638e612b0 <col:3> 'int' lvalue Var 0x560638e5f808 '__unbuffered_p1_EAX' 'int'
|   | `-ImplicitCastExpr 0x560638e612f0 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x560638e612d0 <col:25> 'int' lvalue Var 0x560638e5fd78 'y' 'int'
|   |-CallExpr 0x560638e61360 <line:730:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x560638e61348 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560638e61328 <col:3> 'void ()' Function 0x560638e06410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x560638e613b8 <line:731:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x560638e613a0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560638e61380 <col:3> 'void ()' Function 0x560638e06350 '__VERIFIER_atomic_begin' 'void ()'
|   |-CallExpr 0x560638e61410 <line:732:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x560638e613f8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560638e613d8 <col:3> 'void ()' Function 0x560638e06410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x560638e61468 <line:733:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x560638e61450 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560638e61430 <col:3> 'void ()' Function 0x560638e06350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x560638e61520 <line:734:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x560638e61488 <col:3> 'int' lvalue Var 0x560638e5f6e8 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x560638e61500 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x560638e614e8 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x560638e614a8 <col:22> 'int' lvalue Var 0x560638e5f6e8 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x560638e614c8 <col:41> 'int' 1
|   |-CallExpr 0x560638e61578 <line:735:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x560638e61560 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560638e61540 <col:3> 'void ()' Function 0x560638e06410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x560638e615f0 <line:736:3, col:36>
|     `-CallExpr 0x560638e615d0 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x560638e615b8 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x560638e61598 <col:10> 'void *(void)' Function 0x560638e05e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x560638e61720 prev 0x560638e5f210 <line:738:1, line:757:1> line:738:8 used P2 'void *(void *)'
| |-ParmVarDecl 0x560638e61688 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x560638e62950 <line:739:1, line:757:1>
|   |-CallExpr 0x560638e61800 <line:740:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x560638e617e8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560638e617c8 <col:3> 'void ()' Function 0x560638e06350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x560638e61860 <line:741:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x560638e61820 <col:3> 'int' lvalue Var 0x560638e5fd78 'y' 'int'
|   | `-IntegerLiteral 0x560638e61840 <col:7> 'int' 1
|   |-CallExpr 0x560638e618b8 <line:742:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x560638e618a0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560638e61880 <col:3> 'void ()' Function 0x560638e06410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x560638e61910 <line:743:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x560638e618f8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560638e618d8 <col:3> 'void ()' Function 0x560638e06350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x560638e61970 <line:744:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x560638e61930 <col:3> 'int' lvalue Var 0x560638e5fe98 'z' 'int'
|   | `-IntegerLiteral 0x560638e61950 <col:7> 'int' 1
|   |-CallExpr 0x560638e619c8 <line:745:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x560638e619b0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560638e61990 <col:3> 'void ()' Function 0x560638e06410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x560638e61a20 <line:746:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x560638e61a08 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560638e619e8 <col:3> 'void ()' Function 0x560638e06350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x560638e61d08 <line:747:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x560638e61a40 <col:3> 'int' lvalue Var 0x560638e5fe98 'z' 'int'
|   | `-ConditionalOperator 0x560638e61cd8 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x560638e61b00 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x560638e61ab8 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x560638e61aa0 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x560638e61a60 <col:7> '_Bool' lvalue Var 0x560638e60690 'z$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x560638e61ae8 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x560638e61ad0 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x560638e61a80 <col:25> '_Bool' lvalue Var 0x560638e601d0 'z$r_buff0_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x560638e61cc0 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x560638e61b20 <col:42> 'int' lvalue Var 0x560638e60618 'z$w_buff0' 'int'
|   |   `-ParenExpr 0x560638e61ca0 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x560638e61c70 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x560638e61be0 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x560638e61b98 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x560638e61b80 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x560638e61b40 <col:55> '_Bool' lvalue Var 0x560638e60788 'z$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x560638e61bc8 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x560638e61bb0 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x560638e61b60 <col:73> '_Bool' lvalue Var 0x560638e60428 'z$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x560638e61c40 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x560638e61c00 <col:90> 'int' lvalue Var 0x560638e60710 'z$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x560638e61c58 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x560638e61c20 <col:102> 'int' lvalue Var 0x560638e5fe98 'z' 'int'
|   |-BinaryOperator 0x560638e61f10 <line:748:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x560638e61d28 <col:3> '_Bool' lvalue Var 0x560638e60690 'z$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x560638e61ef8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560638e61ec8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x560638e61de8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x560638e61da0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x560638e61d88 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x560638e61d48 <col:20> '_Bool' lvalue Var 0x560638e60690 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x560638e61dd0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x560638e61db8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x560638e61d68 <col:38> '_Bool' lvalue Var 0x560638e601d0 'z$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x560638e61e80 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x560638e61e38 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x560638e61e08 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x560638e61eb0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x560638e61e98 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x560638e61e60 <col:66> '_Bool' lvalue Var 0x560638e60690 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x560638e62218 <line:749:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x560638e61f30 <col:3> '_Bool' lvalue Var 0x560638e60788 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x560638e62200 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560638e621d0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x560638e620f0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x560638e62010 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x560638e61fc8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x560638e61fb0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x560638e61f50 <col:20> '_Bool' lvalue Var 0x560638e60690 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x560638e61ff8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x560638e61fe0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x560638e61f90 <col:38> '_Bool' lvalue Var 0x560638e601d0 'z$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x560638e620d0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x560638e62088 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x560638e62070 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x560638e62030 <col:56> '_Bool' lvalue Var 0x560638e60788 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x560638e620b8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x560638e620a0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x560638e62050 <col:74> '_Bool' lvalue Var 0x560638e60428 'z$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x560638e62188 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x560638e62140 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x560638e62110 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x560638e621b8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x560638e621a0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x560638e62168 <col:102> '_Bool' lvalue Var 0x560638e60788 'z$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x560638e62420 <line:750:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x560638e62238 <col:3> '_Bool' lvalue Var 0x560638e601d0 'z$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x560638e62408 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560638e623d8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x560638e622f8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x560638e622b0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x560638e62298 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x560638e62258 <col:20> '_Bool' lvalue Var 0x560638e60690 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x560638e622e0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x560638e622c8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x560638e62278 <col:38> '_Bool' lvalue Var 0x560638e601d0 'z$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x560638e62390 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x560638e62348 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x560638e62318 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x560638e623c0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x560638e623a8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x560638e62370 <col:66> '_Bool' lvalue Var 0x560638e601d0 'z$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x560638e62708 <line:751:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x560638e62440 <col:3> '_Bool' lvalue Var 0x560638e60428 'z$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x560638e626f0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560638e626c0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x560638e625e0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x560638e62500 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x560638e624b8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x560638e624a0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x560638e62460 <col:20> '_Bool' lvalue Var 0x560638e60690 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x560638e624e8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x560638e624d0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x560638e62480 <col:38> '_Bool' lvalue Var 0x560638e601d0 'z$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x560638e625c0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x560638e62578 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x560638e62560 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x560638e62520 <col:56> '_Bool' lvalue Var 0x560638e60788 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x560638e625a8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x560638e62590 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x560638e62540 <col:74> '_Bool' lvalue Var 0x560638e60428 'z$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x560638e62678 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x560638e62630 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x560638e62600 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x560638e626a8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x560638e62690 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x560638e62658 <col:102> '_Bool' lvalue Var 0x560638e60428 'z$r_buff1_thd3' '_Bool'
|   |-CallExpr 0x560638e62760 <line:752:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x560638e62748 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560638e62728 <col:3> 'void ()' Function 0x560638e06410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x560638e627b8 <line:753:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x560638e627a0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560638e62780 <col:3> 'void ()' Function 0x560638e06350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x560638e62870 <line:754:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x560638e627d8 <col:3> 'int' lvalue Var 0x560638e5f6e8 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x560638e62850 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x560638e62838 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x560638e627f8 <col:22> 'int' lvalue Var 0x560638e5f6e8 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x560638e62818 <col:41> 'int' 1
|   |-CallExpr 0x560638e628c8 <line:755:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x560638e628b0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560638e62890 <col:3> 'void ()' Function 0x560638e06410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x560638e62940 <line:756:3, col:36>
|     `-CallExpr 0x560638e62920 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x560638e62908 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x560638e628e8 <col:10> 'void *(void)' Function 0x560638e05e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x560638e62a98 prev 0x560638e5f368 <line:758:1, line:787:1> line:758:8 used P3 'void *(void *)'
| |-ParmVarDecl 0x560638e62a00 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x560638e64300 <line:759:1, line:787:1>
|   |-CallExpr 0x560638e62b78 <line:760:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x560638e62b60 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560638e62b40 <col:3> 'void ()' Function 0x560638e06350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x560638e62bf0 <line:761:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x560638e62b98 <col:3> 'int' lvalue Var 0x560638e60710 'z$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x560638e62bd8 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x560638e62bb8 <col:15> 'int' lvalue Var 0x560638e60618 'z$w_buff0' 'int'
|   |-BinaryOperator 0x560638e62c50 <line:762:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x560638e62c10 <col:3> 'int' lvalue Var 0x560638e60618 'z$w_buff0' 'int'
|   | `-IntegerLiteral 0x560638e62c30 <col:15> 'int' 2
|   |-BinaryOperator 0x560638e62cc8 <line:763:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x560638e62c70 <col:3> '_Bool' lvalue Var 0x560638e60788 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x560638e62cb0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x560638e62c90 <col:20> '_Bool' lvalue Var 0x560638e60690 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x560638e62d60 <line:764:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x560638e62ce8 <col:3> '_Bool' lvalue Var 0x560638e60690 'z$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x560638e62d38 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x560638e62d08 <col:27> 'int' 1
|   |-CallExpr 0x560638e62ee8 <line:765:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x560638e62ed0 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x560638e62d80 <col:3> 'void (int)' Function 0x560638e060d8 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x560638e62e80 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x560638e62e60 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x560638e62e40 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x560638e62df8 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x560638e62de0 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x560638e62da0 <col:23> '_Bool' lvalue Var 0x560638e60788 'z$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x560638e62e28 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x560638e62e10 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x560638e62dc0 <col:41> '_Bool' lvalue Var 0x560638e60690 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x560638e62f68 <line:766:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x560638e62f10 <col:3> '_Bool' lvalue Var 0x560638e602c0 'z$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x560638e62f50 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x560638e62f30 <col:20> '_Bool' lvalue Var 0x560638e60068 'z$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x560638e62ff8 <line:767:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x560638e62fa0 <col:3> '_Bool' lvalue Var 0x560638e60338 'z$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x560638e62fe0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x560638e62fc0 <col:20> '_Bool' lvalue Var 0x560638e600e0 'z$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x560638e63070 <line:768:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x560638e63018 <col:3> '_Bool' lvalue Var 0x560638e603b0 'z$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x560638e63058 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x560638e63038 <col:20> '_Bool' lvalue Var 0x560638e60158 'z$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x560638e630e8 <line:769:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x560638e63090 <col:3> '_Bool' lvalue Var 0x560638e60428 'z$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x560638e630d0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x560638e630b0 <col:20> '_Bool' lvalue Var 0x560638e601d0 'z$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x560638e63160 <line:770:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x560638e63108 <col:3> '_Bool' lvalue Var 0x560638e604a0 'z$r_buff1_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x560638e63148 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x560638e63128 <col:20> '_Bool' lvalue Var 0x560638e60248 'z$r_buff0_thd4' '_Bool'
|   |-BinaryOperator 0x560638e631f8 <line:771:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x560638e63180 <col:3> '_Bool' lvalue Var 0x560638e60248 'z$r_buff0_thd4' '_Bool'
|   | `-CStyleCastExpr 0x560638e631d0 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x560638e631a0 <col:27> 'int' 1
|   |-CallExpr 0x560638e63250 <line:772:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x560638e63238 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560638e63218 <col:3> 'void ()' Function 0x560638e06410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x560638e632a8 <line:773:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x560638e63290 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560638e63270 <col:3> 'void ()' Function 0x560638e06350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x560638e63320 <line:774:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x560638e632c8 <col:3> 'int' lvalue Var 0x560638e5f928 '__unbuffered_p3_EAX' 'int'
|   | `-ImplicitCastExpr 0x560638e63308 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x560638e632e8 <col:25> 'int' lvalue Var 0x560638e5fa48 'a' 'int'
|   |-CallExpr 0x560638e63378 <line:775:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x560638e63360 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560638e63340 <col:3> 'void ()' Function 0x560638e06410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x560638e633d0 <line:776:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x560638e633b8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560638e63398 <col:3> 'void ()' Function 0x560638e06350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x560638e636b8 <line:777:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x560638e633f0 <col:3> 'int' lvalue Var 0x560638e5fe98 'z' 'int'
|   | `-ConditionalOperator 0x560638e63688 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x560638e634b0 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x560638e63468 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x560638e63450 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x560638e63410 <col:7> '_Bool' lvalue Var 0x560638e60690 'z$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x560638e63498 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x560638e63480 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x560638e63430 <col:25> '_Bool' lvalue Var 0x560638e60248 'z$r_buff0_thd4' '_Bool'
|   |   |-ImplicitCastExpr 0x560638e63670 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x560638e634d0 <col:42> 'int' lvalue Var 0x560638e60618 'z$w_buff0' 'int'
|   |   `-ParenExpr 0x560638e63650 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x560638e63620 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x560638e63590 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x560638e63548 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x560638e63530 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x560638e634f0 <col:55> '_Bool' lvalue Var 0x560638e60788 'z$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x560638e63578 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x560638e63560 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x560638e63510 <col:73> '_Bool' lvalue Var 0x560638e604a0 'z$r_buff1_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x560638e635f0 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x560638e635b0 <col:90> 'int' lvalue Var 0x560638e60710 'z$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x560638e63608 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x560638e635d0 <col:102> 'int' lvalue Var 0x560638e5fe98 'z' 'int'
|   |-BinaryOperator 0x560638e638c0 <line:778:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x560638e636d8 <col:3> '_Bool' lvalue Var 0x560638e60690 'z$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x560638e638a8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560638e63878 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x560638e63798 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x560638e63750 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x560638e63738 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x560638e636f8 <col:20> '_Bool' lvalue Var 0x560638e60690 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x560638e63780 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x560638e63768 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x560638e63718 <col:38> '_Bool' lvalue Var 0x560638e60248 'z$r_buff0_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x560638e63830 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x560638e637e8 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x560638e637b8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x560638e63860 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x560638e63848 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x560638e63810 <col:66> '_Bool' lvalue Var 0x560638e60690 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x560638e63ba8 <line:779:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x560638e638e0 <col:3> '_Bool' lvalue Var 0x560638e60788 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x560638e63b90 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560638e63b60 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x560638e63a80 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x560638e639a0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x560638e63958 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x560638e63940 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x560638e63900 <col:20> '_Bool' lvalue Var 0x560638e60690 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x560638e63988 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x560638e63970 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x560638e63920 <col:38> '_Bool' lvalue Var 0x560638e60248 'z$r_buff0_thd4' '_Bool'
|   |     | `-BinaryOperator 0x560638e63a60 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x560638e63a18 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x560638e63a00 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x560638e639c0 <col:56> '_Bool' lvalue Var 0x560638e60788 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x560638e63a48 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x560638e63a30 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x560638e639e0 <col:74> '_Bool' lvalue Var 0x560638e604a0 'z$r_buff1_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x560638e63b18 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x560638e63ad0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x560638e63aa0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x560638e63b48 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x560638e63b30 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x560638e63af8 <col:102> '_Bool' lvalue Var 0x560638e60788 'z$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x560638e63db0 <line:780:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x560638e63bc8 <col:3> '_Bool' lvalue Var 0x560638e60248 'z$r_buff0_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x560638e63d98 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560638e63d68 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x560638e63c88 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x560638e63c40 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x560638e63c28 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x560638e63be8 <col:20> '_Bool' lvalue Var 0x560638e60690 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x560638e63c70 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x560638e63c58 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x560638e63c08 <col:38> '_Bool' lvalue Var 0x560638e60248 'z$r_buff0_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x560638e63d20 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x560638e63cd8 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x560638e63ca8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x560638e63d50 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x560638e63d38 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x560638e63d00 <col:66> '_Bool' lvalue Var 0x560638e60248 'z$r_buff0_thd4' '_Bool'
|   |-BinaryOperator 0x560638e640b8 <line:781:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x560638e63dd0 <col:3> '_Bool' lvalue Var 0x560638e604a0 'z$r_buff1_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x560638e640a0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x560638e64070 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x560638e63f70 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x560638e63e90 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x560638e63e48 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x560638e63e30 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x560638e63df0 <col:20> '_Bool' lvalue Var 0x560638e60690 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x560638e63e78 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x560638e63e60 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x560638e63e10 <col:38> '_Bool' lvalue Var 0x560638e60248 'z$r_buff0_thd4' '_Bool'
|   |     | `-BinaryOperator 0x560638e63f50 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x560638e63f08 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x560638e63ef0 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x560638e63eb0 <col:56> '_Bool' lvalue Var 0x560638e60788 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x560638e63f38 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x560638e63f20 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x560638e63ed0 <col:74> '_Bool' lvalue Var 0x560638e604a0 'z$r_buff1_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x560638e64028 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x560638e63fe0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x560638e63fb0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x560638e64058 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x560638e64040 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x560638e64008 <col:102> '_Bool' lvalue Var 0x560638e604a0 'z$r_buff1_thd4' '_Bool'
|   |-CallExpr 0x560638e64110 <line:782:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x560638e640f8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560638e640d8 <col:3> 'void ()' Function 0x560638e06410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x560638e64168 <line:783:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x560638e64150 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560638e64130 <col:3> 'void ()' Function 0x560638e06350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x560638e64220 <line:784:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x560638e64188 <col:3> 'int' lvalue Var 0x560638e5f6e8 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x560638e64200 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x560638e641e8 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x560638e641a8 <col:22> 'int' lvalue Var 0x560638e5f6e8 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x560638e641c8 <col:41> 'int' 1
|   |-CallExpr 0x560638e64278 <line:785:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x560638e64260 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560638e64240 <col:3> 'void ()' Function 0x560638e06410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x560638e642f0 <line:786:3, col:36>
|     `-CallExpr 0x560638e642d0 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x560638e642b8 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x560638e64298 <col:10> 'void *(void)' Function 0x560638e05e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x560638e64408 prev 0x560638e5f430 <line:788:1, line:790:1> line:788:6 fence 'void ()'
| `-CompoundStmt 0x560638e644a8 <line:789:1, line:790:1>
|-FunctionDecl 0x560638e644d8 prev 0x560638e5f4f0 <line:791:1, line:793:1> line:791:6 isync 'void ()'
| `-CompoundStmt 0x560638e64578 <line:792:1, line:793:1>
|-FunctionDecl 0x560638e645a8 prev 0x560638e5f5b0 <line:794:1, line:796:1> line:794:6 lwfence 'void ()'
| `-CompoundStmt 0x560638e64648 <line:795:1, line:796:1>
`-FunctionDecl 0x560638e646b8 <line:797:1, line:836:1> line:797:5 main 'int ()'
  `-CompoundStmt 0x560638e69010 <line:798:1, line:836:1>
    |-DeclStmt 0x560638e647d0 <line:799:3, col:18>
    | `-VarDecl 0x560638e64768 <col:3, col:13> col:13 used t1463 'pthread_t':'unsigned long'
    |-CallExpr 0x560638e649d8 <line:800:3, col:54> 'int'
    | |-ImplicitCastExpr 0x560638e649c0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x560638e647e8 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x560638e468f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x560638e64828 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x560638e64808 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x560638e64768 't1463' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x560638e64a18 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x560638e648a0 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x560638e64878 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x560638e64840 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x560638e64a30 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x560638e648c0 <col:39> 'void *(void *)' Function 0x560638e60990 'P0' 'void *(void *)'
    | `-ParenExpr 0x560638e64940 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x560638e64918 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x560638e648e0 <col:52> 'int' 0
    |-DeclStmt 0x560638e64ac0 <line:801:3, col:18>
    | `-VarDecl 0x560638e64a58 <col:3, col:13> col:13 used t1464 'pthread_t':'unsigned long'
    |-CallExpr 0x560638e64c68 <line:802:3, col:54> 'int'
    | |-ImplicitCastExpr 0x560638e64c50 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x560638e64ad8 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x560638e468f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x560638e64b18 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x560638e64af8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x560638e64a58 't1464' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x560638e64ca8 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x560638e64b90 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x560638e64b68 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x560638e64b30 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x560638e64cc0 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x560638e64bb0 <col:39> 'void *(void *)' Function 0x560638e610a0 'P1' 'void *(void *)'
    | `-ParenExpr 0x560638e64c30 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x560638e64c08 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x560638e64bd0 <col:52> 'int' 0
    |-DeclStmt 0x560638e64d50 <line:803:3, col:18>
    | `-VarDecl 0x560638e64ce8 <col:3, col:13> col:13 used t1465 'pthread_t':'unsigned long'
    |-CallExpr 0x560638e64ef8 <line:804:3, col:54> 'int'
    | |-ImplicitCastExpr 0x560638e64ee0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x560638e64d68 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x560638e468f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x560638e64da8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x560638e64d88 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x560638e64ce8 't1465' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x560638e64f38 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x560638e64e20 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x560638e64df8 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x560638e64dc0 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x560638e64f50 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x560638e64e40 <col:39> 'void *(void *)' Function 0x560638e61720 'P2' 'void *(void *)'
    | `-ParenExpr 0x560638e64ec0 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x560638e64e98 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x560638e64e60 <col:52> 'int' 0
    |-DeclStmt 0x560638e65028 <line:805:3, col:18>
    | `-VarDecl 0x560638e64fc0 <col:3, col:13> col:13 used t1466 'pthread_t':'unsigned long'
    |-CallExpr 0x560638e651d0 <line:806:3, col:54> 'int'
    | |-ImplicitCastExpr 0x560638e651b8 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x560638e65040 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x560638e468f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x560638e65080 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x560638e65060 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x560638e64fc0 't1466' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x560638e65210 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x560638e650f8 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x560638e650d0 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x560638e65098 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x560638e65228 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x560638e65118 <col:39> 'void *(void *)' Function 0x560638e62a98 'P3' 'void *(void *)'
    | `-ParenExpr 0x560638e65198 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x560638e65170 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x560638e65138 <col:52> 'int' 0
    |-CallExpr 0x560638e65278 <line:807:3, col:27> 'void'
    | `-ImplicitCastExpr 0x560638e65260 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x560638e65240 <col:3> 'void ()' Function 0x560638e06350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x560638e65348 <line:808:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x560638e65298 <col:3> '_Bool' lvalue Var 0x560638e5fae0 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x560638e65330 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x560638e65310 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x560638e652f8 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x560638e652b8 <col:21> 'int' lvalue Var 0x560638e5f6e8 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x560638e652d8 <col:41> 'int' 4
    |-CallExpr 0x560638e653a0 <line:809:3, col:25> 'void'
    | `-ImplicitCastExpr 0x560638e65388 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x560638e65368 <col:3> 'void ()' Function 0x560638e06410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x560638e65418 <line:810:3, col:36> 'void'
    | |-ImplicitCastExpr 0x560638e65400 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x560638e653c0 <col:3> 'void (int)' Function 0x560638e05ca0 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x560638e65458 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x560638e65440 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x560638e653e0 <col:21> '_Bool' lvalue Var 0x560638e5fae0 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x560638e654a8 <line:811:3, col:27> 'void'
    | `-ImplicitCastExpr 0x560638e65490 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x560638e65470 <col:3> 'void ()' Function 0x560638e06350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x560638e65790 <line:812:3, col:103> 'int' '='
    | |-DeclRefExpr 0x560638e654c8 <col:3> 'int' lvalue Var 0x560638e5fe98 'z' 'int'
    | `-ConditionalOperator 0x560638e65760 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x560638e65588 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x560638e65540 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x560638e65528 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x560638e654e8 <col:7> '_Bool' lvalue Var 0x560638e60690 'z$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x560638e65570 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x560638e65558 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x560638e65508 <col:25> '_Bool' lvalue Var 0x560638e60068 'z$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x560638e65748 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x560638e655a8 <col:42> 'int' lvalue Var 0x560638e60618 'z$w_buff0' 'int'
    |   `-ParenExpr 0x560638e65728 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x560638e656f8 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x560638e65668 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x560638e65620 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x560638e65608 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x560638e655c8 <col:55> '_Bool' lvalue Var 0x560638e60788 'z$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x560638e65650 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x560638e65638 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x560638e655e8 <col:73> '_Bool' lvalue Var 0x560638e602c0 'z$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x560638e656c8 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x560638e65688 <col:90> 'int' lvalue Var 0x560638e60710 'z$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x560638e656e0 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x560638e656a8 <col:102> 'int' lvalue Var 0x560638e5fe98 'z' 'int'
    |-BinaryOperator 0x560638e65998 <line:813:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x560638e657b0 <col:3> '_Bool' lvalue Var 0x560638e60690 'z$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x560638e65980 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x560638e65950 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x560638e65870 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x560638e65828 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x560638e65810 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x560638e657d0 <col:20> '_Bool' lvalue Var 0x560638e60690 'z$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x560638e65858 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x560638e65840 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x560638e657f0 <col:38> '_Bool' lvalue Var 0x560638e60068 'z$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x560638e65908 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x560638e658c0 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x560638e65890 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x560638e65938 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x560638e65920 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x560638e658e8 <col:66> '_Bool' lvalue Var 0x560638e60690 'z$w_buff0_used' '_Bool'
    |-BinaryOperator 0x560638e65c80 <line:814:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x560638e659b8 <col:3> '_Bool' lvalue Var 0x560638e60788 'z$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x560638e65c68 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x560638e65c38 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x560638e65b58 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x560638e65a78 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x560638e65a30 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x560638e65a18 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x560638e659d8 <col:20> '_Bool' lvalue Var 0x560638e60690 'z$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x560638e65a60 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x560638e65a48 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x560638e659f8 <col:38> '_Bool' lvalue Var 0x560638e60068 'z$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x560638e65b38 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x560638e65af0 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x560638e65ad8 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x560638e65a98 <col:56> '_Bool' lvalue Var 0x560638e60788 'z$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x560638e65b20 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x560638e65b08 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x560638e65ab8 <col:74> '_Bool' lvalue Var 0x560638e602c0 'z$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x560638e65bf0 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x560638e65ba8 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x560638e65b78 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x560638e65c20 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x560638e65c08 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x560638e65bd0 <col:102> '_Bool' lvalue Var 0x560638e60788 'z$w_buff1_used' '_Bool'
    |-BinaryOperator 0x560638e65e88 <line:815:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x560638e65ca0 <col:3> '_Bool' lvalue Var 0x560638e60068 'z$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x560638e65e70 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x560638e65e40 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x560638e65d60 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x560638e65d18 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x560638e65d00 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x560638e65cc0 <col:20> '_Bool' lvalue Var 0x560638e60690 'z$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x560638e65d48 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x560638e65d30 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x560638e65ce0 <col:38> '_Bool' lvalue Var 0x560638e60068 'z$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x560638e65df8 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x560638e65db0 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x560638e65d80 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x560638e65e28 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x560638e65e10 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x560638e65dd8 <col:66> '_Bool' lvalue Var 0x560638e60068 'z$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x560638e66198 <line:816:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x560638e65ea8 <col:3> '_Bool' lvalue Var 0x560638e602c0 'z$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x560638e66180 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x560638e66150 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x560638e66070 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x560638e65f68 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x560638e65f20 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x560638e65f08 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x560638e65ec8 <col:20> '_Bool' lvalue Var 0x560638e60690 'z$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x560638e65f50 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x560638e65f38 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x560638e65ee8 <col:38> '_Bool' lvalue Var 0x560638e60068 'z$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x560638e66050 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x560638e66008 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x560638e65ff0 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x560638e65f88 <col:56> '_Bool' lvalue Var 0x560638e60788 'z$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x560638e66038 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x560638e66020 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x560638e65fd0 <col:74> '_Bool' lvalue Var 0x560638e602c0 'z$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x560638e66108 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x560638e660c0 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x560638e66090 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x560638e66138 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x560638e66120 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x560638e660e8 <col:102> '_Bool' lvalue Var 0x560638e602c0 'z$r_buff1_thd0' '_Bool'
    |-CallExpr 0x560638e661f0 <line:817:3, col:25> 'void'
    | `-ImplicitCastExpr 0x560638e661d8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x560638e661b8 <col:3> 'void ()' Function 0x560638e06410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x560638e66248 <line:818:3, col:27> 'void'
    | `-ImplicitCastExpr 0x560638e66230 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x560638e66210 <col:3> 'void ()' Function 0x560638e06350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x560638e662f8 <line:819:3, col:45> '_Bool' '='
    | |-DeclRefExpr 0x560638e66268 <col:3> '_Bool' lvalue Var 0x560638e60800 'weak$$choice0' '_Bool'
    | `-ImplicitCastExpr 0x560638e662e0 <col:19, col:45> '_Bool' <PointerToBoolean>
    |   `-CallExpr 0x560638e662c0 <col:19, col:45> 'void *'
    |     `-ImplicitCastExpr 0x560638e662a8 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
    |       `-DeclRefExpr 0x560638e66288 <col:19> 'void *(void)' Function 0x560638e05e68 '__VERIFIER_nondet_pointer' 'void *(void)'
    |-BinaryOperator 0x560638e663a8 <line:820:3, col:45> '_Bool' '='
    | |-DeclRefExpr 0x560638e66318 <col:3> '_Bool' lvalue Var 0x560638e60878 'weak$$choice2' '_Bool'
    | `-ImplicitCastExpr 0x560638e66390 <col:19, col:45> '_Bool' <PointerToBoolean>
    |   `-CallExpr 0x560638e66370 <col:19, col:45> 'void *'
    |     `-ImplicitCastExpr 0x560638e66358 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
    |       `-DeclRefExpr 0x560638e66338 <col:19> 'void *(void)' Function 0x560638e05e68 '__VERIFIER_nondet_pointer' 'void *(void)'
    |-BinaryOperator 0x560638e66420 <line:821:3, col:21> '_Bool' '='
    | |-DeclRefExpr 0x560638e663c8 <col:3> '_Bool' lvalue Var 0x560638e5ff70 'z$flush_delayed' '_Bool'
    | `-ImplicitCastExpr 0x560638e66408 <col:21> '_Bool' <LValueToRValue>
    |   `-DeclRefExpr 0x560638e663e8 <col:21> '_Bool' lvalue Var 0x560638e60878 'weak$$choice2' '_Bool'
    |-BinaryOperator 0x560638e66498 <line:822:3, col:15> 'int' '='
    | |-DeclRefExpr 0x560638e66440 <col:3> 'int' lvalue Var 0x560638e5fff0 'z$mem_tmp' 'int'
    | `-ImplicitCastExpr 0x560638e66480 <col:15> 'int' <LValueToRValue>
    |   `-DeclRefExpr 0x560638e66460 <col:15> 'int' lvalue Var 0x560638e5fe98 'z' 'int'
    |-BinaryOperator 0x560638e668d0 <line:823:3, col:162> 'int' '='
    | |-DeclRefExpr 0x560638e664b8 <col:3> 'int' lvalue Var 0x560638e5fe98 'z' 'int'
    | `-ConditionalOperator 0x560638e668a0 <col:7, col:162> 'int'
    |   |-BinaryOperator 0x560638e666c8 <col:7, col:84> 'int' '||'
    |   | |-BinaryOperator 0x560638e665e8 <col:7, col:46> 'int' '||'
    |   | | |-UnaryOperator 0x560638e66510 <col:7, col:8> 'int' prefix '!' cannot overflow
    |   | | | `-ImplicitCastExpr 0x560638e664f8 <col:8> '_Bool' <LValueToRValue>
    |   | | |   `-DeclRefExpr 0x560638e664d8 <col:8> '_Bool' lvalue Var 0x560638e60690 'z$w_buff0_used' '_Bool'
    |   | | `-BinaryOperator 0x560638e665c8 <col:26, col:46> 'int' '&&'
    |   | |   |-UnaryOperator 0x560638e66560 <col:26, col:27> 'int' prefix '!' cannot overflow
    |   | |   | `-ImplicitCastExpr 0x560638e66548 <col:27> '_Bool' <LValueToRValue>
    |   | |   |   `-DeclRefExpr 0x560638e66528 <col:27> '_Bool' lvalue Var 0x560638e60068 'z$r_buff0_thd0' '_Bool'
    |   | |   `-UnaryOperator 0x560638e665b0 <col:45, col:46> 'int' prefix '!' cannot overflow
    |   | |     `-ImplicitCastExpr 0x560638e66598 <col:46> '_Bool' <LValueToRValue>
    |   | |       `-DeclRefExpr 0x560638e66578 <col:46> '_Bool' lvalue Var 0x560638e60788 'z$w_buff1_used' '_Bool'
    |   | `-BinaryOperator 0x560638e666a8 <col:64, col:84> 'int' '&&'
    |   |   |-UnaryOperator 0x560638e66640 <col:64, col:65> 'int' prefix '!' cannot overflow
    |   |   | `-ImplicitCastExpr 0x560638e66628 <col:65> '_Bool' <LValueToRValue>
    |   |   |   `-DeclRefExpr 0x560638e66608 <col:65> '_Bool' lvalue Var 0x560638e60068 'z$r_buff0_thd0' '_Bool'
    |   |   `-UnaryOperator 0x560638e66690 <col:83, col:84> 'int' prefix '!' cannot overflow
    |   |     `-ImplicitCastExpr 0x560638e66678 <col:84> '_Bool' <LValueToRValue>
    |   |       `-DeclRefExpr 0x560638e66658 <col:84> '_Bool' lvalue Var 0x560638e602c0 'z$r_buff1_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x560638e66888 <col:101> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x560638e666e8 <col:101> 'int' lvalue Var 0x560638e5fe98 'z' 'int'
    |   `-ParenExpr 0x560638e66868 <col:105, col:162> 'int'
    |     `-ConditionalOperator 0x560638e66838 <col:106, col:153> 'int'
    |       |-BinaryOperator 0x560638e667a8 <col:106, col:124> 'int' '&&'
    |       | |-ImplicitCastExpr 0x560638e66760 <col:106> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x560638e66748 <col:106> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x560638e66708 <col:106> '_Bool' lvalue Var 0x560638e60690 'z$w_buff0_used' '_Bool'
    |       | `-ImplicitCastExpr 0x560638e66790 <col:124> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x560638e66778 <col:124> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x560638e66728 <col:124> '_Bool' lvalue Var 0x560638e60068 'z$r_buff0_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x560638e66808 <col:141> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x560638e667c8 <col:141> 'int' lvalue Var 0x560638e60618 'z$w_buff0' 'int'
    |       `-ImplicitCastExpr 0x560638e66820 <col:153> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x560638e667e8 <col:153> 'int' lvalue Var 0x560638e60710 'z$w_buff1' 'int'
    |-BinaryOperator 0x560638e66de0 <line:824:3, col:208> 'int' '='
    | |-DeclRefExpr 0x560638e668f0 <col:3> 'int' lvalue Var 0x560638e60618 'z$w_buff0' 'int'
    | `-ConditionalOperator 0x560638e66db0 <col:15, col:208> 'int'
    |   |-ImplicitCastExpr 0x560638e66d80 <col:15> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x560638e66d68 <col:15> '_Bool' <LValueToRValue>
    |   |   `-DeclRefExpr 0x560638e66910 <col:15> '_Bool' lvalue Var 0x560638e60878 'weak$$choice2' '_Bool'
    |   |-ImplicitCastExpr 0x560638e66d98 <col:31> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x560638e66930 <col:31> 'int' lvalue Var 0x560638e60618 'z$w_buff0' 'int'
    |   `-ParenExpr 0x560638e66d48 <col:43, col:208> 'int'
    |     `-ConditionalOperator 0x560638e66d18 <col:44, col:207> 'int'
    |       |-BinaryOperator 0x560638e66b40 <col:44, col:121> 'int' '||'
    |       | |-BinaryOperator 0x560638e66a60 <col:44, col:83> 'int' '||'
    |       | | |-UnaryOperator 0x560638e66988 <col:44, col:45> 'int' prefix '!' cannot overflow
    |       | | | `-ImplicitCastExpr 0x560638e66970 <col:45> '_Bool' <LValueToRValue>
    |       | | |   `-DeclRefExpr 0x560638e66950 <col:45> '_Bool' lvalue Var 0x560638e60690 'z$w_buff0_used' '_Bool'
    |       | | `-BinaryOperator 0x560638e66a40 <col:63, col:83> 'int' '&&'
    |       | |   |-UnaryOperator 0x560638e669d8 <col:63, col:64> 'int' prefix '!' cannot overflow
    |       | |   | `-ImplicitCastExpr 0x560638e669c0 <col:64> '_Bool' <LValueToRValue>
    |       | |   |   `-DeclRefExpr 0x560638e669a0 <col:64> '_Bool' lvalue Var 0x560638e60068 'z$r_buff0_thd0' '_Bool'
    |       | |   `-UnaryOperator 0x560638e66a28 <col:82, col:83> 'int' prefix '!' cannot overflow
    |       | |     `-ImplicitCastExpr 0x560638e66a10 <col:83> '_Bool' <LValueToRValue>
    |       | |       `-DeclRefExpr 0x560638e669f0 <col:83> '_Bool' lvalue Var 0x560638e60788 'z$w_buff1_used' '_Bool'
    |       | `-BinaryOperator 0x560638e66b20 <col:101, col:121> 'int' '&&'
    |       |   |-UnaryOperator 0x560638e66ab8 <col:101, col:102> 'int' prefix '!' cannot overflow
    |       |   | `-ImplicitCastExpr 0x560638e66aa0 <col:102> '_Bool' <LValueToRValue>
    |       |   |   `-DeclRefExpr 0x560638e66a80 <col:102> '_Bool' lvalue Var 0x560638e60068 'z$r_buff0_thd0' '_Bool'
    |       |   `-UnaryOperator 0x560638e66b08 <col:120, col:121> 'int' prefix '!' cannot overflow
    |       |     `-ImplicitCastExpr 0x560638e66af0 <col:121> '_Bool' <LValueToRValue>
    |       |       `-DeclRefExpr 0x560638e66ad0 <col:121> '_Bool' lvalue Var 0x560638e602c0 'z$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x560638e66d00 <col:138> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x560638e66b60 <col:138> 'int' lvalue Var 0x560638e60618 'z$w_buff0' 'int'
    |       `-ParenExpr 0x560638e66ce0 <col:150, col:207> 'int'
    |         `-ConditionalOperator 0x560638e66cb0 <col:151, col:198> 'int'
    |           |-BinaryOperator 0x560638e66c20 <col:151, col:169> 'int' '&&'
    |           | |-ImplicitCastExpr 0x560638e66bd8 <col:151> 'int' <IntegralCast>
    |           | | `-ImplicitCastExpr 0x560638e66bc0 <col:151> '_Bool' <LValueToRValue>
    |           | |   `-DeclRefExpr 0x560638e66b80 <col:151> '_Bool' lvalue Var 0x560638e60690 'z$w_buff0_used' '_Bool'
    |           | `-ImplicitCastExpr 0x560638e66c08 <col:169> 'int' <IntegralCast>
    |           |   `-ImplicitCastExpr 0x560638e66bf0 <col:169> '_Bool' <LValueToRValue>
    |           |     `-DeclRefExpr 0x560638e66ba0 <col:169> '_Bool' lvalue Var 0x560638e60068 'z$r_buff0_thd0' '_Bool'
    |           |-ImplicitCastExpr 0x560638e66c80 <col:186> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x560638e66c40 <col:186> 'int' lvalue Var 0x560638e60618 'z$w_buff0' 'int'
    |           `-ImplicitCastExpr 0x560638e66c98 <col:198> 'int' <LValueToRValue>
    |             `-DeclRefExpr 0x560638e66c60 <col:198> 'int' lvalue Var 0x560638e60618 'z$w_buff0' 'int'
    |-BinaryOperator 0x560638e67308 <line:825:3, col:208> 'int' '='
    | |-DeclRefExpr 0x560638e66e00 <col:3> 'int' lvalue Var 0x560638e60710 'z$w_buff1' 'int'
    | `-ConditionalOperator 0x560638e672d8 <col:15, col:208> 'int'
    |   |-ImplicitCastExpr 0x560638e672a8 <col:15> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x560638e67290 <col:15> '_Bool' <LValueToRValue>
    |   |   `-DeclRefExpr 0x560638e66e20 <col:15> '_Bool' lvalue Var 0x560638e60878 'weak$$choice2' '_Bool'
    |   |-ImplicitCastExpr 0x560638e672c0 <col:31> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x560638e66e40 <col:31> 'int' lvalue Var 0x560638e60710 'z$w_buff1' 'int'
    |   `-ParenExpr 0x560638e67270 <col:43, col:208> 'int'
    |     `-ConditionalOperator 0x560638e67240 <col:44, col:207> 'int'
    |       |-BinaryOperator 0x560638e67068 <col:44, col:121> 'int' '||'
    |       | |-BinaryOperator 0x560638e66f70 <col:44, col:83> 'int' '||'
    |       | | |-UnaryOperator 0x560638e66e98 <col:44, col:45> 'int' prefix '!' cannot overflow
    |       | | | `-ImplicitCastExpr 0x560638e66e80 <col:45> '_Bool' <LValueToRValue>
    |       | | |   `-DeclRefExpr 0x560638e66e60 <col:45> '_Bool' lvalue Var 0x560638e60690 'z$w_buff0_used' '_Bool'
    |       | | `-BinaryOperator 0x560638e66f50 <col:63, col:83> 'int' '&&'
    |       | |   |-UnaryOperator 0x560638e66ee8 <col:63, col:64> 'int' prefix '!' cannot overflow
    |       | |   | `-ImplicitCastExpr 0x560638e66ed0 <col:64> '_Bool' <LValueToRValue>
    |       | |   |   `-DeclRefExpr 0x560638e66eb0 <col:64> '_Bool' lvalue Var 0x560638e60068 'z$r_buff0_thd0' '_Bool'
    |       | |   `-UnaryOperator 0x560638e66f38 <col:82, col:83> 'int' prefix '!' cannot overflow
    |       | |     `-ImplicitCastExpr 0x560638e66f20 <col:83> '_Bool' <LValueToRValue>
    |       | |       `-DeclRefExpr 0x560638e66f00 <col:83> '_Bool' lvalue Var 0x560638e60788 'z$w_buff1_used' '_Bool'
    |       | `-BinaryOperator 0x560638e67048 <col:101, col:121> 'int' '&&'
    |       |   |-UnaryOperator 0x560638e66fe0 <col:101, col:102> 'int' prefix '!' cannot overflow
    |       |   | `-ImplicitCastExpr 0x560638e66fb0 <col:102> '_Bool' <LValueToRValue>
    |       |   |   `-DeclRefExpr 0x560638e66f90 <col:102> '_Bool' lvalue Var 0x560638e60068 'z$r_buff0_thd0' '_Bool'
    |       |   `-UnaryOperator 0x560638e67030 <col:120, col:121> 'int' prefix '!' cannot overflow
    |       |     `-ImplicitCastExpr 0x560638e67018 <col:121> '_Bool' <LValueToRValue>
    |       |       `-DeclRefExpr 0x560638e66ff8 <col:121> '_Bool' lvalue Var 0x560638e602c0 'z$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x560638e67228 <col:138> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x560638e67088 <col:138> 'int' lvalue Var 0x560638e60710 'z$w_buff1' 'int'
    |       `-ParenExpr 0x560638e67208 <col:150, col:207> 'int'
    |         `-ConditionalOperator 0x560638e671d8 <col:151, col:198> 'int'
    |           |-BinaryOperator 0x560638e67148 <col:151, col:169> 'int' '&&'
    |           | |-ImplicitCastExpr 0x560638e67100 <col:151> 'int' <IntegralCast>
    |           | | `-ImplicitCastExpr 0x560638e670e8 <col:151> '_Bool' <LValueToRValue>
    |           | |   `-DeclRefExpr 0x560638e670a8 <col:151> '_Bool' lvalue Var 0x560638e60690 'z$w_buff0_used' '_Bool'
    |           | `-ImplicitCastExpr 0x560638e67130 <col:169> 'int' <IntegralCast>
    |           |   `-ImplicitCastExpr 0x560638e67118 <col:169> '_Bool' <LValueToRValue>
    |           |     `-DeclRefExpr 0x560638e670c8 <col:169> '_Bool' lvalue Var 0x560638e60068 'z$r_buff0_thd0' '_Bool'
    |           |-ImplicitCastExpr 0x560638e671a8 <col:186> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x560638e67168 <col:186> 'int' lvalue Var 0x560638e60710 'z$w_buff1' 'int'
    |           `-ImplicitCastExpr 0x560638e671c0 <col:198> 'int' <LValueToRValue>
    |             `-DeclRefExpr 0x560638e67188 <col:198> 'int' lvalue Var 0x560638e60710 'z$w_buff1' 'int'
    |-BinaryOperator 0x560638e678b0 <line:826:3, col:227> '_Bool' '='
    | |-DeclRefExpr 0x560638e67328 <col:3> '_Bool' lvalue Var 0x560638e60690 'z$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x560638e67898 <col:20, col:227> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x560638e67868 <col:20, col:227> 'int'
    |     |-ImplicitCastExpr 0x560638e67820 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x560638e67808 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x560638e67348 <col:20> '_Bool' lvalue Var 0x560638e60878 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x560638e67850 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x560638e67838 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x560638e67368 <col:36> '_Bool' lvalue Var 0x560638e60690 'z$w_buff0_used' '_Bool'
    |     `-ParenExpr 0x560638e677e8 <col:53, col:227> 'int'
    |       `-ConditionalOperator 0x560638e677b8 <col:54, col:226> 'int'
    |         |-BinaryOperator 0x560638e67578 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x560638e67498 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x560638e673c0 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x560638e673a8 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x560638e67388 <col:55> '_Bool' lvalue Var 0x560638e60690 'z$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x560638e67478 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x560638e67410 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x560638e673f8 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x560638e673d8 <col:74> '_Bool' lvalue Var 0x560638e60068 'z$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x560638e67460 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x560638e67448 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x560638e67428 <col:93> '_Bool' lvalue Var 0x560638e60788 'z$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x560638e67558 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x560638e674f0 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x560638e674d8 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x560638e674b8 <col:112> '_Bool' lvalue Var 0x560638e60068 'z$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x560638e67540 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x560638e67528 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x560638e67508 <col:131> '_Bool' lvalue Var 0x560638e602c0 'z$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x560638e677a0 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x560638e67788 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x560638e67598 <col:148> '_Bool' lvalue Var 0x560638e60690 'z$w_buff0_used' '_Bool'
    |         `-ParenExpr 0x560638e67768 <col:165, col:226> 'int'
    |           `-ConditionalOperator 0x560638e67738 <col:166, col:212> 'int'
    |             |-BinaryOperator 0x560638e67658 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x560638e67610 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x560638e675f8 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x560638e675b8 <col:166> '_Bool' lvalue Var 0x560638e60690 'z$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x560638e67640 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x560638e67628 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x560638e675d8 <col:184> '_Bool' lvalue Var 0x560638e60068 'z$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x560638e676f0 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x560638e676a8 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x560638e67678 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x560638e67720 <col:212> 'int' <IntegralCast>
    |               `-ImplicitCastExpr 0x560638e67708 <col:212> '_Bool' <LValueToRValue>
    |                 `-DeclRefExpr 0x560638e676d0 <col:212> '_Bool' lvalue Var 0x560638e60690 'z$w_buff0_used' '_Bool'
    |-BinaryOperator 0x560638e67e78 <line:827:3, col:221> '_Bool' '='
    | |-DeclRefExpr 0x560638e678d0 <col:3> '_Bool' lvalue Var 0x560638e60788 'z$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x560638e67e60 <col:20, col:221> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x560638e67e30 <col:20, col:221> 'int'
    |     |-ImplicitCastExpr 0x560638e67de8 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x560638e67dd0 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x560638e678f0 <col:20> '_Bool' lvalue Var 0x560638e60878 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x560638e67e18 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x560638e67e00 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x560638e67910 <col:36> '_Bool' lvalue Var 0x560638e60788 'z$w_buff1_used' '_Bool'
    |     `-ParenExpr 0x560638e67db0 <col:53, col:221> 'int'
    |       `-ConditionalOperator 0x560638e67d80 <col:54, col:220> 'int'
    |         |-BinaryOperator 0x560638e67b20 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x560638e67a40 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x560638e67968 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x560638e67950 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x560638e67930 <col:55> '_Bool' lvalue Var 0x560638e60690 'z$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x560638e67a20 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x560638e679b8 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x560638e679a0 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x560638e67980 <col:74> '_Bool' lvalue Var 0x560638e60068 'z$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x560638e67a08 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x560638e679f0 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x560638e679d0 <col:93> '_Bool' lvalue Var 0x560638e60788 'z$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x560638e67b00 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x560638e67a98 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x560638e67a80 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x560638e67a60 <col:112> '_Bool' lvalue Var 0x560638e60068 'z$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x560638e67ae8 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x560638e67ad0 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x560638e67ab0 <col:131> '_Bool' lvalue Var 0x560638e602c0 'z$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x560638e67d68 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x560638e67d50 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x560638e67b40 <col:148> '_Bool' lvalue Var 0x560638e60788 'z$w_buff1_used' '_Bool'
    |         `-ParenExpr 0x560638e67d30 <col:165, col:220> 'int'
    |           `-ConditionalOperator 0x560638e67d00 <col:166, col:219> 'int'
    |             |-BinaryOperator 0x560638e67c00 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x560638e67bb8 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x560638e67ba0 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x560638e67b60 <col:166> '_Bool' lvalue Var 0x560638e60690 'z$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x560638e67be8 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x560638e67bd0 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x560638e67b80 <col:184> '_Bool' lvalue Var 0x560638e60068 'z$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x560638e67cd0 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x560638e67c50 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x560638e67c20 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x560638e67ce8 <col:212, col:219> 'int' <IntegralCast>
    |               `-CStyleCastExpr 0x560638e67ca8 <col:212, col:219> '_Bool' <IntegralToBoolean>
    |                 `-IntegerLiteral 0x560638e67c78 <col:219> 'int' 0
    |-BinaryOperator 0x560638e68440 <line:828:3, col:227> '_Bool' '='
    | |-DeclRefExpr 0x560638e67e98 <col:3> '_Bool' lvalue Var 0x560638e60068 'z$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x560638e68428 <col:20, col:227> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x560638e683f8 <col:20, col:227> 'int'
    |     |-ImplicitCastExpr 0x560638e683b0 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x560638e68398 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x560638e67eb8 <col:20> '_Bool' lvalue Var 0x560638e60878 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x560638e683e0 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x560638e683c8 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x560638e67ed8 <col:36> '_Bool' lvalue Var 0x560638e60068 'z$r_buff0_thd0' '_Bool'
    |     `-ParenExpr 0x560638e68378 <col:53, col:227> 'int'
    |       `-ConditionalOperator 0x560638e68348 <col:54, col:226> 'int'
    |         |-BinaryOperator 0x560638e68108 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x560638e68028 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x560638e67f30 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x560638e67f18 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x560638e67ef8 <col:55> '_Bool' lvalue Var 0x560638e60690 'z$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x560638e68008 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x560638e67f80 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x560638e67f68 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x560638e67f48 <col:74> '_Bool' lvalue Var 0x560638e60068 'z$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x560638e67ff0 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x560638e67fb8 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x560638e67f98 <col:93> '_Bool' lvalue Var 0x560638e60788 'z$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x560638e680e8 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x560638e68080 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x560638e68068 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x560638e68048 <col:112> '_Bool' lvalue Var 0x560638e60068 'z$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x560638e680d0 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x560638e680b8 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x560638e68098 <col:131> '_Bool' lvalue Var 0x560638e602c0 'z$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x560638e68330 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x560638e68318 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x560638e68128 <col:148> '_Bool' lvalue Var 0x560638e60068 'z$r_buff0_thd0' '_Bool'
    |         `-ParenExpr 0x560638e682f8 <col:165, col:226> 'int'
    |           `-ConditionalOperator 0x560638e682c8 <col:166, col:212> 'int'
    |             |-BinaryOperator 0x560638e681e8 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x560638e681a0 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x560638e68188 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x560638e68148 <col:166> '_Bool' lvalue Var 0x560638e60690 'z$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x560638e681d0 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x560638e681b8 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x560638e68168 <col:184> '_Bool' lvalue Var 0x560638e60068 'z$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x560638e68280 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x560638e68238 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x560638e68208 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x560638e682b0 <col:212> 'int' <IntegralCast>
    |               `-ImplicitCastExpr 0x560638e68298 <col:212> '_Bool' <LValueToRValue>
    |                 `-DeclRefExpr 0x560638e68260 <col:212> '_Bool' lvalue Var 0x560638e60068 'z$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x560638e68a08 <line:829:3, col:221> '_Bool' '='
    | |-DeclRefExpr 0x560638e68460 <col:3> '_Bool' lvalue Var 0x560638e602c0 'z$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x560638e689f0 <col:20, col:221> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x560638e689c0 <col:20, col:221> 'int'
    |     |-ImplicitCastExpr 0x560638e68978 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x560638e68960 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x560638e68480 <col:20> '_Bool' lvalue Var 0x560638e60878 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x560638e689a8 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x560638e68990 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x560638e684a0 <col:36> '_Bool' lvalue Var 0x560638e602c0 'z$r_buff1_thd0' '_Bool'
    |     `-ParenExpr 0x560638e68940 <col:53, col:221> 'int'
    |       `-ConditionalOperator 0x560638e68910 <col:54, col:220> 'int'
    |         |-BinaryOperator 0x560638e686b0 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x560638e685d0 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x560638e684f8 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x560638e684e0 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x560638e684c0 <col:55> '_Bool' lvalue Var 0x560638e60690 'z$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x560638e685b0 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x560638e68548 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x560638e68530 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x560638e68510 <col:74> '_Bool' lvalue Var 0x560638e60068 'z$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x560638e68598 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x560638e68580 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x560638e68560 <col:93> '_Bool' lvalue Var 0x560638e60788 'z$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x560638e68690 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x560638e68628 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x560638e68610 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x560638e685f0 <col:112> '_Bool' lvalue Var 0x560638e60068 'z$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x560638e68678 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x560638e68660 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x560638e68640 <col:131> '_Bool' lvalue Var 0x560638e602c0 'z$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x560638e688f8 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x560638e688e0 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x560638e686d0 <col:148> '_Bool' lvalue Var 0x560638e602c0 'z$r_buff1_thd0' '_Bool'
    |         `-ParenExpr 0x560638e688c0 <col:165, col:220> 'int'
    |           `-ConditionalOperator 0x560638e68890 <col:166, col:219> 'int'
    |             |-BinaryOperator 0x560638e68790 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x560638e68748 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x560638e68730 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x560638e686f0 <col:166> '_Bool' lvalue Var 0x560638e60690 'z$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x560638e68778 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x560638e68760 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x560638e68710 <col:184> '_Bool' lvalue Var 0x560638e60068 'z$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x560638e68860 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x560638e687e0 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x560638e687b0 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x560638e68878 <col:212, col:219> 'int' <IntegralCast>
    |               `-CStyleCastExpr 0x560638e68838 <col:212, col:219> '_Bool' <IntegralToBoolean>
    |                 `-IntegerLiteral 0x560638e68808 <col:219> 'int' 0
    |-BinaryOperator 0x560638e68cd8 <line:830:3, col:95> '_Bool' '='
    | |-DeclRefExpr 0x560638e68a28 <col:3> '_Bool' lvalue Var 0x560638e5fb58 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x560638e68cc0 <col:21, col:95> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x560638e68ca8 <col:21, col:95> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x560638e68c88 <col:22, col:95> 'int'
    |       `-BinaryOperator 0x560638e68c68 <col:23, col:94> 'int' '&&'
    |         |-BinaryOperator 0x560638e68bd0 <col:23, col:66> 'int' '&&'
    |         | |-BinaryOperator 0x560638e68b38 <col:23, col:38> 'int' '&&'
    |         | | |-BinaryOperator 0x560638e68aa0 <col:23, col:28> 'int' '=='
    |         | | | |-ImplicitCastExpr 0x560638e68a88 <col:23> 'int' <LValueToRValue>
    |         | | | | `-DeclRefExpr 0x560638e68a48 <col:23> 'int' lvalue Var 0x560638e5fc58 'x' 'int'
    |         | | | `-IntegerLiteral 0x560638e68a68 <col:28> 'int' 2
    |         | | `-BinaryOperator 0x560638e68b18 <col:33, col:38> 'int' '=='
    |         | |   |-ImplicitCastExpr 0x560638e68b00 <col:33> 'int' <LValueToRValue>
    |         | |   | `-DeclRefExpr 0x560638e68ac0 <col:33> 'int' lvalue Var 0x560638e5fe98 'z' 'int'
    |         | |   `-IntegerLiteral 0x560638e68ae0 <col:38> 'int' 2
    |         | `-BinaryOperator 0x560638e68bb0 <col:43, col:66> 'int' '=='
    |         |   |-ImplicitCastExpr 0x560638e68b98 <col:43> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x560638e68b58 <col:43> 'int' lvalue Var 0x560638e5f808 '__unbuffered_p1_EAX' 'int'
    |         |   `-IntegerLiteral 0x560638e68b78 <col:66> 'int' 0
    |         `-BinaryOperator 0x560638e68c48 <col:71, col:94> 'int' '=='
    |           |-ImplicitCastExpr 0x560638e68c30 <col:71> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x560638e68bf0 <col:71> 'int' lvalue Var 0x560638e5f928 '__unbuffered_p3_EAX' 'int'
    |           `-IntegerLiteral 0x560638e68c10 <col:94> 'int' 0
    |-BinaryOperator 0x560638e68e08 <line:831:3, col:37> 'int' '='
    | |-DeclRefExpr 0x560638e68cf8 <col:3> 'int' lvalue Var 0x560638e5fe98 'z' 'int'
    | `-ConditionalOperator 0x560638e68dd8 <col:7, col:37> 'int'
    |   |-ImplicitCastExpr 0x560638e68d90 <col:7> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x560638e68d78 <col:7> '_Bool' <LValueToRValue>
    |   |   `-DeclRefExpr 0x560638e68d18 <col:7> '_Bool' lvalue Var 0x560638e5ff70 'z$flush_delayed' '_Bool'
    |   |-ImplicitCastExpr 0x560638e68da8 <col:25> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x560638e68d38 <col:25> 'int' lvalue Var 0x560638e5fff0 'z$mem_tmp' 'int'
    |   `-ImplicitCastExpr 0x560638e68dc0 <col:37> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x560638e68d58 <col:37> 'int' lvalue Var 0x560638e5fe98 'z' 'int'
    |-BinaryOperator 0x560638e68ea0 <line:832:3, col:28> '_Bool' '='
    | |-DeclRefExpr 0x560638e68e28 <col:3> '_Bool' lvalue Var 0x560638e5ff70 'z$flush_delayed' '_Bool'
    | `-CStyleCastExpr 0x560638e68e78 <col:21, col:28> '_Bool' <IntegralToBoolean>
    |   `-IntegerLiteral 0x560638e68e48 <col:28> 'int' 0
    |-CallExpr 0x560638e68ef8 <line:833:3, col:25> 'void'
    | `-ImplicitCastExpr 0x560638e68ee0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x560638e68ec0 <col:3> 'void ()' Function 0x560638e06410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x560638e68f70 <line:834:3, col:36> 'void'
    | |-ImplicitCastExpr 0x560638e68f58 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x560638e68f18 <col:3> 'void (int)' Function 0x560638e060d8 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x560638e68fb0 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x560638e68f98 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x560638e68f38 <col:21> '_Bool' lvalue Var 0x560638e5fb58 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x560638e69000 <line:835:3, col:10>
      `-IntegerLiteral 0x560638e68fc8 <col:10> 'int' 0
