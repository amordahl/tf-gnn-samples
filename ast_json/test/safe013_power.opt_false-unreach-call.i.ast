TranslationUnitDecl 0x56437034cf88 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x56437034d848 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x56437034d520 '__int128'
|-TypedefDecl 0x56437034d8b8 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x56437034d540 'unsigned __int128'
|-TypedefDecl 0x56437034dbc0 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x56437034d990 'struct __NSConstantString_tag'
|   `-Record 0x56437034d910 '__NSConstantString_tag'
|-TypedefDecl 0x56437034dc68 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x56437034dc20 'char *'
|   `-BuiltinType 0x56437034d020 'char'
|-TypedefDecl 0x56437038cb60 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x56437034df00 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x56437034dd40 'struct __va_list_tag'
|     `-Record 0x56437034dcc0 '__va_list_tag'
|-FunctionDecl 0x56437038cc80 <pthread-wmm/safe013_power.opt_false-unreach-call.i:1:1, col:41> col:14 used __VERIFIER_nondet_bool '_Bool (void)' extern
|-FunctionDecl 0x56437038ce50 <line:2:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x56437038cd80 <col:31> col:34 'int'
|-FunctionDecl 0x56437038cfc8 <line:3:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x56437038d0f0 <line:4:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x56437038d238 <line:5:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x56437038d1a8 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x56437038d468 <col:40, col:99>
|   |-IfStmt 0x56437038d438 <col:42, col:88>
|   | |-UnaryOperator 0x56437038d318 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x56437038d300 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x56437038d2e0 <col:47> 'int' lvalue ParmVar 0x56437038d1a8 'expression' 'int'
|   | `-CompoundStmt 0x56437038d420 <col:59, col:88>
|   |   `-LabelStmt 0x56437038d408 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x56437038d398 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x56437038d380 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x56437038d330 <col:68> 'void () __attribute__((noreturn))' Function 0x56437038d0f0 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x56437038d450 <col:89>
|   `-ReturnStmt 0x56437038d458 <col:91>
|-FunctionDecl 0x56437038d4b0 <line:6:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x56437038d570 <line:7:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x56437038d8f0 <line:9:1, line:11:76> line:9:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x56437038d628 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x56437038d6a8 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x56437038d728 <line:10:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x56437038d7a8 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x56437038d9b0 <line:11:22>
|-FunctionDecl 0x5643703b2f10 <line:12:1, line:14:76> line:12:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x56437038da20 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x56437038daa0 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x5643703b2d40 <line:13:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x5643703b2dc0 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x5643703b2fd0 <line:14:22>
|-FunctionDecl 0x5643703b3280 <line:15:1, line:16:76> line:15:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5643703b3040 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x5643703b30c0 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x5643703b3140 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x5643703b3338 <line:16:22>
|-TypedefDecl 0x5643703b33a8 <line:18:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x56437034d0e0 'unsigned char'
|-TypedefDecl 0x5643703b3418 <line:19:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x56437034d100 'unsigned short'
|-TypedefDecl 0x5643703b3488 <line:20:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x56437034d120 'unsigned int'
|-TypedefDecl 0x5643703b34f8 <line:21:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x56437034d140 'unsigned long'
|-TypedefDecl 0x5643703b3568 <line:22:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x56437034d040 'signed char'
|-TypedefDecl 0x5643703b35d8 <line:23:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x56437034d0e0 'unsigned char'
|-TypedefDecl 0x5643703b3648 <line:24:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x56437034d060 'short'
|-TypedefDecl 0x5643703b36b8 <line:25:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x56437034d100 'unsigned short'
|-TypedefDecl 0x5643703b3728 <line:26:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x56437034d080 'int'
|-TypedefDecl 0x5643703b3798 <line:27:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x56437034d120 'unsigned int'
|-TypedefDecl 0x5643703b3808 <line:28:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x56437034d0a0 'long'
|-TypedefDecl 0x5643703b3878 <line:29:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x56437034d140 'unsigned long'
|-TypedefDecl 0x5643703b38e8 <line:30:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x56437034d0a0 'long'
|-TypedefDecl 0x5643703b3958 <line:31:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x56437034d140 'unsigned long'
|-TypedefDecl 0x5643703b39c8 <line:32:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x56437034d140 'unsigned long'
|-TypedefDecl 0x5643703b3a38 <line:33:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x56437034d120 'unsigned int'
|-TypedefDecl 0x5643703b3aa8 <line:34:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x56437034d120 'unsigned int'
|-TypedefDecl 0x5643703b3b18 <line:35:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x56437034d140 'unsigned long'
|-TypedefDecl 0x5643703b3b88 <line:36:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x56437034d140 'unsigned long'
|-TypedefDecl 0x5643703b3bf8 <line:37:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x56437034d120 'unsigned int'
|-TypedefDecl 0x5643703b3c68 <line:38:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x56437034d140 'unsigned long'
|-TypedefDecl 0x5643703b3cd8 <line:39:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x56437034d0a0 'long'
|-TypedefDecl 0x5643703b3d68 <line:40:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x56437034d0a0 'long'
|-TypedefDecl 0x5643703b3dd8 <line:41:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x56437034d080 'int'
|-RecordDecl 0x5643703b3e30 <line:42:9, col:32> col:9 struct definition
| `-FieldDecl 0x5643703b3f78 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x5643703b4030 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x5643703b3fd0 'struct __fsid_t' sugar
|   `-RecordType 0x5643703b3eb0 '__fsid_t'
|     `-Record 0x5643703b3e30 ''
|-TypedefDecl 0x5643703b40b8 <line:43:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x56437034d0a0 'long'
|-TypedefDecl 0x5643703b4128 <line:44:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x56437034d140 'unsigned long'
|-TypedefDecl 0x5643703b4198 <line:45:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x56437034d140 'unsigned long'
|-TypedefDecl 0x5643703b4208 <line:46:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x56437034d120 'unsigned int'
|-TypedefDecl 0x5643703b4278 <line:47:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x56437034d0a0 'long'
|-TypedefDecl 0x5643703b42e8 <line:48:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x56437034d120 'unsigned int'
|-TypedefDecl 0x5643703b4358 <line:49:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x56437034d0a0 'long'
|-TypedefDecl 0x5643703b43c8 <line:50:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x56437034d080 'int'
|-TypedefDecl 0x5643703b4438 <line:51:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x56437034d080 'int'
|-TypedefDecl 0x5643703b44a8 <line:52:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x56437034d080 'int'
|-TypedefDecl 0x5643703b4518 <line:53:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x56437034d7a0 'void *'
|   `-BuiltinType 0x56437034cfe0 'void'
|-TypedefDecl 0x5643703b4588 <line:54:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x56437034d0a0 'long'
|-TypedefDecl 0x5643703b45f8 <line:55:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x56437034d0a0 'long'
|-TypedefDecl 0x5643703b4668 <line:56:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x56437034d0a0 'long'
|-TypedefDecl 0x5643703b46d8 <line:57:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x56437034d140 'unsigned long'
|-TypedefDecl 0x5643703b4748 <line:58:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x56437034d140 'unsigned long'
|-TypedefDecl 0x5643703b47b8 <line:59:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x56437034d140 'unsigned long'
|-TypedefDecl 0x5643703b4828 <line:60:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x56437034d140 'unsigned long'
|-TypedefDecl 0x5643703b4898 <line:61:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x56437034d0a0 'long'
|-TypedefDecl 0x5643703b4908 <line:62:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x56437034d0a0 'long'
|-TypedefDecl 0x5643703b4978 <line:63:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x56437034d0a0 'long'
|-TypedefDecl 0x5643703b49e8 <line:64:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x56437034d140 'unsigned long'
|-TypedefDecl 0x5643703b4a78 <line:65:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x5643703b4a40 '__off64_t' sugar
|   |-Typedef 0x5643703b3d68 '__off64_t'
|   `-BuiltinType 0x56437034d0a0 'long'
|-TypedefDecl 0x5643703b4b70 <line:66:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x5643703b4b30 '__quad_t *'
|   `-TypedefType 0x5643703b4ad0 '__quad_t' sugar
|     |-Typedef 0x5643703b38e8 '__quad_t'
|     `-BuiltinType 0x56437034d0a0 'long'
|-TypedefDecl 0x5643703b4be0 <line:67:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x56437034dc20 'char *'
|   `-BuiltinType 0x56437034d020 'char'
|-TypedefDecl 0x5643703b4c50 <line:68:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x56437034d0a0 'long'
|-TypedefDecl 0x5643703b4cc0 <line:69:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x56437034d120 'unsigned int'
|-FunctionDecl 0x5643703b4e38 <line:70:1, line:74:1> line:71:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x5643703b4d60 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x5643703b5148 <line:72:1, line:74:1>
|   `-ReturnStmt 0x5643703b5138 <line:73:3, col:34>
|     `-CallExpr 0x5643703b50f8 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x5643703b50e0 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x5643703b5070 <col:10> '<builtin fn type>' Function 0x5643703b4ee0 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x5643703b5120 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x5643703b5090 <col:29> 'unsigned int' lvalue ParmVar 0x5643703b4d60 '__bsx' 'unsigned int'
|-FunctionDecl 0x5643703b4ee0 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x5643703b4f80 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x5643703b4ff0 <col:10> Implicit
| `-ConstAttr 0x5643703b5048 <col:10> Implicit
|-FunctionDecl 0x5643703b52a0 <line:75:1, line:79:1> line:76:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x5643703b5198 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x5643703b55b8 <line:77:1, line:79:1>
|   `-ReturnStmt 0x5643703b55a8 <line:78:3, col:34>
|     `-CallExpr 0x5643703b5568 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x5643703b5550 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x5643703b54d8 <col:10> '<builtin fn type>' Function 0x5643703b5348 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x5643703b5590 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x5643703b54f8 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x5643703b5198 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x5643703b5348 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x5643703b53e8 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x5643703b5458 <col:10> Implicit
| `-ConstAttr 0x5643703b54b0 <col:10> Implicit
|-TypedefDecl 0x5643703b55e8 <line:80:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x56437034d140 'unsigned long'
|-TypedefDecl 0x5643703b5678 <line:82:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x5643703b5640 '__time_t' sugar
|   |-Typedef 0x5643703b4278 '__time_t'
|   `-BuiltinType 0x56437034d0a0 'long'
|-RecordDecl 0x5643703b56d0 <line:85:1, line:89:3> line:85:8 struct timespec definition
| |-FieldDecl 0x5643703b5788 <line:87:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x5643703b5818 <line:88:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x5643703b58a8 <line:90:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x5643703b5870 '__pid_t' sugar
|   |-Typedef 0x5643703b3dd8 '__pid_t'
|   `-BuiltinType 0x56437034d080 'int'
|-RecordDecl 0x5643703b5900 <line:91:1, line:94:3> line:91:8 struct sched_param definition
| `-FieldDecl 0x5643703b59c0 <line:93:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x5643703b5a10 <line:97:1, line:100:3> line:97:8 struct __sched_param definition
| `-FieldDecl 0x5643703b5ad0 <line:99:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x5643703b5b38 <line:101:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x56437034d140 'unsigned long'
|-RecordDecl 0x5643703b5b90 <line:102:9, line:105:1> line:102:9 struct definition
| `-FieldDecl 0x5643703b7e70 <line:104:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x5643703b7f20 <line:102:1, line:105:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x5643703b7ec0 'struct cpu_set_t' sugar
|   `-RecordType 0x5643703b5c10 'cpu_set_t'
|     `-Record 0x5643703b5b90 ''
|-FunctionDecl 0x5643703b81f8 <line:107:1, line:108:42> line:107:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x5643703b7fc8 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x5643703b80d0 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x5643703b82a8 <line:108:19>
|-FunctionDecl 0x5643703b8480 <line:109:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x5643703b8310 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x5643703b8528 <col:69>
|-FunctionDecl 0x5643703b86a0 <line:110:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x5643703b8590 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x5643703b8748 <col:64>
|-FunctionDecl 0x5643703b8a08 <line:113:1, line:114:45> line:113:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x5643703b87b0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5643703b88e8 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x5643703b8ab8 <line:114:22>
|-FunctionDecl 0x5643703b8e60 <line:115:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x5643703b8b20 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5643703b8c18 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x5643703b8f10 <col:88>
|-FunctionDecl 0x5643703b91c8 <line:116:1, line:117:85> line:116:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x5643703b8f78 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5643703b8ff8 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x5643703b9088 <line:117:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x5643703b9280 <col:62>
|-FunctionDecl 0x5643703b93f8 <line:118:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x5643703b92e8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x5643703b94a0 <col:63>
|-FunctionDecl 0x5643703b95c8 <line:119:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x5643703b9668 <col:47>
|-FunctionDecl 0x5643703b9770 <line:120:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x5643703b96d8 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x5643703b9818 <col:69>
|-FunctionDecl 0x5643703b9920 <line:121:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x5643703b9888 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x5643703b99c8 <col:69>
|-FunctionDecl 0x5643703b9c88 <line:122:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x5643703b9a30 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5643703b9b68 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x5643703b9d38 <col:88>
|-TypedefDecl 0x5643703b9dc8 <line:126:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x5643703b9d90 '__clock_t' sugar
|   |-Typedef 0x5643703b40b8 '__clock_t'
|   `-BuiltinType 0x56437034d0a0 'long'
|-TypedefDecl 0x5643703ba7e0 <line:129:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x5643703b9e20 '__clockid_t' sugar
|   |-Typedef 0x5643703b44a8 '__clockid_t'
|   `-BuiltinType 0x56437034d080 'int'
|-TypedefDecl 0x5643703ba878 <line:130:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x5643703ba840 '__timer_t' sugar
|   |-Typedef 0x5643703b4518 '__timer_t'
|   `-PointerType 0x56437034d7a0 'void *'
|     `-BuiltinType 0x56437034cfe0 'void'
|-RecordDecl 0x5643703ba8d0 <line:132:1, line:145:1> line:132:8 struct tm definition
| |-FieldDecl 0x5643703ba990 <line:134:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x5643703ba9f8 <line:135:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x5643703baa60 <line:136:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x5643703baac8 <line:137:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x5643703bab30 <line:138:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x5643703bab98 <line:139:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x5643703bac00 <line:140:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x5643703bac68 <line:141:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x5643703bacd0 <line:142:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x5643703bad38 <line:143:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x5643703bada0 <line:144:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x5643703badf0 <line:148:1, line:152:3> line:148:8 struct itimerspec definition
| |-FieldDecl 0x5643703baeb8 <line:150:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x5643703baf28 <line:151:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x5643703bafd0 <line:153:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x5643703bb1a0 <line:155:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x5643703bb240 <col:45>
|-FunctionDecl 0x5643703bb420 <line:156:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x5643703bb310 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x5643703bb4c8 <col:54>
|-FunctionDecl 0x5643703bb6c8 <line:157:1, line:158:73> line:157:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x5643703bb530 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x5643703bb5a8 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x5643703bb778 <line:158:22>
| `-ConstAttr 0x5643703bc410 <col:63>
|-FunctionDecl 0x5643703bc610 <line:159:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x5643703bc508 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x5643703bc6b8 <col:56>
|-FunctionDecl 0x5643703bca60 <line:160:1, line:162:77> line:160:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x5643703bc728 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x5643703bc7a0 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x5643703bc820 <line:161:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x5643703bc918 <line:162:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x5643703bcb20 <col:54>
|-RecordDecl 0x5643703bcb78 <line:164:9, line:171:1> line:164:16 struct __locale_struct definition
| |-RecordDecl 0x5643703bcc28 parent 0x56437034cf88 <line:166:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x5643703bce88 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x5643703bcf28 <line:167:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x5643703bcf90 <line:168:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x5643703bcff8 <line:169:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x5643703bd0e8 <line:170:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x5643703bd208 <line:164:1, line:171:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x5643703bd1b0 'struct __locale_struct *'
|   `-ElaboratedType 0x5643703bd140 'struct __locale_struct' sugar
|     `-RecordType 0x5643703bcc00 'struct __locale_struct'
|       `-Record 0x5643703bcb78 '__locale_struct'
|-TypedefDecl 0x5643703bd2b8 <line:172:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x5643703bd280 '__locale_t' sugar
|   |-Typedef 0x5643703bd208 '__locale_t'
|   `-PointerType 0x5643703bd1b0 'struct __locale_struct *'
|     `-ElaboratedType 0x5643703bd140 'struct __locale_struct' sugar
|       `-RecordType 0x5643703bcc00 'struct __locale_struct'
|         `-Record 0x5643703bcb78 '__locale_struct'
|-FunctionDecl 0x5643703bd6b0 <line:173:1, line:176:63> line:173:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x5643703bd328 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x5643703bd3a0 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x5643703bd438 <line:174:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x5643703bd4c8 <line:175:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x5643703bd540 <line:176:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x5643703bd778 <col:40>
|-FunctionDecl 0x5643703bd968 <line:178:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x5643703bd840 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x5643703bda10 <col:66>
|-FunctionDecl 0x5643703bdb20 <line:179:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x5643703bda78 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x5643703bdbc8 <col:69>
|-FunctionDecl 0x5643703bddf8 <line:181:1, line:182:75> line:181:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x5643703bdc30 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x5643703bdcc0 <line:182:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x5643703bdea8 <col:52>
|-FunctionDecl 0x5643703be050 <line:183:1, line:184:78> line:183:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x5643703bdf10 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x5643703bdfa0 <line:184:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x5643703be100 <col:55>
|-FunctionDecl 0x5643703be298 <line:186:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x5643703be180 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x5643703be340 <col:62>
|-FunctionDecl 0x5643703be578 <line:187:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x5643703be3a8 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x5643703be620 <col:60>
|-FunctionDecl 0x5643703be848 <line:189:1, line:190:67> line:189:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x5643703be6a0 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x5643703be720 <line:190:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x5643703be8f8 <col:44>
|-FunctionDecl 0x5643703beb08 <line:191:1, line:192:72> line:191:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x5643703be960 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x5643703be9e0 <line:192:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x5643703bebb8 <col:49>
|-VarDecl 0x5643703becb8 <line:193:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x5643703bed38 <line:194:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x5643703bedb8 <line:195:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x5643703bee80 <line:196:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x5643703befb0 <line:197:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x5643703bf050 <col:42>
|-VarDecl 0x5643703bf0c0 <line:198:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x5643703bf140 <line:199:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x5643703bf2c8 <line:200:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x5643703bf1b8 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x5643703bf370 <col:57>
|-FunctionDecl 0x5643703c04f0 <line:201:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x5643703bf3f0 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x5643703c0598 <col:56>
|-FunctionDecl 0x5643703c06a8 <line:202:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x5643703c0618 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x5643703c0750 <col:59>
|-FunctionDecl 0x5643703c0858 <line:203:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x5643703c07c0 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x5643703c0900 <col:48>
| `-ConstAttr 0x5643703c0958 <col:89>
|-FunctionDecl 0x5643703c0bb8 <line:204:1, line:205:37> line:204:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x5643703c0a08 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x5643703c0a98 <line:205:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x5643703c0e18 <line:206:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x5643703c0ca8 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5643703c0d38 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x5643703c0ec8 <col:88>
|-FunctionDecl 0x5643703c1060 <line:207:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x5643703c0f30 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5643703c0fc0 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x5643703c1110 <col:88>
|-FunctionDecl 0x5643703c1328 <line:208:1, line:209:45> line:208:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x5643703c1178 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5643703c1208 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x5643703c13d8 <line:209:22>
|-FunctionDecl 0x5643703c1778 <line:210:1, line:212:30> line:210:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x5643703c1440 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5643703c1500 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x5643703c1590 <line:211:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x5643703c1620 <line:212:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x5643703c1a78 <line:213:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x5643703c1878 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x5643703c1950 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x5643703c1b28 <col:85>
|-FunctionDecl 0x5643703c1f18 <line:214:1, line:216:75> line:214:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x5643703c1b90 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5643703c1cc8 <line:215:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x5643703c1dd0 <line:216:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x5643703c1fd0 <col:52>
|-FunctionDecl 0x5643703c2148 <line:217:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x5643703c2038 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x5643703c21f0 <col:61>
|-FunctionDecl 0x5643703c2668 <line:218:1, line:220:85> line:218:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x5643703c2258 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x5643703c22d8 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x5643703c2408 <line:219:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x5643703c2510 <line:220:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x5643703c2728 <col:62>
|-FunctionDecl 0x5643703c2948 <line:221:1, line:222:45> line:221:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x5643703c2790 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x5643703c2820 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x5643703c29f8 <line:222:22>
|-FunctionDecl 0x5643703c2af8 <line:223:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x5643703c2a60 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x5643703c2ba0 <col:65>
|-TypedefDecl 0x5643703c2c10 <line:225:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x56437034d140 'unsigned long'
|-RecordDecl 0x5643703c2c68 <line:226:1, line:230:1> line:226:7 union pthread_attr_t definition
| |-FieldDecl 0x5643703c2db0 <line:228:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x5643703c2e18 <line:229:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5643703c2ec8 <line:231:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x5643703c2e70 'union pthread_attr_t' sugar
|   `-RecordType 0x5643703c2cf0 'union pthread_attr_t'
|     `-Record 0x5643703c2c68 'pthread_attr_t'
|-RecordDecl 0x5643703c2f20 <line:232:9, line:236:1> line:232:16 struct __pthread_internal_list definition
| |-FieldDecl 0x5643703c3098 <line:234:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x5643703c3110 <line:235:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x5643703c31c0 <line:232:1, line:236:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x5643703c3160 'struct __pthread_internal_list' sugar
|   `-RecordType 0x5643703c2fa0 'struct __pthread_internal_list'
|     `-Record 0x5643703c2f20 '__pthread_internal_list'
|-RecordDecl 0x5643703c3230 <line:237:9, line:251:1> line:237:9 union definition
| |-RecordDecl 0x5643703c32d8 parent 0x56437034cf88 <line:239:3, line:248:3> line:239:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x5643703c33b0 <line:241:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x5643703c3418 <line:242:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x5643703c3480 <line:243:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x5643703c7530 <line:244:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x5643703c7598 <line:245:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x5643703c7600 <line:246:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x5643703c7688 <line:247:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x5643703c7740 <line:239:3, line:248:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x5643703c7830 <line:249:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x5643703c7898 <line:250:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5643703c7a20 <line:237:1, line:251:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x5643703c79c0 'union pthread_mutex_t' sugar
|   `-RecordType 0x5643703c32b0 'pthread_mutex_t'
|     `-Record 0x5643703c3230 ''
|-RecordDecl 0x5643703c7a90 <line:252:9, line:256:1> line:252:9 union definition
| |-FieldDecl 0x5643703c7bd0 <line:254:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x5643703c7c38 <line:255:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x5643703c7cf0 <line:252:1, line:256:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x5643703c7c90 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x5643703c7b10 'pthread_mutexattr_t'
|     `-Record 0x5643703c7a90 ''
|-RecordDecl 0x5643703c7d60 <line:257:9, line:272:1> line:257:9 union definition
| |-RecordDecl 0x5643703c7e08 <line:259:3, line:269:3> line:259:3 struct definition
| | |-FieldDecl 0x5643703c7ed0 <line:261:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x5643703c7f38 <line:262:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x5643703c7fa0 <line:263:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x5643703c8008 <line:264:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x5643703c8070 <line:265:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x5643703c80d8 <line:266:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x5643703c8140 <line:267:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x5643703c81a8 <line:268:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x5643703c8260 <line:259:3, line:269:5> col:5 __data 'struct (anonymous struct at pthread-wmm/safe013_power.opt_false-unreach-call.i:259:3)':'struct pthread_cond_t::(anonymous at pthread-wmm/safe013_power.opt_false-unreach-call.i:259:3)'
| |-FieldDecl 0x5643703c8350 <line:270:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x5643703c83b8 <line:271:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x5643703c8540 <line:257:1, line:272:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x5643703c8490 'union pthread_cond_t' sugar
|   `-RecordType 0x5643703c7de0 'pthread_cond_t'
|     `-Record 0x5643703c7d60 ''
|-RecordDecl 0x5643703c85b0 <line:273:9, line:277:1> line:273:9 union definition
| |-FieldDecl 0x5643703c86b0 <line:275:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x5643703c8718 <line:276:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x5643703c87d0 <line:273:1, line:277:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x5643703c8770 'union pthread_condattr_t' sugar
|   `-RecordType 0x5643703c8630 'pthread_condattr_t'
|     `-Record 0x5643703c85b0 ''
|-TypedefDecl 0x5643703c8858 <line:278:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x56437034d120 'unsigned int'
|-TypedefDecl 0x5643703c88c8 <line:279:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x56437034d080 'int'
|-RecordDecl 0x5643703c8920 <line:280:9, line:298:1> line:280:9 union definition
| |-RecordDecl 0x5643703c89c8 <line:282:3, line:295:3> line:282:3 struct definition
| | |-FieldDecl 0x5643703c8a90 <line:284:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x5643703c8af8 <line:285:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x5643703c8b60 <line:286:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x5643703c8bc8 <line:287:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x5643703c8c30 <line:288:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x5643703c8c98 <line:289:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x5643703c8d00 <line:290:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x5643703c8d68 <line:291:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x5643703c8dd0 <line:292:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x5643703c8e38 <line:293:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x5643703c8ea0 <line:294:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x5643703c8f50 <line:282:3, line:295:5> col:5 __data 'struct (anonymous struct at pthread-wmm/safe013_power.opt_false-unreach-call.i:282:3)':'struct pthread_rwlock_t::(anonymous at pthread-wmm/safe013_power.opt_false-unreach-call.i:282:3)'
| |-FieldDecl 0x5643703c8ff8 <line:296:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x5643703c9060 <line:297:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5643703c91b0 <line:280:1, line:298:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x5643703c9150 'union pthread_rwlock_t' sugar
|   `-RecordType 0x5643703c89a0 'pthread_rwlock_t'
|     `-Record 0x5643703c8920 ''
|-RecordDecl 0x5643703c9220 <line:299:9, line:303:1> line:299:9 union definition
| |-FieldDecl 0x5643703c9360 <line:301:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x5643703c93c8 <line:302:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5643703c9480 <line:299:1, line:303:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x5643703c9420 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x5643703c92a0 'pthread_rwlockattr_t'
|     `-Record 0x5643703c9220 ''
|-TypedefDecl 0x5643703cb560 <line:304:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x56437034d084 'volatile int' volatile
|   `-BuiltinType 0x56437034d080 'int'
|-RecordDecl 0x5643703cb5b8 <line:305:9, line:309:1> line:305:9 union definition
| |-FieldDecl 0x5643703cb700 <line:307:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x5643703cb768 <line:308:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5643703cb820 <line:305:1, line:309:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x5643703cb7c0 'union pthread_barrier_t' sugar
|   `-RecordType 0x5643703cb640 'pthread_barrier_t'
|     `-Record 0x5643703cb5b8 ''
|-RecordDecl 0x5643703cb890 <line:310:9, line:314:1> line:310:9 union definition
| |-FieldDecl 0x5643703cb990 <line:312:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x5643703cb9f8 <line:313:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x5643703cbab0 <line:310:1, line:314:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x5643703cba50 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x5643703cb910 'pthread_barrierattr_t'
|     `-Record 0x5643703cb890 ''
|-TypedefDecl 0x5643703cbbc8 <line:315:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x5643703cbb60 'long [8]' 8 
|   `-BuiltinType 0x56437034d0a0 'long'
|-EnumDecl 0x5643703cbc20 <line:316:1, line:320:1> line:316:1
| |-EnumConstantDecl 0x5643703cbce8 <line:318:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x5643703cbd38 <line:319:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x5643703cbd88 <line:321:1, line:332:1> line:321:1
| |-EnumConstantDecl 0x5643703cbe58 <line:323:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x5643703cbea8 <line:324:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x5643703cbef8 <line:325:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x5643703cbf48 <line:326:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x5643703cbfd0 <line:328:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x5643703cbfb8 <col:26> 'int'
| |   `-DeclRefExpr 0x5643703cbf98 <col:26> 'int' EnumConstant 0x5643703cbe58 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x5643703cc058 <line:329:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x5643703cc040 <col:29> 'int'
| |   `-DeclRefExpr 0x5643703cc020 <col:29> 'int' EnumConstant 0x5643703cbea8 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x5643703cc0e0 <line:330:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x5643703cc0c8 <col:30> 'int'
| |   `-DeclRefExpr 0x5643703cc0a8 <col:30> 'int' EnumConstant 0x5643703cbef8 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x5643703cc168 <line:331:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x5643703cc150 <col:27> 'int'
|     `-DeclRefExpr 0x5643703cc130 <col:27> 'int' EnumConstant 0x5643703cbfd0 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x5643703cc1b8 <line:333:1, line:339:1> line:333:1
| |-EnumConstantDecl 0x5643703cc288 <line:335:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x5643703cc310 <line:336:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x5643703cc2f8 <col:30> 'int'
| |   `-DeclRefExpr 0x5643703cc2d8 <col:30> 'int' EnumConstant 0x5643703cc288 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x5643703cc360 <line:337:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x5643703cc3e8 <line:338:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x5643703cc3d0 <col:29> 'int'
|     `-DeclRefExpr 0x5643703cc3b0 <col:29> 'int' EnumConstant 0x5643703cc360 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x5643703cc438 <line:340:1, line:345:1> line:340:1
| |-EnumConstantDecl 0x5643703cc508 <line:342:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x5643703cc570 <line:343:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x5643703cc5c0 <line:344:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x5643703cc610 <line:346:1, line:352:1> line:346:1
| |-EnumConstantDecl 0x5643703cc6d8 <line:348:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x5643703cc728 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x5643703cc778 <line:350:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x5643703cc800 <line:351:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x5643703cc7e8 <col:31> 'int'
|     `-DeclRefExpr 0x5643703cc7c8 <col:31> 'int' EnumConstant 0x5643703cc6d8 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x5643703cc850 <line:353:1, line:357:1> line:353:1
| |-EnumConstantDecl 0x5643703cc918 <line:355:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x5643703cc968 <line:356:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x5643703cc9b8 <line:358:1, line:362:1> line:358:1
| |-EnumConstantDecl 0x5643703cca88 <line:360:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x5643703ccad8 <line:361:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x5643703ccb28 <line:363:1, line:367:1> line:363:1
| |-EnumConstantDecl 0x5643703ccbf8 <line:365:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x5643703ccc48 <line:366:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x5643703ccc98 <line:368:1, line:374:1> line:368:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x5643703cced8 <line:370:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x5643703ccf40 <line:371:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x5643703ccfa8 <line:372:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x5643703cd0c8 <line:373:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x5643703cd118 <line:375:1, line:379:1> line:375:1
| |-EnumConstantDecl 0x5643703cd1e8 <line:377:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x5643703cd238 <line:378:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x5643703cd288 <line:380:1, line:384:1> line:380:1
| |-EnumConstantDecl 0x5643703cd358 <line:382:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x5643703cd3a8 <line:383:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x5643703cd9d8 <line:386:1, line:389:96> line:386:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x5643703cd4a0 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x5643703cd5c0 <line:387:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5643703cd7c0 <line:388:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x5643703cd840 <line:389:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x5643703cda98 <col:47>
| |-NonNullAttr 0x5643703cdaf0 <col:77, col:94> 1 3
| `-CallbackAttr 0x5643703cdb28 <line:386:12> Implicit 2 3
|-FunctionDecl 0x5643703cdc50 <line:390:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x5643703cdb80 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x5643703cdea8 <line:391:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x5643703cdd08 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x5643703cdd88 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x5643703ce078 <line:392:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x5643703cdf68 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x5643703ce120 <col:60>
|-FunctionDecl 0x5643703ce270 <line:393:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x5643703ce310 <col:54>
| `-ConstAttr 0x5643703ce368 <col:95>
|-FunctionDecl 0x5643703ceda0 <line:394:1, line:395:70> line:394:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x5643703ce3a0 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5643703ce418 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x5643703cee50 <line:395:19>
| `-ConstAttr 0x5643703ceea8 <col:60>
|-FunctionDecl 0x5643703cf078 <line:396:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x5643703cef40 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x5643703cf120 <col:71>
| `-NonNullAttr 0x5643703cf178 <col:112, col:126> 1
|-FunctionDecl 0x5643703cf280 <line:397:1, line:398:79> line:397:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x5643703cf1c8 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x5643703cf328 <line:398:22>
| `-NonNullAttr 0x5643703cf380 <col:63, col:77> 1
|-FunctionDecl 0x5643703cf5a8 <line:399:1, line:401:82> line:399:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x5643703cf3c8 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x5643703cf448 <line:400:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x5643703cf658 <line:401:22>
| `-NonNullAttr 0x5643703cf6b0 <col:63, col:80> 1 2
|-FunctionDecl 0x5643703cf8b8 <line:402:1, line:404:79> line:402:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x5643703cf6f8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5643703cf778 <line:403:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x5643703cf968 <line:404:22>
| `-NonNullAttr 0x5643703cf9c0 <col:63, col:77> 1
|-FunctionDecl 0x5643703cfc18 <line:405:1, line:407:82> line:405:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x5643703cfa08 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x5643703cfab0 <line:406:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x5643703cfcc8 <line:407:22>
| `-NonNullAttr 0x5643703cfd20 <col:63, col:80> 1 2
|-FunctionDecl 0x5643703d0f78 <line:408:1, line:410:79> line:408:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x5643703d0dc0 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5643703d0e38 <line:409:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x5643703d1028 <line:410:22>
| `-NonNullAttr 0x5643703d1080 <col:63, col:77> 1
|-FunctionDecl 0x5643703d12b8 <line:411:1, line:413:82> line:411:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x5643703d10c8 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5643703d1158 <line:412:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x5643703d1368 <line:413:22>
| `-NonNullAttr 0x5643703d13c0 <col:63, col:80> 1 2
|-FunctionDecl 0x5643703d15f8 <line:414:1, line:416:97> line:414:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x5643703d1408 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x5643703d1498 <line:415:12, line:416:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x5643703d16a8 <col:37>
| `-NonNullAttr 0x5643703d1700 <col:78, col:95> 1 2
|-FunctionDecl 0x5643703d18e8 <line:417:1, line:419:82> line:417:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5643703d1748 <col:41, line:418:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5643703d17c8 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x5643703d1998 <line:419:22>
| `-NonNullAttr 0x5643703d19f0 <col:63, col:80> 1 2
|-FunctionDecl 0x5643703d1b78 <line:420:1, line:421:79> line:420:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x5643703d1a38 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5643703d1ab8 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x5643703d1c28 <line:421:22>
| `-NonNullAttr 0x5643703d1c80 <col:63, col:77> 1
|-FunctionDecl 0x5643703d2e58 <line:422:1, line:424:82> line:422:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5643703d1cc8 <col:42, line:423:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5643703d1d48 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x5643703d2f08 <line:424:22>
| `-NonNullAttr 0x5643703d2f60 <col:63, col:80> 1 2
|-FunctionDecl 0x5643703d30e8 <line:425:1, line:427:79> line:425:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x5643703d2fa8 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5643703d3028 <line:426:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x5643703d3198 <line:427:22>
| `-NonNullAttr 0x5643703d31f0 <col:63, col:77> 1
|-FunctionDecl 0x5643703d3398 <line:428:1, line:430:82> line:428:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5643703d3238 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5643703d32b8 <line:429:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x5643703d3448 <line:430:22>
| `-NonNullAttr 0x5643703d34a0 <col:63, col:80> 1 2
|-FunctionDecl 0x5643703d3628 <line:431:1, line:432:79> line:431:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x5643703d34e8 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5643703d3568 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x5643703d36d8 <line:432:22>
| `-NonNullAttr 0x5643703d3730 <col:63, col:77> 1
|-FunctionDecl 0x5643703d3958 <line:433:1, line:435:115> line:433:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x5643703d3778 <col:39, line:434:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5643703d37f8 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x5643703d3a08 <line:435:22>
| |-NonNullAttr 0x5643703d3a60 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x5643703d3a98 <col:100> "" ""
|-FunctionDecl 0x5643703d3ca8 <line:436:1, line:438:112> line:436:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x5643703d3ae8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5643703d3b68 <line:437:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x5643703d3d58 <line:438:22>
| |-NonNullAttr 0x5643703d3db0 <col:63, col:77> 1
| `-DeprecatedAttr 0x5643703d3df8 <col:97> "" ""
|-FunctionDecl 0x5643703d3fe8 <line:439:1, line:441:82> line:439:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x5643703d3e48 <col:39, line:440:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5643703d3ec0 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x5643703d4098 <line:441:22>
| `-NonNullAttr 0x5643703d40f0 <col:63, col:80> 1 2
|-FunctionDecl 0x5643703d4270 <line:442:1, line:444:79> line:442:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x5643703d4138 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5643703d41b0 <line:443:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x5643703d4320 <line:444:22>
| `-NonNullAttr 0x5643703d4378 <col:63, col:77> 1
|-FunctionDecl 0x5643703d4668 <line:445:1, line:448:85> line:445:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x5643703d43c8 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5643703d4448 <line:446:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x5643703d44c0 <line:447:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x5643703d4720 <line:448:22>
| `-NonNullAttr 0x5643703d4778 <col:63, col:83> 1 2 3
|-FunctionDecl 0x5643703d4a28 <line:449:1, line:450:100> line:449:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x5643703d47d0 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5643703d4850 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x5643703d48c8 <line:450:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x5643703d4ae0 <col:43>
| `-NonNullAttr 0x5643703d4b38 <col:84, col:98> 1
|-FunctionDecl 0x5643703d4e40 <line:451:1, line:453:79> line:451:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x5643703d4b88 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5643703d4c08 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x5643703d4c98 <line:452:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x5643703d4ef8 <line:453:22>
| `-NonNullAttr 0x5643703d4f50 <col:63, col:77> 3
|-FunctionDecl 0x5643703d5228 <line:454:1, line:457:82> line:454:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x5643703d4f98 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5643703d5018 <line:455:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x5643703d50a8 <line:456:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x5643703d52e0 <line:457:22>
| `-NonNullAttr 0x5643703d5338 <col:63, col:80> 2 3
|-FunctionDecl 0x5643703d5528 <line:458:1, line:459:45> line:458:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x5643703d5388 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5643703d5408 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x5643703d55d8 <line:459:22>
|-FunctionDecl 0x5643703d59a8 <line:460:1, line:461:71> line:460:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x5643703d56a0 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x5643703d5840 <line:461:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x5643703d5a58 <col:52, col:69> 1 2
|-FunctionDecl 0x5643703d5c00 <line:462:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x5643703d5ae0 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x5643703d5b60 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x5643703d5e10 <line:463:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x5643703d5cc8 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x5643703d5d48 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x5643703d5f68 <line:464:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x5643703d5ed0 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x5643703d60a8 <line:465:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x5643703d6148 <line:466:9, line:474:1> line:466:9 struct definition
| |-RecordDecl 0x5643703d61f8 <line:468:3, line:472:3> line:468:3 struct definition
| | |-FieldDecl 0x5643703d62e8 <line:470:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x5643703d6350 <line:471:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x5643703d6520 <line:468:3, line:472:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at pthread-wmm/safe013_power.opt_false-unreach-call.i:468:3) [1]'
| `-FieldDecl 0x5643703d6618 <line:473:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x5643703d66d0 <line:466:1, line:474:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x5643703d6670 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x5643703d61d0 '__pthread_unwind_buf_t'
| |   `-Record 0x5643703d6148 ''
| `-AlignedAttr 0x5643703d6728 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x5643703d67a0 <line:475:1, line:481:1> line:475:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x5643703d6900 <line:477:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x5643703d6968 <line:478:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x5643703d69d0 <line:479:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x5643703d6a38 <line:480:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x5643703d6c40 <line:482:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x5643703d6b30 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x5643703d6e20 <line:484:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x5643703d6cf8 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x5643703d6fe0 <line:486:1, line:488:31> line:486:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5643703d6ed8 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x5643703d7088 <line:488:22>
|-RecordDecl 0x5643703d70e0 <line:490:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x5643703d73f8 <line:491:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x5643703d7258 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x5643703d72d8 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x5643703d74a8 <col:86>
| `-ReturnsTwiceAttr 0x5643703d7500 <col:12> Implicit
|-FunctionDecl 0x5643703d7828 <line:492:1, line:494:79> line:492:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x5643703d75d0 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x5643703d76e0 <line:493:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x5643703d78d8 <line:494:22>
| `-NonNullAttr 0x5643703d7930 <col:63, col:77> 1
|-FunctionDecl 0x5643703d7aa8 <line:495:1, line:496:79> line:495:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5643703d7978 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5643703d7b50 <line:496:22>
| `-NonNullAttr 0x5643703d7ba8 <col:63, col:77> 1
|-FunctionDecl 0x5643703d7cb0 <line:497:1, line:498:68> line:497:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5643703d7bf8 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5643703d7d58 <line:498:22>
| `-NonNullAttr 0x5643703d7db0 <col:52, col:66> 1
|-FunctionDecl 0x5643703d7ee8 <line:499:1, line:500:68> line:499:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5643703d7e30 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5643703d7f90 <line:500:22>
| `-NonNullAttr 0x5643703d7fe8 <col:52, col:66> 1
|-FunctionDecl 0x5643703d8228 <line:501:1, line:503:85> line:501:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x5643703d8038 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x5643703d80c8 <line:502:9, line:503:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x5643703d82d8 <col:36>
| `-NonNullAttr 0x5643703d8330 <col:66, col:83> 1 2
|-FunctionDecl 0x5643703d8430 <line:504:1, line:505:68> line:504:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5643703d8378 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5643703d84d8 <line:505:22>
| `-NonNullAttr 0x5643703d8530 <col:52, col:66> 1
|-FunctionDecl 0x5643703d87c8 <line:506:1, line:509:82> line:506:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5643703d85e0 <col:42, line:507:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x5643703d8660 <line:508:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x5643703d8878 <line:509:22>
| `-NonNullAttr 0x5643703d88d0 <col:63, col:80> 1 2
|-FunctionDecl 0x5643703d8b98 <line:510:1, line:513:82> line:510:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x5643703d8918 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x5643703d8998 <line:511:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x5643703d8a18 <line:512:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x5643703d8c50 <line:513:22>
| `-NonNullAttr 0x5643703d8ca8 <col:63, col:80> 1 3
|-FunctionDecl 0x5643703d8e40 <line:514:1, line:515:79> line:514:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5643703d8cf8 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5643703d8ee8 <line:515:22>
| `-NonNullAttr 0x5643703d8f40 <col:63, col:77> 1
|-FunctionDecl 0x5643703d9128 <line:516:1, line:517:79> line:516:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x5643703d8ff0 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x5643703d91d0 <line:517:22>
| `-NonNullAttr 0x5643703d9228 <col:63, col:77> 1
|-FunctionDecl 0x5643703d9330 <line:518:1, line:519:79> line:518:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x5643703d9278 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x5643703d93d8 <line:519:22>
| `-NonNullAttr 0x5643703d9430 <col:63, col:77> 1
|-FunctionDecl 0x5643703d9658 <line:520:1, line:523:82> line:520:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5643703d9478 <col:42, line:521:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x5643703d94f8 <line:522:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x5643703d9708 <line:523:22>
| `-NonNullAttr 0x5643703d9760 <col:63, col:80> 1 2
|-FunctionDecl 0x5643703d9968 <line:524:1, line:526:79> line:524:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5643703d97a8 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5643703d9828 <line:525:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x5643703d9a18 <line:526:22>
| `-NonNullAttr 0x5643703d9a70 <col:63, col:77> 1
|-FunctionDecl 0x5643703d9c18 <line:527:1, line:529:82> line:527:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5643703d9ab8 <col:39, line:528:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x5643703d9b38 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x5643703d9cc8 <line:529:22>
| `-NonNullAttr 0x5643703d9d20 <col:63, col:80> 1 2
|-FunctionDecl 0x5643703daf20 <line:530:1, line:531:79> line:530:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5643703d9d68 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5643703dae60 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x5643703dafd0 <line:531:22>
| `-NonNullAttr 0x5643703db028 <col:63, col:77> 1
|-FunctionDecl 0x5643703db1d8 <line:532:1, line:535:82> line:532:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5643703db078 <col:43, line:533:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x5643703db0f8 <line:534:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x5643703db288 <line:535:22>
| `-NonNullAttr 0x5643703db2e0 <col:63, col:80> 1 2
|-FunctionDecl 0x5643703db468 <line:536:1, line:538:79> line:536:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5643703db328 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5643703db3a8 <line:537:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x5643703db518 <line:538:22>
| `-NonNullAttr 0x5643703db570 <col:63, col:77> 1
|-FunctionDecl 0x5643703db718 <line:539:1, line:542:82> line:539:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5643703db5b8 <col:46, line:540:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x5643703db638 <line:541:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x5643703db7c8 <line:542:22>
| `-NonNullAttr 0x5643703db820 <col:63, col:80> 1 2
|-FunctionDecl 0x5643703db9a8 <line:543:1, line:545:79> line:543:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5643703db868 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5643703db8e8 <line:544:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x5643703dba58 <line:545:22>
| `-NonNullAttr 0x5643703dbab0 <col:63, col:77> 1
|-FunctionDecl 0x5643703dbc98 <line:546:1, line:548:82> line:546:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x5643703dbaf8 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x5643703dbb78 <line:547:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x5643703dbd48 <line:548:22>
| `-NonNullAttr 0x5643703dbda0 <col:63, col:80> 1 2
|-FunctionDecl 0x5643703dcf58 <line:549:1, line:551:79> line:549:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5643703dbde8 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5643703dce98 <line:550:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x5643703dd008 <line:551:22>
| `-NonNullAttr 0x5643703dd060 <col:63, col:77> 1
|-FunctionDecl 0x5643703dd398 <line:552:1, line:554:86> line:552:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x5643703dd140 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x5643703dd250 <line:553:5, line:554:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x5643703dd448 <col:29>
| `-NonNullAttr 0x5643703dd4a0 <col:70, col:84> 1
|-FunctionDecl 0x5643703dd618 <line:555:1, line:556:79> line:555:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5643703dd4e8 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5643703dd6c0 <line:556:22>
| `-NonNullAttr 0x5643703dd718 <col:63, col:77> 1
|-FunctionDecl 0x5643703dd820 <line:557:1, line:558:68> line:557:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5643703dd768 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5643703dd8c8 <line:558:22>
| `-NonNullAttr 0x5643703dd920 <col:52, col:66> 1
|-FunctionDecl 0x5643703dda20 <line:559:1, line:560:65> line:559:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5643703dd968 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5643703ddac8 <line:560:19>
| `-NonNullAttr 0x5643703ddb20 <col:49, col:63> 1
|-FunctionDecl 0x5643703ddd58 <line:561:1, line:563:88> line:561:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x5643703ddb68 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x5643703ddbf8 <line:562:12, line:563:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x5643703dde08 <col:39>
| `-NonNullAttr 0x5643703dde90 <col:69, col:86> 1 2
|-FunctionDecl 0x5643703ddf90 <line:564:1, line:565:68> line:564:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5643703dded8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5643703de038 <line:565:22>
| `-NonNullAttr 0x5643703de090 <col:52, col:66> 1
|-FunctionDecl 0x5643703de190 <line:566:1, line:567:68> line:566:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5643703de0d8 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5643703de238 <line:567:22>
| `-NonNullAttr 0x5643703de290 <col:52, col:66> 1
|-FunctionDecl 0x5643703de448 <line:568:1, line:570:88> line:568:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x5643703de2d8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x5643703de368 <line:569:12, line:570:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x5643703de4f8 <col:39>
| `-NonNullAttr 0x5643703de550 <col:69, col:86> 1 2
|-FunctionDecl 0x5643703de650 <line:571:1, line:572:68> line:571:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5643703de598 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5643703de6f8 <line:572:22>
| `-NonNullAttr 0x5643703de750 <col:52, col:66> 1
|-FunctionDecl 0x5643703de938 <line:573:1, line:574:79> line:573:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x5643703de800 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x5643703de9e0 <line:574:22>
| `-NonNullAttr 0x5643703dea38 <col:63, col:77> 1
|-FunctionDecl 0x5643703deb40 <line:575:1, line:576:79> line:575:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x5643703dea88 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x5643703debe8 <line:576:22>
| `-NonNullAttr 0x5643703dec40 <col:63, col:77> 1
|-FunctionDecl 0x5643703deea0 <line:577:1, line:580:82> line:577:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5643703dec88 <col:43, line:578:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x5643703ded08 <line:579:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x5643703def50 <line:580:22>
| `-NonNullAttr 0x5643703defa8 <col:63, col:80> 1 2
|-FunctionDecl 0x5643703df1b8 <line:581:1, line:583:79> line:581:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x5643703deff8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x5643703df078 <line:582:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x5643703df268 <line:583:22>
| `-NonNullAttr 0x5643703df2c0 <col:63, col:77> 1
|-FunctionDecl 0x5643703df468 <line:584:1, line:587:82> line:584:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5643703df308 <col:43, line:585:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x5643703df388 <line:586:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x5643703df518 <line:587:22>
| `-NonNullAttr 0x5643703df570 <col:63, col:80> 1 2
|-FunctionDecl 0x5643703df6f8 <line:588:1, line:589:93> line:588:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x5643703df5b8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x5643703df638 <line:589:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x5643703df7a8 <col:36>
| `-NonNullAttr 0x5643703df800 <col:77, col:91> 1
|-FunctionDecl 0x5643703dfb38 <line:590:1, line:592:79> line:590:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x5643703df8e0 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x5643703df9f0 <line:591:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x5643703dfbe8 <line:592:22>
| `-NonNullAttr 0x5643703dfc40 <col:63, col:77> 1
|-FunctionDecl 0x5643703dfdb8 <line:593:1, line:594:79> line:593:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x5643703dfc88 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x5643703dfe60 <line:594:22>
| `-NonNullAttr 0x5643703dfee0 <col:63, col:77> 1
|-FunctionDecl 0x5643703dffe0 <line:595:1, line:596:68> line:595:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x5643703dff28 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x5643703e0088 <line:596:22>
| `-NonNullAttr 0x5643703e00e0 <col:52, col:66> 1
|-FunctionDecl 0x5643703e01e0 <line:597:1, line:598:68> line:597:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x5643703e0128 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x5643703e0288 <line:598:22>
| `-NonNullAttr 0x5643703e02e0 <col:52, col:66> 1
|-FunctionDecl 0x5643703e0508 <line:599:1, line:601:41> line:599:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x5643703e0328 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x5643703e03a0 <line:600:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x5643703e05b8 <line:601:22, col:39> 1 2
|-FunctionDecl 0x5643703e08e8 <line:602:1, line:605:44> line:602:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x5643703e0638 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x5643703e06b0 <line:603:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x5643703e0740 <line:604:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x5643703e09a0 <line:605:22, col:42> 1 2 3
|-FunctionDecl 0x5643703e0bb8 <line:606:1, line:607:79> line:606:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x5643703e0a80 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x5643703e0c60 <line:607:22>
| `-NonNullAttr 0x5643703e0cb8 <col:63, col:77> 1
|-FunctionDecl 0x5643703e0dc0 <line:608:1, line:609:79> line:608:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x5643703e0d08 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x5643703e0e68 <line:609:22>
| `-NonNullAttr 0x5643703e0ef0 <col:63, col:77> 1
|-FunctionDecl 0x5643703e1118 <line:610:1, line:613:82> line:610:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5643703e0f38 <col:41, line:611:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x5643703e0fb8 <line:612:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x5643703e11c8 <line:613:22>
| `-NonNullAttr 0x5643703e1220 <col:63, col:80> 1 2
|-FunctionDecl 0x5643703e1428 <line:614:1, line:615:94> line:614:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x5643703e1268 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x5643703e12e8 <line:615:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x5643703e14d8 <col:37>
| `-NonNullAttr 0x5643703e1530 <col:78, col:92> 1
|-FunctionDecl 0x5643703e1748 <line:616:1, line:619:82> line:616:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x5643703e1578 <col:39, line:617:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x5643703e1620 <line:618:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x5643703e17f8 <line:619:22>
| `-NonNullAttr 0x5643703e1850 <col:63, col:80> 1 2
|-FunctionDecl 0x5643703e1a18 <line:620:1, line:622:79> line:620:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x5643703e1898 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x5643703e1910 <line:621:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x5643703e1ac8 <line:622:22>
| `-NonNullAttr 0x5643703e1b20 <col:63, col:77> 1
|-FunctionDecl 0x5643703e1dc8 <line:623:1, line:624:79> line:623:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x5643703e1c00 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x5643703e1c80 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x5643703e1e78 <line:624:22>
| `-NonNullAttr 0x5643703e1f00 <col:63, col:77> 1
|-FunctionDecl 0x5643703e2078 <line:625:1, line:626:79> line:625:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x5643703e1f48 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x5643703e2120 <line:626:22>
| `-NonNullAttr 0x5643703e2178 <col:63, col:77> 1
|-FunctionDecl 0x5643703e2280 <line:627:1, line:628:68> line:627:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x5643703e21c8 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x5643703e2328 <line:628:22>
| `-NonNullAttr 0x5643703e2380 <col:52, col:66> 1
|-FunctionDecl 0x5643703e2480 <line:629:1, line:630:68> line:629:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x5643703e23c8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x5643703e2528 <line:630:22>
| `-NonNullAttr 0x5643703e2580 <col:52, col:66> 1
|-FunctionDecl 0x5643703e2680 <line:631:1, line:632:68> line:631:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x5643703e25c8 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x5643703e2728 <line:632:22>
| `-NonNullAttr 0x5643703e2780 <col:52, col:66> 1
|-FunctionDecl 0x5643703e2b58 <line:633:1, line:636:79> line:633:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x5643703e2860 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x5643703e2970 <line:634:6, line:635:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x5643703e29f0 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x5643703e2c10 <line:636:22>
| `-NonNullAttr 0x5643703e2c68 <col:63, col:77> 1
|-FunctionDecl 0x5643703e2de8 <line:637:1, line:638:79> line:637:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x5643703e2cb8 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x5643703e2e90 <line:638:22>
| `-NonNullAttr 0x5643703e2f10 <col:63, col:77> 1
|-FunctionDecl 0x5643703e3010 <line:639:1, line:640:68> line:639:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x5643703e2f58 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x5643703e30b8 <line:640:22>
| `-NonNullAttr 0x5643703e3110 <col:52, col:66> 1
|-FunctionDecl 0x5643703e32f8 <line:641:1, line:642:79> line:641:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x5643703e31c0 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x5643703e33a0 <line:642:22>
| `-NonNullAttr 0x5643703e33f8 <col:63, col:77> 1
|-FunctionDecl 0x5643703e3500 <line:643:1, line:644:79> line:643:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x5643703e3448 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x5643703e35a8 <line:644:22>
| `-NonNullAttr 0x5643703e3600 <col:63, col:77> 1
|-FunctionDecl 0x5643703e3828 <line:645:1, line:648:82> line:645:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5643703e3648 <col:44, line:646:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x5643703e36c8 <line:647:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x5643703e38d8 <line:648:22>
| `-NonNullAttr 0x5643703e3930 <col:63, col:80> 1 2
|-FunctionDecl 0x5643703e3b38 <line:649:1, line:651:79> line:649:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x5643703e3978 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x5643703e39f8 <line:650:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x5643703e3be8 <line:651:22>
| `-NonNullAttr 0x5643703e3c40 <col:63, col:77> 1
|-FunctionDecl 0x5643703e3fa8 <line:652:1, line:654:79> line:652:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x5643703e3d20 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x5643703e3e40 <line:653:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x5643703e4058 <line:654:22>
| `-NonNullAttr 0x5643703e40b0 <col:63, col:77> 1
|-FunctionDecl 0x5643703e4208 <line:655:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x5643703e40f8 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x5643703e42b0 <col:69>
|-FunctionDecl 0x5643703e4428 <line:656:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x5643703e4318 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x5643703e44d0 <col:72>
|-FunctionDecl 0x5643703e4708 <line:657:1, line:658:67> line:657:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x5643703e4538 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x5643703e45e8 <line:658:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x5643703e47b8 <col:44>
|-FunctionDecl 0x5643703e49d8 <line:659:1, line:661:79> line:659:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x5643703e4820 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5643703e4898 <line:660:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x5643703e4a88 <line:661:22>
| `-NonNullAttr 0x5643703e4ae0 <col:63, col:77> 2
|-FunctionDecl 0x5643703e5f50 <line:662:1, line:664:70> line:662:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x5643703e4bc0 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x5643703e4cd0 <line:663:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x5643703e4de0 <line:664:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x5643703e6008 <col:47>
|-FunctionDecl 0x5643703e6110 <line:666:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x5643703e6078 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x5643703e6268 <line:667:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x5643703e61d0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x5643703e63c0 <line:668:1, col:20> col:8 used P2 'void *(void *)'
| `-ParmVarDecl 0x5643703e6328 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x5643703e6488 <line:669:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x5643703e6548 <line:670:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x5643703e6608 <line:671:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x5643703e66c0 <line:672:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x5643703e6740 prev 0x5643703e66c0 <line:673:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x5643703e67a8 <col:24> 'int' 0
|-VarDecl 0x5643703e67e0 <line:674:1, col:5> col:5 used __unbuffered_p0_EAX 'int'
|-VarDecl 0x5643703e6860 prev 0x5643703e67e0 <line:675:1, col:27> col:5 used __unbuffered_p0_EAX 'int' cinit
| `-IntegerLiteral 0x5643703e68c8 <col:27> 'int' 0
|-VarDecl 0x5643703e6900 <line:676:1, col:5> col:5 used __unbuffered_p2_EAX 'int'
|-VarDecl 0x5643703e6980 prev 0x5643703e6900 <line:677:1, col:27> col:5 used __unbuffered_p2_EAX 'int' cinit
| `-IntegerLiteral 0x5643703e69e8 <col:27> 'int' 0
|-VarDecl 0x5643703e6a18 <line:678:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x5643703e6a90 <line:679:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x5643703e6b10 <line:680:1, col:5> col:5 used x 'int'
|-VarDecl 0x5643703e6b90 prev 0x5643703e6b10 <line:681:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x5643703e6bf8 <col:9> 'int' 0
|-VarDecl 0x5643703e6c28 <line:682:1, col:7> col:7 used x$flush_delayed '_Bool'
|-VarDecl 0x5643703e6ca8 <line:683:1, col:5> col:5 used x$mem_tmp 'int'
|-VarDecl 0x5643703e6d20 <line:684:1, col:7> col:7 used x$r_buff0_thd0 '_Bool'
|-VarDecl 0x5643703e6d98 <line:685:1, col:7> col:7 used x$r_buff0_thd1 '_Bool'
|-VarDecl 0x5643703e6e10 <line:686:1, col:7> col:7 used x$r_buff0_thd2 '_Bool'
|-VarDecl 0x5643703e6e88 <line:687:1, col:7> col:7 used x$r_buff0_thd3 '_Bool'
|-VarDecl 0x5643703e6f20 <line:688:1, col:7> col:7 used x$r_buff1_thd0 '_Bool'
|-VarDecl 0x5643703e6f98 <line:689:1, col:7> col:7 used x$r_buff1_thd1 '_Bool'
|-VarDecl 0x5643703e7010 <line:690:1, col:7> col:7 used x$r_buff1_thd2 '_Bool'
|-VarDecl 0x5643703e7088 <line:691:1, col:7> col:7 used x$r_buff1_thd3 '_Bool'
|-VarDecl 0x5643703e7100 <line:692:1, col:7> col:7 x$read_delayed '_Bool'
|-VarDecl 0x5643703e7180 <line:693:1, col:6> col:6 x$read_delayed_var 'int *'
|-VarDecl 0x5643703e7200 <line:694:1, col:5> col:5 used x$w_buff0 'int'
|-VarDecl 0x5643703e7278 <line:695:1, col:7> col:7 used x$w_buff0_used '_Bool'
|-VarDecl 0x5643703e72f8 <line:696:1, col:5> col:5 used x$w_buff1 'int'
|-VarDecl 0x5643703e7370 <line:697:1, col:7> col:7 used x$w_buff1_used '_Bool'
|-VarDecl 0x5643703e73f0 <line:698:1, col:5> col:5 used y 'int'
|-VarDecl 0x5643703e7470 prev 0x5643703e73f0 <line:699:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x5643703e74d8 <col:9> 'int' 0
|-VarDecl 0x5643703e7510 <line:700:1, col:5> col:5 used z 'int'
|-VarDecl 0x5643703e7590 prev 0x5643703e7510 <line:701:1, col:9> col:5 used z 'int' cinit
| `-IntegerLiteral 0x5643703e75f8 <col:9> 'int' 0
|-VarDecl 0x5643703e7628 <line:702:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x5643703e76a0 <line:703:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x5643703e77b8 prev 0x5643703e6110 <line:704:1, line:733:1> line:704:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x5643703e7720 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x5643703ea7d8 <line:705:1, line:733:1>
|   |-CallExpr 0x5643703e78c8 <line:706:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5643703e78b0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5643703e7860 <col:3> 'void ()' Function 0x56437038d4b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5643703e7928 <line:707:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x5643703e78e8 <col:3> 'int' lvalue Var 0x5643703e7590 'z' 'int'
|   | `-IntegerLiteral 0x5643703e7908 <col:7> 'int' 2
|   |-CallExpr 0x5643703e7980 <line:708:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5643703e7968 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5643703e7948 <col:3> 'void ()' Function 0x56437038d570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5643703e79d8 <line:709:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5643703e79c0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5643703e79a0 <col:3> 'void ()' Function 0x56437038d4b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-CallExpr 0x5643703e7a30 <line:710:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5643703e7a18 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5643703e79f8 <col:3> 'void ()' Function 0x56437038d570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5643703e7a88 <line:711:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5643703e7a70 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5643703e7a50 <col:3> 'void ()' Function 0x56437038d4b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5643703e7b58 <line:712:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x5643703e7aa8 <col:3> '_Bool' lvalue Var 0x5643703e7628 'weak$$choice0' '_Bool'
|   | `-CallExpr 0x5643703e7b38 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x5643703e7b20 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x5643703e7ac8 <col:19> '_Bool (void)' Function 0x56437038cc80 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x5643703e7bf0 <line:713:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x5643703e7b78 <col:3> '_Bool' lvalue Var 0x5643703e76a0 'weak$$choice2' '_Bool'
|   | `-CallExpr 0x5643703e7bd0 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x5643703e7bb8 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x5643703e7b98 <col:19> '_Bool (void)' Function 0x56437038cc80 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x5643703e7c68 <line:714:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x5643703e7c10 <col:3> '_Bool' lvalue Var 0x5643703e6c28 'x$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x5643703e7c50 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5643703e7c30 <col:21> '_Bool' lvalue Var 0x5643703e76a0 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x5643703e7ce0 <line:715:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x5643703e7c88 <col:3> 'int' lvalue Var 0x5643703e6ca8 'x$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x5643703e7cc8 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5643703e7ca8 <col:15> 'int' lvalue Var 0x5643703e6b90 'x' 'int'
|   |-BinaryOperator 0x5643703e8138 <line:716:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x5643703e7d00 <col:3> 'int' lvalue Var 0x5643703e6b90 'x' 'int'
|   | `-ConditionalOperator 0x5643703e8108 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x5643703e7f30 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x5643703e7e30 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x5643703e7d58 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x5643703e7d40 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x5643703e7d20 <col:8> '_Bool' lvalue Var 0x5643703e7278 'x$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x5643703e7e10 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x5643703e7da8 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x5643703e7d90 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x5643703e7d70 <col:27> '_Bool' lvalue Var 0x5643703e6d98 'x$r_buff0_thd1' '_Bool'
|   |   | |   `-UnaryOperator 0x5643703e7df8 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x5643703e7de0 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x5643703e7dc0 <col:46> '_Bool' lvalue Var 0x5643703e7370 'x$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x5643703e7ef0 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x5643703e7e88 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x5643703e7e70 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x5643703e7e50 <col:65> '_Bool' lvalue Var 0x5643703e6d98 'x$r_buff0_thd1' '_Bool'
|   |   |   `-UnaryOperator 0x5643703e7ed8 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x5643703e7ec0 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x5643703e7ea0 <col:84> '_Bool' lvalue Var 0x5643703e6f98 'x$r_buff1_thd1' '_Bool'
|   |   |-ImplicitCastExpr 0x5643703e80f0 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5643703e7f50 <col:101> 'int' lvalue Var 0x5643703e6b90 'x' 'int'
|   |   `-ParenExpr 0x5643703e80d0 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x5643703e80a0 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x5643703e8010 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x5643703e7fc8 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x5643703e7fb0 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x5643703e7f70 <col:106> '_Bool' lvalue Var 0x5643703e7278 'x$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x5643703e7ff8 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x5643703e7fe0 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x5643703e7f90 <col:124> '_Bool' lvalue Var 0x5643703e6d98 'x$r_buff0_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x5643703e8070 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5643703e8030 <col:141> 'int' lvalue Var 0x5643703e7200 'x$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x5643703e8088 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x5643703e8050 <col:153> 'int' lvalue Var 0x5643703e72f8 'x$w_buff1' 'int'
|   |-BinaryOperator 0x5643703e8648 <line:717:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x5643703e8158 <col:3> 'int' lvalue Var 0x5643703e7200 'x$w_buff0' 'int'
|   | `-ConditionalOperator 0x5643703e8618 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x5643703e85e8 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x5643703e85d0 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x5643703e8178 <col:15> '_Bool' lvalue Var 0x5643703e76a0 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x5643703e8600 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5643703e8198 <col:31> 'int' lvalue Var 0x5643703e7200 'x$w_buff0' 'int'
|   |   `-ParenExpr 0x5643703e85b0 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x5643703e8580 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x5643703e83a8 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x5643703e82c8 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x5643703e81f0 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x5643703e81d8 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x5643703e81b8 <col:45> '_Bool' lvalue Var 0x5643703e7278 'x$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x5643703e82a8 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x5643703e8240 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x5643703e8228 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x5643703e8208 <col:64> '_Bool' lvalue Var 0x5643703e6d98 'x$r_buff0_thd1' '_Bool'
|   |       | |   `-UnaryOperator 0x5643703e8290 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x5643703e8278 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x5643703e8258 <col:83> '_Bool' lvalue Var 0x5643703e7370 'x$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x5643703e8388 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x5643703e8320 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x5643703e8308 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x5643703e82e8 <col:102> '_Bool' lvalue Var 0x5643703e6d98 'x$r_buff0_thd1' '_Bool'
|   |       |   `-UnaryOperator 0x5643703e8370 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x5643703e8358 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x5643703e8338 <col:121> '_Bool' lvalue Var 0x5643703e6f98 'x$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x5643703e8568 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5643703e83c8 <col:138> 'int' lvalue Var 0x5643703e7200 'x$w_buff0' 'int'
|   |       `-ParenExpr 0x5643703e8548 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x5643703e8518 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x5643703e8488 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x5643703e8440 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x5643703e8428 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x5643703e83e8 <col:151> '_Bool' lvalue Var 0x5643703e7278 'x$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x5643703e8470 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x5643703e8458 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x5643703e8408 <col:169> '_Bool' lvalue Var 0x5643703e6d98 'x$r_buff0_thd1' '_Bool'
|   |           |-ImplicitCastExpr 0x5643703e84e8 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x5643703e84a8 <col:186> 'int' lvalue Var 0x5643703e7200 'x$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x5643703e8500 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x5643703e84c8 <col:198> 'int' lvalue Var 0x5643703e7200 'x$w_buff0' 'int'
|   |-BinaryOperator 0x5643703e8b58 <line:718:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x5643703e8668 <col:3> 'int' lvalue Var 0x5643703e72f8 'x$w_buff1' 'int'
|   | `-ConditionalOperator 0x5643703e8b28 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x5643703e8af8 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x5643703e8ae0 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x5643703e8688 <col:15> '_Bool' lvalue Var 0x5643703e76a0 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x5643703e8b10 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5643703e86a8 <col:31> 'int' lvalue Var 0x5643703e72f8 'x$w_buff1' 'int'
|   |   `-ParenExpr 0x5643703e8ac0 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x5643703e8a90 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x5643703e88b8 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x5643703e87d8 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x5643703e8700 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x5643703e86e8 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x5643703e86c8 <col:45> '_Bool' lvalue Var 0x5643703e7278 'x$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x5643703e87b8 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x5643703e8750 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x5643703e8738 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x5643703e8718 <col:64> '_Bool' lvalue Var 0x5643703e6d98 'x$r_buff0_thd1' '_Bool'
|   |       | |   `-UnaryOperator 0x5643703e87a0 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x5643703e8788 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x5643703e8768 <col:83> '_Bool' lvalue Var 0x5643703e7370 'x$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x5643703e8898 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x5643703e8830 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x5643703e8818 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x5643703e87f8 <col:102> '_Bool' lvalue Var 0x5643703e6d98 'x$r_buff0_thd1' '_Bool'
|   |       |   `-UnaryOperator 0x5643703e8880 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x5643703e8868 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x5643703e8848 <col:121> '_Bool' lvalue Var 0x5643703e6f98 'x$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x5643703e8a78 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5643703e88d8 <col:138> 'int' lvalue Var 0x5643703e72f8 'x$w_buff1' 'int'
|   |       `-ParenExpr 0x5643703e8a58 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x5643703e8a28 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x5643703e8998 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x5643703e8950 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x5643703e8938 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x5643703e88f8 <col:151> '_Bool' lvalue Var 0x5643703e7278 'x$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x5643703e8980 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x5643703e8968 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x5643703e8918 <col:169> '_Bool' lvalue Var 0x5643703e6d98 'x$r_buff0_thd1' '_Bool'
|   |           |-ImplicitCastExpr 0x5643703e89f8 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x5643703e89b8 <col:186> 'int' lvalue Var 0x5643703e72f8 'x$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x5643703e8a10 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x5643703e89d8 <col:198> 'int' lvalue Var 0x5643703e72f8 'x$w_buff1' 'int'
|   |-BinaryOperator 0x5643703e9120 <line:719:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x5643703e8b78 <col:3> '_Bool' lvalue Var 0x5643703e7278 'x$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x5643703e9108 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5643703e90d8 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x5643703e9090 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5643703e9078 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5643703e8b98 <col:20> '_Bool' lvalue Var 0x5643703e76a0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5643703e90c0 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5643703e90a8 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5643703e8bb8 <col:36> '_Bool' lvalue Var 0x5643703e7278 'x$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x5643703e9058 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x5643703e9028 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x5643703e8dc8 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5643703e8ce8 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5643703e8c10 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5643703e8bf8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5643703e8bd8 <col:55> '_Bool' lvalue Var 0x5643703e7278 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5643703e8cc8 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5643703e8c60 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5643703e8c48 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5643703e8c28 <col:74> '_Bool' lvalue Var 0x5643703e6d98 'x$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x5643703e8cb0 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5643703e8c98 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5643703e8c78 <col:93> '_Bool' lvalue Var 0x5643703e7370 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5643703e8da8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5643703e8d40 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5643703e8d28 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5643703e8d08 <col:112> '_Bool' lvalue Var 0x5643703e6d98 'x$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x5643703e8d90 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5643703e8d78 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5643703e8d58 <col:131> '_Bool' lvalue Var 0x5643703e6f98 'x$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x5643703e9010 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5643703e8ff8 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5643703e8de8 <col:148> '_Bool' lvalue Var 0x5643703e7278 'x$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x5643703e8fd8 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x5643703e8fa8 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x5643703e8ea8 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5643703e8e60 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5643703e8e48 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5643703e8e08 <col:166> '_Bool' lvalue Var 0x5643703e7278 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5643703e8e90 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5643703e8e78 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5643703e8e28 <col:184> '_Bool' lvalue Var 0x5643703e6d98 'x$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x5643703e8f60 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5643703e8ef8 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5643703e8ec8 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5643703e8f90 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x5643703e8f78 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x5643703e8f40 <col:212> '_Bool' lvalue Var 0x5643703e7278 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5643703e96e8 <line:720:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x5643703e9140 <col:3> '_Bool' lvalue Var 0x5643703e7370 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5643703e96d0 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5643703e96a0 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x5643703e9658 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5643703e9640 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5643703e9160 <col:20> '_Bool' lvalue Var 0x5643703e76a0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5643703e9688 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5643703e9670 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5643703e9180 <col:36> '_Bool' lvalue Var 0x5643703e7370 'x$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x5643703e9620 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x5643703e95f0 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x5643703e9390 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5643703e92b0 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5643703e91d8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5643703e91c0 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5643703e91a0 <col:55> '_Bool' lvalue Var 0x5643703e7278 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5643703e9290 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5643703e9228 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5643703e9210 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5643703e91f0 <col:74> '_Bool' lvalue Var 0x5643703e6d98 'x$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x5643703e9278 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5643703e9260 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5643703e9240 <col:93> '_Bool' lvalue Var 0x5643703e7370 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5643703e9370 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5643703e9308 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5643703e92f0 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5643703e92d0 <col:112> '_Bool' lvalue Var 0x5643703e6d98 'x$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x5643703e9358 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5643703e9340 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5643703e9320 <col:131> '_Bool' lvalue Var 0x5643703e6f98 'x$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x5643703e95d8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5643703e95c0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5643703e93b0 <col:148> '_Bool' lvalue Var 0x5643703e7370 'x$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x5643703e95a0 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x5643703e9570 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x5643703e9470 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5643703e9428 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5643703e9410 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5643703e93d0 <col:166> '_Bool' lvalue Var 0x5643703e7278 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5643703e9458 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5643703e9440 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5643703e93f0 <col:184> '_Bool' lvalue Var 0x5643703e6d98 'x$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x5643703e9540 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5643703e94c0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5643703e9490 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5643703e9558 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x5643703e9518 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x5643703e94e8 <col:219> 'int' 0
|   |-BinaryOperator 0x5643703e9c90 <line:721:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x5643703e9708 <col:3> '_Bool' lvalue Var 0x5643703e6d98 'x$r_buff0_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x5643703e9c78 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5643703e9c48 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x5643703e9c00 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5643703e9be8 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5643703e9728 <col:20> '_Bool' lvalue Var 0x5643703e76a0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5643703e9c30 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5643703e9c18 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5643703e9748 <col:36> '_Bool' lvalue Var 0x5643703e6d98 'x$r_buff0_thd1' '_Bool'
|   |     `-ParenExpr 0x5643703e9bc8 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x5643703e9b98 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x5643703e9958 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5643703e9878 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5643703e97a0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5643703e9788 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5643703e9768 <col:55> '_Bool' lvalue Var 0x5643703e7278 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5643703e9858 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5643703e97f0 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5643703e97d8 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5643703e97b8 <col:74> '_Bool' lvalue Var 0x5643703e6d98 'x$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x5643703e9840 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5643703e9828 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5643703e9808 <col:93> '_Bool' lvalue Var 0x5643703e7370 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5643703e9938 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5643703e98d0 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5643703e98b8 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5643703e9898 <col:112> '_Bool' lvalue Var 0x5643703e6d98 'x$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x5643703e9920 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5643703e9908 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5643703e98e8 <col:131> '_Bool' lvalue Var 0x5643703e6f98 'x$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x5643703e9b80 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5643703e9b68 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5643703e9978 <col:148> '_Bool' lvalue Var 0x5643703e6d98 'x$r_buff0_thd1' '_Bool'
|   |         `-ParenExpr 0x5643703e9b48 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x5643703e9b18 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x5643703e9a38 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5643703e99f0 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5643703e99d8 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5643703e9998 <col:166> '_Bool' lvalue Var 0x5643703e7278 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5643703e9a20 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5643703e9a08 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5643703e99b8 <col:184> '_Bool' lvalue Var 0x5643703e6d98 'x$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x5643703e9ad0 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5643703e9a88 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5643703e9a58 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5643703e9b00 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x5643703e9ae8 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x5643703e9ab0 <col:212> '_Bool' lvalue Var 0x5643703e6d98 'x$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x5643703ea268 <line:722:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x5643703e9cb0 <col:3> '_Bool' lvalue Var 0x5643703e6f98 'x$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x5643703ea250 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5643703ea220 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x5643703ea1d8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5643703ea1c0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5643703e9cd0 <col:20> '_Bool' lvalue Var 0x5643703e76a0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5643703ea208 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5643703ea1f0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5643703e9cf0 <col:36> '_Bool' lvalue Var 0x5643703e6f98 'x$r_buff1_thd1' '_Bool'
|   |     `-ParenExpr 0x5643703ea1a0 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x5643703ea170 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x5643703e9f00 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5643703e9e20 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5643703e9d48 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5643703e9d30 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5643703e9d10 <col:55> '_Bool' lvalue Var 0x5643703e7278 'x$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5643703e9e00 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5643703e9d98 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5643703e9d80 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5643703e9d60 <col:74> '_Bool' lvalue Var 0x5643703e6d98 'x$r_buff0_thd1' '_Bool'
|   |         | |   `-UnaryOperator 0x5643703e9de8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5643703e9dd0 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5643703e9db0 <col:93> '_Bool' lvalue Var 0x5643703e7370 'x$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5643703e9ee0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5643703e9e78 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5643703e9e60 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5643703e9e40 <col:112> '_Bool' lvalue Var 0x5643703e6d98 'x$r_buff0_thd1' '_Bool'
|   |         |   `-UnaryOperator 0x5643703e9ec8 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5643703e9eb0 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5643703e9e90 <col:131> '_Bool' lvalue Var 0x5643703e6f98 'x$r_buff1_thd1' '_Bool'
|   |         |-ImplicitCastExpr 0x5643703ea158 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5643703ea140 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5643703e9f20 <col:148> '_Bool' lvalue Var 0x5643703e6f98 'x$r_buff1_thd1' '_Bool'
|   |         `-ParenExpr 0x5643703ea120 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x5643703ea0f0 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x5643703e9ff0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5643703e9fa8 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5643703e9f90 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5643703e9f50 <col:166> '_Bool' lvalue Var 0x5643703e7278 'x$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5643703e9fd8 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5643703e9fc0 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5643703e9f70 <col:184> '_Bool' lvalue Var 0x5643703e6d98 'x$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x5643703ea0c0 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5643703ea040 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5643703ea010 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5643703ea0d8 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x5643703ea098 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x5643703ea068 <col:219> 'int' 0
|   |-BinaryOperator 0x5643703ea2e0 <line:723:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x5643703ea288 <col:3> 'int' lvalue Var 0x5643703e6860 '__unbuffered_p0_EAX' 'int'
|   | `-ImplicitCastExpr 0x5643703ea2c8 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5643703ea2a8 <col:25> 'int' lvalue Var 0x5643703e6b90 'x' 'int'
|   |-BinaryOperator 0x5643703ea410 <line:724:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x5643703ea300 <col:3> 'int' lvalue Var 0x5643703e6b90 'x' 'int'
|   | `-ConditionalOperator 0x5643703ea3e0 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x5643703ea398 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x5643703ea380 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x5643703ea320 <col:7> '_Bool' lvalue Var 0x5643703e6c28 'x$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x5643703ea3b0 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5643703ea340 <col:25> 'int' lvalue Var 0x5643703e6ca8 'x$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x5643703ea3c8 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x5643703ea360 <col:37> 'int' lvalue Var 0x5643703e6b90 'x' 'int'
|   |-BinaryOperator 0x5643703ea4a8 <line:725:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x5643703ea430 <col:3> '_Bool' lvalue Var 0x5643703e6c28 'x$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x5643703ea480 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x5643703ea450 <col:28> 'int' 0
|   |-CallExpr 0x5643703ea500 <line:726:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5643703ea4e8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5643703ea4c8 <col:3> 'void ()' Function 0x56437038d570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5643703ea558 <line:727:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5643703ea540 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5643703ea520 <col:3> 'void ()' Function 0x56437038d4b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-CallExpr 0x5643703ea5b0 <line:728:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5643703ea598 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5643703ea578 <col:3> 'void ()' Function 0x56437038d570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5643703ea608 <line:729:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5643703ea5f0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5643703ea5d0 <col:3> 'void ()' Function 0x56437038d4b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5643703ea6c0 <line:730:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x5643703ea628 <col:3> 'int' lvalue Var 0x5643703e6740 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x5643703ea6a0 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x5643703ea688 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5643703ea648 <col:22> 'int' lvalue Var 0x5643703e6740 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x5643703ea668 <col:41> 'int' 1
|   |-CallExpr 0x5643703ea718 <line:731:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5643703ea700 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5643703ea6e0 <col:3> 'void ()' Function 0x56437038d570 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x5643703ea7c8 <line:732:3, col:36>
|     `-CallExpr 0x5643703ea7a8 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x5643703ea790 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x5643703ea738 <col:10> 'void *(void)' Function 0x56437038cfc8 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x5643703ea970 prev 0x5643703e6268 <line:734:1, line:762:1> line:734:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x5643703ea8d8 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x5643703ec140 <line:735:1, line:762:1>
|   |-CallExpr 0x5643703eaa50 <line:736:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5643703eaa38 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5643703eaa18 <col:3> 'void ()' Function 0x56437038d4b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5643703eaac8 <line:737:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x5643703eaa70 <col:3> 'int' lvalue Var 0x5643703e72f8 'x$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x5643703eaab0 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5643703eaa90 <col:15> 'int' lvalue Var 0x5643703e7200 'x$w_buff0' 'int'
|   |-BinaryOperator 0x5643703eab28 <line:738:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x5643703eaae8 <col:3> 'int' lvalue Var 0x5643703e7200 'x$w_buff0' 'int'
|   | `-IntegerLiteral 0x5643703eab08 <col:15> 'int' 1
|   |-BinaryOperator 0x5643703eaba0 <line:739:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5643703eab48 <col:3> '_Bool' lvalue Var 0x5643703e7370 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5643703eab88 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5643703eab68 <col:20> '_Bool' lvalue Var 0x5643703e7278 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5643703eac38 <line:740:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x5643703eabc0 <col:3> '_Bool' lvalue Var 0x5643703e7278 'x$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x5643703eac10 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x5643703eabe0 <col:27> 'int' 1
|   |-CallExpr 0x5643703eadb8 <line:741:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x5643703eada0 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x5643703eac58 <col:3> 'void (int)' Function 0x56437038d238 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x5643703ead58 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x5643703ead38 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x5643703ead18 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x5643703eacd0 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x5643703eacb8 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x5643703eac78 <col:23> '_Bool' lvalue Var 0x5643703e7370 'x$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x5643703ead00 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x5643703eace8 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x5643703eac98 <col:41> '_Bool' lvalue Var 0x5643703e7278 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5643703eae38 <line:742:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5643703eade0 <col:3> '_Bool' lvalue Var 0x5643703e6f20 'x$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x5643703eae20 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5643703eae00 <col:20> '_Bool' lvalue Var 0x5643703e6d20 'x$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x5643703eaeb0 <line:743:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5643703eae58 <col:3> '_Bool' lvalue Var 0x5643703e6f98 'x$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x5643703eae98 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5643703eae78 <col:20> '_Bool' lvalue Var 0x5643703e6d98 'x$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x5643703eaf28 <line:744:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5643703eaed0 <col:3> '_Bool' lvalue Var 0x5643703e7010 'x$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x5643703eaf10 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5643703eaef0 <col:20> '_Bool' lvalue Var 0x5643703e6e10 'x$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x5643703eafb8 <line:745:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5643703eaf60 <col:3> '_Bool' lvalue Var 0x5643703e7088 'x$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x5643703eafa0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5643703eaf80 <col:20> '_Bool' lvalue Var 0x5643703e6e88 'x$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x5643703eb050 <line:746:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x5643703eafd8 <col:3> '_Bool' lvalue Var 0x5643703e6e10 'x$r_buff0_thd2' '_Bool'
|   | `-CStyleCastExpr 0x5643703eb028 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x5643703eaff8 <col:27> 'int' 1
|   |-CallExpr 0x5643703eb0a8 <line:747:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5643703eb090 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5643703eb070 <col:3> 'void ()' Function 0x56437038d570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5643703eb100 <line:748:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5643703eb0e8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5643703eb0c8 <col:3> 'void ()' Function 0x56437038d4b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5643703eb160 <line:749:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x5643703eb120 <col:3> 'int' lvalue Var 0x5643703e7470 'y' 'int'
|   | `-IntegerLiteral 0x5643703eb140 <col:7> 'int' 1
|   |-CallExpr 0x5643703eb1b8 <line:750:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5643703eb1a0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5643703eb180 <col:3> 'void ()' Function 0x56437038d570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5643703eb210 <line:751:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5643703eb1f8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5643703eb1d8 <col:3> 'void ()' Function 0x56437038d4b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5643703eb4f8 <line:752:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x5643703eb230 <col:3> 'int' lvalue Var 0x5643703e6b90 'x' 'int'
|   | `-ConditionalOperator 0x5643703eb4c8 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x5643703eb2f0 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x5643703eb2a8 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x5643703eb290 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x5643703eb250 <col:7> '_Bool' lvalue Var 0x5643703e7278 'x$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x5643703eb2d8 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x5643703eb2c0 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x5643703eb270 <col:25> '_Bool' lvalue Var 0x5643703e6e10 'x$r_buff0_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x5643703eb4b0 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5643703eb310 <col:42> 'int' lvalue Var 0x5643703e7200 'x$w_buff0' 'int'
|   |   `-ParenExpr 0x5643703eb490 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x5643703eb460 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x5643703eb3d0 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x5643703eb388 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x5643703eb370 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x5643703eb330 <col:55> '_Bool' lvalue Var 0x5643703e7370 'x$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x5643703eb3b8 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x5643703eb3a0 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x5643703eb350 <col:73> '_Bool' lvalue Var 0x5643703e7010 'x$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x5643703eb430 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5643703eb3f0 <col:90> 'int' lvalue Var 0x5643703e72f8 'x$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x5643703eb448 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x5643703eb410 <col:102> 'int' lvalue Var 0x5643703e6b90 'x' 'int'
|   |-BinaryOperator 0x5643703eb700 <line:753:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5643703eb518 <col:3> '_Bool' lvalue Var 0x5643703e7278 'x$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x5643703eb6e8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5643703eb6b8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5643703eb5d8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5643703eb590 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5643703eb578 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5643703eb538 <col:20> '_Bool' lvalue Var 0x5643703e7278 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5643703eb5c0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5643703eb5a8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5643703eb558 <col:38> '_Bool' lvalue Var 0x5643703e6e10 'x$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x5643703eb670 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5643703eb628 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5643703eb5f8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5643703eb6a0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5643703eb688 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5643703eb650 <col:66> '_Bool' lvalue Var 0x5643703e7278 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5643703eb9e8 <line:754:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5643703eb720 <col:3> '_Bool' lvalue Var 0x5643703e7370 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5643703eb9d0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5643703eb9a0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5643703eb8c0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5643703eb7e0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5643703eb798 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5643703eb780 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5643703eb740 <col:20> '_Bool' lvalue Var 0x5643703e7278 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5643703eb7c8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5643703eb7b0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5643703eb760 <col:38> '_Bool' lvalue Var 0x5643703e6e10 'x$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x5643703eb8a0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5643703eb858 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5643703eb840 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5643703eb800 <col:56> '_Bool' lvalue Var 0x5643703e7370 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5643703eb888 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5643703eb870 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5643703eb820 <col:74> '_Bool' lvalue Var 0x5643703e7010 'x$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x5643703eb958 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5643703eb910 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5643703eb8e0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5643703eb988 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5643703eb970 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5643703eb938 <col:102> '_Bool' lvalue Var 0x5643703e7370 'x$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x5643703ebbf0 <line:755:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5643703eba08 <col:3> '_Bool' lvalue Var 0x5643703e6e10 'x$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x5643703ebbd8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5643703ebba8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5643703ebac8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5643703eba80 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5643703eba68 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5643703eba28 <col:20> '_Bool' lvalue Var 0x5643703e7278 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5643703ebab0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5643703eba98 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5643703eba48 <col:38> '_Bool' lvalue Var 0x5643703e6e10 'x$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x5643703ebb60 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5643703ebb18 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5643703ebae8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5643703ebb90 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5643703ebb78 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5643703ebb40 <col:66> '_Bool' lvalue Var 0x5643703e6e10 'x$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x5643703ebed8 <line:756:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5643703ebc10 <col:3> '_Bool' lvalue Var 0x5643703e7010 'x$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x5643703ebec0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5643703ebe90 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5643703ebdb0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5643703ebcd0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5643703ebc88 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5643703ebc70 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5643703ebc30 <col:20> '_Bool' lvalue Var 0x5643703e7278 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5643703ebcb8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5643703ebca0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5643703ebc50 <col:38> '_Bool' lvalue Var 0x5643703e6e10 'x$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x5643703ebd90 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5643703ebd48 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5643703ebd30 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5643703ebcf0 <col:56> '_Bool' lvalue Var 0x5643703e7370 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5643703ebd78 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5643703ebd60 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5643703ebd10 <col:74> '_Bool' lvalue Var 0x5643703e7010 'x$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x5643703ebe48 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5643703ebe00 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5643703ebdd0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5643703ebe78 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5643703ebe60 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5643703ebe28 <col:102> '_Bool' lvalue Var 0x5643703e7010 'x$r_buff1_thd2' '_Bool'
|   |-CallExpr 0x5643703ebf30 <line:757:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5643703ebf18 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5643703ebef8 <col:3> 'void ()' Function 0x56437038d570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5643703ebfa8 <line:758:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5643703ebf90 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5643703ebf70 <col:3> 'void ()' Function 0x56437038d4b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5643703ec060 <line:759:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x5643703ebfc8 <col:3> 'int' lvalue Var 0x5643703e6740 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x5643703ec040 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x5643703ec028 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5643703ebfe8 <col:22> 'int' lvalue Var 0x5643703e6740 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x5643703ec008 <col:41> 'int' 1
|   |-CallExpr 0x5643703ec0b8 <line:760:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5643703ec0a0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5643703ec080 <col:3> 'void ()' Function 0x56437038d570 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x5643703ec130 <line:761:3, col:36>
|     `-CallExpr 0x5643703ec110 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x5643703ec0f8 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x5643703ec0d8 <col:10> 'void *(void)' Function 0x56437038cfc8 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x5643703ec2d0 prev 0x5643703e63c0 <line:763:1, line:782:1> line:763:8 used P2 'void *(void *)'
| |-ParmVarDecl 0x5643703ec238 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x5643703ed510 <line:764:1, line:782:1>
|   |-CallExpr 0x5643703ec3b0 <line:765:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5643703ec398 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5643703ec378 <col:3> 'void ()' Function 0x56437038d4b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5643703ec428 <line:766:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x5643703ec3d0 <col:3> 'int' lvalue Var 0x5643703e6980 '__unbuffered_p2_EAX' 'int'
|   | `-ImplicitCastExpr 0x5643703ec410 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5643703ec3f0 <col:25> 'int' lvalue Var 0x5643703e7470 'y' 'int'
|   |-CallExpr 0x5643703ec480 <line:767:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5643703ec468 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5643703ec448 <col:3> 'void ()' Function 0x56437038d570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5643703ec4d8 <line:768:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5643703ec4c0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5643703ec4a0 <col:3> 'void ()' Function 0x56437038d4b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5643703ec538 <line:769:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x5643703ec4f8 <col:3> 'int' lvalue Var 0x5643703e7590 'z' 'int'
|   | `-IntegerLiteral 0x5643703ec518 <col:7> 'int' 1
|   |-CallExpr 0x5643703ec590 <line:770:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5643703ec578 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5643703ec558 <col:3> 'void ()' Function 0x56437038d570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5643703ec5e8 <line:771:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5643703ec5d0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5643703ec5b0 <col:3> 'void ()' Function 0x56437038d4b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5643703ec8d0 <line:772:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x5643703ec608 <col:3> 'int' lvalue Var 0x5643703e6b90 'x' 'int'
|   | `-ConditionalOperator 0x5643703ec8a0 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x5643703ec6c8 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x5643703ec680 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x5643703ec668 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x5643703ec628 <col:7> '_Bool' lvalue Var 0x5643703e7278 'x$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x5643703ec6b0 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x5643703ec698 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x5643703ec648 <col:25> '_Bool' lvalue Var 0x5643703e6e88 'x$r_buff0_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x5643703ec888 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5643703ec6e8 <col:42> 'int' lvalue Var 0x5643703e7200 'x$w_buff0' 'int'
|   |   `-ParenExpr 0x5643703ec868 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x5643703ec838 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x5643703ec7a8 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x5643703ec760 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x5643703ec748 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x5643703ec708 <col:55> '_Bool' lvalue Var 0x5643703e7370 'x$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x5643703ec790 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x5643703ec778 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x5643703ec728 <col:73> '_Bool' lvalue Var 0x5643703e7088 'x$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x5643703ec808 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5643703ec7c8 <col:90> 'int' lvalue Var 0x5643703e72f8 'x$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x5643703ec820 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x5643703ec7e8 <col:102> 'int' lvalue Var 0x5643703e6b90 'x' 'int'
|   |-BinaryOperator 0x5643703ecad8 <line:773:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5643703ec8f0 <col:3> '_Bool' lvalue Var 0x5643703e7278 'x$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x5643703ecac0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5643703eca90 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5643703ec9b0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5643703ec968 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5643703ec950 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5643703ec910 <col:20> '_Bool' lvalue Var 0x5643703e7278 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5643703ec998 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5643703ec980 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5643703ec930 <col:38> '_Bool' lvalue Var 0x5643703e6e88 'x$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x5643703eca48 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5643703eca00 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5643703ec9d0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5643703eca78 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5643703eca60 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5643703eca28 <col:66> '_Bool' lvalue Var 0x5643703e7278 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5643703ecdc0 <line:774:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5643703ecaf8 <col:3> '_Bool' lvalue Var 0x5643703e7370 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5643703ecda8 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5643703ecd78 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5643703ecc98 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5643703ecbb8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5643703ecb70 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5643703ecb58 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5643703ecb18 <col:20> '_Bool' lvalue Var 0x5643703e7278 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5643703ecba0 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5643703ecb88 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5643703ecb38 <col:38> '_Bool' lvalue Var 0x5643703e6e88 'x$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x5643703ecc78 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5643703ecc30 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5643703ecc18 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5643703ecbd8 <col:56> '_Bool' lvalue Var 0x5643703e7370 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5643703ecc60 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5643703ecc48 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5643703ecbf8 <col:74> '_Bool' lvalue Var 0x5643703e7088 'x$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x5643703ecd30 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5643703ecce8 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5643703eccb8 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5643703ecd60 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5643703ecd48 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5643703ecd10 <col:102> '_Bool' lvalue Var 0x5643703e7370 'x$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x5643703ecfe0 <line:775:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5643703ecde0 <col:3> '_Bool' lvalue Var 0x5643703e6e88 'x$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x5643703ecfc8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5643703ecf98 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5643703ecea0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5643703ece58 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5643703ece40 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5643703ece00 <col:20> '_Bool' lvalue Var 0x5643703e7278 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5643703ece88 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5643703ece70 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5643703ece20 <col:38> '_Bool' lvalue Var 0x5643703e6e88 'x$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x5643703ecf38 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5643703ecef0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5643703ecec0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5643703ecf80 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5643703ecf50 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5643703ecf18 <col:66> '_Bool' lvalue Var 0x5643703e6e88 'x$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x5643703ed2c8 <line:776:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5643703ed000 <col:3> '_Bool' lvalue Var 0x5643703e7088 'x$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x5643703ed2b0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5643703ed280 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5643703ed1a0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5643703ed0c0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5643703ed078 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5643703ed060 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5643703ed020 <col:20> '_Bool' lvalue Var 0x5643703e7278 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5643703ed0a8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5643703ed090 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5643703ed040 <col:38> '_Bool' lvalue Var 0x5643703e6e88 'x$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x5643703ed180 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5643703ed138 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5643703ed120 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5643703ed0e0 <col:56> '_Bool' lvalue Var 0x5643703e7370 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5643703ed168 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5643703ed150 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5643703ed100 <col:74> '_Bool' lvalue Var 0x5643703e7088 'x$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x5643703ed238 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5643703ed1f0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5643703ed1c0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5643703ed268 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5643703ed250 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5643703ed218 <col:102> '_Bool' lvalue Var 0x5643703e7088 'x$r_buff1_thd3' '_Bool'
|   |-CallExpr 0x5643703ed320 <line:777:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5643703ed308 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5643703ed2e8 <col:3> 'void ()' Function 0x56437038d570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5643703ed378 <line:778:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5643703ed360 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5643703ed340 <col:3> 'void ()' Function 0x56437038d4b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5643703ed430 <line:779:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x5643703ed398 <col:3> 'int' lvalue Var 0x5643703e6740 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x5643703ed410 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x5643703ed3f8 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5643703ed3b8 <col:22> 'int' lvalue Var 0x5643703e6740 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x5643703ed3d8 <col:41> 'int' 1
|   |-CallExpr 0x5643703ed488 <line:780:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5643703ed470 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5643703ed450 <col:3> 'void ()' Function 0x56437038d570 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x5643703ed500 <line:781:3, col:36>
|     `-CallExpr 0x5643703ed4e0 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x5643703ed4c8 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x5643703ed4a8 <col:10> 'void *(void)' Function 0x56437038cfc8 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x5643703ed5c8 prev 0x5643703e6488 <line:783:1, line:785:1> line:783:6 fence 'void ()'
| `-CompoundStmt 0x5643703ed668 <line:784:1, line:785:1>
|-FunctionDecl 0x5643703ed698 prev 0x5643703e6548 <line:786:1, line:788:1> line:786:6 isync 'void ()'
| `-CompoundStmt 0x5643703ed738 <line:787:1, line:788:1>
|-FunctionDecl 0x5643703ed768 prev 0x5643703e6608 <line:789:1, line:791:1> line:789:6 lwfence 'void ()'
| `-CompoundStmt 0x5643703ed808 <line:790:1, line:791:1>
`-FunctionDecl 0x5643703ed878 <line:792:1, line:816:1> line:792:5 main 'int ()'
  `-CompoundStmt 0x5643703ef4b8 <line:793:1, line:816:1>
    |-DeclStmt 0x5643703ed990 <line:794:3, col:18>
    | `-VarDecl 0x5643703ed928 <col:3, col:13> col:13 used t2078 'pthread_t':'unsigned long'
    |-CallExpr 0x5643703edb98 <line:795:3, col:54> 'int'
    | |-ImplicitCastExpr 0x5643703edb80 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5643703ed9a8 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x5643703cd9d8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x5643703ed9e8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x5643703ed9c8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x5643703ed928 't2078' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x5643703edbd8 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x5643703eda60 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x5643703eda38 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x5643703eda00 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x5643703edbf0 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5643703eda80 <col:39> 'void *(void *)' Function 0x5643703e77b8 'P0' 'void *(void *)'
    | `-ParenExpr 0x5643703edb00 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x5643703edad8 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x5643703edaa0 <col:52> 'int' 0
    |-DeclStmt 0x5643703edc80 <line:796:3, col:18>
    | `-VarDecl 0x5643703edc18 <col:3, col:13> col:13 used t2079 'pthread_t':'unsigned long'
    |-CallExpr 0x5643703ede28 <line:797:3, col:54> 'int'
    | |-ImplicitCastExpr 0x5643703ede10 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5643703edc98 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x5643703cd9d8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x5643703edcd8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x5643703edcb8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x5643703edc18 't2079' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x5643703ede68 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x5643703edd50 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x5643703edd28 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x5643703edcf0 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x5643703ede80 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5643703edd70 <col:39> 'void *(void *)' Function 0x5643703ea970 'P1' 'void *(void *)'
    | `-ParenExpr 0x5643703eddf0 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x5643703eddc8 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x5643703edd90 <col:52> 'int' 0
    |-DeclStmt 0x5643703edf10 <line:798:3, col:18>
    | `-VarDecl 0x5643703edea8 <col:3, col:13> col:13 used t2080 'pthread_t':'unsigned long'
    |-CallExpr 0x5643703ee0c8 <line:799:3, col:54> 'int'
    | |-ImplicitCastExpr 0x5643703ee0b0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5643703edf28 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x5643703cd9d8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x5643703edf68 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x5643703edf48 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x5643703edea8 't2080' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x5643703ee108 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x5643703edff0 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x5643703edfc8 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x5643703edf90 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x5643703ee120 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5643703ee010 <col:39> 'void *(void *)' Function 0x5643703ec2d0 'P2' 'void *(void *)'
    | `-ParenExpr 0x5643703ee090 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x5643703ee068 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x5643703ee030 <col:52> 'int' 0
    |-CallExpr 0x5643703ee170 <line:800:3, col:27> 'void'
    | `-ImplicitCastExpr 0x5643703ee158 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5643703ee138 <col:3> 'void ()' Function 0x56437038d4b0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x5643703ee240 <line:801:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x5643703ee190 <col:3> '_Bool' lvalue Var 0x5643703e6a18 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x5643703ee228 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x5643703ee208 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x5643703ee1f0 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x5643703ee1b0 <col:21> 'int' lvalue Var 0x5643703e6740 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x5643703ee1d0 <col:41> 'int' 3
    |-CallExpr 0x5643703ee298 <line:802:3, col:25> 'void'
    | `-ImplicitCastExpr 0x5643703ee280 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5643703ee260 <col:3> 'void ()' Function 0x56437038d570 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x5643703ee310 <line:803:3, col:36> 'void'
    | |-ImplicitCastExpr 0x5643703ee2f8 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5643703ee2b8 <col:3> 'void (int)' Function 0x56437038ce50 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x5643703ee350 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x5643703ee338 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x5643703ee2d8 <col:21> '_Bool' lvalue Var 0x5643703e6a18 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x5643703ee3a0 <line:804:3, col:27> 'void'
    | `-ImplicitCastExpr 0x5643703ee388 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5643703ee368 <col:3> 'void ()' Function 0x56437038d4b0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x5643703ee688 <line:805:3, col:103> 'int' '='
    | |-DeclRefExpr 0x5643703ee3c0 <col:3> 'int' lvalue Var 0x5643703e6b90 'x' 'int'
    | `-ConditionalOperator 0x5643703ee658 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x5643703ee480 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x5643703ee438 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x5643703ee420 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x5643703ee3e0 <col:7> '_Bool' lvalue Var 0x5643703e7278 'x$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x5643703ee468 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x5643703ee450 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x5643703ee400 <col:25> '_Bool' lvalue Var 0x5643703e6d20 'x$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x5643703ee640 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x5643703ee4a0 <col:42> 'int' lvalue Var 0x5643703e7200 'x$w_buff0' 'int'
    |   `-ParenExpr 0x5643703ee620 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x5643703ee5f0 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x5643703ee560 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x5643703ee518 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x5643703ee500 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x5643703ee4c0 <col:55> '_Bool' lvalue Var 0x5643703e7370 'x$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x5643703ee548 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x5643703ee530 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x5643703ee4e0 <col:73> '_Bool' lvalue Var 0x5643703e6f20 'x$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x5643703ee5c0 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x5643703ee580 <col:90> 'int' lvalue Var 0x5643703e72f8 'x$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x5643703ee5d8 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x5643703ee5a0 <col:102> 'int' lvalue Var 0x5643703e6b90 'x' 'int'
    |-BinaryOperator 0x5643703ee890 <line:806:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x5643703ee6a8 <col:3> '_Bool' lvalue Var 0x5643703e7278 'x$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x5643703ee878 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5643703ee848 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x5643703ee768 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x5643703ee720 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x5643703ee708 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x5643703ee6c8 <col:20> '_Bool' lvalue Var 0x5643703e7278 'x$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x5643703ee750 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x5643703ee738 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x5643703ee6e8 <col:38> '_Bool' lvalue Var 0x5643703e6d20 'x$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x5643703ee800 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x5643703ee7b8 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x5643703ee788 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x5643703ee830 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x5643703ee818 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x5643703ee7e0 <col:66> '_Bool' lvalue Var 0x5643703e7278 'x$w_buff0_used' '_Bool'
    |-BinaryOperator 0x5643703eeb78 <line:807:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x5643703ee8b0 <col:3> '_Bool' lvalue Var 0x5643703e7370 'x$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x5643703eeb60 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5643703eeb30 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x5643703eea50 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x5643703ee970 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x5643703ee928 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x5643703ee910 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x5643703ee8d0 <col:20> '_Bool' lvalue Var 0x5643703e7278 'x$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x5643703ee958 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x5643703ee940 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x5643703ee8f0 <col:38> '_Bool' lvalue Var 0x5643703e6d20 'x$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x5643703eea30 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x5643703ee9e8 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x5643703ee9d0 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x5643703ee990 <col:56> '_Bool' lvalue Var 0x5643703e7370 'x$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x5643703eea18 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x5643703eea00 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x5643703ee9b0 <col:74> '_Bool' lvalue Var 0x5643703e6f20 'x$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x5643703eeae8 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x5643703eeaa0 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x5643703eea70 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x5643703eeb18 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x5643703eeb00 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x5643703eeac8 <col:102> '_Bool' lvalue Var 0x5643703e7370 'x$w_buff1_used' '_Bool'
    |-BinaryOperator 0x5643703eed80 <line:808:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x5643703eeb98 <col:3> '_Bool' lvalue Var 0x5643703e6d20 'x$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x5643703eed68 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5643703eed38 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x5643703eec58 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x5643703eec10 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x5643703eebf8 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x5643703eebb8 <col:20> '_Bool' lvalue Var 0x5643703e7278 'x$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x5643703eec40 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x5643703eec28 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x5643703eebd8 <col:38> '_Bool' lvalue Var 0x5643703e6d20 'x$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x5643703eecf0 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x5643703eeca8 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x5643703eec78 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x5643703eed20 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x5643703eed08 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x5643703eecd0 <col:66> '_Bool' lvalue Var 0x5643703e6d20 'x$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x5643703ef078 <line:809:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x5643703eeda0 <col:3> '_Bool' lvalue Var 0x5643703e6f20 'x$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x5643703ef060 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5643703ef030 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x5643703eef40 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x5643703eee60 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x5643703eee18 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x5643703eee00 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x5643703eedc0 <col:20> '_Bool' lvalue Var 0x5643703e7278 'x$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x5643703eee48 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x5643703eee30 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x5643703eede0 <col:38> '_Bool' lvalue Var 0x5643703e6d20 'x$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x5643703eef20 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x5643703eeed8 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x5643703eeec0 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x5643703eee80 <col:56> '_Bool' lvalue Var 0x5643703e7370 'x$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x5643703eef08 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x5643703eeef0 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x5643703eeea0 <col:74> '_Bool' lvalue Var 0x5643703e6f20 'x$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x5643703eefe8 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x5643703eefa0 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x5643703eef60 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x5643703ef018 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x5643703ef000 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x5643703eefc8 <col:102> '_Bool' lvalue Var 0x5643703e6f20 'x$r_buff1_thd0' '_Bool'
    |-CallExpr 0x5643703ef0d0 <line:810:3, col:25> 'void'
    | `-ImplicitCastExpr 0x5643703ef0b8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5643703ef098 <col:3> 'void ()' Function 0x56437038d570 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x5643703ef128 <line:811:3, col:27> 'void'
    | `-ImplicitCastExpr 0x5643703ef110 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5643703ef0f0 <col:3> 'void ()' Function 0x56437038d4b0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x5643703ef360 <line:812:3, col:85> '_Bool' '='
    | |-DeclRefExpr 0x5643703ef148 <col:3> '_Bool' lvalue Var 0x5643703e6a90 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x5643703ef348 <col:21, col:85> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x5643703ef330 <col:21, col:85> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x5643703ef310 <col:22, col:85> 'int'
    |       `-BinaryOperator 0x5643703ef2f0 <col:23, col:84> 'int' '&&'
    |         |-BinaryOperator 0x5643703ef258 <col:23, col:56> 'int' '&&'
    |         | |-BinaryOperator 0x5643703ef1c0 <col:23, col:28> 'int' '=='
    |         | | |-ImplicitCastExpr 0x5643703ef1a8 <col:23> 'int' <LValueToRValue>
    |         | | | `-DeclRefExpr 0x5643703ef168 <col:23> 'int' lvalue Var 0x5643703e7590 'z' 'int'
    |         | | `-IntegerLiteral 0x5643703ef188 <col:28> 'int' 2
    |         | `-BinaryOperator 0x5643703ef238 <col:33, col:56> 'int' '=='
    |         |   |-ImplicitCastExpr 0x5643703ef220 <col:33> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x5643703ef1e0 <col:33> 'int' lvalue Var 0x5643703e6860 '__unbuffered_p0_EAX' 'int'
    |         |   `-IntegerLiteral 0x5643703ef200 <col:56> 'int' 0
    |         `-BinaryOperator 0x5643703ef2d0 <col:61, col:84> 'int' '=='
    |           |-ImplicitCastExpr 0x5643703ef2b8 <col:61> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x5643703ef278 <col:61> 'int' lvalue Var 0x5643703e6980 '__unbuffered_p2_EAX' 'int'
    |           `-IntegerLiteral 0x5643703ef298 <col:84> 'int' 1
    |-CallExpr 0x5643703ef3b8 <line:813:3, col:25> 'void'
    | `-ImplicitCastExpr 0x5643703ef3a0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5643703ef380 <col:3> 'void ()' Function 0x56437038d570 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x5643703ef430 <line:814:3, col:36> 'void'
    | |-ImplicitCastExpr 0x5643703ef418 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5643703ef3d8 <col:3> 'void (int)' Function 0x56437038d238 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x5643703ef470 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x5643703ef458 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x5643703ef3f8 <col:21> '_Bool' lvalue Var 0x5643703e6a90 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x5643703ef4a8 <line:815:3, col:10>
      `-IntegerLiteral 0x5643703ef488 <col:10> 'int' 0
