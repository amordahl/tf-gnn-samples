TranslationUnitDecl 0x558c11384f88 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x558c11385848 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x558c11385520 '__int128'
|-TypedefDecl 0x558c113858b8 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x558c11385540 'unsigned __int128'
|-TypedefDecl 0x558c11385bc0 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x558c11385990 'struct __NSConstantString_tag'
|   `-Record 0x558c11385910 '__NSConstantString_tag'
|-TypedefDecl 0x558c11385c68 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x558c11385c20 'char *'
|   `-BuiltinType 0x558c11385020 'char'
|-TypedefDecl 0x558c113c4b60 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x558c11385f00 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x558c11385d40 'struct __va_list_tag'
|     `-Record 0x558c11385cc0 '__va_list_tag'
|-FunctionDecl 0x558c113c4c80 <pthread-wmm/safe014_power.opt_false-unreach-call.i:1:1, col:41> col:14 used __VERIFIER_nondet_bool '_Bool (void)' extern
|-FunctionDecl 0x558c113c4e50 <line:2:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x558c113c4d80 <col:31> col:34 'int'
|-FunctionDecl 0x558c113c4fc8 <line:3:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x558c113c50f0 <line:4:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x558c113c5238 <line:5:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x558c113c51a8 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x558c113c5468 <col:40, col:99>
|   |-IfStmt 0x558c113c5438 <col:42, col:88>
|   | |-UnaryOperator 0x558c113c5318 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x558c113c5300 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x558c113c52e0 <col:47> 'int' lvalue ParmVar 0x558c113c51a8 'expression' 'int'
|   | `-CompoundStmt 0x558c113c5420 <col:59, col:88>
|   |   `-LabelStmt 0x558c113c5408 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x558c113c5398 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x558c113c5380 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x558c113c5330 <col:68> 'void () __attribute__((noreturn))' Function 0x558c113c50f0 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x558c113c5450 <col:89>
|   `-ReturnStmt 0x558c113c5458 <col:91>
|-FunctionDecl 0x558c113c54b0 <line:6:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x558c113c5570 <line:7:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x558c113c58f0 <line:9:1, line:11:76> line:9:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x558c113c5628 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x558c113c56a8 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x558c113c5728 <line:10:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x558c113c57a8 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x558c113c59b0 <line:11:22>
|-FunctionDecl 0x558c113eaf10 <line:12:1, line:14:76> line:12:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x558c113c5a20 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x558c113c5aa0 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x558c113ead40 <line:13:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x558c113eadc0 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x558c113eafd0 <line:14:22>
|-FunctionDecl 0x558c113eb280 <line:15:1, line:16:76> line:15:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x558c113eb040 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x558c113eb0c0 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x558c113eb140 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x558c113eb338 <line:16:22>
|-TypedefDecl 0x558c113eb3a8 <line:18:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x558c113850e0 'unsigned char'
|-TypedefDecl 0x558c113eb418 <line:19:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x558c11385100 'unsigned short'
|-TypedefDecl 0x558c113eb488 <line:20:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x558c11385120 'unsigned int'
|-TypedefDecl 0x558c113eb4f8 <line:21:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x558c11385140 'unsigned long'
|-TypedefDecl 0x558c113eb568 <line:22:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x558c11385040 'signed char'
|-TypedefDecl 0x558c113eb5d8 <line:23:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x558c113850e0 'unsigned char'
|-TypedefDecl 0x558c113eb648 <line:24:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x558c11385060 'short'
|-TypedefDecl 0x558c113eb6b8 <line:25:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x558c11385100 'unsigned short'
|-TypedefDecl 0x558c113eb728 <line:26:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x558c11385080 'int'
|-TypedefDecl 0x558c113eb798 <line:27:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x558c11385120 'unsigned int'
|-TypedefDecl 0x558c113eb808 <line:28:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x558c113850a0 'long'
|-TypedefDecl 0x558c113eb878 <line:29:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x558c11385140 'unsigned long'
|-TypedefDecl 0x558c113eb8e8 <line:30:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x558c113850a0 'long'
|-TypedefDecl 0x558c113eb958 <line:31:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x558c11385140 'unsigned long'
|-TypedefDecl 0x558c113eb9c8 <line:32:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x558c11385140 'unsigned long'
|-TypedefDecl 0x558c113eba38 <line:33:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x558c11385120 'unsigned int'
|-TypedefDecl 0x558c113ebaa8 <line:34:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x558c11385120 'unsigned int'
|-TypedefDecl 0x558c113ebb18 <line:35:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x558c11385140 'unsigned long'
|-TypedefDecl 0x558c113ebb88 <line:36:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x558c11385140 'unsigned long'
|-TypedefDecl 0x558c113ebbf8 <line:37:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x558c11385120 'unsigned int'
|-TypedefDecl 0x558c113ebc68 <line:38:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x558c11385140 'unsigned long'
|-TypedefDecl 0x558c113ebcd8 <line:39:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x558c113850a0 'long'
|-TypedefDecl 0x558c113ebd68 <line:40:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x558c113850a0 'long'
|-TypedefDecl 0x558c113ebdd8 <line:41:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x558c11385080 'int'
|-RecordDecl 0x558c113ebe30 <line:42:9, col:32> col:9 struct definition
| `-FieldDecl 0x558c113ebf78 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x558c113ec030 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x558c113ebfd0 'struct __fsid_t' sugar
|   `-RecordType 0x558c113ebeb0 '__fsid_t'
|     `-Record 0x558c113ebe30 ''
|-TypedefDecl 0x558c113ec0b8 <line:43:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x558c113850a0 'long'
|-TypedefDecl 0x558c113ec128 <line:44:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x558c11385140 'unsigned long'
|-TypedefDecl 0x558c113ec198 <line:45:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x558c11385140 'unsigned long'
|-TypedefDecl 0x558c113ec208 <line:46:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x558c11385120 'unsigned int'
|-TypedefDecl 0x558c113ec278 <line:47:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x558c113850a0 'long'
|-TypedefDecl 0x558c113ec2e8 <line:48:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x558c11385120 'unsigned int'
|-TypedefDecl 0x558c113ec358 <line:49:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x558c113850a0 'long'
|-TypedefDecl 0x558c113ec3c8 <line:50:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x558c11385080 'int'
|-TypedefDecl 0x558c113ec438 <line:51:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x558c11385080 'int'
|-TypedefDecl 0x558c113ec4a8 <line:52:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x558c11385080 'int'
|-TypedefDecl 0x558c113ec518 <line:53:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x558c113857a0 'void *'
|   `-BuiltinType 0x558c11384fe0 'void'
|-TypedefDecl 0x558c113ec588 <line:54:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x558c113850a0 'long'
|-TypedefDecl 0x558c113ec5f8 <line:55:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x558c113850a0 'long'
|-TypedefDecl 0x558c113ec668 <line:56:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x558c113850a0 'long'
|-TypedefDecl 0x558c113ec6d8 <line:57:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x558c11385140 'unsigned long'
|-TypedefDecl 0x558c113ec748 <line:58:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x558c11385140 'unsigned long'
|-TypedefDecl 0x558c113ec7b8 <line:59:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x558c11385140 'unsigned long'
|-TypedefDecl 0x558c113ec828 <line:60:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x558c11385140 'unsigned long'
|-TypedefDecl 0x558c113ec898 <line:61:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x558c113850a0 'long'
|-TypedefDecl 0x558c113ec908 <line:62:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x558c113850a0 'long'
|-TypedefDecl 0x558c113ec978 <line:63:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x558c113850a0 'long'
|-TypedefDecl 0x558c113ec9e8 <line:64:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x558c11385140 'unsigned long'
|-TypedefDecl 0x558c113eca78 <line:65:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x558c113eca40 '__off64_t' sugar
|   |-Typedef 0x558c113ebd68 '__off64_t'
|   `-BuiltinType 0x558c113850a0 'long'
|-TypedefDecl 0x558c113ecb70 <line:66:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x558c113ecb30 '__quad_t *'
|   `-TypedefType 0x558c113ecad0 '__quad_t' sugar
|     |-Typedef 0x558c113eb8e8 '__quad_t'
|     `-BuiltinType 0x558c113850a0 'long'
|-TypedefDecl 0x558c113ecbe0 <line:67:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x558c11385c20 'char *'
|   `-BuiltinType 0x558c11385020 'char'
|-TypedefDecl 0x558c113ecc50 <line:68:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x558c113850a0 'long'
|-TypedefDecl 0x558c113eccc0 <line:69:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x558c11385120 'unsigned int'
|-FunctionDecl 0x558c113ece38 <line:70:1, line:74:1> line:71:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x558c113ecd60 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x558c113ed148 <line:72:1, line:74:1>
|   `-ReturnStmt 0x558c113ed138 <line:73:3, col:34>
|     `-CallExpr 0x558c113ed0f8 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x558c113ed0e0 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x558c113ed070 <col:10> '<builtin fn type>' Function 0x558c113ecee0 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x558c113ed120 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x558c113ed090 <col:29> 'unsigned int' lvalue ParmVar 0x558c113ecd60 '__bsx' 'unsigned int'
|-FunctionDecl 0x558c113ecee0 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x558c113ecf80 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x558c113ecff0 <col:10> Implicit
| `-ConstAttr 0x558c113ed048 <col:10> Implicit
|-FunctionDecl 0x558c113ed2a0 <line:75:1, line:79:1> line:76:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x558c113ed198 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x558c113ed5b8 <line:77:1, line:79:1>
|   `-ReturnStmt 0x558c113ed5a8 <line:78:3, col:34>
|     `-CallExpr 0x558c113ed568 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x558c113ed550 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x558c113ed4d8 <col:10> '<builtin fn type>' Function 0x558c113ed348 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x558c113ed590 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x558c113ed4f8 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x558c113ed198 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x558c113ed348 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x558c113ed3e8 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x558c113ed458 <col:10> Implicit
| `-ConstAttr 0x558c113ed4b0 <col:10> Implicit
|-TypedefDecl 0x558c113ed5e8 <line:80:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x558c11385140 'unsigned long'
|-TypedefDecl 0x558c113ed678 <line:82:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x558c113ed640 '__time_t' sugar
|   |-Typedef 0x558c113ec278 '__time_t'
|   `-BuiltinType 0x558c113850a0 'long'
|-RecordDecl 0x558c113ed6d0 <line:85:1, line:89:3> line:85:8 struct timespec definition
| |-FieldDecl 0x558c113ed788 <line:87:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x558c113ed818 <line:88:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x558c113ed8a8 <line:90:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x558c113ed870 '__pid_t' sugar
|   |-Typedef 0x558c113ebdd8 '__pid_t'
|   `-BuiltinType 0x558c11385080 'int'
|-RecordDecl 0x558c113ed900 <line:91:1, line:94:3> line:91:8 struct sched_param definition
| `-FieldDecl 0x558c113ed9c0 <line:93:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x558c113eda10 <line:97:1, line:100:3> line:97:8 struct __sched_param definition
| `-FieldDecl 0x558c113edad0 <line:99:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x558c113edb38 <line:101:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x558c11385140 'unsigned long'
|-RecordDecl 0x558c113edb90 <line:102:9, line:105:1> line:102:9 struct definition
| `-FieldDecl 0x558c113efe70 <line:104:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x558c113eff20 <line:102:1, line:105:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x558c113efec0 'struct cpu_set_t' sugar
|   `-RecordType 0x558c113edc10 'cpu_set_t'
|     `-Record 0x558c113edb90 ''
|-FunctionDecl 0x558c113f01f8 <line:107:1, line:108:42> line:107:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x558c113effc8 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x558c113f00d0 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x558c113f02a8 <line:108:19>
|-FunctionDecl 0x558c113f0480 <line:109:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x558c113f0310 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x558c113f0528 <col:69>
|-FunctionDecl 0x558c113f06a0 <line:110:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x558c113f0590 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x558c113f0748 <col:64>
|-FunctionDecl 0x558c113f0a08 <line:113:1, line:114:45> line:113:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x558c113f07b0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x558c113f08e8 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x558c113f0ab8 <line:114:22>
|-FunctionDecl 0x558c113f0e60 <line:115:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x558c113f0b20 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x558c113f0c18 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x558c113f0f10 <col:88>
|-FunctionDecl 0x558c113f11c8 <line:116:1, line:117:85> line:116:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x558c113f0f78 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x558c113f0ff8 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x558c113f1088 <line:117:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x558c113f1280 <col:62>
|-FunctionDecl 0x558c113f13f8 <line:118:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x558c113f12e8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x558c113f14a0 <col:63>
|-FunctionDecl 0x558c113f15c8 <line:119:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x558c113f1668 <col:47>
|-FunctionDecl 0x558c113f1770 <line:120:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x558c113f16d8 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x558c113f1818 <col:69>
|-FunctionDecl 0x558c113f1920 <line:121:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x558c113f1888 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x558c113f19c8 <col:69>
|-FunctionDecl 0x558c113f1c88 <line:122:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x558c113f1a30 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x558c113f1b68 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x558c113f1d38 <col:88>
|-TypedefDecl 0x558c113f1dc8 <line:126:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x558c113f1d90 '__clock_t' sugar
|   |-Typedef 0x558c113ec0b8 '__clock_t'
|   `-BuiltinType 0x558c113850a0 'long'
|-TypedefDecl 0x558c113f27e0 <line:129:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x558c113f1e20 '__clockid_t' sugar
|   |-Typedef 0x558c113ec4a8 '__clockid_t'
|   `-BuiltinType 0x558c11385080 'int'
|-TypedefDecl 0x558c113f2878 <line:130:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x558c113f2840 '__timer_t' sugar
|   |-Typedef 0x558c113ec518 '__timer_t'
|   `-PointerType 0x558c113857a0 'void *'
|     `-BuiltinType 0x558c11384fe0 'void'
|-RecordDecl 0x558c113f28d0 <line:132:1, line:145:1> line:132:8 struct tm definition
| |-FieldDecl 0x558c113f2990 <line:134:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x558c113f29f8 <line:135:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x558c113f2a60 <line:136:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x558c113f2ac8 <line:137:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x558c113f2b30 <line:138:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x558c113f2b98 <line:139:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x558c113f2c00 <line:140:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x558c113f2c68 <line:141:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x558c113f2cd0 <line:142:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x558c113f2d38 <line:143:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x558c113f2da0 <line:144:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x558c113f2df0 <line:148:1, line:152:3> line:148:8 struct itimerspec definition
| |-FieldDecl 0x558c113f2eb8 <line:150:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x558c113f2f28 <line:151:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x558c113f2fd0 <line:153:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x558c113f31a0 <line:155:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x558c113f3240 <col:45>
|-FunctionDecl 0x558c113f3420 <line:156:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x558c113f3310 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x558c113f34c8 <col:54>
|-FunctionDecl 0x558c113f36c8 <line:157:1, line:158:73> line:157:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x558c113f3530 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x558c113f35a8 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x558c113f3778 <line:158:22>
| `-ConstAttr 0x558c113f4410 <col:63>
|-FunctionDecl 0x558c113f4610 <line:159:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x558c113f4508 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x558c113f46b8 <col:56>
|-FunctionDecl 0x558c113f4a60 <line:160:1, line:162:77> line:160:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x558c113f4728 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x558c113f47a0 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x558c113f4820 <line:161:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x558c113f4918 <line:162:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x558c113f4b20 <col:54>
|-RecordDecl 0x558c113f4b78 <line:164:9, line:171:1> line:164:16 struct __locale_struct definition
| |-RecordDecl 0x558c113f4c28 parent 0x558c11384f88 <line:166:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x558c113f4e88 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x558c113f4f28 <line:167:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x558c113f4f90 <line:168:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x558c113f4ff8 <line:169:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x558c113f50e8 <line:170:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x558c113f5208 <line:164:1, line:171:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x558c113f51b0 'struct __locale_struct *'
|   `-ElaboratedType 0x558c113f5140 'struct __locale_struct' sugar
|     `-RecordType 0x558c113f4c00 'struct __locale_struct'
|       `-Record 0x558c113f4b78 '__locale_struct'
|-TypedefDecl 0x558c113f52b8 <line:172:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x558c113f5280 '__locale_t' sugar
|   |-Typedef 0x558c113f5208 '__locale_t'
|   `-PointerType 0x558c113f51b0 'struct __locale_struct *'
|     `-ElaboratedType 0x558c113f5140 'struct __locale_struct' sugar
|       `-RecordType 0x558c113f4c00 'struct __locale_struct'
|         `-Record 0x558c113f4b78 '__locale_struct'
|-FunctionDecl 0x558c113f56b0 <line:173:1, line:176:63> line:173:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x558c113f5328 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x558c113f53a0 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x558c113f5438 <line:174:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x558c113f54c8 <line:175:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x558c113f5540 <line:176:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x558c113f5778 <col:40>
|-FunctionDecl 0x558c113f5968 <line:178:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x558c113f5840 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x558c113f5a10 <col:66>
|-FunctionDecl 0x558c113f5b20 <line:179:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x558c113f5a78 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x558c113f5bc8 <col:69>
|-FunctionDecl 0x558c113f5df8 <line:181:1, line:182:75> line:181:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x558c113f5c30 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x558c113f5cc0 <line:182:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x558c113f5ea8 <col:52>
|-FunctionDecl 0x558c113f6050 <line:183:1, line:184:78> line:183:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x558c113f5f10 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x558c113f5fa0 <line:184:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x558c113f6100 <col:55>
|-FunctionDecl 0x558c113f6298 <line:186:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x558c113f6180 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x558c113f6340 <col:62>
|-FunctionDecl 0x558c113f6578 <line:187:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x558c113f63a8 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x558c113f6620 <col:60>
|-FunctionDecl 0x558c113f6848 <line:189:1, line:190:67> line:189:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x558c113f66a0 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x558c113f6720 <line:190:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x558c113f68f8 <col:44>
|-FunctionDecl 0x558c113f6b08 <line:191:1, line:192:72> line:191:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x558c113f6960 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x558c113f69e0 <line:192:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x558c113f6bb8 <col:49>
|-VarDecl 0x558c113f6cb8 <line:193:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x558c113f6d38 <line:194:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x558c113f6db8 <line:195:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x558c113f6e80 <line:196:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x558c113f6fb0 <line:197:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x558c113f7050 <col:42>
|-VarDecl 0x558c113f70c0 <line:198:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x558c113f7140 <line:199:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x558c113f72c8 <line:200:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x558c113f71b8 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x558c113f7370 <col:57>
|-FunctionDecl 0x558c113f84f0 <line:201:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x558c113f73f0 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x558c113f8598 <col:56>
|-FunctionDecl 0x558c113f86a8 <line:202:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x558c113f8618 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x558c113f8750 <col:59>
|-FunctionDecl 0x558c113f8858 <line:203:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x558c113f87c0 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x558c113f8900 <col:48>
| `-ConstAttr 0x558c113f8958 <col:89>
|-FunctionDecl 0x558c113f8bb8 <line:204:1, line:205:37> line:204:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x558c113f8a08 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x558c113f8a98 <line:205:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x558c113f8e18 <line:206:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x558c113f8ca8 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x558c113f8d38 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x558c113f8ec8 <col:88>
|-FunctionDecl 0x558c113f9060 <line:207:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x558c113f8f30 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x558c113f8fc0 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x558c113f9110 <col:88>
|-FunctionDecl 0x558c113f9328 <line:208:1, line:209:45> line:208:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x558c113f9178 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x558c113f9208 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x558c113f93d8 <line:209:22>
|-FunctionDecl 0x558c113f9778 <line:210:1, line:212:30> line:210:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x558c113f9440 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x558c113f9500 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x558c113f9590 <line:211:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x558c113f9620 <line:212:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x558c113f9a78 <line:213:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x558c113f9878 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x558c113f9950 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x558c113f9b28 <col:85>
|-FunctionDecl 0x558c113f9f18 <line:214:1, line:216:75> line:214:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x558c113f9b90 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x558c113f9cc8 <line:215:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x558c113f9dd0 <line:216:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x558c113f9fd0 <col:52>
|-FunctionDecl 0x558c113fa148 <line:217:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x558c113fa038 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x558c113fa1f0 <col:61>
|-FunctionDecl 0x558c113fa668 <line:218:1, line:220:85> line:218:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x558c113fa258 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x558c113fa2d8 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x558c113fa408 <line:219:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x558c113fa510 <line:220:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x558c113fa728 <col:62>
|-FunctionDecl 0x558c113fa948 <line:221:1, line:222:45> line:221:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x558c113fa790 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x558c113fa820 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x558c113fa9f8 <line:222:22>
|-FunctionDecl 0x558c113faaf8 <line:223:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x558c113faa60 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x558c113faba0 <col:65>
|-TypedefDecl 0x558c113fac10 <line:225:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x558c11385140 'unsigned long'
|-RecordDecl 0x558c113fac68 <line:226:1, line:230:1> line:226:7 union pthread_attr_t definition
| |-FieldDecl 0x558c113fadb0 <line:228:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x558c113fae18 <line:229:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x558c113faec8 <line:231:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x558c113fae70 'union pthread_attr_t' sugar
|   `-RecordType 0x558c113facf0 'union pthread_attr_t'
|     `-Record 0x558c113fac68 'pthread_attr_t'
|-RecordDecl 0x558c113faf20 <line:232:9, line:236:1> line:232:16 struct __pthread_internal_list definition
| |-FieldDecl 0x558c113fb098 <line:234:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x558c113fb110 <line:235:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x558c113fb1c0 <line:232:1, line:236:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x558c113fb160 'struct __pthread_internal_list' sugar
|   `-RecordType 0x558c113fafa0 'struct __pthread_internal_list'
|     `-Record 0x558c113faf20 '__pthread_internal_list'
|-RecordDecl 0x558c113fb230 <line:237:9, line:251:1> line:237:9 union definition
| |-RecordDecl 0x558c113fb2d8 parent 0x558c11384f88 <line:239:3, line:248:3> line:239:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x558c113fb3b0 <line:241:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x558c113fb418 <line:242:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x558c113fb480 <line:243:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x558c113ff530 <line:244:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x558c113ff598 <line:245:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x558c113ff600 <line:246:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x558c113ff688 <line:247:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x558c113ff740 <line:239:3, line:248:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x558c113ff830 <line:249:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x558c113ff898 <line:250:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x558c113ffa20 <line:237:1, line:251:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x558c113ff9c0 'union pthread_mutex_t' sugar
|   `-RecordType 0x558c113fb2b0 'pthread_mutex_t'
|     `-Record 0x558c113fb230 ''
|-RecordDecl 0x558c113ffa90 <line:252:9, line:256:1> line:252:9 union definition
| |-FieldDecl 0x558c113ffbd0 <line:254:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x558c113ffc38 <line:255:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x558c113ffcf0 <line:252:1, line:256:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x558c113ffc90 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x558c113ffb10 'pthread_mutexattr_t'
|     `-Record 0x558c113ffa90 ''
|-RecordDecl 0x558c113ffd60 <line:257:9, line:272:1> line:257:9 union definition
| |-RecordDecl 0x558c113ffe08 <line:259:3, line:269:3> line:259:3 struct definition
| | |-FieldDecl 0x558c113ffed0 <line:261:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x558c113fff38 <line:262:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x558c113fffa0 <line:263:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x558c11400008 <line:264:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x558c11400070 <line:265:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x558c114000d8 <line:266:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x558c11400140 <line:267:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x558c114001a8 <line:268:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x558c11400260 <line:259:3, line:269:5> col:5 __data 'struct (anonymous struct at pthread-wmm/safe014_power.opt_false-unreach-call.i:259:3)':'struct pthread_cond_t::(anonymous at pthread-wmm/safe014_power.opt_false-unreach-call.i:259:3)'
| |-FieldDecl 0x558c11400350 <line:270:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x558c114003b8 <line:271:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x558c11400540 <line:257:1, line:272:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x558c11400490 'union pthread_cond_t' sugar
|   `-RecordType 0x558c113ffde0 'pthread_cond_t'
|     `-Record 0x558c113ffd60 ''
|-RecordDecl 0x558c114005b0 <line:273:9, line:277:1> line:273:9 union definition
| |-FieldDecl 0x558c114006b0 <line:275:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x558c11400718 <line:276:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x558c114007d0 <line:273:1, line:277:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x558c11400770 'union pthread_condattr_t' sugar
|   `-RecordType 0x558c11400630 'pthread_condattr_t'
|     `-Record 0x558c114005b0 ''
|-TypedefDecl 0x558c11400858 <line:278:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x558c11385120 'unsigned int'
|-TypedefDecl 0x558c114008c8 <line:279:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x558c11385080 'int'
|-RecordDecl 0x558c11400920 <line:280:9, line:298:1> line:280:9 union definition
| |-RecordDecl 0x558c114009c8 <line:282:3, line:295:3> line:282:3 struct definition
| | |-FieldDecl 0x558c11400a90 <line:284:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x558c11400af8 <line:285:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x558c11400b60 <line:286:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x558c11400bc8 <line:287:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x558c11400c30 <line:288:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x558c11400c98 <line:289:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x558c11400d00 <line:290:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x558c11400d68 <line:291:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x558c11400dd0 <line:292:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x558c11400e38 <line:293:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x558c11400ea0 <line:294:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x558c11400f50 <line:282:3, line:295:5> col:5 __data 'struct (anonymous struct at pthread-wmm/safe014_power.opt_false-unreach-call.i:282:3)':'struct pthread_rwlock_t::(anonymous at pthread-wmm/safe014_power.opt_false-unreach-call.i:282:3)'
| |-FieldDecl 0x558c11400ff8 <line:296:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x558c11401060 <line:297:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x558c114011b0 <line:280:1, line:298:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x558c11401150 'union pthread_rwlock_t' sugar
|   `-RecordType 0x558c114009a0 'pthread_rwlock_t'
|     `-Record 0x558c11400920 ''
|-RecordDecl 0x558c11401220 <line:299:9, line:303:1> line:299:9 union definition
| |-FieldDecl 0x558c11401360 <line:301:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x558c114013c8 <line:302:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x558c11401480 <line:299:1, line:303:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x558c11401420 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x558c114012a0 'pthread_rwlockattr_t'
|     `-Record 0x558c11401220 ''
|-TypedefDecl 0x558c11403560 <line:304:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x558c11385084 'volatile int' volatile
|   `-BuiltinType 0x558c11385080 'int'
|-RecordDecl 0x558c114035b8 <line:305:9, line:309:1> line:305:9 union definition
| |-FieldDecl 0x558c11403700 <line:307:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x558c11403768 <line:308:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x558c11403820 <line:305:1, line:309:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x558c114037c0 'union pthread_barrier_t' sugar
|   `-RecordType 0x558c11403640 'pthread_barrier_t'
|     `-Record 0x558c114035b8 ''
|-RecordDecl 0x558c11403890 <line:310:9, line:314:1> line:310:9 union definition
| |-FieldDecl 0x558c11403990 <line:312:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x558c114039f8 <line:313:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x558c11403ab0 <line:310:1, line:314:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x558c11403a50 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x558c11403910 'pthread_barrierattr_t'
|     `-Record 0x558c11403890 ''
|-TypedefDecl 0x558c11403bc8 <line:315:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x558c11403b60 'long [8]' 8 
|   `-BuiltinType 0x558c113850a0 'long'
|-EnumDecl 0x558c11403c20 <line:316:1, line:320:1> line:316:1
| |-EnumConstantDecl 0x558c11403ce8 <line:318:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x558c11403d38 <line:319:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x558c11403d88 <line:321:1, line:332:1> line:321:1
| |-EnumConstantDecl 0x558c11403e58 <line:323:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x558c11403ea8 <line:324:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x558c11403ef8 <line:325:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x558c11403f48 <line:326:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x558c11403fd0 <line:328:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x558c11403fb8 <col:26> 'int'
| |   `-DeclRefExpr 0x558c11403f98 <col:26> 'int' EnumConstant 0x558c11403e58 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x558c11404058 <line:329:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x558c11404040 <col:29> 'int'
| |   `-DeclRefExpr 0x558c11404020 <col:29> 'int' EnumConstant 0x558c11403ea8 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x558c114040e0 <line:330:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x558c114040c8 <col:30> 'int'
| |   `-DeclRefExpr 0x558c114040a8 <col:30> 'int' EnumConstant 0x558c11403ef8 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x558c11404168 <line:331:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x558c11404150 <col:27> 'int'
|     `-DeclRefExpr 0x558c11404130 <col:27> 'int' EnumConstant 0x558c11403fd0 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x558c114041b8 <line:333:1, line:339:1> line:333:1
| |-EnumConstantDecl 0x558c11404288 <line:335:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x558c11404310 <line:336:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x558c114042f8 <col:30> 'int'
| |   `-DeclRefExpr 0x558c114042d8 <col:30> 'int' EnumConstant 0x558c11404288 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x558c11404360 <line:337:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x558c114043e8 <line:338:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x558c114043d0 <col:29> 'int'
|     `-DeclRefExpr 0x558c114043b0 <col:29> 'int' EnumConstant 0x558c11404360 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x558c11404438 <line:340:1, line:345:1> line:340:1
| |-EnumConstantDecl 0x558c11404508 <line:342:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x558c11404570 <line:343:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x558c114045c0 <line:344:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x558c11404610 <line:346:1, line:352:1> line:346:1
| |-EnumConstantDecl 0x558c114046d8 <line:348:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x558c11404728 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x558c11404778 <line:350:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x558c11404800 <line:351:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x558c114047e8 <col:31> 'int'
|     `-DeclRefExpr 0x558c114047c8 <col:31> 'int' EnumConstant 0x558c114046d8 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x558c11404850 <line:353:1, line:357:1> line:353:1
| |-EnumConstantDecl 0x558c11404918 <line:355:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x558c11404968 <line:356:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x558c114049b8 <line:358:1, line:362:1> line:358:1
| |-EnumConstantDecl 0x558c11404a88 <line:360:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x558c11404ad8 <line:361:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x558c11404b28 <line:363:1, line:367:1> line:363:1
| |-EnumConstantDecl 0x558c11404bf8 <line:365:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x558c11404c48 <line:366:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x558c11404c98 <line:368:1, line:374:1> line:368:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x558c11404ed8 <line:370:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x558c11404f40 <line:371:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x558c11404fa8 <line:372:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x558c114050c8 <line:373:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x558c11405118 <line:375:1, line:379:1> line:375:1
| |-EnumConstantDecl 0x558c114051e8 <line:377:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x558c11405238 <line:378:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x558c11405288 <line:380:1, line:384:1> line:380:1
| |-EnumConstantDecl 0x558c11405358 <line:382:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x558c114053a8 <line:383:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x558c114059d8 <line:386:1, line:389:96> line:386:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x558c114054a0 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x558c114055c0 <line:387:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x558c114057c0 <line:388:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x558c11405840 <line:389:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x558c11405a98 <col:47>
| |-NonNullAttr 0x558c11405af0 <col:77, col:94> 1 3
| `-CallbackAttr 0x558c11405b28 <line:386:12> Implicit 2 3
|-FunctionDecl 0x558c11405c50 <line:390:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x558c11405b80 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x558c11405ea8 <line:391:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x558c11405d08 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x558c11405d88 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x558c11406078 <line:392:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x558c11405f68 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x558c11406120 <col:60>
|-FunctionDecl 0x558c11406270 <line:393:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x558c11406310 <col:54>
| `-ConstAttr 0x558c11406368 <col:95>
|-FunctionDecl 0x558c11406da0 <line:394:1, line:395:70> line:394:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x558c114063a0 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x558c11406418 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x558c11406e50 <line:395:19>
| `-ConstAttr 0x558c11406ea8 <col:60>
|-FunctionDecl 0x558c11407078 <line:396:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x558c11406f40 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x558c11407120 <col:71>
| `-NonNullAttr 0x558c11407178 <col:112, col:126> 1
|-FunctionDecl 0x558c11407280 <line:397:1, line:398:79> line:397:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x558c114071c8 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x558c11407328 <line:398:22>
| `-NonNullAttr 0x558c11407380 <col:63, col:77> 1
|-FunctionDecl 0x558c114075a8 <line:399:1, line:401:82> line:399:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x558c114073c8 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x558c11407448 <line:400:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x558c11407658 <line:401:22>
| `-NonNullAttr 0x558c114076b0 <col:63, col:80> 1 2
|-FunctionDecl 0x558c114078b8 <line:402:1, line:404:79> line:402:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x558c114076f8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x558c11407778 <line:403:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x558c11407968 <line:404:22>
| `-NonNullAttr 0x558c114079c0 <col:63, col:77> 1
|-FunctionDecl 0x558c11407c18 <line:405:1, line:407:82> line:405:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x558c11407a08 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x558c11407ab0 <line:406:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x558c11407cc8 <line:407:22>
| `-NonNullAttr 0x558c11407d20 <col:63, col:80> 1 2
|-FunctionDecl 0x558c11408f78 <line:408:1, line:410:79> line:408:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x558c11408dc0 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x558c11408e38 <line:409:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x558c11409028 <line:410:22>
| `-NonNullAttr 0x558c11409080 <col:63, col:77> 1
|-FunctionDecl 0x558c114092b8 <line:411:1, line:413:82> line:411:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x558c114090c8 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x558c11409158 <line:412:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x558c11409368 <line:413:22>
| `-NonNullAttr 0x558c114093c0 <col:63, col:80> 1 2
|-FunctionDecl 0x558c114095f8 <line:414:1, line:416:97> line:414:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x558c11409408 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x558c11409498 <line:415:12, line:416:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x558c114096a8 <col:37>
| `-NonNullAttr 0x558c11409700 <col:78, col:95> 1 2
|-FunctionDecl 0x558c114098e8 <line:417:1, line:419:82> line:417:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x558c11409748 <col:41, line:418:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x558c114097c8 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x558c11409998 <line:419:22>
| `-NonNullAttr 0x558c114099f0 <col:63, col:80> 1 2
|-FunctionDecl 0x558c11409b78 <line:420:1, line:421:79> line:420:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x558c11409a38 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x558c11409ab8 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x558c11409c28 <line:421:22>
| `-NonNullAttr 0x558c11409c80 <col:63, col:77> 1
|-FunctionDecl 0x558c1140ae58 <line:422:1, line:424:82> line:422:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x558c11409cc8 <col:42, line:423:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x558c11409d48 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x558c1140af08 <line:424:22>
| `-NonNullAttr 0x558c1140af60 <col:63, col:80> 1 2
|-FunctionDecl 0x558c1140b0e8 <line:425:1, line:427:79> line:425:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x558c1140afa8 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x558c1140b028 <line:426:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x558c1140b198 <line:427:22>
| `-NonNullAttr 0x558c1140b1f0 <col:63, col:77> 1
|-FunctionDecl 0x558c1140b398 <line:428:1, line:430:82> line:428:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x558c1140b238 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x558c1140b2b8 <line:429:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x558c1140b448 <line:430:22>
| `-NonNullAttr 0x558c1140b4a0 <col:63, col:80> 1 2
|-FunctionDecl 0x558c1140b628 <line:431:1, line:432:79> line:431:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x558c1140b4e8 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x558c1140b568 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x558c1140b6d8 <line:432:22>
| `-NonNullAttr 0x558c1140b730 <col:63, col:77> 1
|-FunctionDecl 0x558c1140b958 <line:433:1, line:435:115> line:433:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x558c1140b778 <col:39, line:434:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x558c1140b7f8 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x558c1140ba08 <line:435:22>
| |-NonNullAttr 0x558c1140ba60 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x558c1140ba98 <col:100> "" ""
|-FunctionDecl 0x558c1140bca8 <line:436:1, line:438:112> line:436:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x558c1140bae8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x558c1140bb68 <line:437:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x558c1140bd58 <line:438:22>
| |-NonNullAttr 0x558c1140bdb0 <col:63, col:77> 1
| `-DeprecatedAttr 0x558c1140bdf8 <col:97> "" ""
|-FunctionDecl 0x558c1140bfe8 <line:439:1, line:441:82> line:439:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x558c1140be48 <col:39, line:440:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x558c1140bec0 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x558c1140c098 <line:441:22>
| `-NonNullAttr 0x558c1140c0f0 <col:63, col:80> 1 2
|-FunctionDecl 0x558c1140c270 <line:442:1, line:444:79> line:442:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x558c1140c138 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x558c1140c1b0 <line:443:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x558c1140c320 <line:444:22>
| `-NonNullAttr 0x558c1140c378 <col:63, col:77> 1
|-FunctionDecl 0x558c1140c668 <line:445:1, line:448:85> line:445:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x558c1140c3c8 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x558c1140c448 <line:446:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x558c1140c4c0 <line:447:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x558c1140c720 <line:448:22>
| `-NonNullAttr 0x558c1140c778 <col:63, col:83> 1 2 3
|-FunctionDecl 0x558c1140ca28 <line:449:1, line:450:100> line:449:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x558c1140c7d0 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x558c1140c850 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x558c1140c8c8 <line:450:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x558c1140cae0 <col:43>
| `-NonNullAttr 0x558c1140cb38 <col:84, col:98> 1
|-FunctionDecl 0x558c1140ce40 <line:451:1, line:453:79> line:451:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x558c1140cb88 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x558c1140cc08 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x558c1140cc98 <line:452:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x558c1140cef8 <line:453:22>
| `-NonNullAttr 0x558c1140cf50 <col:63, col:77> 3
|-FunctionDecl 0x558c1140d228 <line:454:1, line:457:82> line:454:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x558c1140cf98 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x558c1140d018 <line:455:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x558c1140d0a8 <line:456:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x558c1140d2e0 <line:457:22>
| `-NonNullAttr 0x558c1140d338 <col:63, col:80> 2 3
|-FunctionDecl 0x558c1140d528 <line:458:1, line:459:45> line:458:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x558c1140d388 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x558c1140d408 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x558c1140d5d8 <line:459:22>
|-FunctionDecl 0x558c1140d9a8 <line:460:1, line:461:71> line:460:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x558c1140d6a0 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x558c1140d840 <line:461:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x558c1140da58 <col:52, col:69> 1 2
|-FunctionDecl 0x558c1140dc00 <line:462:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x558c1140dae0 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x558c1140db60 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x558c1140de10 <line:463:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x558c1140dcc8 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x558c1140dd48 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x558c1140df68 <line:464:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x558c1140ded0 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x558c1140e0a8 <line:465:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x558c1140e148 <line:466:9, line:474:1> line:466:9 struct definition
| |-RecordDecl 0x558c1140e1f8 <line:468:3, line:472:3> line:468:3 struct definition
| | |-FieldDecl 0x558c1140e2e8 <line:470:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x558c1140e350 <line:471:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x558c1140e520 <line:468:3, line:472:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at pthread-wmm/safe014_power.opt_false-unreach-call.i:468:3) [1]'
| `-FieldDecl 0x558c1140e618 <line:473:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x558c1140e6d0 <line:466:1, line:474:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x558c1140e670 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x558c1140e1d0 '__pthread_unwind_buf_t'
| |   `-Record 0x558c1140e148 ''
| `-AlignedAttr 0x558c1140e728 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x558c1140e7a0 <line:475:1, line:481:1> line:475:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x558c1140e900 <line:477:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x558c1140e968 <line:478:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x558c1140e9d0 <line:479:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x558c1140ea38 <line:480:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x558c1140ec40 <line:482:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x558c1140eb30 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x558c1140ee20 <line:484:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x558c1140ecf8 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x558c1140efe0 <line:486:1, line:488:31> line:486:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x558c1140eed8 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x558c1140f088 <line:488:22>
|-RecordDecl 0x558c1140f0e0 <line:490:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x558c1140f3f8 <line:491:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x558c1140f258 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x558c1140f2d8 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x558c1140f4a8 <col:86>
| `-ReturnsTwiceAttr 0x558c1140f500 <col:12> Implicit
|-FunctionDecl 0x558c1140f828 <line:492:1, line:494:79> line:492:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x558c1140f5d0 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x558c1140f6e0 <line:493:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x558c1140f8d8 <line:494:22>
| `-NonNullAttr 0x558c1140f930 <col:63, col:77> 1
|-FunctionDecl 0x558c1140faa8 <line:495:1, line:496:79> line:495:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x558c1140f978 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x558c1140fb50 <line:496:22>
| `-NonNullAttr 0x558c1140fba8 <col:63, col:77> 1
|-FunctionDecl 0x558c1140fcb0 <line:497:1, line:498:68> line:497:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x558c1140fbf8 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x558c1140fd58 <line:498:22>
| `-NonNullAttr 0x558c1140fdb0 <col:52, col:66> 1
|-FunctionDecl 0x558c1140fee8 <line:499:1, line:500:68> line:499:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x558c1140fe30 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x558c1140ff90 <line:500:22>
| `-NonNullAttr 0x558c1140ffe8 <col:52, col:66> 1
|-FunctionDecl 0x558c11410228 <line:501:1, line:503:85> line:501:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x558c11410038 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x558c114100c8 <line:502:9, line:503:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x558c114102d8 <col:36>
| `-NonNullAttr 0x558c11410330 <col:66, col:83> 1 2
|-FunctionDecl 0x558c11410430 <line:504:1, line:505:68> line:504:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x558c11410378 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x558c114104d8 <line:505:22>
| `-NonNullAttr 0x558c11410530 <col:52, col:66> 1
|-FunctionDecl 0x558c114107c8 <line:506:1, line:509:82> line:506:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x558c114105e0 <col:42, line:507:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x558c11410660 <line:508:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x558c11410878 <line:509:22>
| `-NonNullAttr 0x558c114108d0 <col:63, col:80> 1 2
|-FunctionDecl 0x558c11410b98 <line:510:1, line:513:82> line:510:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x558c11410918 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x558c11410998 <line:511:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x558c11410a18 <line:512:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x558c11410c50 <line:513:22>
| `-NonNullAttr 0x558c11410ca8 <col:63, col:80> 1 3
|-FunctionDecl 0x558c11410e40 <line:514:1, line:515:79> line:514:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x558c11410cf8 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x558c11410ee8 <line:515:22>
| `-NonNullAttr 0x558c11410f40 <col:63, col:77> 1
|-FunctionDecl 0x558c11411128 <line:516:1, line:517:79> line:516:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x558c11410ff0 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x558c114111d0 <line:517:22>
| `-NonNullAttr 0x558c11411228 <col:63, col:77> 1
|-FunctionDecl 0x558c11411330 <line:518:1, line:519:79> line:518:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x558c11411278 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x558c114113d8 <line:519:22>
| `-NonNullAttr 0x558c11411430 <col:63, col:77> 1
|-FunctionDecl 0x558c11411658 <line:520:1, line:523:82> line:520:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x558c11411478 <col:42, line:521:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x558c114114f8 <line:522:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x558c11411708 <line:523:22>
| `-NonNullAttr 0x558c11411760 <col:63, col:80> 1 2
|-FunctionDecl 0x558c11411968 <line:524:1, line:526:79> line:524:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x558c114117a8 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x558c11411828 <line:525:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x558c11411a18 <line:526:22>
| `-NonNullAttr 0x558c11411a70 <col:63, col:77> 1
|-FunctionDecl 0x558c11411c18 <line:527:1, line:529:82> line:527:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x558c11411ab8 <col:39, line:528:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x558c11411b38 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x558c11411cc8 <line:529:22>
| `-NonNullAttr 0x558c11411d20 <col:63, col:80> 1 2
|-FunctionDecl 0x558c11412f20 <line:530:1, line:531:79> line:530:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x558c11411d68 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x558c11412e60 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x558c11412fd0 <line:531:22>
| `-NonNullAttr 0x558c11413028 <col:63, col:77> 1
|-FunctionDecl 0x558c114131d8 <line:532:1, line:535:82> line:532:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x558c11413078 <col:43, line:533:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x558c114130f8 <line:534:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x558c11413288 <line:535:22>
| `-NonNullAttr 0x558c114132e0 <col:63, col:80> 1 2
|-FunctionDecl 0x558c11413468 <line:536:1, line:538:79> line:536:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x558c11413328 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x558c114133a8 <line:537:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x558c11413518 <line:538:22>
| `-NonNullAttr 0x558c11413570 <col:63, col:77> 1
|-FunctionDecl 0x558c11413718 <line:539:1, line:542:82> line:539:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x558c114135b8 <col:46, line:540:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x558c11413638 <line:541:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x558c114137c8 <line:542:22>
| `-NonNullAttr 0x558c11413820 <col:63, col:80> 1 2
|-FunctionDecl 0x558c114139a8 <line:543:1, line:545:79> line:543:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x558c11413868 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x558c114138e8 <line:544:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x558c11413a58 <line:545:22>
| `-NonNullAttr 0x558c11413ab0 <col:63, col:77> 1
|-FunctionDecl 0x558c11413c98 <line:546:1, line:548:82> line:546:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x558c11413af8 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x558c11413b78 <line:547:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x558c11413d48 <line:548:22>
| `-NonNullAttr 0x558c11413da0 <col:63, col:80> 1 2
|-FunctionDecl 0x558c11414f58 <line:549:1, line:551:79> line:549:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x558c11413de8 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x558c11414e98 <line:550:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x558c11415008 <line:551:22>
| `-NonNullAttr 0x558c11415060 <col:63, col:77> 1
|-FunctionDecl 0x558c11415398 <line:552:1, line:554:86> line:552:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x558c11415140 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x558c11415250 <line:553:5, line:554:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x558c11415448 <col:29>
| `-NonNullAttr 0x558c114154a0 <col:70, col:84> 1
|-FunctionDecl 0x558c11415618 <line:555:1, line:556:79> line:555:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x558c114154e8 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x558c114156c0 <line:556:22>
| `-NonNullAttr 0x558c11415718 <col:63, col:77> 1
|-FunctionDecl 0x558c11415820 <line:557:1, line:558:68> line:557:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x558c11415768 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x558c114158c8 <line:558:22>
| `-NonNullAttr 0x558c11415920 <col:52, col:66> 1
|-FunctionDecl 0x558c11415a20 <line:559:1, line:560:65> line:559:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x558c11415968 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x558c11415ac8 <line:560:19>
| `-NonNullAttr 0x558c11415b20 <col:49, col:63> 1
|-FunctionDecl 0x558c11415d58 <line:561:1, line:563:88> line:561:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x558c11415b68 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x558c11415bf8 <line:562:12, line:563:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x558c11415e08 <col:39>
| `-NonNullAttr 0x558c11415e90 <col:69, col:86> 1 2
|-FunctionDecl 0x558c11415f90 <line:564:1, line:565:68> line:564:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x558c11415ed8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x558c11416038 <line:565:22>
| `-NonNullAttr 0x558c11416090 <col:52, col:66> 1
|-FunctionDecl 0x558c11416190 <line:566:1, line:567:68> line:566:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x558c114160d8 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x558c11416238 <line:567:22>
| `-NonNullAttr 0x558c11416290 <col:52, col:66> 1
|-FunctionDecl 0x558c11416448 <line:568:1, line:570:88> line:568:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x558c114162d8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x558c11416368 <line:569:12, line:570:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x558c114164f8 <col:39>
| `-NonNullAttr 0x558c11416550 <col:69, col:86> 1 2
|-FunctionDecl 0x558c11416650 <line:571:1, line:572:68> line:571:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x558c11416598 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x558c114166f8 <line:572:22>
| `-NonNullAttr 0x558c11416750 <col:52, col:66> 1
|-FunctionDecl 0x558c11416938 <line:573:1, line:574:79> line:573:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x558c11416800 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x558c114169e0 <line:574:22>
| `-NonNullAttr 0x558c11416a38 <col:63, col:77> 1
|-FunctionDecl 0x558c11416b40 <line:575:1, line:576:79> line:575:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x558c11416a88 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x558c11416be8 <line:576:22>
| `-NonNullAttr 0x558c11416c40 <col:63, col:77> 1
|-FunctionDecl 0x558c11416ea0 <line:577:1, line:580:82> line:577:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x558c11416c88 <col:43, line:578:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x558c11416d08 <line:579:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x558c11416f50 <line:580:22>
| `-NonNullAttr 0x558c11416fa8 <col:63, col:80> 1 2
|-FunctionDecl 0x558c114171b8 <line:581:1, line:583:79> line:581:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x558c11416ff8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x558c11417078 <line:582:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x558c11417268 <line:583:22>
| `-NonNullAttr 0x558c114172c0 <col:63, col:77> 1
|-FunctionDecl 0x558c11417468 <line:584:1, line:587:82> line:584:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x558c11417308 <col:43, line:585:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x558c11417388 <line:586:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x558c11417518 <line:587:22>
| `-NonNullAttr 0x558c11417570 <col:63, col:80> 1 2
|-FunctionDecl 0x558c114176f8 <line:588:1, line:589:93> line:588:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x558c114175b8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x558c11417638 <line:589:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x558c114177a8 <col:36>
| `-NonNullAttr 0x558c11417800 <col:77, col:91> 1
|-FunctionDecl 0x558c11417b38 <line:590:1, line:592:79> line:590:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x558c114178e0 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x558c114179f0 <line:591:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x558c11417be8 <line:592:22>
| `-NonNullAttr 0x558c11417c40 <col:63, col:77> 1
|-FunctionDecl 0x558c11417db8 <line:593:1, line:594:79> line:593:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x558c11417c88 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x558c11417e60 <line:594:22>
| `-NonNullAttr 0x558c11417ee0 <col:63, col:77> 1
|-FunctionDecl 0x558c11417fe0 <line:595:1, line:596:68> line:595:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x558c11417f28 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x558c11418088 <line:596:22>
| `-NonNullAttr 0x558c114180e0 <col:52, col:66> 1
|-FunctionDecl 0x558c114181e0 <line:597:1, line:598:68> line:597:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x558c11418128 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x558c11418288 <line:598:22>
| `-NonNullAttr 0x558c114182e0 <col:52, col:66> 1
|-FunctionDecl 0x558c11418508 <line:599:1, line:601:41> line:599:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x558c11418328 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x558c114183a0 <line:600:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x558c114185b8 <line:601:22, col:39> 1 2
|-FunctionDecl 0x558c114188e8 <line:602:1, line:605:44> line:602:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x558c11418638 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x558c114186b0 <line:603:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x558c11418740 <line:604:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x558c114189a0 <line:605:22, col:42> 1 2 3
|-FunctionDecl 0x558c11418bb8 <line:606:1, line:607:79> line:606:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x558c11418a80 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x558c11418c60 <line:607:22>
| `-NonNullAttr 0x558c11418cb8 <col:63, col:77> 1
|-FunctionDecl 0x558c11418dc0 <line:608:1, line:609:79> line:608:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x558c11418d08 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x558c11418e68 <line:609:22>
| `-NonNullAttr 0x558c11418ef0 <col:63, col:77> 1
|-FunctionDecl 0x558c11419118 <line:610:1, line:613:82> line:610:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x558c11418f38 <col:41, line:611:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x558c11418fb8 <line:612:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x558c114191c8 <line:613:22>
| `-NonNullAttr 0x558c11419220 <col:63, col:80> 1 2
|-FunctionDecl 0x558c11419428 <line:614:1, line:615:94> line:614:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x558c11419268 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x558c114192e8 <line:615:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x558c114194d8 <col:37>
| `-NonNullAttr 0x558c11419530 <col:78, col:92> 1
|-FunctionDecl 0x558c11419748 <line:616:1, line:619:82> line:616:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x558c11419578 <col:39, line:617:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x558c11419620 <line:618:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x558c114197f8 <line:619:22>
| `-NonNullAttr 0x558c11419850 <col:63, col:80> 1 2
|-FunctionDecl 0x558c11419a18 <line:620:1, line:622:79> line:620:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x558c11419898 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x558c11419910 <line:621:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x558c11419ac8 <line:622:22>
| `-NonNullAttr 0x558c11419b20 <col:63, col:77> 1
|-FunctionDecl 0x558c11419dc8 <line:623:1, line:624:79> line:623:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x558c11419c00 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x558c11419c80 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x558c11419e78 <line:624:22>
| `-NonNullAttr 0x558c11419f00 <col:63, col:77> 1
|-FunctionDecl 0x558c1141a078 <line:625:1, line:626:79> line:625:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x558c11419f48 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x558c1141a120 <line:626:22>
| `-NonNullAttr 0x558c1141a178 <col:63, col:77> 1
|-FunctionDecl 0x558c1141a280 <line:627:1, line:628:68> line:627:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x558c1141a1c8 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x558c1141a328 <line:628:22>
| `-NonNullAttr 0x558c1141a380 <col:52, col:66> 1
|-FunctionDecl 0x558c1141a480 <line:629:1, line:630:68> line:629:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x558c1141a3c8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x558c1141a528 <line:630:22>
| `-NonNullAttr 0x558c1141a580 <col:52, col:66> 1
|-FunctionDecl 0x558c1141a680 <line:631:1, line:632:68> line:631:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x558c1141a5c8 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x558c1141a728 <line:632:22>
| `-NonNullAttr 0x558c1141a780 <col:52, col:66> 1
|-FunctionDecl 0x558c1141ab58 <line:633:1, line:636:79> line:633:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x558c1141a860 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x558c1141a970 <line:634:6, line:635:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x558c1141a9f0 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x558c1141ac10 <line:636:22>
| `-NonNullAttr 0x558c1141ac68 <col:63, col:77> 1
|-FunctionDecl 0x558c1141ade8 <line:637:1, line:638:79> line:637:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x558c1141acb8 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x558c1141ae90 <line:638:22>
| `-NonNullAttr 0x558c1141af10 <col:63, col:77> 1
|-FunctionDecl 0x558c1141b010 <line:639:1, line:640:68> line:639:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x558c1141af58 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x558c1141b0b8 <line:640:22>
| `-NonNullAttr 0x558c1141b110 <col:52, col:66> 1
|-FunctionDecl 0x558c1141b2f8 <line:641:1, line:642:79> line:641:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x558c1141b1c0 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x558c1141b3a0 <line:642:22>
| `-NonNullAttr 0x558c1141b3f8 <col:63, col:77> 1
|-FunctionDecl 0x558c1141b500 <line:643:1, line:644:79> line:643:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x558c1141b448 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x558c1141b5a8 <line:644:22>
| `-NonNullAttr 0x558c1141b600 <col:63, col:77> 1
|-FunctionDecl 0x558c1141b828 <line:645:1, line:648:82> line:645:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x558c1141b648 <col:44, line:646:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x558c1141b6c8 <line:647:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x558c1141b8d8 <line:648:22>
| `-NonNullAttr 0x558c1141b930 <col:63, col:80> 1 2
|-FunctionDecl 0x558c1141bb38 <line:649:1, line:651:79> line:649:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x558c1141b978 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x558c1141b9f8 <line:650:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x558c1141bbe8 <line:651:22>
| `-NonNullAttr 0x558c1141bc40 <col:63, col:77> 1
|-FunctionDecl 0x558c1141bfa8 <line:652:1, line:654:79> line:652:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x558c1141bd20 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x558c1141be40 <line:653:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x558c1141c058 <line:654:22>
| `-NonNullAttr 0x558c1141c0b0 <col:63, col:77> 1
|-FunctionDecl 0x558c1141c208 <line:655:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x558c1141c0f8 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x558c1141c2b0 <col:69>
|-FunctionDecl 0x558c1141c428 <line:656:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x558c1141c318 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x558c1141c4d0 <col:72>
|-FunctionDecl 0x558c1141c708 <line:657:1, line:658:67> line:657:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x558c1141c538 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x558c1141c5e8 <line:658:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x558c1141c7b8 <col:44>
|-FunctionDecl 0x558c1141c9d8 <line:659:1, line:661:79> line:659:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x558c1141c820 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x558c1141c898 <line:660:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x558c1141ca88 <line:661:22>
| `-NonNullAttr 0x558c1141cae0 <col:63, col:77> 2
|-FunctionDecl 0x558c1141df50 <line:662:1, line:664:70> line:662:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x558c1141cbc0 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x558c1141ccd0 <line:663:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x558c1141cde0 <line:664:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x558c1141e008 <col:47>
|-FunctionDecl 0x558c1141e110 <line:666:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x558c1141e078 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x558c1141e268 <line:667:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x558c1141e1d0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x558c1141e3c0 <line:668:1, col:20> col:8 used P2 'void *(void *)'
| `-ParmVarDecl 0x558c1141e328 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x558c1141e488 <line:669:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x558c1141e548 <line:670:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x558c1141e608 <line:671:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x558c1141e6c0 <line:672:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x558c1141e740 prev 0x558c1141e6c0 <line:673:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x558c1141e7a8 <col:24> 'int' 0
|-VarDecl 0x558c1141e7e0 <line:674:1, col:5> col:5 used __unbuffered_p0_EAX 'int'
|-VarDecl 0x558c1141e860 prev 0x558c1141e7e0 <line:675:1, col:27> col:5 used __unbuffered_p0_EAX 'int' cinit
| `-IntegerLiteral 0x558c1141e8c8 <col:27> 'int' 0
|-VarDecl 0x558c1141e8f8 <line:676:1, col:7> col:7 __unbuffered_p0_EAX$flush_delayed '_Bool'
|-VarDecl 0x558c1141e978 <line:677:1, col:5> col:5 __unbuffered_p0_EAX$mem_tmp 'int'
|-VarDecl 0x558c1141e9f0 <line:678:1, col:7> col:7 __unbuffered_p0_EAX$r_buff0_thd0 '_Bool'
|-VarDecl 0x558c1141ea68 <line:679:1, col:7> col:7 __unbuffered_p0_EAX$r_buff0_thd1 '_Bool'
|-VarDecl 0x558c1141eae0 <line:680:1, col:7> col:7 __unbuffered_p0_EAX$r_buff0_thd2 '_Bool'
|-VarDecl 0x558c1141eb58 <line:681:1, col:7> col:7 __unbuffered_p0_EAX$r_buff0_thd3 '_Bool'
|-VarDecl 0x558c1141ebd0 <line:682:1, col:7> col:7 __unbuffered_p0_EAX$r_buff1_thd0 '_Bool'
|-VarDecl 0x558c1141ec48 <line:683:1, col:7> col:7 __unbuffered_p0_EAX$r_buff1_thd1 '_Bool'
|-VarDecl 0x558c1141ecc0 <line:684:1, col:7> col:7 __unbuffered_p0_EAX$r_buff1_thd2 '_Bool'
|-VarDecl 0x558c1141ed38 <line:685:1, col:7> col:7 __unbuffered_p0_EAX$r_buff1_thd3 '_Bool'
|-VarDecl 0x558c1141edb0 <line:686:1, col:7> col:7 used __unbuffered_p0_EAX$read_delayed '_Bool'
|-VarDecl 0x558c1141ee30 <line:687:1, col:6> col:6 used __unbuffered_p0_EAX$read_delayed_var 'int *'
|-VarDecl 0x558c1141ef20 <line:688:1, col:5> col:5 __unbuffered_p0_EAX$w_buff0 'int'
|-VarDecl 0x558c1141ef98 <line:689:1, col:7> col:7 __unbuffered_p0_EAX$w_buff0_used '_Bool'
|-VarDecl 0x558c1141f018 <line:690:1, col:5> col:5 __unbuffered_p0_EAX$w_buff1 'int'
|-VarDecl 0x558c1141f090 <line:691:1, col:7> col:7 __unbuffered_p0_EAX$w_buff1_used '_Bool'
|-VarDecl 0x558c1141f110 <line:692:1, col:5> col:5 used __unbuffered_p0_EBX 'int'
|-VarDecl 0x558c1141f190 prev 0x558c1141f110 <line:693:1, col:27> col:5 used __unbuffered_p0_EBX 'int' cinit
| `-IntegerLiteral 0x558c1141f1f8 <col:27> 'int' 0
|-VarDecl 0x558c1141f230 <line:694:1, col:5> col:5 used __unbuffered_p2_EAX 'int'
|-VarDecl 0x558c1141f2b0 prev 0x558c1141f230 <line:695:1, col:27> col:5 used __unbuffered_p2_EAX 'int' cinit
| `-IntegerLiteral 0x558c1141f318 <col:27> 'int' 0
|-VarDecl 0x558c1141f348 <line:696:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x558c1141f3c0 <line:697:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x558c1141f440 <line:698:1, col:5> col:5 used x 'int'
|-VarDecl 0x558c1141f4c0 prev 0x558c1141f440 <line:699:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x558c1141f528 <col:9> 'int' 0
|-VarDecl 0x558c1141f560 <line:700:1, col:5> col:5 used y 'int'
|-VarDecl 0x558c1141f5e0 prev 0x558c1141f560 <line:701:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x558c1141f648 <col:9> 'int' 0
|-VarDecl 0x558c1141f678 <line:702:1, col:7> col:7 used y$flush_delayed '_Bool'
|-VarDecl 0x558c1141f6f8 <line:703:1, col:5> col:5 used y$mem_tmp 'int'
|-VarDecl 0x558c1141f770 <line:704:1, col:7> col:7 used y$r_buff0_thd0 '_Bool'
|-VarDecl 0x558c1141f7e8 <line:705:1, col:7> col:7 used y$r_buff0_thd1 '_Bool'
|-VarDecl 0x558c1141f860 <line:706:1, col:7> col:7 used y$r_buff0_thd2 '_Bool'
|-VarDecl 0x558c1141f8d8 <line:707:1, col:7> col:7 used y$r_buff0_thd3 '_Bool'
|-VarDecl 0x558c1141f950 <line:708:1, col:7> col:7 used y$r_buff1_thd0 '_Bool'
|-VarDecl 0x558c1141f9c8 <line:709:1, col:7> col:7 used y$r_buff1_thd1 '_Bool'
|-VarDecl 0x558c1141fa40 <line:710:1, col:7> col:7 used y$r_buff1_thd2 '_Bool'
|-VarDecl 0x558c1141fab8 <line:711:1, col:7> col:7 used y$r_buff1_thd3 '_Bool'
|-VarDecl 0x558c1141fb30 <line:712:1, col:7> col:7 y$read_delayed '_Bool'
|-VarDecl 0x558c1141fbb0 <line:713:1, col:6> col:6 y$read_delayed_var 'int *'
|-VarDecl 0x558c1141fc30 <line:714:1, col:5> col:5 used y$w_buff0 'int'
|-VarDecl 0x558c1141fca8 <line:715:1, col:7> col:7 used y$w_buff0_used '_Bool'
|-VarDecl 0x558c1141fd28 <line:716:1, col:5> col:5 used y$w_buff1 'int'
|-VarDecl 0x558c1141fda0 <line:717:1, col:7> col:7 used y$w_buff1_used '_Bool'
|-VarDecl 0x558c1141fe18 <line:718:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x558c1141fe90 <line:719:1, col:7> col:7 used weak$$choice1 '_Bool'
|-VarDecl 0x558c1141ff30 <line:720:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x558c11420048 prev 0x558c1141e110 <line:721:1, line:751:1> line:721:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x558c1141ffb0 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x558c11424998 <line:722:1, line:751:1>
|   |-CallExpr 0x558c11420158 <line:723:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x558c11420140 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558c114200f0 <col:3> 'void ()' Function 0x558c113c54b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x558c11420228 <line:724:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x558c11420178 <col:3> '_Bool' lvalue Var 0x558c1141fe18 'weak$$choice0' '_Bool'
|   | `-CallExpr 0x558c11420208 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x558c114201f0 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x558c11420198 <col:19> '_Bool (void)' Function 0x558c113c4c80 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x558c114202c0 <line:725:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x558c11420248 <col:3> '_Bool' lvalue Var 0x558c1141ff30 'weak$$choice2' '_Bool'
|   | `-CallExpr 0x558c114202a0 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x558c11420288 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x558c11420268 <col:19> '_Bool (void)' Function 0x558c113c4c80 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x558c11420338 <line:726:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x558c114202e0 <col:3> '_Bool' lvalue Var 0x558c1141f678 'y$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x558c11420320 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x558c11420300 <col:21> '_Bool' lvalue Var 0x558c1141ff30 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x558c114203b0 <line:727:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x558c11420358 <col:3> 'int' lvalue Var 0x558c1141f6f8 'y$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x558c11420398 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x558c11420378 <col:15> 'int' lvalue Var 0x558c1141f5e0 'y' 'int'
|   |-BinaryOperator 0x558c11420448 <line:728:3, col:42> '_Bool' '='
|   | |-DeclRefExpr 0x558c114203d0 <col:3> '_Bool' lvalue Var 0x558c1141fe90 'weak$$choice1' '_Bool'
|   | `-CallExpr 0x558c11420428 <col:19, col:42> '_Bool'
|   |   `-ImplicitCastExpr 0x558c11420410 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x558c114203f0 <col:19> '_Bool (void)' Function 0x558c113c4c80 '__VERIFIER_nondet_bool' '_Bool (void)'
|   |-BinaryOperator 0x558c11420e70 <line:729:3, col:363> 'int' '='
|   | |-DeclRefExpr 0x558c11420468 <col:3> 'int' lvalue Var 0x558c1141f5e0 'y' 'int'
|   | `-ConditionalOperator 0x558c11420e40 <col:7, col:363> 'int'
|   |   |-UnaryOperator 0x558c114204c0 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | `-ImplicitCastExpr 0x558c114204a8 <col:8> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x558c11420488 <col:8> '_Bool' lvalue Var 0x558c1141fca8 'y$w_buff0_used' '_Bool'
|   |   |-ImplicitCastExpr 0x558c11420e28 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x558c114204d8 <col:25> 'int' lvalue Var 0x558c1141f5e0 'y' 'int'
|   |   `-ParenExpr 0x558c11420e08 <col:29, col:363> 'int'
|   |     `-ConditionalOperator 0x558c11420dd8 <col:30, col:362> 'int'
|   |       |-BinaryOperator 0x558c11420598 <col:30, col:48> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x558c11420550 <col:30> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x558c11420538 <col:30> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x558c114204f8 <col:30> '_Bool' lvalue Var 0x558c1141fca8 'y$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x558c11420580 <col:48> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x558c11420568 <col:48> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x558c11420518 <col:48> '_Bool' lvalue Var 0x558c1141f7e8 'y$r_buff0_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x558c11420dc0 <col:65> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x558c114205b8 <col:65> 'int' lvalue Var 0x558c1141fc30 'y$w_buff0' 'int'
|   |       `-ParenExpr 0x558c11420da0 <col:77, col:362> 'int'
|   |         `-ConditionalOperator 0x558c11420d70 <col:78, col:361> 'int'
|   |           |-BinaryOperator 0x558c11420758 <col:78, col:134> 'int' '&&'
|   |           | |-BinaryOperator 0x558c114206e8 <col:78, col:115> 'int' '&&'
|   |           | | |-BinaryOperator 0x558c11420678 <col:78, col:97> 'int' '&&'
|   |           | | | |-ImplicitCastExpr 0x558c11420660 <col:78> 'int' <IntegralCast>
|   |           | | | | `-ImplicitCastExpr 0x558c11420648 <col:78> '_Bool' <LValueToRValue>
|   |           | | | |   `-DeclRefExpr 0x558c114205d8 <col:78> '_Bool' lvalue Var 0x558c1141fca8 'y$w_buff0_used' '_Bool'
|   |           | | | `-UnaryOperator 0x558c11420630 <col:96, col:97> 'int' prefix '!' cannot overflow
|   |           | | |   `-ImplicitCastExpr 0x558c11420618 <col:97> '_Bool' <LValueToRValue>
|   |           | | |     `-DeclRefExpr 0x558c114205f8 <col:97> '_Bool' lvalue Var 0x558c1141f9c8 'y$r_buff1_thd1' '_Bool'
|   |           | | `-ImplicitCastExpr 0x558c114206d0 <col:115> 'int' <IntegralCast>
|   |           | |   `-ImplicitCastExpr 0x558c114206b8 <col:115> '_Bool' <LValueToRValue>
|   |           | |     `-DeclRefExpr 0x558c11420698 <col:115> '_Bool' lvalue Var 0x558c1141fda0 'y$w_buff1_used' '_Bool'
|   |           | `-UnaryOperator 0x558c11420740 <col:133, col:134> 'int' prefix '!' cannot overflow
|   |           |   `-ImplicitCastExpr 0x558c11420728 <col:134> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x558c11420708 <col:134> '_Bool' lvalue Var 0x558c1141f7e8 'y$r_buff0_thd1' '_Bool'
|   |           |-ParenExpr 0x558c11420940 <col:151, col:211> 'int'
|   |           | `-ConditionalOperator 0x558c11420910 <col:152, col:210> 'int'
|   |           |   |-ImplicitCastExpr 0x558c114208e0 <col:152> 'int' <IntegralCast>
|   |           |   | `-ImplicitCastExpr 0x558c114208c8 <col:152> '_Bool' <LValueToRValue>
|   |           |   |   `-DeclRefExpr 0x558c11420778 <col:152> '_Bool' lvalue Var 0x558c1141fe18 'weak$$choice0' '_Bool'
|   |           |   |-ImplicitCastExpr 0x558c114208f8 <col:168> 'int' <LValueToRValue>
|   |           |   | `-DeclRefExpr 0x558c11420798 <col:168> 'int' lvalue Var 0x558c1141f5e0 'y' 'int'
|   |           |   `-ParenExpr 0x558c114208a8 <col:172, col:210> 'int'
|   |           |     `-ConditionalOperator 0x558c11420878 <col:173, col:201> 'int'
|   |           |       |-ImplicitCastExpr 0x558c11420830 <col:173> 'int' <IntegralCast>
|   |           |       | `-ImplicitCastExpr 0x558c11420818 <col:173> '_Bool' <LValueToRValue>
|   |           |       |   `-DeclRefExpr 0x558c114207b8 <col:173> '_Bool' lvalue Var 0x558c1141fe90 'weak$$choice1' '_Bool'
|   |           |       |-ImplicitCastExpr 0x558c11420848 <col:189> 'int' <LValueToRValue>
|   |           |       | `-DeclRefExpr 0x558c114207d8 <col:189> 'int' lvalue Var 0x558c1141fc30 'y$w_buff0' 'int'
|   |           |       `-ImplicitCastExpr 0x558c11420860 <col:201> 'int' <LValueToRValue>
|   |           |         `-DeclRefExpr 0x558c114207f8 <col:201> 'int' lvalue Var 0x558c1141fd28 'y$w_buff1' 'int'
|   |           `-ParenExpr 0x558c11420d50 <col:215, col:361> 'int'
|   |             `-ConditionalOperator 0x558c11420d20 <col:216, col:360> 'int'
|   |               |-BinaryOperator 0x558c11420ae0 <col:216, col:271> 'int' '&&'
|   |               | |-BinaryOperator 0x558c11420a70 <col:216, col:252> 'int' '&&'
|   |               | | |-BinaryOperator 0x558c11420a00 <col:216, col:234> 'int' '&&'
|   |               | | | |-ImplicitCastExpr 0x558c114209b8 <col:216> 'int' <IntegralCast>
|   |               | | | | `-ImplicitCastExpr 0x558c114209a0 <col:216> '_Bool' <LValueToRValue>
|   |               | | | |   `-DeclRefExpr 0x558c11420960 <col:216> '_Bool' lvalue Var 0x558c1141fca8 'y$w_buff0_used' '_Bool'
|   |               | | | `-ImplicitCastExpr 0x558c114209e8 <col:234> 'int' <IntegralCast>
|   |               | | |   `-ImplicitCastExpr 0x558c114209d0 <col:234> '_Bool' <LValueToRValue>
|   |               | | |     `-DeclRefExpr 0x558c11420980 <col:234> '_Bool' lvalue Var 0x558c1141f9c8 'y$r_buff1_thd1' '_Bool'
|   |               | | `-ImplicitCastExpr 0x558c11420a58 <col:252> 'int' <IntegralCast>
|   |               | |   `-ImplicitCastExpr 0x558c11420a40 <col:252> '_Bool' <LValueToRValue>
|   |               | |     `-DeclRefExpr 0x558c11420a20 <col:252> '_Bool' lvalue Var 0x558c1141fda0 'y$w_buff1_used' '_Bool'
|   |               | `-UnaryOperator 0x558c11420ac8 <col:270, col:271> 'int' prefix '!' cannot overflow
|   |               |   `-ImplicitCastExpr 0x558c11420ab0 <col:271> '_Bool' <LValueToRValue>
|   |               |     `-DeclRefExpr 0x558c11420a90 <col:271> '_Bool' lvalue Var 0x558c1141f7e8 'y$r_buff0_thd1' '_Bool'
|   |               |-ParenExpr 0x558c11420bf0 <col:288, col:326> 'int'
|   |               | `-ConditionalOperator 0x558c11420bc0 <col:289, col:317> 'int'
|   |               |   |-ImplicitCastExpr 0x558c11420b78 <col:289> 'int' <IntegralCast>
|   |               |   | `-ImplicitCastExpr 0x558c11420b60 <col:289> '_Bool' <LValueToRValue>
|   |               |   |   `-DeclRefExpr 0x558c11420b00 <col:289> '_Bool' lvalue Var 0x558c1141fe18 'weak$$choice0' '_Bool'
|   |               |   |-ImplicitCastExpr 0x558c11420b90 <col:305> 'int' <LValueToRValue>
|   |               |   | `-DeclRefExpr 0x558c11420b20 <col:305> 'int' lvalue Var 0x558c1141fd28 'y$w_buff1' 'int'
|   |               |   `-ImplicitCastExpr 0x558c11420ba8 <col:317> 'int' <LValueToRValue>
|   |               |     `-DeclRefExpr 0x558c11420b40 <col:317> 'int' lvalue Var 0x558c1141fc30 'y$w_buff0' 'int'
|   |               `-ParenExpr 0x558c11420d00 <col:330, col:360> 'int'
|   |                 `-ConditionalOperator 0x558c11420cd0 <col:331, col:359> 'int'
|   |                   |-ImplicitCastExpr 0x558c11420c88 <col:331> 'int' <IntegralCast>
|   |                   | `-ImplicitCastExpr 0x558c11420c70 <col:331> '_Bool' <LValueToRValue>
|   |                   |   `-DeclRefExpr 0x558c11420c10 <col:331> '_Bool' lvalue Var 0x558c1141fe18 'weak$$choice0' '_Bool'
|   |                   |-ImplicitCastExpr 0x558c11420ca0 <col:347> 'int' <LValueToRValue>
|   |                   | `-DeclRefExpr 0x558c11420c30 <col:347> 'int' lvalue Var 0x558c1141fc30 'y$w_buff0' 'int'
|   |                   `-ImplicitCastExpr 0x558c11420cb8 <col:359> 'int' <LValueToRValue>
|   |                     `-DeclRefExpr 0x558c11420c50 <col:359> 'int' lvalue Var 0x558c1141f5e0 'y' 'int'
|   |-BinaryOperator 0x558c11421628 <line:730:3, col:305> 'int' '='
|   | |-DeclRefExpr 0x558c11420e90 <col:3> 'int' lvalue Var 0x558c1141fc30 'y$w_buff0' 'int'
|   | `-ConditionalOperator 0x558c114215f8 <col:15, col:305> 'int'
|   |   |-ImplicitCastExpr 0x558c114215c8 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x558c114215b0 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x558c11420eb0 <col:15> '_Bool' lvalue Var 0x558c1141ff30 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x558c114215e0 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x558c11420ed0 <col:31> 'int' lvalue Var 0x558c1141fc30 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x558c11421590 <col:43, col:305> 'int'
|   |     `-ConditionalOperator 0x558c11421560 <col:44, col:304> 'int'
|   |       |-UnaryOperator 0x558c11420f40 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | `-ImplicitCastExpr 0x558c11420f10 <col:45> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x558c11420ef0 <col:45> '_Bool' lvalue Var 0x558c1141fca8 'y$w_buff0_used' '_Bool'
|   |       |-ImplicitCastExpr 0x558c11421548 <col:62> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x558c11420f58 <col:62> 'int' lvalue Var 0x558c1141fc30 'y$w_buff0' 'int'
|   |       `-ParenExpr 0x558c11421528 <col:74, col:304> 'int'
|   |         `-ConditionalOperator 0x558c114214f8 <col:75, col:303> 'int'
|   |           |-BinaryOperator 0x558c11421018 <col:75, col:93> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x558c11420fd0 <col:75> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x558c11420fb8 <col:75> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x558c11420f78 <col:75> '_Bool' lvalue Var 0x558c1141fca8 'y$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x558c11421000 <col:93> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x558c11420fe8 <col:93> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x558c11420f98 <col:93> '_Bool' lvalue Var 0x558c1141f7e8 'y$r_buff0_thd1' '_Bool'
|   |           |-ImplicitCastExpr 0x558c114214e0 <col:110> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x558c11421038 <col:110> 'int' lvalue Var 0x558c1141fc30 'y$w_buff0' 'int'
|   |           `-ParenExpr 0x558c114214c0 <col:122, col:303> 'int'
|   |             `-ConditionalOperator 0x558c11421490 <col:123, col:302> 'int'
|   |               |-BinaryOperator 0x558c114211d8 <col:123, col:179> 'int' '&&'
|   |               | |-BinaryOperator 0x558c11421168 <col:123, col:160> 'int' '&&'
|   |               | | |-BinaryOperator 0x558c114210f8 <col:123, col:142> 'int' '&&'
|   |               | | | |-ImplicitCastExpr 0x558c114210e0 <col:123> 'int' <IntegralCast>
|   |               | | | | `-ImplicitCastExpr 0x558c114210c8 <col:123> '_Bool' <LValueToRValue>
|   |               | | | |   `-DeclRefExpr 0x558c11421058 <col:123> '_Bool' lvalue Var 0x558c1141fca8 'y$w_buff0_used' '_Bool'
|   |               | | | `-UnaryOperator 0x558c114210b0 <col:141, col:142> 'int' prefix '!' cannot overflow
|   |               | | |   `-ImplicitCastExpr 0x558c11421098 <col:142> '_Bool' <LValueToRValue>
|   |               | | |     `-DeclRefExpr 0x558c11421078 <col:142> '_Bool' lvalue Var 0x558c1141f9c8 'y$r_buff1_thd1' '_Bool'
|   |               | | `-ImplicitCastExpr 0x558c11421150 <col:160> 'int' <IntegralCast>
|   |               | |   `-ImplicitCastExpr 0x558c11421138 <col:160> '_Bool' <LValueToRValue>
|   |               | |     `-DeclRefExpr 0x558c11421118 <col:160> '_Bool' lvalue Var 0x558c1141fda0 'y$w_buff1_used' '_Bool'
|   |               | `-UnaryOperator 0x558c114211c0 <col:178, col:179> 'int' prefix '!' cannot overflow
|   |               |   `-ImplicitCastExpr 0x558c114211a8 <col:179> '_Bool' <LValueToRValue>
|   |               |     `-DeclRefExpr 0x558c11421188 <col:179> '_Bool' lvalue Var 0x558c1141f7e8 'y$r_buff0_thd1' '_Bool'
|   |               |-ImplicitCastExpr 0x558c11421478 <col:196> 'int' <LValueToRValue>
|   |               | `-DeclRefExpr 0x558c114211f8 <col:196> 'int' lvalue Var 0x558c1141fc30 'y$w_buff0' 'int'
|   |               `-ParenExpr 0x558c11421458 <col:208, col:302> 'int'
|   |                 `-ConditionalOperator 0x558c11421428 <col:209, col:293> 'int'
|   |                   |-BinaryOperator 0x558c11421398 <col:209, col:264> 'int' '&&'
|   |                   | |-BinaryOperator 0x558c11421328 <col:209, col:245> 'int' '&&'
|   |                   | | |-BinaryOperator 0x558c114212b8 <col:209, col:227> 'int' '&&'
|   |                   | | | |-ImplicitCastExpr 0x558c11421270 <col:209> 'int' <IntegralCast>
|   |                   | | | | `-ImplicitCastExpr 0x558c11421258 <col:209> '_Bool' <LValueToRValue>
|   |                   | | | |   `-DeclRefExpr 0x558c11421218 <col:209> '_Bool' lvalue Var 0x558c1141fca8 'y$w_buff0_used' '_Bool'
|   |                   | | | `-ImplicitCastExpr 0x558c114212a0 <col:227> 'int' <IntegralCast>
|   |                   | | |   `-ImplicitCastExpr 0x558c11421288 <col:227> '_Bool' <LValueToRValue>
|   |                   | | |     `-DeclRefExpr 0x558c11421238 <col:227> '_Bool' lvalue Var 0x558c1141f9c8 'y$r_buff1_thd1' '_Bool'
|   |                   | | `-ImplicitCastExpr 0x558c11421310 <col:245> 'int' <IntegralCast>
|   |                   | |   `-ImplicitCastExpr 0x558c114212f8 <col:245> '_Bool' <LValueToRValue>
|   |                   | |     `-DeclRefExpr 0x558c114212d8 <col:245> '_Bool' lvalue Var 0x558c1141fda0 'y$w_buff1_used' '_Bool'
|   |                   | `-UnaryOperator 0x558c11421380 <col:263, col:264> 'int' prefix '!' cannot overflow
|   |                   |   `-ImplicitCastExpr 0x558c11421368 <col:264> '_Bool' <LValueToRValue>
|   |                   |     `-DeclRefExpr 0x558c11421348 <col:264> '_Bool' lvalue Var 0x558c1141f7e8 'y$r_buff0_thd1' '_Bool'
|   |                   |-ImplicitCastExpr 0x558c114213f8 <col:281> 'int' <LValueToRValue>
|   |                   | `-DeclRefExpr 0x558c114213b8 <col:281> 'int' lvalue Var 0x558c1141fc30 'y$w_buff0' 'int'
|   |                   `-ImplicitCastExpr 0x558c11421410 <col:293> 'int' <LValueToRValue>
|   |                     `-DeclRefExpr 0x558c114213d8 <col:293> 'int' lvalue Var 0x558c1141fc30 'y$w_buff0' 'int'
|   |-BinaryOperator 0x558c11421dc8 <line:731:3, col:305> 'int' '='
|   | |-DeclRefExpr 0x558c11421648 <col:3> 'int' lvalue Var 0x558c1141fd28 'y$w_buff1' 'int'
|   | `-ConditionalOperator 0x558c11421d98 <col:15, col:305> 'int'
|   |   |-ImplicitCastExpr 0x558c11421d68 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x558c11421d50 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x558c11421668 <col:15> '_Bool' lvalue Var 0x558c1141ff30 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x558c11421d80 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x558c11421688 <col:31> 'int' lvalue Var 0x558c1141fd28 'y$w_buff1' 'int'
|   |   `-ParenExpr 0x558c11421d30 <col:43, col:305> 'int'
|   |     `-ConditionalOperator 0x558c11421d00 <col:44, col:304> 'int'
|   |       |-UnaryOperator 0x558c114216e0 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | `-ImplicitCastExpr 0x558c114216c8 <col:45> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x558c114216a8 <col:45> '_Bool' lvalue Var 0x558c1141fca8 'y$w_buff0_used' '_Bool'
|   |       |-ImplicitCastExpr 0x558c11421ce8 <col:62> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x558c114216f8 <col:62> 'int' lvalue Var 0x558c1141fd28 'y$w_buff1' 'int'
|   |       `-ParenExpr 0x558c11421cc8 <col:74, col:304> 'int'
|   |         `-ConditionalOperator 0x558c11421c98 <col:75, col:303> 'int'
|   |           |-BinaryOperator 0x558c114217b8 <col:75, col:93> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x558c11421770 <col:75> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x558c11421758 <col:75> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x558c11421718 <col:75> '_Bool' lvalue Var 0x558c1141fca8 'y$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x558c114217a0 <col:93> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x558c11421788 <col:93> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x558c11421738 <col:93> '_Bool' lvalue Var 0x558c1141f7e8 'y$r_buff0_thd1' '_Bool'
|   |           |-ImplicitCastExpr 0x558c11421c80 <col:110> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x558c114217d8 <col:110> 'int' lvalue Var 0x558c1141fd28 'y$w_buff1' 'int'
|   |           `-ParenExpr 0x558c11421c60 <col:122, col:303> 'int'
|   |             `-ConditionalOperator 0x558c11421c30 <col:123, col:302> 'int'
|   |               |-BinaryOperator 0x558c11421978 <col:123, col:179> 'int' '&&'
|   |               | |-BinaryOperator 0x558c11421908 <col:123, col:160> 'int' '&&'
|   |               | | |-BinaryOperator 0x558c11421898 <col:123, col:142> 'int' '&&'
|   |               | | | |-ImplicitCastExpr 0x558c11421880 <col:123> 'int' <IntegralCast>
|   |               | | | | `-ImplicitCastExpr 0x558c11421868 <col:123> '_Bool' <LValueToRValue>
|   |               | | | |   `-DeclRefExpr 0x558c114217f8 <col:123> '_Bool' lvalue Var 0x558c1141fca8 'y$w_buff0_used' '_Bool'
|   |               | | | `-UnaryOperator 0x558c11421850 <col:141, col:142> 'int' prefix '!' cannot overflow
|   |               | | |   `-ImplicitCastExpr 0x558c11421838 <col:142> '_Bool' <LValueToRValue>
|   |               | | |     `-DeclRefExpr 0x558c11421818 <col:142> '_Bool' lvalue Var 0x558c1141f9c8 'y$r_buff1_thd1' '_Bool'
|   |               | | `-ImplicitCastExpr 0x558c114218f0 <col:160> 'int' <IntegralCast>
|   |               | |   `-ImplicitCastExpr 0x558c114218d8 <col:160> '_Bool' <LValueToRValue>
|   |               | |     `-DeclRefExpr 0x558c114218b8 <col:160> '_Bool' lvalue Var 0x558c1141fda0 'y$w_buff1_used' '_Bool'
|   |               | `-UnaryOperator 0x558c11421960 <col:178, col:179> 'int' prefix '!' cannot overflow
|   |               |   `-ImplicitCastExpr 0x558c11421948 <col:179> '_Bool' <LValueToRValue>
|   |               |     `-DeclRefExpr 0x558c11421928 <col:179> '_Bool' lvalue Var 0x558c1141f7e8 'y$r_buff0_thd1' '_Bool'
|   |               |-ImplicitCastExpr 0x558c11421c18 <col:196> 'int' <LValueToRValue>
|   |               | `-DeclRefExpr 0x558c11421998 <col:196> 'int' lvalue Var 0x558c1141fd28 'y$w_buff1' 'int'
|   |               `-ParenExpr 0x558c11421bf8 <col:208, col:302> 'int'
|   |                 `-ConditionalOperator 0x558c11421bc8 <col:209, col:293> 'int'
|   |                   |-BinaryOperator 0x558c11421b38 <col:209, col:264> 'int' '&&'
|   |                   | |-BinaryOperator 0x558c11421ac8 <col:209, col:245> 'int' '&&'
|   |                   | | |-BinaryOperator 0x558c11421a58 <col:209, col:227> 'int' '&&'
|   |                   | | | |-ImplicitCastExpr 0x558c11421a10 <col:209> 'int' <IntegralCast>
|   |                   | | | | `-ImplicitCastExpr 0x558c114219f8 <col:209> '_Bool' <LValueToRValue>
|   |                   | | | |   `-DeclRefExpr 0x558c114219b8 <col:209> '_Bool' lvalue Var 0x558c1141fca8 'y$w_buff0_used' '_Bool'
|   |                   | | | `-ImplicitCastExpr 0x558c11421a40 <col:227> 'int' <IntegralCast>
|   |                   | | |   `-ImplicitCastExpr 0x558c11421a28 <col:227> '_Bool' <LValueToRValue>
|   |                   | | |     `-DeclRefExpr 0x558c114219d8 <col:227> '_Bool' lvalue Var 0x558c1141f9c8 'y$r_buff1_thd1' '_Bool'
|   |                   | | `-ImplicitCastExpr 0x558c11421ab0 <col:245> 'int' <IntegralCast>
|   |                   | |   `-ImplicitCastExpr 0x558c11421a98 <col:245> '_Bool' <LValueToRValue>
|   |                   | |     `-DeclRefExpr 0x558c11421a78 <col:245> '_Bool' lvalue Var 0x558c1141fda0 'y$w_buff1_used' '_Bool'
|   |                   | `-UnaryOperator 0x558c11421b20 <col:263, col:264> 'int' prefix '!' cannot overflow
|   |                   |   `-ImplicitCastExpr 0x558c11421b08 <col:264> '_Bool' <LValueToRValue>
|   |                   |     `-DeclRefExpr 0x558c11421ae8 <col:264> '_Bool' lvalue Var 0x558c1141f7e8 'y$r_buff0_thd1' '_Bool'
|   |                   |-ImplicitCastExpr 0x558c11421b98 <col:281> 'int' <LValueToRValue>
|   |                   | `-DeclRefExpr 0x558c11421b58 <col:281> 'int' lvalue Var 0x558c1141fd28 'y$w_buff1' 'int'
|   |                   `-ImplicitCastExpr 0x558c11421bb0 <col:293> 'int' <LValueToRValue>
|   |                     `-DeclRefExpr 0x558c11421b78 <col:293> 'int' lvalue Var 0x558c1141fd28 'y$w_buff1' 'int'
|   |-BinaryOperator 0x558c114226b0 <line:732:3, col:349> '_Bool' '='
|   | |-DeclRefExpr 0x558c11421de8 <col:3> '_Bool' lvalue Var 0x558c1141fca8 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x558c11422698 <col:20, col:349> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x558c11422668 <col:20, col:349> 'int'
|   |     |-ImplicitCastExpr 0x558c11422620 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x558c11422608 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x558c11421e08 <col:20> '_Bool' lvalue Var 0x558c1141ff30 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x558c11422650 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x558c11422638 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x558c11421e28 <col:36> '_Bool' lvalue Var 0x558c1141fca8 'y$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x558c114225e8 <col:53, col:349> 'int'
|   |       `-ConditionalOperator 0x558c114225b8 <col:54, col:348> 'int'
|   |         |-UnaryOperator 0x558c11421e80 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | `-ImplicitCastExpr 0x558c11421e68 <col:55> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x558c11421e48 <col:55> '_Bool' lvalue Var 0x558c1141fca8 'y$w_buff0_used' '_Bool'
|   |         |-ImplicitCastExpr 0x558c114225a0 <col:72> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x558c11422588 <col:72> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x558c11421e98 <col:72> '_Bool' lvalue Var 0x558c1141fca8 'y$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x558c11422568 <col:89, col:348> 'int'
|   |           `-ConditionalOperator 0x558c11422538 <col:90, col:347> 'int'
|   |             |-BinaryOperator 0x558c11421f68 <col:90, col:108> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x558c11421f10 <col:90> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x558c11421ef8 <col:90> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x558c11421eb8 <col:90> '_Bool' lvalue Var 0x558c1141fca8 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x558c11421f50 <col:108> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x558c11421f28 <col:108> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x558c11421ed8 <col:108> '_Bool' lvalue Var 0x558c1141f7e8 'y$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x558c11422520 <col:125, col:132> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x558c11421fb8 <col:125, col:132> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x558c11421f88 <col:132> 'int' 0
|   |             `-ParenExpr 0x558c11422500 <col:136, col:347> 'int'
|   |               `-ConditionalOperator 0x558c114224d0 <col:137, col:346> 'int'
|   |                 |-BinaryOperator 0x558c11422160 <col:137, col:193> 'int' '&&'
|   |                 | |-BinaryOperator 0x558c114220f0 <col:137, col:174> 'int' '&&'
|   |                 | | |-BinaryOperator 0x558c11422080 <col:137, col:156> 'int' '&&'
|   |                 | | | |-ImplicitCastExpr 0x558c11422068 <col:137> 'int' <IntegralCast>
|   |                 | | | | `-ImplicitCastExpr 0x558c11422050 <col:137> '_Bool' <LValueToRValue>
|   |                 | | | |   `-DeclRefExpr 0x558c11421fe0 <col:137> '_Bool' lvalue Var 0x558c1141fca8 'y$w_buff0_used' '_Bool'
|   |                 | | | `-UnaryOperator 0x558c11422038 <col:155, col:156> 'int' prefix '!' cannot overflow
|   |                 | | |   `-ImplicitCastExpr 0x558c11422020 <col:156> '_Bool' <LValueToRValue>
|   |                 | | |     `-DeclRefExpr 0x558c11422000 <col:156> '_Bool' lvalue Var 0x558c1141f9c8 'y$r_buff1_thd1' '_Bool'
|   |                 | | `-ImplicitCastExpr 0x558c114220d8 <col:174> 'int' <IntegralCast>
|   |                 | |   `-ImplicitCastExpr 0x558c114220c0 <col:174> '_Bool' <LValueToRValue>
|   |                 | |     `-DeclRefExpr 0x558c114220a0 <col:174> '_Bool' lvalue Var 0x558c1141fda0 'y$w_buff1_used' '_Bool'
|   |                 | `-UnaryOperator 0x558c11422148 <col:192, col:193> 'int' prefix '!' cannot overflow
|   |                 |   `-ImplicitCastExpr 0x558c11422130 <col:193> '_Bool' <LValueToRValue>
|   |                 |     `-DeclRefExpr 0x558c11422110 <col:193> '_Bool' lvalue Var 0x558c1141f7e8 'y$r_buff0_thd1' '_Bool'
|   |                 |-BinaryOperator 0x558c11422220 <col:210, col:228> 'int' '||'
|   |                 | |-ImplicitCastExpr 0x558c11422208 <col:210> 'int' <IntegralCast>
|   |                 | | `-ImplicitCastExpr 0x558c114221f0 <col:210> '_Bool' <LValueToRValue>
|   |                 | |   `-DeclRefExpr 0x558c11422180 <col:210> '_Bool' lvalue Var 0x558c1141fe18 'weak$$choice0' '_Bool'
|   |                 | `-UnaryOperator 0x558c114221d8 <col:227, col:228> 'int' prefix '!' cannot overflow
|   |                 |   `-ImplicitCastExpr 0x558c114221c0 <col:228> '_Bool' <LValueToRValue>
|   |                 |     `-DeclRefExpr 0x558c114221a0 <col:228> '_Bool' lvalue Var 0x558c1141fe90 'weak$$choice1' '_Bool'
|   |                 `-ParenExpr 0x558c114224b0 <col:244, col:346> 'int'
|   |                   `-ConditionalOperator 0x558c11422480 <col:245, col:333> 'int'
|   |                     |-BinaryOperator 0x558c114223c0 <col:245, col:300> 'int' '&&'
|   |                     | |-BinaryOperator 0x558c11422350 <col:245, col:281> 'int' '&&'
|   |                     | | |-BinaryOperator 0x558c114222e0 <col:245, col:263> 'int' '&&'
|   |                     | | | |-ImplicitCastExpr 0x558c11422298 <col:245> 'int' <IntegralCast>
|   |                     | | | | `-ImplicitCastExpr 0x558c11422280 <col:245> '_Bool' <LValueToRValue>
|   |                     | | | |   `-DeclRefExpr 0x558c11422240 <col:245> '_Bool' lvalue Var 0x558c1141fca8 'y$w_buff0_used' '_Bool'
|   |                     | | | `-ImplicitCastExpr 0x558c114222c8 <col:263> 'int' <IntegralCast>
|   |                     | | |   `-ImplicitCastExpr 0x558c114222b0 <col:263> '_Bool' <LValueToRValue>
|   |                     | | |     `-DeclRefExpr 0x558c11422260 <col:263> '_Bool' lvalue Var 0x558c1141f9c8 'y$r_buff1_thd1' '_Bool'
|   |                     | | `-ImplicitCastExpr 0x558c11422338 <col:281> 'int' <IntegralCast>
|   |                     | |   `-ImplicitCastExpr 0x558c11422320 <col:281> '_Bool' <LValueToRValue>
|   |                     | |     `-DeclRefExpr 0x558c11422300 <col:281> '_Bool' lvalue Var 0x558c1141fda0 'y$w_buff1_used' '_Bool'
|   |                     | `-UnaryOperator 0x558c114223a8 <col:299, col:300> 'int' prefix '!' cannot overflow
|   |                     |   `-ImplicitCastExpr 0x558c11422390 <col:300> '_Bool' <LValueToRValue>
|   |                     |     `-DeclRefExpr 0x558c11422370 <col:300> '_Bool' lvalue Var 0x558c1141f7e8 'y$r_buff0_thd1' '_Bool'
|   |                     |-ImplicitCastExpr 0x558c11422438 <col:317> 'int' <IntegralCast>
|   |                     | `-ImplicitCastExpr 0x558c11422420 <col:317> '_Bool' <LValueToRValue>
|   |                     |   `-DeclRefExpr 0x558c114223e0 <col:317> '_Bool' lvalue Var 0x558c1141fe18 'weak$$choice0' '_Bool'
|   |                     `-ImplicitCastExpr 0x558c11422468 <col:333> 'int' <IntegralCast>
|   |                       `-ImplicitCastExpr 0x558c11422450 <col:333> '_Bool' <LValueToRValue>
|   |                         `-DeclRefExpr 0x558c11422400 <col:333> '_Bool' lvalue Var 0x558c1141fe18 'weak$$choice0' '_Bool'
|   |-BinaryOperator 0x558c11422f78 <line:733:3, col:321> '_Bool' '='
|   | |-DeclRefExpr 0x558c114226d0 <col:3> '_Bool' lvalue Var 0x558c1141fda0 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x558c11422f60 <col:20, col:321> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x558c11422f10 <col:20, col:321> 'int'
|   |     |-ImplicitCastExpr 0x558c11422ec8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x558c11422eb0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x558c114226f0 <col:20> '_Bool' lvalue Var 0x558c1141ff30 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x558c11422ef8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x558c11422ee0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x558c11422710 <col:36> '_Bool' lvalue Var 0x558c1141fda0 'y$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x558c11422e90 <col:53, col:321> 'int'
|   |       `-ConditionalOperator 0x558c11422e60 <col:54, col:320> 'int'
|   |         |-UnaryOperator 0x558c11422768 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | `-ImplicitCastExpr 0x558c11422750 <col:55> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x558c11422730 <col:55> '_Bool' lvalue Var 0x558c1141fca8 'y$w_buff0_used' '_Bool'
|   |         |-ImplicitCastExpr 0x558c11422e48 <col:72> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x558c11422e30 <col:72> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x558c11422780 <col:72> '_Bool' lvalue Var 0x558c1141fda0 'y$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x558c11422e10 <col:89, col:320> 'int'
|   |           `-ConditionalOperator 0x558c11422de0 <col:90, col:319> 'int'
|   |             |-BinaryOperator 0x558c11422840 <col:90, col:108> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x558c114227f8 <col:90> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x558c114227e0 <col:90> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x558c114227a0 <col:90> '_Bool' lvalue Var 0x558c1141fca8 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x558c11422828 <col:108> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x558c11422810 <col:108> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x558c114227c0 <col:108> '_Bool' lvalue Var 0x558c1141f7e8 'y$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x558c11422dc8 <col:125, col:132> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x558c11422890 <col:125, col:132> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x558c11422860 <col:132> 'int' 0
|   |             `-ParenExpr 0x558c11422da8 <col:136, col:319> 'int'
|   |               `-ConditionalOperator 0x558c11422d78 <col:137, col:318> 'int'
|   |                 |-BinaryOperator 0x558c11422a38 <col:137, col:193> 'int' '&&'
|   |                 | |-BinaryOperator 0x558c114229c8 <col:137, col:174> 'int' '&&'
|   |                 | | |-BinaryOperator 0x558c11422958 <col:137, col:156> 'int' '&&'
|   |                 | | | |-ImplicitCastExpr 0x558c11422940 <col:137> 'int' <IntegralCast>
|   |                 | | | | `-ImplicitCastExpr 0x558c11422928 <col:137> '_Bool' <LValueToRValue>
|   |                 | | | |   `-DeclRefExpr 0x558c114228b8 <col:137> '_Bool' lvalue Var 0x558c1141fca8 'y$w_buff0_used' '_Bool'
|   |                 | | | `-UnaryOperator 0x558c11422910 <col:155, col:156> 'int' prefix '!' cannot overflow
|   |                 | | |   `-ImplicitCastExpr 0x558c114228f8 <col:156> '_Bool' <LValueToRValue>
|   |                 | | |     `-DeclRefExpr 0x558c114228d8 <col:156> '_Bool' lvalue Var 0x558c1141f9c8 'y$r_buff1_thd1' '_Bool'
|   |                 | | `-ImplicitCastExpr 0x558c114229b0 <col:174> 'int' <IntegralCast>
|   |                 | |   `-ImplicitCastExpr 0x558c11422998 <col:174> '_Bool' <LValueToRValue>
|   |                 | |     `-DeclRefExpr 0x558c11422978 <col:174> '_Bool' lvalue Var 0x558c1141fda0 'y$w_buff1_used' '_Bool'
|   |                 | `-UnaryOperator 0x558c11422a20 <col:192, col:193> 'int' prefix '!' cannot overflow
|   |                 |   `-ImplicitCastExpr 0x558c11422a08 <col:193> '_Bool' <LValueToRValue>
|   |                 |     `-DeclRefExpr 0x558c114229e8 <col:193> '_Bool' lvalue Var 0x558c1141f7e8 'y$r_buff0_thd1' '_Bool'
|   |                 |-ImplicitCastExpr 0x558c11422d60 <col:210> 'int' <IntegralCast>
|   |                 | `-ImplicitCastExpr 0x558c11422d48 <col:210> '_Bool' <LValueToRValue>
|   |                 |   `-DeclRefExpr 0x558c11422a58 <col:210> '_Bool' lvalue Var 0x558c1141fe18 'weak$$choice0' '_Bool'
|   |                 `-ParenExpr 0x558c11422d28 <col:226, col:318> 'int'
|   |                   `-ConditionalOperator 0x558c11422cf8 <col:227, col:317> 'int'
|   |                     |-BinaryOperator 0x558c11422bf8 <col:227, col:282> 'int' '&&'
|   |                     | |-BinaryOperator 0x558c11422b88 <col:227, col:263> 'int' '&&'
|   |                     | | |-BinaryOperator 0x558c11422b18 <col:227, col:245> 'int' '&&'
|   |                     | | | |-ImplicitCastExpr 0x558c11422ad0 <col:227> 'int' <IntegralCast>
|   |                     | | | | `-ImplicitCastExpr 0x558c11422ab8 <col:227> '_Bool' <LValueToRValue>
|   |                     | | | |   `-DeclRefExpr 0x558c11422a78 <col:227> '_Bool' lvalue Var 0x558c1141fca8 'y$w_buff0_used' '_Bool'
|   |                     | | | `-ImplicitCastExpr 0x558c11422b00 <col:245> 'int' <IntegralCast>
|   |                     | | |   `-ImplicitCastExpr 0x558c11422ae8 <col:245> '_Bool' <LValueToRValue>
|   |                     | | |     `-DeclRefExpr 0x558c11422a98 <col:245> '_Bool' lvalue Var 0x558c1141f9c8 'y$r_buff1_thd1' '_Bool'
|   |                     | | `-ImplicitCastExpr 0x558c11422b70 <col:263> 'int' <IntegralCast>
|   |                     | |   `-ImplicitCastExpr 0x558c11422b58 <col:263> '_Bool' <LValueToRValue>
|   |                     | |     `-DeclRefExpr 0x558c11422b38 <col:263> '_Bool' lvalue Var 0x558c1141fda0 'y$w_buff1_used' '_Bool'
|   |                     | `-UnaryOperator 0x558c11422be0 <col:281, col:282> 'int' prefix '!' cannot overflow
|   |                     |   `-ImplicitCastExpr 0x558c11422bc8 <col:282> '_Bool' <LValueToRValue>
|   |                     |     `-DeclRefExpr 0x558c11422ba8 <col:282> '_Bool' lvalue Var 0x558c1141f7e8 'y$r_buff0_thd1' '_Bool'
|   |                     |-ImplicitCastExpr 0x558c11422cc8 <col:299, col:306> 'int' <IntegralCast>
|   |                     | `-CStyleCastExpr 0x558c11422c48 <col:299, col:306> '_Bool' <IntegralToBoolean>
|   |                     |   `-IntegerLiteral 0x558c11422c18 <col:306> 'int' 0
|   |                     `-ImplicitCastExpr 0x558c11422ce0 <col:310, col:317> 'int' <IntegralCast>
|   |                       `-CStyleCastExpr 0x558c11422ca0 <col:310, col:317> '_Bool' <IntegralToBoolean>
|   |                         `-IntegerLiteral 0x558c11422c70 <col:317> 'int' 0
|   |-BinaryOperator 0x558c11423820 <line:734:3, col:322> '_Bool' '='
|   | |-DeclRefExpr 0x558c11422f98 <col:3> '_Bool' lvalue Var 0x558c1141f7e8 'y$r_buff0_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x558c11423808 <col:20, col:322> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x558c114237d8 <col:20, col:322> 'int'
|   |     |-ImplicitCastExpr 0x558c11423790 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x558c11423778 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x558c11422fb8 <col:20> '_Bool' lvalue Var 0x558c1141ff30 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x558c114237c0 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x558c114237a8 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x558c11422fd8 <col:36> '_Bool' lvalue Var 0x558c1141f7e8 'y$r_buff0_thd1' '_Bool'
|   |     `-ParenExpr 0x558c11423758 <col:53, col:322> 'int'
|   |       `-ConditionalOperator 0x558c11423728 <col:54, col:321> 'int'
|   |         |-UnaryOperator 0x558c11423030 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | `-ImplicitCastExpr 0x558c11423018 <col:55> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x558c11422ff8 <col:55> '_Bool' lvalue Var 0x558c1141fca8 'y$w_buff0_used' '_Bool'
|   |         |-ImplicitCastExpr 0x558c11423710 <col:72> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x558c114236f8 <col:72> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x558c11423048 <col:72> '_Bool' lvalue Var 0x558c1141f7e8 'y$r_buff0_thd1' '_Bool'
|   |         `-ParenExpr 0x558c114236d8 <col:89, col:321> 'int'
|   |           `-ConditionalOperator 0x558c114236a8 <col:90, col:320> 'int'
|   |             |-BinaryOperator 0x558c11423108 <col:90, col:108> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x558c114230c0 <col:90> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x558c114230a8 <col:90> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x558c11423068 <col:90> '_Bool' lvalue Var 0x558c1141fca8 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x558c114230f0 <col:108> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x558c114230d8 <col:108> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x558c11423088 <col:108> '_Bool' lvalue Var 0x558c1141f7e8 'y$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x558c11423690 <col:125, col:132> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x558c11423158 <col:125, col:132> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x558c11423128 <col:132> 'int' 0
|   |             `-ParenExpr 0x558c11423670 <col:136, col:320> 'int'
|   |               `-ConditionalOperator 0x558c11423640 <col:137, col:319> 'int'
|   |                 |-BinaryOperator 0x558c11423300 <col:137, col:193> 'int' '&&'
|   |                 | |-BinaryOperator 0x558c11423290 <col:137, col:174> 'int' '&&'
|   |                 | | |-BinaryOperator 0x558c11423220 <col:137, col:156> 'int' '&&'
|   |                 | | | |-ImplicitCastExpr 0x558c11423208 <col:137> 'int' <IntegralCast>
|   |                 | | | | `-ImplicitCastExpr 0x558c114231f0 <col:137> '_Bool' <LValueToRValue>
|   |                 | | | |   `-DeclRefExpr 0x558c11423180 <col:137> '_Bool' lvalue Var 0x558c1141fca8 'y$w_buff0_used' '_Bool'
|   |                 | | | `-UnaryOperator 0x558c114231d8 <col:155, col:156> 'int' prefix '!' cannot overflow
|   |                 | | |   `-ImplicitCastExpr 0x558c114231c0 <col:156> '_Bool' <LValueToRValue>
|   |                 | | |     `-DeclRefExpr 0x558c114231a0 <col:156> '_Bool' lvalue Var 0x558c1141f9c8 'y$r_buff1_thd1' '_Bool'
|   |                 | | `-ImplicitCastExpr 0x558c11423278 <col:174> 'int' <IntegralCast>
|   |                 | |   `-ImplicitCastExpr 0x558c11423260 <col:174> '_Bool' <LValueToRValue>
|   |                 | |     `-DeclRefExpr 0x558c11423240 <col:174> '_Bool' lvalue Var 0x558c1141fda0 'y$w_buff1_used' '_Bool'
|   |                 | `-UnaryOperator 0x558c114232e8 <col:192, col:193> 'int' prefix '!' cannot overflow
|   |                 |   `-ImplicitCastExpr 0x558c114232d0 <col:193> '_Bool' <LValueToRValue>
|   |                 |     `-DeclRefExpr 0x558c114232b0 <col:193> '_Bool' lvalue Var 0x558c1141f7e8 'y$r_buff0_thd1' '_Bool'
|   |                 |-ImplicitCastExpr 0x558c11423628 <col:210> 'int' <IntegralCast>
|   |                 | `-ImplicitCastExpr 0x558c11423610 <col:210> '_Bool' <LValueToRValue>
|   |                 |   `-DeclRefExpr 0x558c11423320 <col:210> '_Bool' lvalue Var 0x558c1141f7e8 'y$r_buff0_thd1' '_Bool'
|   |                 `-ParenExpr 0x558c114235f0 <col:227, col:319> 'int'
|   |                   `-ConditionalOperator 0x558c114235c0 <col:228, col:318> 'int'
|   |                     |-BinaryOperator 0x558c114234c0 <col:228, col:283> 'int' '&&'
|   |                     | |-BinaryOperator 0x558c11423450 <col:228, col:264> 'int' '&&'
|   |                     | | |-BinaryOperator 0x558c114233e0 <col:228, col:246> 'int' '&&'
|   |                     | | | |-ImplicitCastExpr 0x558c11423398 <col:228> 'int' <IntegralCast>
|   |                     | | | | `-ImplicitCastExpr 0x558c11423380 <col:228> '_Bool' <LValueToRValue>
|   |                     | | | |   `-DeclRefExpr 0x558c11423340 <col:228> '_Bool' lvalue Var 0x558c1141fca8 'y$w_buff0_used' '_Bool'
|   |                     | | | `-ImplicitCastExpr 0x558c114233c8 <col:246> 'int' <IntegralCast>
|   |                     | | |   `-ImplicitCastExpr 0x558c114233b0 <col:246> '_Bool' <LValueToRValue>
|   |                     | | |     `-DeclRefExpr 0x558c11423360 <col:246> '_Bool' lvalue Var 0x558c1141f9c8 'y$r_buff1_thd1' '_Bool'
|   |                     | | `-ImplicitCastExpr 0x558c11423438 <col:264> 'int' <IntegralCast>
|   |                     | |   `-ImplicitCastExpr 0x558c11423420 <col:264> '_Bool' <LValueToRValue>
|   |                     | |     `-DeclRefExpr 0x558c11423400 <col:264> '_Bool' lvalue Var 0x558c1141fda0 'y$w_buff1_used' '_Bool'
|   |                     | `-UnaryOperator 0x558c114234a8 <col:282, col:283> 'int' prefix '!' cannot overflow
|   |                     |   `-ImplicitCastExpr 0x558c11423490 <col:283> '_Bool' <LValueToRValue>
|   |                     |     `-DeclRefExpr 0x558c11423470 <col:283> '_Bool' lvalue Var 0x558c1141f7e8 'y$r_buff0_thd1' '_Bool'
|   |                     |-ImplicitCastExpr 0x558c11423590 <col:300, col:307> 'int' <IntegralCast>
|   |                     | `-CStyleCastExpr 0x558c11423510 <col:300, col:307> '_Bool' <IntegralToBoolean>
|   |                     |   `-IntegerLiteral 0x558c114234e0 <col:307> 'int' 0
|   |                     `-ImplicitCastExpr 0x558c114235a8 <col:311, col:318> 'int' <IntegralCast>
|   |                       `-CStyleCastExpr 0x558c11423568 <col:311, col:318> '_Bool' <IntegralToBoolean>
|   |                         `-IntegerLiteral 0x558c11423538 <col:318> 'int' 0
|   |-BinaryOperator 0x558c114241f8 <line:735:3, col:351> '_Bool' '='
|   | |-DeclRefExpr 0x558c11423840 <col:3> '_Bool' lvalue Var 0x558c1141f9c8 'y$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x558c114241e0 <col:20, col:351> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x558c114241b0 <col:20, col:351> 'int'
|   |     |-ImplicitCastExpr 0x558c11424168 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x558c11424150 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x558c11423860 <col:20> '_Bool' lvalue Var 0x558c1141ff30 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x558c11424198 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x558c11424180 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x558c11423880 <col:36> '_Bool' lvalue Var 0x558c1141f9c8 'y$r_buff1_thd1' '_Bool'
|   |     `-ParenExpr 0x558c11424130 <col:53, col:351> 'int'
|   |       `-ConditionalOperator 0x558c11424100 <col:54, col:350> 'int'
|   |         |-UnaryOperator 0x558c114238d8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | `-ImplicitCastExpr 0x558c114238c0 <col:55> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x558c114238a0 <col:55> '_Bool' lvalue Var 0x558c1141fca8 'y$w_buff0_used' '_Bool'
|   |         |-ImplicitCastExpr 0x558c114240e8 <col:72> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x558c114240d0 <col:72> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x558c114238f0 <col:72> '_Bool' lvalue Var 0x558c1141f9c8 'y$r_buff1_thd1' '_Bool'
|   |         `-ParenExpr 0x558c114240b0 <col:89, col:350> 'int'
|   |           `-ConditionalOperator 0x558c11424080 <col:90, col:349> 'int'
|   |             |-BinaryOperator 0x558c114239b0 <col:90, col:108> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x558c11423968 <col:90> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x558c11423950 <col:90> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x558c11423910 <col:90> '_Bool' lvalue Var 0x558c1141fca8 'y$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x558c11423998 <col:108> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x558c11423980 <col:108> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x558c11423930 <col:108> '_Bool' lvalue Var 0x558c1141f7e8 'y$r_buff0_thd1' '_Bool'
|   |             |-ImplicitCastExpr 0x558c11424068 <col:125, col:132> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x558c11423a00 <col:125, col:132> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x558c114239d0 <col:132> 'int' 0
|   |             `-ParenExpr 0x558c11424048 <col:136, col:349> 'int'
|   |               `-ConditionalOperator 0x558c11424018 <col:137, col:348> 'int'
|   |                 |-BinaryOperator 0x558c11423ba8 <col:137, col:193> 'int' '&&'
|   |                 | |-BinaryOperator 0x558c11423b38 <col:137, col:174> 'int' '&&'
|   |                 | | |-BinaryOperator 0x558c11423ac8 <col:137, col:156> 'int' '&&'
|   |                 | | | |-ImplicitCastExpr 0x558c11423ab0 <col:137> 'int' <IntegralCast>
|   |                 | | | | `-ImplicitCastExpr 0x558c11423a98 <col:137> '_Bool' <LValueToRValue>
|   |                 | | | |   `-DeclRefExpr 0x558c11423a28 <col:137> '_Bool' lvalue Var 0x558c1141fca8 'y$w_buff0_used' '_Bool'
|   |                 | | | `-UnaryOperator 0x558c11423a80 <col:155, col:156> 'int' prefix '!' cannot overflow
|   |                 | | |   `-ImplicitCastExpr 0x558c11423a68 <col:156> '_Bool' <LValueToRValue>
|   |                 | | |     `-DeclRefExpr 0x558c11423a48 <col:156> '_Bool' lvalue Var 0x558c1141f9c8 'y$r_buff1_thd1' '_Bool'
|   |                 | | `-ImplicitCastExpr 0x558c11423b20 <col:174> 'int' <IntegralCast>
|   |                 | |   `-ImplicitCastExpr 0x558c11423b08 <col:174> '_Bool' <LValueToRValue>
|   |                 | |     `-DeclRefExpr 0x558c11423ae8 <col:174> '_Bool' lvalue Var 0x558c1141fda0 'y$w_buff1_used' '_Bool'
|   |                 | `-UnaryOperator 0x558c11423b90 <col:192, col:193> 'int' prefix '!' cannot overflow
|   |                 |   `-ImplicitCastExpr 0x558c11423b78 <col:193> '_Bool' <LValueToRValue>
|   |                 |     `-DeclRefExpr 0x558c11423b58 <col:193> '_Bool' lvalue Var 0x558c1141f7e8 'y$r_buff0_thd1' '_Bool'
|   |                 |-ParenExpr 0x558c11423d08 <col:210, col:252> 'int'
|   |                 | `-ConditionalOperator 0x558c11423cd8 <col:211, col:251> 'int'
|   |                 |   |-ImplicitCastExpr 0x558c11423c78 <col:211> 'int' <IntegralCast>
|   |                 |   | `-ImplicitCastExpr 0x558c11423c60 <col:211> '_Bool' <LValueToRValue>
|   |                 |   |   `-DeclRefExpr 0x558c11423bc8 <col:211> '_Bool' lvalue Var 0x558c1141fe18 'weak$$choice0' '_Bool'
|   |                 |   |-ImplicitCastExpr 0x558c11423ca8 <col:227> 'int' <IntegralCast>
|   |                 |   | `-ImplicitCastExpr 0x558c11423c90 <col:227> '_Bool' <LValueToRValue>
|   |                 |   |   `-DeclRefExpr 0x558c11423be8 <col:227> '_Bool' lvalue Var 0x558c1141f9c8 'y$r_buff1_thd1' '_Bool'
|   |                 |   `-ImplicitCastExpr 0x558c11423cc0 <col:244, col:251> 'int' <IntegralCast>
|   |                 |     `-CStyleCastExpr 0x558c11423c38 <col:244, col:251> '_Bool' <IntegralToBoolean>
|   |                 |       `-IntegerLiteral 0x558c11423c08 <col:251> 'int' 0
|   |                 `-ParenExpr 0x558c11423ff8 <col:256, col:348> 'int'
|   |                   `-ConditionalOperator 0x558c11423fc8 <col:257, col:347> 'int'
|   |                     |-BinaryOperator 0x558c11423ea8 <col:257, col:312> 'int' '&&'
|   |                     | |-BinaryOperator 0x558c11423e38 <col:257, col:293> 'int' '&&'
|   |                     | | |-BinaryOperator 0x558c11423dc8 <col:257, col:275> 'int' '&&'
|   |                     | | | |-ImplicitCastExpr 0x558c11423d80 <col:257> 'int' <IntegralCast>
|   |                     | | | | `-ImplicitCastExpr 0x558c11423d68 <col:257> '_Bool' <LValueToRValue>
|   |                     | | | |   `-DeclRefExpr 0x558c11423d28 <col:257> '_Bool' lvalue Var 0x558c1141fca8 'y$w_buff0_used' '_Bool'
|   |                     | | | `-ImplicitCastExpr 0x558c11423db0 <col:275> 'int' <IntegralCast>
|   |                     | | |   `-ImplicitCastExpr 0x558c11423d98 <col:275> '_Bool' <LValueToRValue>
|   |                     | | |     `-DeclRefExpr 0x558c11423d48 <col:275> '_Bool' lvalue Var 0x558c1141f9c8 'y$r_buff1_thd1' '_Bool'
|   |                     | | `-ImplicitCastExpr 0x558c11423e20 <col:293> 'int' <IntegralCast>
|   |                     | |   `-ImplicitCastExpr 0x558c11423e08 <col:293> '_Bool' <LValueToRValue>
|   |                     | |     `-DeclRefExpr 0x558c11423de8 <col:293> '_Bool' lvalue Var 0x558c1141fda0 'y$w_buff1_used' '_Bool'
|   |                     | `-UnaryOperator 0x558c11423e90 <col:311, col:312> 'int' prefix '!' cannot overflow
|   |                     |   `-ImplicitCastExpr 0x558c11423e78 <col:312> '_Bool' <LValueToRValue>
|   |                     |     `-DeclRefExpr 0x558c11423e58 <col:312> '_Bool' lvalue Var 0x558c1141f7e8 'y$r_buff0_thd1' '_Bool'
|   |                     |-ImplicitCastExpr 0x558c11423f98 <col:329, col:336> 'int' <IntegralCast>
|   |                     | `-CStyleCastExpr 0x558c11423ef8 <col:329, col:336> '_Bool' <IntegralToBoolean>
|   |                     |   `-IntegerLiteral 0x558c11423ec8 <col:336> 'int' 0
|   |                     `-ImplicitCastExpr 0x558c11423fb0 <col:340, col:347> 'int' <IntegralCast>
|   |                       `-CStyleCastExpr 0x558c11423f70 <col:340, col:347> '_Bool' <IntegralToBoolean>
|   |                         `-IntegerLiteral 0x558c11423f20 <col:347> 'int' 0
|   |-BinaryOperator 0x558c11424290 <line:736:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x558c11424218 <col:3> '_Bool' lvalue Var 0x558c1141edb0 '__unbuffered_p0_EAX$read_delayed' '_Bool'
|   | `-CStyleCastExpr 0x558c11424268 <col:38, col:45> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x558c11424238 <col:45> 'int' 1
|   |-BinaryOperator 0x558c11424308 <line:737:3, col:43> 'int *' '='
|   | |-DeclRefExpr 0x558c114242b0 <col:3> 'int *' lvalue Var 0x558c1141ee30 '__unbuffered_p0_EAX$read_delayed_var' 'int *'
|   | `-UnaryOperator 0x558c114242f0 <col:42, col:43> 'int *' prefix '&' cannot overflow
|   |   `-DeclRefExpr 0x558c114242d0 <col:43> 'int' lvalue Var 0x558c1141f5e0 'y' 'int'
|   |-BinaryOperator 0x558c11424380 <line:738:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x558c11424328 <col:3> 'int' lvalue Var 0x558c1141e860 '__unbuffered_p0_EAX' 'int'
|   | `-ImplicitCastExpr 0x558c11424368 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x558c11424348 <col:25> 'int' lvalue Var 0x558c1141f5e0 'y' 'int'
|   |-BinaryOperator 0x558c114244b0 <line:739:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x558c114243a0 <col:3> 'int' lvalue Var 0x558c1141f5e0 'y' 'int'
|   | `-ConditionalOperator 0x558c11424480 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x558c11424438 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x558c11424420 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x558c114243c0 <col:7> '_Bool' lvalue Var 0x558c1141f678 'y$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x558c11424450 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x558c114243e0 <col:25> 'int' lvalue Var 0x558c1141f6f8 'y$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x558c11424468 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x558c11424400 <col:37> 'int' lvalue Var 0x558c1141f5e0 'y' 'int'
|   |-BinaryOperator 0x558c11424548 <line:740:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x558c114244d0 <col:3> '_Bool' lvalue Var 0x558c1141f678 'y$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x558c11424520 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x558c114244f0 <col:28> 'int' 0
|   |-CallExpr 0x558c114245a0 <line:741:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x558c11424588 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558c11424568 <col:3> 'void ()' Function 0x558c113c5570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x558c114245f8 <line:742:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x558c114245e0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558c114245c0 <col:3> 'void ()' Function 0x558c113c54b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x558c11424670 <line:743:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x558c11424618 <col:3> 'int' lvalue Var 0x558c1141f190 '__unbuffered_p0_EBX' 'int'
|   | `-ImplicitCastExpr 0x558c11424658 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x558c11424638 <col:25> 'int' lvalue Var 0x558c1141f4c0 'x' 'int'
|   |-CallExpr 0x558c114246c8 <line:744:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x558c114246b0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558c11424690 <col:3> 'void ()' Function 0x558c113c5570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x558c11424720 <line:745:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x558c11424708 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558c114246e8 <col:3> 'void ()' Function 0x558c113c54b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-CallExpr 0x558c11424778 <line:746:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x558c11424760 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558c11424740 <col:3> 'void ()' Function 0x558c113c5570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x558c114247d0 <line:747:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x558c114247b8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558c11424798 <col:3> 'void ()' Function 0x558c113c54b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x558c11424888 <line:748:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x558c114247f0 <col:3> 'int' lvalue Var 0x558c1141e740 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x558c11424868 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x558c11424850 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x558c11424810 <col:22> 'int' lvalue Var 0x558c1141e740 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x558c11424830 <col:41> 'int' 1
|   |-CallExpr 0x558c114248e0 <line:749:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x558c114248c8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558c114248a8 <col:3> 'void ()' Function 0x558c113c5570 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x558c11424988 <line:750:3, col:36>
|     `-CallExpr 0x558c11424968 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x558c11424950 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x558c11424900 <col:10> 'void *(void)' Function 0x558c113c4fc8 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x558c11424b38 prev 0x558c1141e268 <line:752:1, line:766:1> line:752:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x558c11424aa0 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x558c11425098 <line:753:1, line:766:1>
|   |-CallExpr 0x558c11424c18 <line:754:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x558c11424c00 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558c11424be0 <col:3> 'void ()' Function 0x558c113c54b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x558c11424c78 <line:755:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x558c11424c38 <col:3> 'int' lvalue Var 0x558c1141f4c0 'x' 'int'
|   | `-IntegerLiteral 0x558c11424c58 <col:7> 'int' 1
|   |-CallExpr 0x558c11424cd0 <line:756:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x558c11424cb8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558c11424c98 <col:3> 'void ()' Function 0x558c113c5570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x558c11424d28 <line:757:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x558c11424d10 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558c11424cf0 <col:3> 'void ()' Function 0x558c113c54b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x558c11424d88 <line:758:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x558c11424d48 <col:3> 'int' lvalue Var 0x558c1141f4c0 'x' 'int'
|   | `-IntegerLiteral 0x558c11424d68 <col:7> 'int' 2
|   |-CallExpr 0x558c11424de0 <line:759:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x558c11424dc8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558c11424da8 <col:3> 'void ()' Function 0x558c113c5570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x558c11424e38 <line:760:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x558c11424e20 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558c11424e00 <col:3> 'void ()' Function 0x558c113c54b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-CallExpr 0x558c11424e90 <line:761:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x558c11424e78 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558c11424e58 <col:3> 'void ()' Function 0x558c113c5570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x558c11424ee8 <line:762:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x558c11424ed0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558c11424eb0 <col:3> 'void ()' Function 0x558c113c54b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x558c11424fb8 <line:763:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x558c11424f08 <col:3> 'int' lvalue Var 0x558c1141e740 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x558c11424f98 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x558c11424f80 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x558c11424f28 <col:22> 'int' lvalue Var 0x558c1141e740 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x558c11424f48 <col:41> 'int' 1
|   |-CallExpr 0x558c11425010 <line:764:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x558c11424ff8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558c11424fd8 <col:3> 'void ()' Function 0x558c113c5570 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x558c11425088 <line:765:3, col:36>
|     `-CallExpr 0x558c11425068 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x558c11425050 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x558c11425030 <col:10> 'void *(void)' Function 0x558c113c4fc8 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x558c114251b8 prev 0x558c1141e3c0 <line:767:1, line:795:1> line:767:8 used P2 'void *(void *)'
| |-ParmVarDecl 0x558c11425120 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x558c11426990 <line:768:1, line:795:1>
|   |-CallExpr 0x558c11425298 <line:769:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x558c11425280 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558c11425260 <col:3> 'void ()' Function 0x558c113c54b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x558c11425310 <line:770:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x558c114252b8 <col:3> 'int' lvalue Var 0x558c1141f2b0 '__unbuffered_p2_EAX' 'int'
|   | `-ImplicitCastExpr 0x558c114252f8 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x558c114252d8 <col:25> 'int' lvalue Var 0x558c1141f4c0 'x' 'int'
|   |-CallExpr 0x558c11425368 <line:771:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x558c11425350 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558c11425330 <col:3> 'void ()' Function 0x558c113c5570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x558c114253c0 <line:772:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x558c114253a8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558c11425388 <col:3> 'void ()' Function 0x558c113c54b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x558c11425438 <line:773:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x558c114253e0 <col:3> 'int' lvalue Var 0x558c1141fd28 'y$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x558c11425420 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x558c11425400 <col:15> 'int' lvalue Var 0x558c1141fc30 'y$w_buff0' 'int'
|   |-BinaryOperator 0x558c11425498 <line:774:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x558c11425458 <col:3> 'int' lvalue Var 0x558c1141fc30 'y$w_buff0' 'int'
|   | `-IntegerLiteral 0x558c11425478 <col:15> 'int' 1
|   |-BinaryOperator 0x558c11425510 <line:775:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x558c114254b8 <col:3> '_Bool' lvalue Var 0x558c1141fda0 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x558c114254f8 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x558c114254d8 <col:20> '_Bool' lvalue Var 0x558c1141fca8 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x558c114255a8 <line:776:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x558c11425530 <col:3> '_Bool' lvalue Var 0x558c1141fca8 'y$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x558c11425580 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x558c11425550 <col:27> 'int' 1
|   |-CallExpr 0x558c11425728 <line:777:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x558c11425710 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x558c114255c8 <col:3> 'void (int)' Function 0x558c113c5238 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x558c114256c8 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x558c114256a8 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x558c11425688 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x558c11425640 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x558c11425628 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x558c114255e8 <col:23> '_Bool' lvalue Var 0x558c1141fda0 'y$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x558c11425670 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x558c11425658 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x558c11425608 <col:41> '_Bool' lvalue Var 0x558c1141fca8 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x558c114257a8 <line:778:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x558c11425750 <col:3> '_Bool' lvalue Var 0x558c1141f950 'y$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x558c11425790 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x558c11425770 <col:20> '_Bool' lvalue Var 0x558c1141f770 'y$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x558c11425820 <line:779:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x558c114257c8 <col:3> '_Bool' lvalue Var 0x558c1141f9c8 'y$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x558c11425808 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x558c114257e8 <col:20> '_Bool' lvalue Var 0x558c1141f7e8 'y$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x558c11425898 <line:780:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x558c11425840 <col:3> '_Bool' lvalue Var 0x558c1141fa40 'y$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x558c11425880 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x558c11425860 <col:20> '_Bool' lvalue Var 0x558c1141f860 'y$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x558c11425910 <line:781:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x558c114258b8 <col:3> '_Bool' lvalue Var 0x558c1141fab8 'y$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x558c114258f8 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x558c114258d8 <col:20> '_Bool' lvalue Var 0x558c1141f8d8 'y$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x558c114259a8 <line:782:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x558c11425930 <col:3> '_Bool' lvalue Var 0x558c1141f8d8 'y$r_buff0_thd3' '_Bool'
|   | `-CStyleCastExpr 0x558c11425980 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x558c11425950 <col:27> 'int' 1
|   |-CallExpr 0x558c11425a00 <line:783:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x558c114259e8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558c114259c8 <col:3> 'void ()' Function 0x558c113c5570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x558c11425a58 <line:784:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x558c11425a40 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558c11425a20 <col:3> 'void ()' Function 0x558c113c54b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x558c11425d40 <line:785:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x558c11425a78 <col:3> 'int' lvalue Var 0x558c1141f5e0 'y' 'int'
|   | `-ConditionalOperator 0x558c11425d10 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x558c11425b38 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x558c11425af0 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x558c11425ad8 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x558c11425a98 <col:7> '_Bool' lvalue Var 0x558c1141fca8 'y$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x558c11425b20 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x558c11425b08 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x558c11425ab8 <col:25> '_Bool' lvalue Var 0x558c1141f8d8 'y$r_buff0_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x558c11425cf8 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x558c11425b58 <col:42> 'int' lvalue Var 0x558c1141fc30 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x558c11425cd8 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x558c11425ca8 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x558c11425c18 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x558c11425bd0 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x558c11425bb8 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x558c11425b78 <col:55> '_Bool' lvalue Var 0x558c1141fda0 'y$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x558c11425c00 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x558c11425be8 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x558c11425b98 <col:73> '_Bool' lvalue Var 0x558c1141fab8 'y$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x558c11425c78 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x558c11425c38 <col:90> 'int' lvalue Var 0x558c1141fd28 'y$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x558c11425c90 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x558c11425c58 <col:102> 'int' lvalue Var 0x558c1141f5e0 'y' 'int'
|   |-BinaryOperator 0x558c11425f48 <line:786:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x558c11425d60 <col:3> '_Bool' lvalue Var 0x558c1141fca8 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x558c11425f30 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x558c11425f00 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x558c11425e20 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x558c11425dd8 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x558c11425dc0 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x558c11425d80 <col:20> '_Bool' lvalue Var 0x558c1141fca8 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x558c11425e08 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x558c11425df0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x558c11425da0 <col:38> '_Bool' lvalue Var 0x558c1141f8d8 'y$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x558c11425eb8 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x558c11425e70 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x558c11425e40 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x558c11425ee8 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x558c11425ed0 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x558c11425e98 <col:66> '_Bool' lvalue Var 0x558c1141fca8 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x558c11426258 <line:787:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x558c11425f90 <col:3> '_Bool' lvalue Var 0x558c1141fda0 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x558c11426240 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x558c11426210 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x558c11426130 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x558c11426050 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x558c11426008 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x558c11425ff0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x558c11425fb0 <col:20> '_Bool' lvalue Var 0x558c1141fca8 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x558c11426038 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x558c11426020 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x558c11425fd0 <col:38> '_Bool' lvalue Var 0x558c1141f8d8 'y$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x558c11426110 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x558c114260c8 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x558c114260b0 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x558c11426070 <col:56> '_Bool' lvalue Var 0x558c1141fda0 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x558c114260f8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x558c114260e0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x558c11426090 <col:74> '_Bool' lvalue Var 0x558c1141fab8 'y$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x558c114261c8 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x558c11426180 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x558c11426150 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x558c114261f8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x558c114261e0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x558c114261a8 <col:102> '_Bool' lvalue Var 0x558c1141fda0 'y$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x558c11426460 <line:788:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x558c11426278 <col:3> '_Bool' lvalue Var 0x558c1141f8d8 'y$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x558c11426448 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x558c11426418 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x558c11426338 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x558c114262f0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x558c114262d8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x558c11426298 <col:20> '_Bool' lvalue Var 0x558c1141fca8 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x558c11426320 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x558c11426308 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x558c114262b8 <col:38> '_Bool' lvalue Var 0x558c1141f8d8 'y$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x558c114263d0 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x558c11426388 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x558c11426358 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x558c11426400 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x558c114263e8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x558c114263b0 <col:66> '_Bool' lvalue Var 0x558c1141f8d8 'y$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x558c11426748 <line:789:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x558c11426480 <col:3> '_Bool' lvalue Var 0x558c1141fab8 'y$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x558c11426730 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x558c11426700 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x558c11426620 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x558c11426540 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x558c114264f8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x558c114264e0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x558c114264a0 <col:20> '_Bool' lvalue Var 0x558c1141fca8 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x558c11426528 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x558c11426510 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x558c114264c0 <col:38> '_Bool' lvalue Var 0x558c1141f8d8 'y$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x558c11426600 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x558c114265b8 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x558c114265a0 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x558c11426560 <col:56> '_Bool' lvalue Var 0x558c1141fda0 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x558c114265e8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x558c114265d0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x558c11426580 <col:74> '_Bool' lvalue Var 0x558c1141fab8 'y$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x558c114266b8 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x558c11426670 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x558c11426640 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x558c114266e8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x558c114266d0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x558c11426698 <col:102> '_Bool' lvalue Var 0x558c1141fab8 'y$r_buff1_thd3' '_Bool'
|   |-CallExpr 0x558c114267a0 <line:790:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x558c11426788 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558c11426768 <col:3> 'void ()' Function 0x558c113c5570 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x558c114267f8 <line:791:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x558c114267e0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558c114267c0 <col:3> 'void ()' Function 0x558c113c54b0 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x558c114268b0 <line:792:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x558c11426818 <col:3> 'int' lvalue Var 0x558c1141e740 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x558c11426890 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x558c11426878 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x558c11426838 <col:22> 'int' lvalue Var 0x558c1141e740 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x558c11426858 <col:41> 'int' 1
|   |-CallExpr 0x558c11426908 <line:793:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x558c114268f0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558c114268d0 <col:3> 'void ()' Function 0x558c113c5570 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x558c11426980 <line:794:3, col:36>
|     `-CallExpr 0x558c11426960 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x558c11426948 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x558c11426928 <col:10> 'void *(void)' Function 0x558c113c4fc8 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x558c11426a90 prev 0x558c1141e488 <line:796:1, line:798:1> line:796:6 fence 'void ()'
| `-CompoundStmt 0x558c11426b30 <line:797:1, line:798:1>
|-FunctionDecl 0x558c11426b60 prev 0x558c1141e548 <line:799:1, line:801:1> line:799:6 isync 'void ()'
| `-CompoundStmt 0x558c11426c00 <line:800:1, line:801:1>
|-FunctionDecl 0x558c11426c30 prev 0x558c1141e608 <line:802:1, line:804:1> line:802:6 lwfence 'void ()'
| `-CompoundStmt 0x558c11426cd0 <line:803:1, line:804:1>
`-FunctionDecl 0x558c11426d38 <line:805:1, line:831:1> line:805:5 main 'int ()'
  `-CompoundStmt 0x558c11428cf8 <line:806:1, line:831:1>
    |-DeclStmt 0x558c11426e50 <line:807:3, col:18>
    | `-VarDecl 0x558c11426de8 <col:3, col:13> col:13 used t2102 'pthread_t':'unsigned long'
    |-CallExpr 0x558c11427078 <line:808:3, col:54> 'int'
    | |-ImplicitCastExpr 0x558c11427060 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x558c11426e68 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x558c114059d8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x558c11426ea8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x558c11426e88 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x558c11426de8 't2102' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x558c114270b8 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x558c11426f20 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x558c11426ef8 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x558c11426ec0 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x558c114270d0 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x558c11426f40 <col:39> 'void *(void *)' Function 0x558c11420048 'P0' 'void *(void *)'
    | `-ParenExpr 0x558c11426fe0 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x558c11426fb8 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x558c11426f60 <col:52> 'int' 0
    |-DeclStmt 0x558c11427160 <line:809:3, col:18>
    | `-VarDecl 0x558c114270f8 <col:3, col:13> col:13 used t2103 'pthread_t':'unsigned long'
    |-CallExpr 0x558c11427308 <line:810:3, col:54> 'int'
    | |-ImplicitCastExpr 0x558c114272f0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x558c11427178 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x558c114059d8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x558c114271b8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x558c11427198 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x558c114270f8 't2103' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x558c11427348 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x558c11427230 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x558c11427208 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x558c114271d0 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x558c11427360 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x558c11427250 <col:39> 'void *(void *)' Function 0x558c11424b38 'P1' 'void *(void *)'
    | `-ParenExpr 0x558c114272d0 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x558c114272a8 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x558c11427270 <col:52> 'int' 0
    |-DeclStmt 0x558c114273f0 <line:811:3, col:18>
    | `-VarDecl 0x558c11427388 <col:3, col:13> col:13 used t2104 'pthread_t':'unsigned long'
    |-CallExpr 0x558c11427598 <line:812:3, col:54> 'int'
    | |-ImplicitCastExpr 0x558c11427580 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x558c11427408 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x558c114059d8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x558c11427448 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x558c11427428 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x558c11427388 't2104' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x558c114275d8 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x558c114274c0 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x558c11427498 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x558c11427460 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x558c114275f0 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x558c114274e0 <col:39> 'void *(void *)' Function 0x558c114251b8 'P2' 'void *(void *)'
    | `-ParenExpr 0x558c11427560 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x558c11427538 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x558c11427500 <col:52> 'int' 0
    |-CallExpr 0x558c11427640 <line:813:3, col:27> 'void'
    | `-ImplicitCastExpr 0x558c11427628 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x558c11427608 <col:3> 'void ()' Function 0x558c113c54b0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x558c11427710 <line:814:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x558c11427660 <col:3> '_Bool' lvalue Var 0x558c1141f348 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x558c114276f8 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x558c114276d8 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x558c114276c0 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x558c11427680 <col:21> 'int' lvalue Var 0x558c1141e740 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x558c114276a0 <col:41> 'int' 3
    |-CallExpr 0x558c11427768 <line:815:3, col:25> 'void'
    | `-ImplicitCastExpr 0x558c11427750 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x558c11427730 <col:3> 'void ()' Function 0x558c113c5570 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x558c114277e0 <line:816:3, col:36> 'void'
    | |-ImplicitCastExpr 0x558c114277c8 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x558c11427788 <col:3> 'void (int)' Function 0x558c113c4e50 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x558c11427820 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x558c11427808 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x558c114277a8 <col:21> '_Bool' lvalue Var 0x558c1141f348 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x558c11427870 <line:817:3, col:27> 'void'
    | `-ImplicitCastExpr 0x558c11427858 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x558c11427838 <col:3> 'void ()' Function 0x558c113c54b0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x558c11427b58 <line:818:3, col:103> 'int' '='
    | |-DeclRefExpr 0x558c11427890 <col:3> 'int' lvalue Var 0x558c1141f5e0 'y' 'int'
    | `-ConditionalOperator 0x558c11427b28 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x558c11427950 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x558c11427908 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x558c114278f0 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x558c114278b0 <col:7> '_Bool' lvalue Var 0x558c1141fca8 'y$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x558c11427938 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x558c11427920 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x558c114278d0 <col:25> '_Bool' lvalue Var 0x558c1141f770 'y$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x558c11427b10 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x558c11427970 <col:42> 'int' lvalue Var 0x558c1141fc30 'y$w_buff0' 'int'
    |   `-ParenExpr 0x558c11427af0 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x558c11427ac0 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x558c11427a30 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x558c114279e8 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x558c114279d0 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x558c11427990 <col:55> '_Bool' lvalue Var 0x558c1141fda0 'y$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x558c11427a18 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x558c11427a00 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x558c114279b0 <col:73> '_Bool' lvalue Var 0x558c1141f950 'y$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x558c11427a90 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x558c11427a50 <col:90> 'int' lvalue Var 0x558c1141fd28 'y$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x558c11427aa8 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x558c11427a70 <col:102> 'int' lvalue Var 0x558c1141f5e0 'y' 'int'
    |-BinaryOperator 0x558c11427d60 <line:819:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x558c11427b78 <col:3> '_Bool' lvalue Var 0x558c1141fca8 'y$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x558c11427d48 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x558c11427d18 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x558c11427c38 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x558c11427bf0 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x558c11427bd8 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x558c11427b98 <col:20> '_Bool' lvalue Var 0x558c1141fca8 'y$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x558c11427c20 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x558c11427c08 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x558c11427bb8 <col:38> '_Bool' lvalue Var 0x558c1141f770 'y$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x558c11427cd0 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x558c11427c88 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x558c11427c58 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x558c11427d00 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x558c11427ce8 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x558c11427cb0 <col:66> '_Bool' lvalue Var 0x558c1141fca8 'y$w_buff0_used' '_Bool'
    |-BinaryOperator 0x558c11428060 <line:820:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x558c11427d80 <col:3> '_Bool' lvalue Var 0x558c1141fda0 'y$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x558c11428048 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x558c11428018 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x558c11427f20 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x558c11427e40 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x558c11427df8 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x558c11427de0 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x558c11427da0 <col:20> '_Bool' lvalue Var 0x558c1141fca8 'y$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x558c11427e28 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x558c11427e10 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x558c11427dc0 <col:38> '_Bool' lvalue Var 0x558c1141f770 'y$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x558c11427f00 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x558c11427eb8 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x558c11427ea0 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x558c11427e60 <col:56> '_Bool' lvalue Var 0x558c1141fda0 'y$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x558c11427ee8 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x558c11427ed0 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x558c11427e80 <col:74> '_Bool' lvalue Var 0x558c1141f950 'y$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x558c11427fd0 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x558c11427f70 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x558c11427f40 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x558c11428000 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x558c11427fe8 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x558c11427fb0 <col:102> '_Bool' lvalue Var 0x558c1141fda0 'y$w_buff1_used' '_Bool'
    |-BinaryOperator 0x558c11428268 <line:821:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x558c11428080 <col:3> '_Bool' lvalue Var 0x558c1141f770 'y$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x558c11428250 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x558c11428220 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x558c11428140 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x558c114280f8 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x558c114280e0 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x558c114280a0 <col:20> '_Bool' lvalue Var 0x558c1141fca8 'y$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x558c11428128 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x558c11428110 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x558c114280c0 <col:38> '_Bool' lvalue Var 0x558c1141f770 'y$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x558c114281d8 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x558c11428190 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x558c11428160 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x558c11428208 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x558c114281f0 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x558c114281b8 <col:66> '_Bool' lvalue Var 0x558c1141f770 'y$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x558c11428550 <line:822:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x558c11428288 <col:3> '_Bool' lvalue Var 0x558c1141f950 'y$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x558c11428538 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x558c11428508 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x558c11428428 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x558c11428348 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x558c11428300 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x558c114282e8 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x558c114282a8 <col:20> '_Bool' lvalue Var 0x558c1141fca8 'y$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x558c11428330 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x558c11428318 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x558c114282c8 <col:38> '_Bool' lvalue Var 0x558c1141f770 'y$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x558c11428408 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x558c114283c0 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x558c114283a8 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x558c11428368 <col:56> '_Bool' lvalue Var 0x558c1141fda0 'y$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x558c114283f0 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x558c114283d8 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x558c11428388 <col:74> '_Bool' lvalue Var 0x558c1141f950 'y$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x558c114284c0 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x558c11428478 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x558c11428448 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x558c114284f0 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x558c114284d8 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x558c114284a0 <col:102> '_Bool' lvalue Var 0x558c1141f950 'y$r_buff1_thd0' '_Bool'
    |-CallExpr 0x558c114285a8 <line:823:3, col:25> 'void'
    | `-ImplicitCastExpr 0x558c11428590 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x558c11428570 <col:3> 'void ()' Function 0x558c113c5570 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x558c11428600 <line:824:3, col:27> 'void'
    | `-ImplicitCastExpr 0x558c114285e8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x558c114285c8 <col:3> 'void ()' Function 0x558c113c54b0 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x558c11428698 <line:825:3, col:42> '_Bool' '='
    | |-DeclRefExpr 0x558c11428620 <col:3> '_Bool' lvalue Var 0x558c1141fe90 'weak$$choice1' '_Bool'
    | `-CallExpr 0x558c11428678 <col:19, col:42> '_Bool'
    |   `-ImplicitCastExpr 0x558c11428660 <col:19> '_Bool (*)(void)' <FunctionToPointerDecay>
    |     `-DeclRefExpr 0x558c11428640 <col:19> '_Bool (void)' Function 0x558c113c4c80 '__VERIFIER_nondet_bool' '_Bool (void)'
    |-BinaryOperator 0x558c114288d0 <line:826:3, col:140> 'int' '='
    | |-DeclRefExpr 0x558c114286b8 <col:3> 'int' lvalue Var 0x558c1141e860 '__unbuffered_p0_EAX' 'int'
    | `-ConditionalOperator 0x558c114288a0 <col:25, col:140> 'int'
    |   |-ImplicitCastExpr 0x558c11428870 <col:25> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x558c11428858 <col:25> '_Bool' <LValueToRValue>
    |   |   `-DeclRefExpr 0x558c114286d8 <col:25> '_Bool' lvalue Var 0x558c1141edb0 '__unbuffered_p0_EAX$read_delayed' '_Bool'
    |   |-ParenExpr 0x558c11428818 <col:60, col:136> 'int'
    |   | `-ConditionalOperator 0x558c114287e8 <col:61, col:117> 'int'
    |   |   |-ImplicitCastExpr 0x558c114287a0 <col:61> 'int' <IntegralCast>
    |   |   | `-ImplicitCastExpr 0x558c11428788 <col:61> '_Bool' <LValueToRValue>
    |   |   |   `-DeclRefExpr 0x558c114286f8 <col:61> '_Bool' lvalue Var 0x558c1141fe90 'weak$$choice1' '_Bool'
    |   |   |-ImplicitCastExpr 0x558c114287b8 <col:77, col:78> 'int' <LValueToRValue>
    |   |   | `-UnaryOperator 0x558c11428750 <col:77, col:78> 'int' lvalue prefix '*' cannot overflow
    |   |   |   `-ImplicitCastExpr 0x558c11428738 <col:78> 'int *' <LValueToRValue>
    |   |   |     `-DeclRefExpr 0x558c11428718 <col:78> 'int *' lvalue Var 0x558c1141ee30 '__unbuffered_p0_EAX$read_delayed_var' 'int *'
    |   |   `-ImplicitCastExpr 0x558c114287d0 <col:117> 'int' <LValueToRValue>
    |   |     `-DeclRefExpr 0x558c11428768 <col:117> 'int' lvalue Var 0x558c1141e860 '__unbuffered_p0_EAX' 'int'
    |   `-ImplicitCastExpr 0x558c11428888 <col:140> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x558c11428838 <col:140> 'int' lvalue Var 0x558c1141e860 '__unbuffered_p0_EAX' 'int'
    |-BinaryOperator 0x558c11428ba0 <line:827:3, col:113> '_Bool' '='
    | |-DeclRefExpr 0x558c114288f0 <col:3> '_Bool' lvalue Var 0x558c1141f3c0 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x558c11428b88 <col:21, col:113> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x558c11428b70 <col:21, col:113> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x558c11428b50 <col:22, col:113> 'int'
    |       `-BinaryOperator 0x558c11428b30 <col:23, col:112> 'int' '&&'
    |         |-BinaryOperator 0x558c11428a98 <col:23, col:84> 'int' '&&'
    |         | |-BinaryOperator 0x558c11428a00 <col:23, col:56> 'int' '&&'
    |         | | |-BinaryOperator 0x558c11428968 <col:23, col:28> 'int' '=='
    |         | | | |-ImplicitCastExpr 0x558c11428950 <col:23> 'int' <LValueToRValue>
    |         | | | | `-DeclRefExpr 0x558c11428910 <col:23> 'int' lvalue Var 0x558c1141f4c0 'x' 'int'
    |         | | | `-IntegerLiteral 0x558c11428930 <col:28> 'int' 2
    |         | | `-BinaryOperator 0x558c114289e0 <col:33, col:56> 'int' '=='
    |         | |   |-ImplicitCastExpr 0x558c114289c8 <col:33> 'int' <LValueToRValue>
    |         | |   | `-DeclRefExpr 0x558c11428988 <col:33> 'int' lvalue Var 0x558c1141e860 '__unbuffered_p0_EAX' 'int'
    |         | |   `-IntegerLiteral 0x558c114289a8 <col:56> 'int' 1
    |         | `-BinaryOperator 0x558c11428a78 <col:61, col:84> 'int' '=='
    |         |   |-ImplicitCastExpr 0x558c11428a60 <col:61> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x558c11428a20 <col:61> 'int' lvalue Var 0x558c1141f190 '__unbuffered_p0_EBX' 'int'
    |         |   `-IntegerLiteral 0x558c11428a40 <col:84> 'int' 0
    |         `-BinaryOperator 0x558c11428b10 <col:89, col:112> 'int' '=='
    |           |-ImplicitCastExpr 0x558c11428af8 <col:89> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x558c11428ab8 <col:89> 'int' lvalue Var 0x558c1141f2b0 '__unbuffered_p2_EAX' 'int'
    |           `-IntegerLiteral 0x558c11428ad8 <col:112> 'int' 2
    |-CallExpr 0x558c11428bf8 <line:828:3, col:25> 'void'
    | `-ImplicitCastExpr 0x558c11428be0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x558c11428bc0 <col:3> 'void ()' Function 0x558c113c5570 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x558c11428c70 <line:829:3, col:36> 'void'
    | |-ImplicitCastExpr 0x558c11428c58 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x558c11428c18 <col:3> 'void (int)' Function 0x558c113c5238 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x558c11428cb0 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x558c11428c98 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x558c11428c38 <col:21> '_Bool' lvalue Var 0x558c1141f3c0 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x558c11428ce8 <line:830:3, col:10>
      `-IntegerLiteral 0x558c11428cc8 <col:10> 'int' 0
