TranslationUnitDecl 0x55914fb49f88 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x55914fb4a848 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x55914fb4a520 '__int128'
|-TypedefDecl 0x55914fb4a8b8 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x55914fb4a540 'unsigned __int128'
|-TypedefDecl 0x55914fb4abc0 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x55914fb4a990 'struct __NSConstantString_tag'
|   `-Record 0x55914fb4a910 '__NSConstantString_tag'
|-TypedefDecl 0x55914fb4ac68 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x55914fb4ac20 'char *'
|   `-BuiltinType 0x55914fb4a020 'char'
|-TypedefDecl 0x55914fb89b60 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x55914fb4af00 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x55914fb4ad40 'struct __va_list_tag'
|     `-Record 0x55914fb4acc0 '__va_list_tag'
|-FunctionDecl 0x55914fb89ca0 <pthread-wmm/mix029_rmo.opt_false-unreach-call.i:1:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x55914fb89bd0 <col:31> col:34 'int'
|-FunctionDecl 0x55914fb89e68 <line:2:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x55914fb89f90 <line:3:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x55914fb8a0d8 <line:4:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x55914fb8a048 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x55914fb8a308 <col:40, col:99>
|   |-IfStmt 0x55914fb8a2d8 <col:42, col:88>
|   | |-UnaryOperator 0x55914fb8a1b8 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x55914fb8a1a0 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x55914fb8a180 <col:47> 'int' lvalue ParmVar 0x55914fb8a048 'expression' 'int'
|   | `-CompoundStmt 0x55914fb8a2c0 <col:59, col:88>
|   |   `-LabelStmt 0x55914fb8a2a8 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x55914fb8a238 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x55914fb8a220 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x55914fb8a1d0 <col:68> 'void () __attribute__((noreturn))' Function 0x55914fb89f90 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x55914fb8a2f0 <col:89>
|   `-ReturnStmt 0x55914fb8a2f8 <col:91>
|-FunctionDecl 0x55914fb8a350 <line:5:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x55914fb8a410 <line:6:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x55914fb8a790 <line:8:1, line:10:76> line:8:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55914fb8a4c8 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x55914fb8a548 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x55914fb8a5c8 <line:9:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x55914fb8a648 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x55914fb8a850 <line:10:22>
|-FunctionDecl 0x55914fbb08a0 <line:11:1, line:13:76> line:11:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55914fb8a8c0 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x55914fb8a940 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x55914fb8a9c0 <line:12:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x55914fb8aa40 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x55914fbb0960 <line:13:22>
|-FunctionDecl 0x55914fbb0c10 <line:14:1, line:15:76> line:14:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55914fbb09d0 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x55914fbb0a50 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x55914fbb0ad0 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x55914fbb0cc8 <line:15:22>
|-TypedefDecl 0x55914fbb0d38 <line:17:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x55914fb4a0e0 'unsigned char'
|-TypedefDecl 0x55914fbb0da8 <line:18:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x55914fb4a100 'unsigned short'
|-TypedefDecl 0x55914fbb0e18 <line:19:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x55914fb4a120 'unsigned int'
|-TypedefDecl 0x55914fbb0e88 <line:20:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x55914fb4a140 'unsigned long'
|-TypedefDecl 0x55914fbb0ef8 <line:21:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x55914fb4a040 'signed char'
|-TypedefDecl 0x55914fbb0f68 <line:22:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x55914fb4a0e0 'unsigned char'
|-TypedefDecl 0x55914fbb0fd8 <line:23:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x55914fb4a060 'short'
|-TypedefDecl 0x55914fbb1048 <line:24:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x55914fb4a100 'unsigned short'
|-TypedefDecl 0x55914fbb10b8 <line:25:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x55914fb4a080 'int'
|-TypedefDecl 0x55914fbb1128 <line:26:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x55914fb4a120 'unsigned int'
|-TypedefDecl 0x55914fbb1198 <line:27:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x55914fb4a0a0 'long'
|-TypedefDecl 0x55914fbb1208 <line:28:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x55914fb4a140 'unsigned long'
|-TypedefDecl 0x55914fbb1278 <line:29:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x55914fb4a0a0 'long'
|-TypedefDecl 0x55914fbb12e8 <line:30:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x55914fb4a140 'unsigned long'
|-TypedefDecl 0x55914fbb1358 <line:31:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x55914fb4a140 'unsigned long'
|-TypedefDecl 0x55914fbb13c8 <line:32:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x55914fb4a120 'unsigned int'
|-TypedefDecl 0x55914fbb1438 <line:33:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x55914fb4a120 'unsigned int'
|-TypedefDecl 0x55914fbb14a8 <line:34:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x55914fb4a140 'unsigned long'
|-TypedefDecl 0x55914fbb1518 <line:35:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x55914fb4a140 'unsigned long'
|-TypedefDecl 0x55914fbb1588 <line:36:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x55914fb4a120 'unsigned int'
|-TypedefDecl 0x55914fbb15f8 <line:37:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x55914fb4a140 'unsigned long'
|-TypedefDecl 0x55914fbb1668 <line:38:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x55914fb4a0a0 'long'
|-TypedefDecl 0x55914fbb16d8 <line:39:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x55914fb4a0a0 'long'
|-TypedefDecl 0x55914fbb1748 <line:40:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x55914fb4a080 'int'
|-RecordDecl 0x55914fbb17a0 <line:41:9, col:32> col:9 struct definition
| `-FieldDecl 0x55914fbb1918 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x55914fbb19d0 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x55914fbb1970 'struct __fsid_t' sugar
|   `-RecordType 0x55914fbb1820 '__fsid_t'
|     `-Record 0x55914fbb17a0 ''
|-TypedefDecl 0x55914fbb1a58 <line:42:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x55914fb4a0a0 'long'
|-TypedefDecl 0x55914fbb1ac8 <line:43:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x55914fb4a140 'unsigned long'
|-TypedefDecl 0x55914fbb1b38 <line:44:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x55914fb4a140 'unsigned long'
|-TypedefDecl 0x55914fbb1ba8 <line:45:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x55914fb4a120 'unsigned int'
|-TypedefDecl 0x55914fbb1c18 <line:46:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x55914fb4a0a0 'long'
|-TypedefDecl 0x55914fbb1c88 <line:47:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x55914fb4a120 'unsigned int'
|-TypedefDecl 0x55914fbb1cf8 <line:48:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x55914fb4a0a0 'long'
|-TypedefDecl 0x55914fbb1d68 <line:49:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x55914fb4a080 'int'
|-TypedefDecl 0x55914fbb1dd8 <line:50:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x55914fb4a080 'int'
|-TypedefDecl 0x55914fbb1e48 <line:51:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x55914fb4a080 'int'
|-TypedefDecl 0x55914fbb1eb8 <line:52:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x55914fb4a7a0 'void *'
|   `-BuiltinType 0x55914fb49fe0 'void'
|-TypedefDecl 0x55914fbb1f28 <line:53:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x55914fb4a0a0 'long'
|-TypedefDecl 0x55914fbb1f98 <line:54:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x55914fb4a0a0 'long'
|-TypedefDecl 0x55914fbb2008 <line:55:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x55914fb4a0a0 'long'
|-TypedefDecl 0x55914fbb2078 <line:56:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x55914fb4a140 'unsigned long'
|-TypedefDecl 0x55914fbb20e8 <line:57:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x55914fb4a140 'unsigned long'
|-TypedefDecl 0x55914fbb2158 <line:58:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x55914fb4a140 'unsigned long'
|-TypedefDecl 0x55914fbb21c8 <line:59:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x55914fb4a140 'unsigned long'
|-TypedefDecl 0x55914fbb2238 <line:60:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x55914fb4a0a0 'long'
|-TypedefDecl 0x55914fbb22a8 <line:61:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x55914fb4a0a0 'long'
|-TypedefDecl 0x55914fbb2318 <line:62:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x55914fb4a0a0 'long'
|-TypedefDecl 0x55914fbb2388 <line:63:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x55914fb4a140 'unsigned long'
|-TypedefDecl 0x55914fbb2418 <line:64:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x55914fbb23e0 '__off64_t' sugar
|   |-Typedef 0x55914fbb16d8 '__off64_t'
|   `-BuiltinType 0x55914fb4a0a0 'long'
|-TypedefDecl 0x55914fbb2510 <line:65:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x55914fbb24d0 '__quad_t *'
|   `-TypedefType 0x55914fbb2470 '__quad_t' sugar
|     |-Typedef 0x55914fbb1278 '__quad_t'
|     `-BuiltinType 0x55914fb4a0a0 'long'
|-TypedefDecl 0x55914fbb2580 <line:66:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x55914fb4ac20 'char *'
|   `-BuiltinType 0x55914fb4a020 'char'
|-TypedefDecl 0x55914fbb25f0 <line:67:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x55914fb4a0a0 'long'
|-TypedefDecl 0x55914fbb2660 <line:68:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x55914fb4a120 'unsigned int'
|-FunctionDecl 0x55914fbb27a8 <line:69:1, line:73:1> line:70:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x55914fbb26d0 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x55914fbb2ae8 <line:71:1, line:73:1>
|   `-ReturnStmt 0x55914fbb2ad8 <line:72:3, col:34>
|     `-CallExpr 0x55914fbb2a98 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x55914fbb2a80 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x55914fbb2a10 <col:10> '<builtin fn type>' Function 0x55914fbb2880 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x55914fbb2ac0 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x55914fbb2a30 <col:29> 'unsigned int' lvalue ParmVar 0x55914fbb26d0 '__bsx' 'unsigned int'
|-FunctionDecl 0x55914fbb2880 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x55914fbb2920 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x55914fbb2990 <col:10> Implicit
| `-ConstAttr 0x55914fbb29e8 <col:10> Implicit
|-FunctionDecl 0x55914fbb2c40 <line:74:1, line:78:1> line:75:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x55914fbb2b38 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x55914fbb2f58 <line:76:1, line:78:1>
|   `-ReturnStmt 0x55914fbb2f48 <line:77:3, col:34>
|     `-CallExpr 0x55914fbb2f08 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x55914fbb2ef0 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x55914fbb2e78 <col:10> '<builtin fn type>' Function 0x55914fbb2ce8 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x55914fbb2f30 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x55914fbb2e98 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x55914fbb2b38 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x55914fbb2ce8 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x55914fbb2d88 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x55914fbb2df8 <col:10> Implicit
| `-ConstAttr 0x55914fbb2e50 <col:10> Implicit
|-TypedefDecl 0x55914fbb2f88 <line:79:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x55914fb4a140 'unsigned long'
|-TypedefDecl 0x55914fbb3018 <line:81:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x55914fbb2fe0 '__time_t' sugar
|   |-Typedef 0x55914fbb1c18 '__time_t'
|   `-BuiltinType 0x55914fb4a0a0 'long'
|-RecordDecl 0x55914fbb3070 <line:84:1, line:88:3> line:84:8 struct timespec definition
| |-FieldDecl 0x55914fbb3128 <line:86:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x55914fbb31b8 <line:87:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x55914fbb3248 <line:89:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x55914fbb3210 '__pid_t' sugar
|   |-Typedef 0x55914fbb1748 '__pid_t'
|   `-BuiltinType 0x55914fb4a080 'int'
|-RecordDecl 0x55914fbb32a0 <line:90:1, line:93:3> line:90:8 struct sched_param definition
| `-FieldDecl 0x55914fbb3360 <line:92:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x55914fbb33b0 <line:96:1, line:99:3> line:96:8 struct __sched_param definition
| `-FieldDecl 0x55914fbb3470 <line:98:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x55914fbb34d8 <line:100:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x55914fb4a140 'unsigned long'
|-RecordDecl 0x55914fbb3530 <line:101:9, line:104:1> line:101:9 struct definition
| `-FieldDecl 0x55914fbb37c0 <line:103:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x55914fbb58b0 <line:101:1, line:104:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x55914fbb3810 'struct cpu_set_t' sugar
|   `-RecordType 0x55914fbb35b0 'cpu_set_t'
|     `-Record 0x55914fbb3530 ''
|-FunctionDecl 0x55914fbb5b88 <line:106:1, line:107:42> line:106:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x55914fbb5958 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x55914fbb5a60 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x55914fbb5c38 <line:107:19>
|-FunctionDecl 0x55914fbb5e10 <line:108:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x55914fbb5ca0 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x55914fbb5eb8 <col:69>
|-FunctionDecl 0x55914fbb6030 <line:109:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x55914fbb5f20 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x55914fbb60d8 <col:64>
|-FunctionDecl 0x55914fbb6398 <line:112:1, line:113:45> line:112:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x55914fbb6140 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55914fbb6278 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x55914fbb6448 <line:113:22>
|-FunctionDecl 0x55914fbb66c8 <line:114:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x55914fbb64b0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55914fbb65a8 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x55914fbb6778 <col:88>
|-FunctionDecl 0x55914fbb6a98 <line:115:1, line:116:85> line:115:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x55914fbb67e0 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55914fbb68c0 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x55914fbb6950 <line:116:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x55914fbb6b50 <col:62>
|-FunctionDecl 0x55914fbb6cc8 <line:117:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x55914fbb6bb8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x55914fbb6d70 <col:63>
|-FunctionDecl 0x55914fbb6e98 <line:118:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x55914fbb6f38 <col:47>
|-FunctionDecl 0x55914fbb7040 <line:119:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x55914fbb6fa8 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x55914fbb70e8 <col:69>
|-FunctionDecl 0x55914fbb71f0 <line:120:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x55914fbb7158 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x55914fbb7298 <col:69>
|-FunctionDecl 0x55914fbb7558 <line:121:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x55914fbb7300 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55914fbb7438 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x55914fbb7608 <col:88>
|-TypedefDecl 0x55914fbb7698 <line:125:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x55914fbb7660 '__clock_t' sugar
|   |-Typedef 0x55914fbb1a58 '__clock_t'
|   `-BuiltinType 0x55914fb4a0a0 'long'
|-TypedefDecl 0x55914fbb7728 <line:128:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x55914fbb76f0 '__clockid_t' sugar
|   |-Typedef 0x55914fbb1e48 '__clockid_t'
|   `-BuiltinType 0x55914fb4a080 'int'
|-TypedefDecl 0x55914fbb77b8 <line:129:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x55914fbb7780 '__timer_t' sugar
|   |-Typedef 0x55914fbb1eb8 '__timer_t'
|   `-PointerType 0x55914fb4a7a0 'void *'
|     `-BuiltinType 0x55914fb49fe0 'void'
|-RecordDecl 0x55914fbb7810 <line:131:1, line:144:1> line:131:8 struct tm definition
| |-FieldDecl 0x55914fbb78e8 <line:133:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x55914fbb7950 <line:134:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x55914fbb79b8 <line:135:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x55914fbb7a20 <line:136:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x55914fbb7a88 <line:137:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x55914fbb7af0 <line:138:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x55914fbb7b58 <line:139:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x55914fbb7bc0 <line:140:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x55914fbb7c28 <line:141:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x55914fbb7c90 <line:142:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x55914fbb7cf8 <line:143:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x55914fbb7d48 <line:147:1, line:151:3> line:147:8 struct itimerspec definition
| |-FieldDecl 0x55914fbb7e18 <line:149:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x55914fbb7e88 <line:150:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x55914fbb7f30 <line:152:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x55914fbb8100 <line:154:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x55914fbb81a0 <col:45>
|-FunctionDecl 0x55914fbb8380 <line:155:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x55914fbb8270 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x55914fbb8428 <col:54>
|-FunctionDecl 0x55914fbb8628 <line:156:1, line:157:73> line:156:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x55914fbb8490 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x55914fbb8508 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x55914fbb86d8 <line:157:22>
| `-ConstAttr 0x55914fbb8730 <col:63>
|-FunctionDecl 0x55914fbb9560 <line:158:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x55914fbb8828 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x55914fbb9608 <col:56>
|-FunctionDecl 0x55914fbb99b0 <line:159:1, line:161:77> line:159:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x55914fbb9678 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x55914fbb96f0 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x55914fbb9770 <line:160:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x55914fbb9868 <line:161:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x55914fbb9a70 <col:54>
|-RecordDecl 0x55914fbb9ac8 <line:163:9, line:170:1> line:163:16 struct __locale_struct definition
| |-RecordDecl 0x55914fbb9b78 parent 0x55914fb49f88 <line:165:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x55914fbb9dd8 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x55914fbb9e78 <line:166:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x55914fbb9ee0 <line:167:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x55914fbb9f48 <line:168:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x55914fbba038 <line:169:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x55914fbba158 <line:163:1, line:170:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x55914fbba100 'struct __locale_struct *'
|   `-ElaboratedType 0x55914fbba090 'struct __locale_struct' sugar
|     `-RecordType 0x55914fbb9b50 'struct __locale_struct'
|       `-Record 0x55914fbb9ac8 '__locale_struct'
|-TypedefDecl 0x55914fbba208 <line:171:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x55914fbba1d0 '__locale_t' sugar
|   |-Typedef 0x55914fbba158 '__locale_t'
|   `-PointerType 0x55914fbba100 'struct __locale_struct *'
|     `-ElaboratedType 0x55914fbba090 'struct __locale_struct' sugar
|       `-RecordType 0x55914fbb9b50 'struct __locale_struct'
|         `-Record 0x55914fbb9ac8 '__locale_struct'
|-FunctionDecl 0x55914fbba610 <line:172:1, line:175:63> line:172:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x55914fbba278 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x55914fbba2f0 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x55914fbba370 <line:173:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x55914fbba400 <line:174:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x55914fbba478 <line:175:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x55914fbba6d8 <col:40>
|-FunctionDecl 0x55914fbba8c8 <line:177:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x55914fbba7a0 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x55914fbba970 <col:66>
|-FunctionDecl 0x55914fbbaa80 <line:178:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x55914fbba9d8 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x55914fbbab28 <col:69>
|-FunctionDecl 0x55914fbbad58 <line:180:1, line:181:75> line:180:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x55914fbbab90 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x55914fbbac20 <line:181:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x55914fbbae08 <col:52>
|-FunctionDecl 0x55914fbbafb0 <line:182:1, line:183:78> line:182:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x55914fbbae70 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x55914fbbaf00 <line:183:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x55914fbbb060 <col:55>
|-FunctionDecl 0x55914fbbb1f8 <line:185:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x55914fbbb0e0 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x55914fbbb2a0 <col:62>
|-FunctionDecl 0x55914fbbb418 <line:186:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x55914fbbb308 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x55914fbbb4c0 <col:60>
|-FunctionDecl 0x55914fbbb718 <line:188:1, line:189:67> line:188:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x55914fbbb578 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x55914fbbb5f8 <line:189:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x55914fbbb7c8 <col:44>
|-FunctionDecl 0x55914fbbb9d8 <line:190:1, line:191:72> line:190:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x55914fbbb830 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x55914fbbb8b0 <line:191:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x55914fbbba88 <col:49>
|-VarDecl 0x55914fbbbb88 <line:192:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x55914fbbbc08 <line:193:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x55914fbbbc88 <line:194:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x55914fbbbd50 <line:195:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x55914fbbbe80 <line:196:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x55914fbbbf20 <col:42>
|-VarDecl 0x55914fbbbf90 <line:197:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x55914fbbc010 <line:198:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x55914fbbc198 <line:199:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x55914fbbc088 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x55914fbbc240 <col:57>
|-FunctionDecl 0x55914fbbc350 <line:200:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x55914fbbc2c0 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x55914fbbc3f8 <col:56>
|-FunctionDecl 0x55914fbbd540 <line:201:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x55914fbbc478 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x55914fbbd5e8 <col:59>
|-FunctionDecl 0x55914fbbd6f0 <line:202:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x55914fbbd658 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x55914fbbd798 <col:48>
| `-ConstAttr 0x55914fbbd7f0 <col:89>
|-FunctionDecl 0x55914fbbda58 <line:203:1, line:204:37> line:203:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x55914fbbd8a8 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x55914fbbd938 <line:204:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x55914fbbdcb8 <line:205:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x55914fbbdb48 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55914fbbdbd8 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x55914fbbdd68 <col:88>
|-FunctionDecl 0x55914fbbdf00 <line:206:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x55914fbbddd0 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55914fbbde60 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x55914fbbdfb0 <col:88>
|-FunctionDecl 0x55914fbbe1c8 <line:207:1, line:208:45> line:207:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x55914fbbe018 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55914fbbe0a8 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x55914fbbe278 <line:208:22>
|-FunctionDecl 0x55914fbbe5e8 <line:209:1, line:211:30> line:209:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x55914fbbe2e0 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55914fbbe360 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x55914fbbe3f0 <line:210:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x55914fbbe480 <line:211:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x55914fbbe8e8 <line:212:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x55914fbbe6e8 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x55914fbbe7c0 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x55914fbbe998 <col:85>
|-FunctionDecl 0x55914fbbed88 <line:213:1, line:215:75> line:213:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x55914fbbea00 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x55914fbbeb38 <line:214:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x55914fbbec40 <line:215:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x55914fbbee40 <col:52>
|-FunctionDecl 0x55914fbbefb8 <line:216:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x55914fbbeea8 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x55914fbbf060 <col:61>
|-FunctionDecl 0x55914fbbf560 <line:217:1, line:219:85> line:217:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x55914fbbf0c8 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x55914fbbf148 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x55914fbbf278 <line:218:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x55914fbbf368 <line:219:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x55914fbbf620 <col:62>
|-FunctionDecl 0x55914fbbf838 <line:220:1, line:221:45> line:220:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x55914fbbf688 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x55914fbbf718 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x55914fbbf8e8 <line:221:22>
|-FunctionDecl 0x55914fbbf9e8 <line:222:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x55914fbbf950 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x55914fbbfa90 <col:65>
|-TypedefDecl 0x55914fbbfb00 <line:224:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x55914fb4a140 'unsigned long'
|-RecordDecl 0x55914fbbfb58 <line:225:1, line:229:1> line:225:7 union pthread_attr_t definition
| |-FieldDecl 0x55914fbbfca0 <line:227:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x55914fbbfd08 <line:228:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55914fbbfdb8 <line:230:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x55914fbbfd60 'union pthread_attr_t' sugar
|   `-RecordType 0x55914fbbfbe0 'union pthread_attr_t'
|     `-Record 0x55914fbbfb58 'pthread_attr_t'
|-RecordDecl 0x55914fbbfe10 <line:231:9, line:235:1> line:231:16 struct __pthread_internal_list definition
| |-FieldDecl 0x55914fbbff88 <line:233:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x55914fbc0000 <line:234:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x55914fbc00b0 <line:231:1, line:235:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x55914fbc0050 'struct __pthread_internal_list' sugar
|   `-RecordType 0x55914fbbfe90 'struct __pthread_internal_list'
|     `-Record 0x55914fbbfe10 '__pthread_internal_list'
|-RecordDecl 0x55914fbc0120 <line:236:9, line:250:1> line:236:9 union definition
| |-RecordDecl 0x55914fbc01c8 parent 0x55914fb49f88 <line:238:3, line:247:3> line:238:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x55914fbc02a0 <line:240:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x55914fbc0308 <line:241:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x55914fbc0370 <line:242:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x55914fbc03d8 <line:243:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x55914fbc0440 <line:244:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x55914fbc04a8 <line:245:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x55914fbc4580 <line:246:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x55914fbc4630 <line:238:3, line:247:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x55914fbc4720 <line:248:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x55914fbc4788 <line:249:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55914fbc4910 <line:236:1, line:250:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x55914fbc48b0 'union pthread_mutex_t' sugar
|   `-RecordType 0x55914fbc01a0 'pthread_mutex_t'
|     `-Record 0x55914fbc0120 ''
|-RecordDecl 0x55914fbc4980 <line:251:9, line:255:1> line:251:9 union definition
| |-FieldDecl 0x55914fbc4ac0 <line:253:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x55914fbc4b28 <line:254:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x55914fbc4be0 <line:251:1, line:255:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x55914fbc4b80 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x55914fbc4a00 'pthread_mutexattr_t'
|     `-Record 0x55914fbc4980 ''
|-RecordDecl 0x55914fbc4c50 <line:256:9, line:271:1> line:256:9 union definition
| |-RecordDecl 0x55914fbc4cf8 <line:258:3, line:268:3> line:258:3 struct definition
| | |-FieldDecl 0x55914fbc4dc0 <line:260:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x55914fbc4e28 <line:261:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x55914fbc4e90 <line:262:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x55914fbc4ef8 <line:263:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x55914fbc4f60 <line:264:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x55914fbc4fc8 <line:265:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x55914fbc5030 <line:266:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x55914fbc5098 <line:267:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x55914fbc5150 <line:258:3, line:268:5> col:5 __data 'struct (anonymous struct at pthread-wmm/mix029_rmo.opt_false-unreach-call.i:258:3)':'struct pthread_cond_t::(anonymous at pthread-wmm/mix029_rmo.opt_false-unreach-call.i:258:3)'
| |-FieldDecl 0x55914fbc5240 <line:269:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x55914fbc52a8 <line:270:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x55914fbc53e0 <line:256:1, line:271:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x55914fbc5380 'union pthread_cond_t' sugar
|   `-RecordType 0x55914fbc4cd0 'pthread_cond_t'
|     `-Record 0x55914fbc4c50 ''
|-RecordDecl 0x55914fbc5450 <line:272:9, line:276:1> line:272:9 union definition
| |-FieldDecl 0x55914fbc5590 <line:274:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x55914fbc55f8 <line:275:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x55914fbc56b0 <line:272:1, line:276:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x55914fbc5650 'union pthread_condattr_t' sugar
|   `-RecordType 0x55914fbc54d0 'pthread_condattr_t'
|     `-Record 0x55914fbc5450 ''
|-TypedefDecl 0x55914fbc5738 <line:277:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x55914fb4a120 'unsigned int'
|-TypedefDecl 0x55914fbc57a8 <line:278:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x55914fb4a080 'int'
|-RecordDecl 0x55914fbc5800 <line:279:9, line:297:1> line:279:9 union definition
| |-RecordDecl 0x55914fbc58a8 <line:281:3, line:294:3> line:281:3 struct definition
| | |-FieldDecl 0x55914fbc5970 <line:283:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x55914fbc59d8 <line:284:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x55914fbc5a40 <line:285:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x55914fbc5aa8 <line:286:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x55914fbc5b10 <line:287:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x55914fbc5b78 <line:288:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x55914fbc5be0 <line:289:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x55914fbc5c48 <line:290:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x55914fbc5cb0 <line:291:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x55914fbc5d18 <line:292:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x55914fbc5d80 <line:293:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x55914fbc5e30 <line:281:3, line:294:5> col:5 __data 'struct (anonymous struct at pthread-wmm/mix029_rmo.opt_false-unreach-call.i:281:3)':'struct pthread_rwlock_t::(anonymous at pthread-wmm/mix029_rmo.opt_false-unreach-call.i:281:3)'
| |-FieldDecl 0x55914fbc5ed8 <line:295:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x55914fbc5f40 <line:296:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55914fbc6090 <line:279:1, line:297:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x55914fbc6030 'union pthread_rwlock_t' sugar
|   `-RecordType 0x55914fbc5880 'pthread_rwlock_t'
|     `-Record 0x55914fbc5800 ''
|-RecordDecl 0x55914fbc6100 <line:298:9, line:302:1> line:298:9 union definition
| |-FieldDecl 0x55914fbc6240 <line:300:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x55914fbc62a8 <line:301:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55914fbc6360 <line:298:1, line:302:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x55914fbc6300 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x55914fbc6180 'pthread_rwlockattr_t'
|     `-Record 0x55914fbc6100 ''
|-TypedefDecl 0x55914fbc63e8 <line:303:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x55914fb4a084 'volatile int' volatile
|   `-BuiltinType 0x55914fb4a080 'int'
|-RecordDecl 0x55914fbc6440 <line:304:9, line:308:1> line:304:9 union definition
| |-FieldDecl 0x55914fbc85b0 <line:306:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x55914fbc8618 <line:307:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55914fbc86d0 <line:304:1, line:308:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x55914fbc8670 'union pthread_barrier_t' sugar
|   `-RecordType 0x55914fbc64c0 'pthread_barrier_t'
|     `-Record 0x55914fbc6440 ''
|-RecordDecl 0x55914fbc8740 <line:309:9, line:313:1> line:309:9 union definition
| |-FieldDecl 0x55914fbc8840 <line:311:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x55914fbc88a8 <line:312:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x55914fbc8960 <line:309:1, line:313:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x55914fbc8900 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x55914fbc87c0 'pthread_barrierattr_t'
|     `-Record 0x55914fbc8740 ''
|-TypedefDecl 0x55914fbc8a78 <line:314:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x55914fbc8a10 'long [8]' 8 
|   `-BuiltinType 0x55914fb4a0a0 'long'
|-EnumDecl 0x55914fbc8ad0 <line:315:1, line:319:1> line:315:1
| |-EnumConstantDecl 0x55914fbc8b98 <line:317:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x55914fbc8be8 <line:318:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x55914fbc8c38 <line:320:1, line:331:1> line:320:1
| |-EnumConstantDecl 0x55914fbc8d08 <line:322:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x55914fbc8d58 <line:323:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x55914fbc8da8 <line:324:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x55914fbc8df8 <line:325:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x55914fbc8e80 <line:327:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x55914fbc8e68 <col:26> 'int'
| |   `-DeclRefExpr 0x55914fbc8e48 <col:26> 'int' EnumConstant 0x55914fbc8d08 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x55914fbc8f08 <line:328:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x55914fbc8ef0 <col:29> 'int'
| |   `-DeclRefExpr 0x55914fbc8ed0 <col:29> 'int' EnumConstant 0x55914fbc8d58 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x55914fbc8f90 <line:329:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x55914fbc8f78 <col:30> 'int'
| |   `-DeclRefExpr 0x55914fbc8f58 <col:30> 'int' EnumConstant 0x55914fbc8da8 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x55914fbc9018 <line:330:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x55914fbc9000 <col:27> 'int'
|     `-DeclRefExpr 0x55914fbc8fe0 <col:27> 'int' EnumConstant 0x55914fbc8e80 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x55914fbc9068 <line:332:1, line:338:1> line:332:1
| |-EnumConstantDecl 0x55914fbc9138 <line:334:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x55914fbc91c0 <line:335:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x55914fbc91a8 <col:30> 'int'
| |   `-DeclRefExpr 0x55914fbc9188 <col:30> 'int' EnumConstant 0x55914fbc9138 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x55914fbc9210 <line:336:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x55914fbc9298 <line:337:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x55914fbc9280 <col:29> 'int'
|     `-DeclRefExpr 0x55914fbc9260 <col:29> 'int' EnumConstant 0x55914fbc9210 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x55914fbc92e8 <line:339:1, line:344:1> line:339:1
| |-EnumConstantDecl 0x55914fbc93b8 <line:341:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x55914fbc9408 <line:342:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x55914fbc9458 <line:343:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x55914fbc94a8 <line:345:1, line:351:1> line:345:1
| |-EnumConstantDecl 0x55914fbc95c0 <line:347:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x55914fbc9610 <line:348:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x55914fbc9660 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x55914fbc96e8 <line:350:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x55914fbc96d0 <col:31> 'int'
|     `-DeclRefExpr 0x55914fbc96b0 <col:31> 'int' EnumConstant 0x55914fbc95c0 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x55914fbc9738 <line:352:1, line:356:1> line:352:1
| |-EnumConstantDecl 0x55914fbc9808 <line:354:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x55914fbc9858 <line:355:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x55914fbc98a8 <line:357:1, line:361:1> line:357:1
| |-EnumConstantDecl 0x55914fbc9978 <line:359:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x55914fbc99c8 <line:360:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x55914fbc9a18 <line:362:1, line:366:1> line:362:1
| |-EnumConstantDecl 0x55914fbc9ae8 <line:364:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x55914fbc9b38 <line:365:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x55914fbc9b88 <line:367:1, line:373:1> line:367:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x55914fbc9dc8 <line:369:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x55914fbc9e30 <line:370:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x55914fbc9e98 <line:371:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x55914fbc9fb8 <line:372:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x55914fbca008 <line:374:1, line:378:1> line:374:1
| |-EnumConstantDecl 0x55914fbca0d8 <line:376:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x55914fbca128 <line:377:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x55914fbca178 <line:379:1, line:383:1> line:379:1
| |-EnumConstantDecl 0x55914fbca248 <line:381:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x55914fbca298 <line:382:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x55914fbca8f8 <line:385:1, line:388:96> line:385:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x55914fbca390 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x55914fbca4a0 <line:386:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55914fbca6e0 <line:387:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x55914fbca760 <line:388:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x55914fbca9b8 <col:47>
| |-NonNullAttr 0x55914fbcaa10 <col:77, col:94> 1 3
| `-CallbackAttr 0x55914fbcaa48 <line:385:12> Implicit 2 3
|-FunctionDecl 0x55914fbcab70 <line:389:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x55914fbcaaa0 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x55914fbcadc8 <line:390:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x55914fbcac28 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x55914fbcaca8 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x55914fbcaf98 <line:391:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x55914fbcae88 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x55914fbcb040 <col:60>
|-FunctionDecl 0x55914fbcb190 <line:392:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x55914fbcb230 <col:54>
| `-ConstAttr 0x55914fbcb288 <col:95>
|-FunctionDecl 0x55914fbcb458 <line:393:1, line:394:70> line:393:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x55914fbcb2c0 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55914fbcb338 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x55914fbcb508 <line:394:19>
| `-ConstAttr 0x55914fbcb560 <col:60>
|-FunctionDecl 0x55914fbcbf68 <line:395:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x55914fbcbe30 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x55914fbcc010 <col:71>
| `-NonNullAttr 0x55914fbcc068 <col:112, col:126> 1
|-FunctionDecl 0x55914fbcc170 <line:396:1, line:397:79> line:396:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x55914fbcc0b8 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x55914fbcc218 <line:397:22>
| `-NonNullAttr 0x55914fbcc270 <col:63, col:77> 1
|-FunctionDecl 0x55914fbcc498 <line:398:1, line:400:82> line:398:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x55914fbcc2b8 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x55914fbcc338 <line:399:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x55914fbcc548 <line:400:22>
| `-NonNullAttr 0x55914fbcc5a0 <col:63, col:80> 1 2
|-FunctionDecl 0x55914fbcc7a8 <line:401:1, line:403:79> line:401:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55914fbcc5e8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55914fbcc668 <line:402:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x55914fbcc858 <line:403:22>
| `-NonNullAttr 0x55914fbcc8b0 <col:63, col:77> 1
|-FunctionDecl 0x55914fbccb08 <line:404:1, line:406:82> line:404:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x55914fbcc8f8 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x55914fbcc9a0 <line:405:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x55914fbccbb8 <line:406:22>
| `-NonNullAttr 0x55914fbccc10 <col:63, col:80> 1 2
|-FunctionDecl 0x55914fbcde48 <line:407:1, line:409:79> line:407:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x55914fbccc58 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55914fbcccd0 <line:408:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x55914fbcdef8 <line:409:22>
| `-NonNullAttr 0x55914fbcdf50 <col:63, col:77> 1
|-FunctionDecl 0x55914fbce188 <line:410:1, line:412:82> line:410:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x55914fbcdf98 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55914fbce028 <line:411:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x55914fbce238 <line:412:22>
| `-NonNullAttr 0x55914fbce290 <col:63, col:80> 1 2
|-FunctionDecl 0x55914fbce4c8 <line:413:1, line:415:97> line:413:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x55914fbce2d8 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x55914fbce368 <line:414:12, line:415:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x55914fbce578 <col:37>
| `-NonNullAttr 0x55914fbce5d0 <col:78, col:95> 1 2
|-FunctionDecl 0x55914fbce7b8 <line:416:1, line:418:82> line:416:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55914fbce618 <col:41, line:417:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55914fbce698 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x55914fbce868 <line:418:22>
| `-NonNullAttr 0x55914fbce8c0 <col:63, col:80> 1 2
|-FunctionDecl 0x55914fbcea48 <line:419:1, line:420:79> line:419:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55914fbce908 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55914fbce988 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x55914fbceaf8 <line:420:22>
| `-NonNullAttr 0x55914fbceb50 <col:63, col:77> 1
|-FunctionDecl 0x55914fbcecf8 <line:421:1, line:423:82> line:421:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55914fbceb98 <col:42, line:422:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55914fbcec18 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x55914fbceda8 <line:423:22>
| `-NonNullAttr 0x55914fbcfe30 <col:63, col:80> 1 2
|-FunctionDecl 0x55914fbcffb8 <line:424:1, line:426:79> line:424:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55914fbcfe78 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55914fbcfef8 <line:425:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x55914fbd0068 <line:426:22>
| `-NonNullAttr 0x55914fbd00c0 <col:63, col:77> 1
|-FunctionDecl 0x55914fbd0268 <line:427:1, line:429:82> line:427:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55914fbd0108 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55914fbd0188 <line:428:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x55914fbd0318 <line:429:22>
| `-NonNullAttr 0x55914fbd0370 <col:63, col:80> 1 2
|-FunctionDecl 0x55914fbd04f8 <line:430:1, line:431:79> line:430:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x55914fbd03b8 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55914fbd0438 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x55914fbd05a8 <line:431:22>
| `-NonNullAttr 0x55914fbd0600 <col:63, col:77> 1
|-FunctionDecl 0x55914fbd0828 <line:432:1, line:434:115> line:432:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x55914fbd0648 <col:39, line:433:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55914fbd06c8 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x55914fbd08d8 <line:434:22>
| |-NonNullAttr 0x55914fbd0930 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x55914fbd0968 <col:100> "" ""
|-FunctionDecl 0x55914fbd0b78 <line:435:1, line:437:112> line:435:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x55914fbd09b8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55914fbd0a38 <line:436:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x55914fbd0c28 <line:437:22>
| |-NonNullAttr 0x55914fbd0c80 <col:63, col:77> 1
| `-DeprecatedAttr 0x55914fbd0cb8 <col:97> "" ""
|-FunctionDecl 0x55914fbd0eb8 <line:438:1, line:440:82> line:438:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x55914fbd0d08 <col:39, line:439:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55914fbd0d80 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x55914fbd0f68 <line:440:22>
| `-NonNullAttr 0x55914fbd0fc0 <col:63, col:80> 1 2
|-FunctionDecl 0x55914fbd1140 <line:441:1, line:443:79> line:441:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x55914fbd1008 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55914fbd1080 <line:442:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x55914fbd11f0 <line:443:22>
| `-NonNullAttr 0x55914fbd1248 <col:63, col:77> 1
|-FunctionDecl 0x55914fbd1538 <line:444:1, line:447:85> line:444:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x55914fbd1298 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x55914fbd1318 <line:445:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x55914fbd1390 <line:446:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x55914fbd15f0 <line:447:22>
| `-NonNullAttr 0x55914fbd1648 <col:63, col:83> 1 2 3
|-FunctionDecl 0x55914fbd18f8 <line:448:1, line:449:100> line:448:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x55914fbd16a0 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x55914fbd1720 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x55914fbd1798 <line:449:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x55914fbd19b0 <col:43>
| `-NonNullAttr 0x55914fbd1a08 <col:84, col:98> 1
|-FunctionDecl 0x55914fbd1cc8 <line:450:1, line:452:79> line:450:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x55914fbd1a58 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55914fbd1ad8 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x55914fbd1b68 <line:451:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x55914fbd1d80 <line:452:22>
| `-NonNullAttr 0x55914fbd1dd8 <col:63, col:77> 3
|-FunctionDecl 0x55914fbd20e8 <line:453:1, line:456:82> line:453:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x55914fbd1e50 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55914fbd1ed0 <line:454:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x55914fbd1f60 <line:455:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x55914fbd21a0 <line:456:22>
| `-NonNullAttr 0x55914fbd21f8 <col:63, col:80> 2 3
|-FunctionDecl 0x55914fbd23e8 <line:457:1, line:458:45> line:457:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x55914fbd2248 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55914fbd22c8 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x55914fbd2498 <line:458:22>
|-FunctionDecl 0x55914fbd2868 <line:459:1, line:460:71> line:459:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x55914fbd2560 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x55914fbd2700 <line:460:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x55914fbd2918 <col:52, col:69> 1 2
|-FunctionDecl 0x55914fbd2ac0 <line:461:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x55914fbd29a0 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x55914fbd2a20 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x55914fbd2ca8 <line:462:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x55914fbd2b88 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x55914fbd2c08 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x55914fbd2e60 <line:463:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x55914fbd2d68 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x55914fbd2fa0 <line:464:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x55914fbd3040 <line:465:9, line:473:1> line:465:9 struct definition
| |-RecordDecl 0x55914fbd30e8 <line:467:3, line:471:3> line:467:3 struct definition
| | |-FieldDecl 0x55914fbd31d8 <line:469:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x55914fbd3240 <line:470:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x55914fbd3410 <line:467:3, line:471:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at pthread-wmm/mix029_rmo.opt_false-unreach-call.i:467:3) [1]'
| `-FieldDecl 0x55914fbd3508 <line:472:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x55914fbd35c0 <line:465:1, line:473:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x55914fbd3560 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x55914fbd30c0 '__pthread_unwind_buf_t'
| |   `-Record 0x55914fbd3040 ''
| `-AlignedAttr 0x55914fbd3618 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x55914fbd3690 <line:474:1, line:480:1> line:474:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x55914fbd37f0 <line:476:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x55914fbd3858 <line:477:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x55914fbd38c0 <line:478:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x55914fbd3928 <line:479:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x55914fbd3b30 <line:481:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x55914fbd3a20 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x55914fbd3c78 <line:483:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x55914fbd3be8 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x55914fbd3e70 <line:485:1, line:487:31> line:485:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55914fbd3d30 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x55914fbd3f18 <line:487:22>
|-RecordDecl 0x55914fbd3f70 <line:489:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x55914fbd4288 <line:490:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x55914fbd40e8 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x55914fbd4168 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x55914fbd4338 <col:86>
| `-ReturnsTwiceAttr 0x55914fbd4390 <col:12> Implicit
|-FunctionDecl 0x55914fbd46b8 <line:491:1, line:493:79> line:491:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x55914fbd4460 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x55914fbd4570 <line:492:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x55914fbd4768 <line:493:22>
| `-NonNullAttr 0x55914fbd47c0 <col:63, col:77> 1
|-FunctionDecl 0x55914fbd4938 <line:494:1, line:495:79> line:494:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55914fbd4808 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55914fbd49e0 <line:495:22>
| `-NonNullAttr 0x55914fbd4a38 <col:63, col:77> 1
|-FunctionDecl 0x55914fbd4b40 <line:496:1, line:497:68> line:496:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55914fbd4a88 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55914fbd4be8 <line:497:22>
| `-NonNullAttr 0x55914fbd4c40 <col:52, col:66> 1
|-FunctionDecl 0x55914fbd4d40 <line:498:1, line:499:68> line:498:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55914fbd4c88 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55914fbd4de8 <line:499:22>
| `-NonNullAttr 0x55914fbd4e40 <col:52, col:66> 1
|-FunctionDecl 0x55914fbd5088 <line:500:1, line:502:85> line:500:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55914fbd4e98 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55914fbd4f28 <line:501:9, line:502:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x55914fbd5138 <col:36>
| `-NonNullAttr 0x55914fbd5190 <col:66, col:83> 1 2
|-FunctionDecl 0x55914fbd5290 <line:503:1, line:504:68> line:503:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55914fbd51d8 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55914fbd5338 <line:504:22>
| `-NonNullAttr 0x55914fbd5390 <col:52, col:66> 1
|-FunctionDecl 0x55914fbd5628 <line:505:1, line:508:82> line:505:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55914fbd5440 <col:42, line:506:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55914fbd54c0 <line:507:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x55914fbd56d8 <line:508:22>
| `-NonNullAttr 0x55914fbd5730 <col:63, col:80> 1 2
|-FunctionDecl 0x55914fbd59f8 <line:509:1, line:512:82> line:509:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x55914fbd5778 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55914fbd57f8 <line:510:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x55914fbd5878 <line:511:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x55914fbd5ab0 <line:512:22>
| `-NonNullAttr 0x55914fbd5b08 <col:63, col:80> 1 3
|-FunctionDecl 0x55914fbd5c10 <line:513:1, line:514:79> line:513:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55914fbd5b58 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55914fbd5cb8 <line:514:22>
| `-NonNullAttr 0x55914fbd5d10 <col:63, col:77> 1
|-FunctionDecl 0x55914fbd5f38 <line:515:1, line:516:79> line:515:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x55914fbd5dc0 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x55914fbd5fe0 <line:516:22>
| `-NonNullAttr 0x55914fbd6038 <col:63, col:77> 1
|-FunctionDecl 0x55914fbd6140 <line:517:1, line:518:79> line:517:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x55914fbd6088 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x55914fbd61e8 <line:518:22>
| `-NonNullAttr 0x55914fbd6240 <col:63, col:77> 1
|-FunctionDecl 0x55914fbd6468 <line:519:1, line:522:82> line:519:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55914fbd6288 <col:42, line:520:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55914fbd6308 <line:521:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x55914fbd6518 <line:522:22>
| `-NonNullAttr 0x55914fbd6570 <col:63, col:80> 1 2
|-FunctionDecl 0x55914fbd6778 <line:523:1, line:525:79> line:523:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55914fbd65b8 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55914fbd6638 <line:524:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x55914fbd6828 <line:525:22>
| `-NonNullAttr 0x55914fbd6880 <col:63, col:77> 1
|-FunctionDecl 0x55914fbd6a28 <line:526:1, line:528:82> line:526:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55914fbd68c8 <col:39, line:527:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55914fbd6948 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x55914fbd6ad8 <line:528:22>
| `-NonNullAttr 0x55914fbd6b30 <col:63, col:80> 1 2
|-FunctionDecl 0x55914fbd6cb8 <line:529:1, line:530:79> line:529:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55914fbd6b78 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55914fbd6bf8 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x55914fbd6d68 <line:530:22>
| `-NonNullAttr 0x55914fbd6dc0 <col:63, col:77> 1
|-FunctionDecl 0x55914fbd7f90 <line:531:1, line:534:82> line:531:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55914fbd6e08 <col:43, line:532:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55914fbd7eb0 <line:533:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x55914fbd8040 <line:534:22>
| `-NonNullAttr 0x55914fbd8098 <col:63, col:80> 1 2
|-FunctionDecl 0x55914fbd8228 <line:535:1, line:537:79> line:535:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55914fbd80e8 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55914fbd8168 <line:536:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x55914fbd82d8 <line:537:22>
| `-NonNullAttr 0x55914fbd8330 <col:63, col:77> 1
|-FunctionDecl 0x55914fbd84d8 <line:538:1, line:541:82> line:538:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55914fbd8378 <col:46, line:539:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55914fbd83f8 <line:540:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x55914fbd8588 <line:541:22>
| `-NonNullAttr 0x55914fbd85e0 <col:63, col:80> 1 2
|-FunctionDecl 0x55914fbd8768 <line:542:1, line:544:79> line:542:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55914fbd8628 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55914fbd86a8 <line:543:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x55914fbd8818 <line:544:22>
| `-NonNullAttr 0x55914fbd8870 <col:63, col:77> 1
|-FunctionDecl 0x55914fbd8a58 <line:545:1, line:547:82> line:545:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x55914fbd88b8 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x55914fbd8938 <line:546:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x55914fbd8b08 <line:547:22>
| `-NonNullAttr 0x55914fbd8b60 <col:63, col:80> 1 2
|-FunctionDecl 0x55914fbd8ce8 <line:548:1, line:550:79> line:548:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55914fbd8ba8 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55914fbd8c28 <line:549:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x55914fbd8d98 <line:550:22>
| `-NonNullAttr 0x55914fbd8df0 <col:63, col:77> 1
|-FunctionDecl 0x55914fbda168 <line:551:1, line:553:86> line:551:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x55914fbd9f10 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x55914fbda020 <line:552:5, line:553:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x55914fbda218 <col:29>
| `-NonNullAttr 0x55914fbda270 <col:70, col:84> 1
|-FunctionDecl 0x55914fbda3e8 <line:554:1, line:555:79> line:554:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55914fbda2b8 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55914fbda490 <line:555:22>
| `-NonNullAttr 0x55914fbda4e8 <col:63, col:77> 1
|-FunctionDecl 0x55914fbda5f0 <line:556:1, line:557:68> line:556:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55914fbda538 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55914fbda698 <line:557:22>
| `-NonNullAttr 0x55914fbda6f0 <col:52, col:66> 1
|-FunctionDecl 0x55914fbda7f0 <line:558:1, line:559:65> line:558:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55914fbda738 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55914fbda898 <line:559:19>
| `-NonNullAttr 0x55914fbda8f0 <col:49, col:63> 1
|-FunctionDecl 0x55914fbdab28 <line:560:1, line:562:88> line:560:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55914fbda938 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x55914fbda9c8 <line:561:12, line:562:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x55914fbdabd8 <col:39>
| `-NonNullAttr 0x55914fbdac30 <col:69, col:86> 1 2
|-FunctionDecl 0x55914fbdad30 <line:563:1, line:564:68> line:563:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55914fbdac78 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55914fbdadd8 <line:564:22>
| `-NonNullAttr 0x55914fbdae30 <col:52, col:66> 1
|-FunctionDecl 0x55914fbdaf98 <line:565:1, line:566:68> line:565:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55914fbdaee0 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55914fbdb040 <line:566:22>
| `-NonNullAttr 0x55914fbdb098 <col:52, col:66> 1
|-FunctionDecl 0x55914fbdb258 <line:567:1, line:569:88> line:567:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55914fbdb0e8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x55914fbdb178 <line:568:12, line:569:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x55914fbdb308 <col:39>
| `-NonNullAttr 0x55914fbdb360 <col:69, col:86> 1 2
|-FunctionDecl 0x55914fbdb460 <line:570:1, line:571:68> line:570:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x55914fbdb3a8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x55914fbdb508 <line:571:22>
| `-NonNullAttr 0x55914fbdb560 <col:52, col:66> 1
|-FunctionDecl 0x55914fbdb748 <line:572:1, line:573:79> line:572:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x55914fbdb610 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x55914fbdb7f0 <line:573:22>
| `-NonNullAttr 0x55914fbdb848 <col:63, col:77> 1
|-FunctionDecl 0x55914fbdb950 <line:574:1, line:575:79> line:574:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x55914fbdb898 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x55914fbdb9f8 <line:575:22>
| `-NonNullAttr 0x55914fbdba50 <col:63, col:77> 1
|-FunctionDecl 0x55914fbdbc78 <line:576:1, line:579:82> line:576:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55914fbdba98 <col:43, line:577:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x55914fbdbb18 <line:578:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x55914fbdbd28 <line:579:22>
| `-NonNullAttr 0x55914fbdbd80 <col:63, col:80> 1 2
|-FunctionDecl 0x55914fbdbfa8 <line:580:1, line:582:79> line:580:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x55914fbdbdc8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x55914fbdbe48 <line:581:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x55914fbdc058 <line:582:22>
| `-NonNullAttr 0x55914fbdc0b0 <col:63, col:77> 1
|-FunctionDecl 0x55914fbdc258 <line:583:1, line:586:82> line:583:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55914fbdc0f8 <col:43, line:584:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x55914fbdc178 <line:585:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x55914fbdc308 <line:586:22>
| `-NonNullAttr 0x55914fbdc360 <col:63, col:80> 1 2
|-FunctionDecl 0x55914fbdc4e8 <line:587:1, line:588:93> line:587:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x55914fbdc3a8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x55914fbdc428 <line:588:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x55914fbdc598 <col:36>
| `-NonNullAttr 0x55914fbdc5f0 <col:77, col:91> 1
|-FunctionDecl 0x55914fbdc928 <line:589:1, line:591:79> line:589:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x55914fbdc6d0 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x55914fbdc7e0 <line:590:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x55914fbdc9d8 <line:591:22>
| `-NonNullAttr 0x55914fbdca30 <col:63, col:77> 1
|-FunctionDecl 0x55914fbdcba8 <line:592:1, line:593:79> line:592:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x55914fbdca78 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x55914fbdcc50 <line:593:22>
| `-NonNullAttr 0x55914fbdcca8 <col:63, col:77> 1
|-FunctionDecl 0x55914fbdcdb0 <line:594:1, line:595:68> line:594:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x55914fbdccf8 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x55914fbdce58 <line:595:22>
| `-NonNullAttr 0x55914fbdceb0 <col:52, col:66> 1
|-FunctionDecl 0x55914fbdcfc8 <line:596:1, line:597:68> line:596:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x55914fbdcf10 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x55914fbdd070 <line:597:22>
| `-NonNullAttr 0x55914fbdd0c8 <col:52, col:66> 1
|-FunctionDecl 0x55914fbdd2f8 <line:598:1, line:600:41> line:598:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x55914fbdd118 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x55914fbdd190 <line:599:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x55914fbdd3a8 <line:600:22, col:39> 1 2
|-FunctionDecl 0x55914fbdd6d8 <line:601:1, line:604:44> line:601:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55914fbdd428 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x55914fbdd4a0 <line:602:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55914fbdd530 <line:603:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x55914fbdd790 <line:604:22, col:42> 1 2 3
|-FunctionDecl 0x55914fbdd9a8 <line:605:1, line:606:79> line:605:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x55914fbdd870 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x55914fbdda50 <line:606:22>
| `-NonNullAttr 0x55914fbddaa8 <col:63, col:77> 1
|-FunctionDecl 0x55914fbddbb0 <line:607:1, line:608:79> line:607:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x55914fbddaf8 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x55914fbddc58 <line:608:22>
| `-NonNullAttr 0x55914fbddcb0 <col:63, col:77> 1
|-FunctionDecl 0x55914fbddf10 <line:609:1, line:612:82> line:609:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55914fbddcf8 <col:41, line:610:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x55914fbddd78 <line:611:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x55914fbddfc0 <line:612:22>
| `-NonNullAttr 0x55914fbde018 <col:63, col:80> 1 2
|-FunctionDecl 0x55914fbde228 <line:613:1, line:614:94> line:613:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x55914fbde068 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x55914fbde0e8 <line:614:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x55914fbde2d8 <col:37>
| `-NonNullAttr 0x55914fbde330 <col:78, col:92> 1
|-FunctionDecl 0x55914fbde548 <line:615:1, line:618:82> line:615:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x55914fbde378 <col:39, line:616:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x55914fbde420 <line:617:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x55914fbde5f8 <line:618:22>
| `-NonNullAttr 0x55914fbde650 <col:63, col:80> 1 2
|-FunctionDecl 0x55914fbde818 <line:619:1, line:621:79> line:619:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x55914fbde698 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x55914fbde710 <line:620:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x55914fbde8c8 <line:621:22>
| `-NonNullAttr 0x55914fbde920 <col:63, col:77> 1
|-FunctionDecl 0x55914fbdebc8 <line:622:1, line:623:79> line:622:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x55914fbdea00 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x55914fbdea80 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x55914fbdec78 <line:623:22>
| `-NonNullAttr 0x55914fbdecd0 <col:63, col:77> 1
|-FunctionDecl 0x55914fbdee48 <line:624:1, line:625:79> line:624:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55914fbded18 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55914fbdef20 <line:625:22>
| `-NonNullAttr 0x55914fbdef78 <col:63, col:77> 1
|-FunctionDecl 0x55914fbdf080 <line:626:1, line:627:68> line:626:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55914fbdefc8 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55914fbdf128 <line:627:22>
| `-NonNullAttr 0x55914fbdf180 <col:52, col:66> 1
|-FunctionDecl 0x55914fbdf280 <line:628:1, line:629:68> line:628:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55914fbdf1c8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55914fbdf328 <line:629:22>
| `-NonNullAttr 0x55914fbdf380 <col:52, col:66> 1
|-FunctionDecl 0x55914fbdf480 <line:630:1, line:631:68> line:630:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x55914fbdf3c8 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x55914fbdf528 <line:631:22>
| `-NonNullAttr 0x55914fbdf580 <col:52, col:66> 1
|-FunctionDecl 0x55914fbdf958 <line:632:1, line:635:79> line:632:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x55914fbdf660 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x55914fbdf770 <line:633:6, line:634:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x55914fbdf7f0 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x55914fbdfa10 <line:635:22>
| `-NonNullAttr 0x55914fbdfa68 <col:63, col:77> 1
|-FunctionDecl 0x55914fbdfbe8 <line:636:1, line:637:79> line:636:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x55914fbdfab8 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x55914fbdfc90 <line:637:22>
| `-NonNullAttr 0x55914fbdfce8 <col:63, col:77> 1
|-FunctionDecl 0x55914fbdfdf0 <line:638:1, line:639:68> line:638:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x55914fbdfd38 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x55914fbdfe98 <line:639:22>
| `-NonNullAttr 0x55914fbdfef0 <col:52, col:66> 1
|-FunctionDecl 0x55914fbe00e8 <line:640:1, line:641:79> line:640:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x55914fbdffb0 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x55914fbe0190 <line:641:22>
| `-NonNullAttr 0x55914fbe01e8 <col:63, col:77> 1
|-FunctionDecl 0x55914fbe02f0 <line:642:1, line:643:79> line:642:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x55914fbe0238 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x55914fbe0398 <line:643:22>
| `-NonNullAttr 0x55914fbe03f0 <col:63, col:77> 1
|-FunctionDecl 0x55914fbe0618 <line:644:1, line:647:82> line:644:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55914fbe0438 <col:44, line:645:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x55914fbe04b8 <line:646:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x55914fbe06c8 <line:647:22>
| `-NonNullAttr 0x55914fbe0720 <col:63, col:80> 1 2
|-FunctionDecl 0x55914fbe0928 <line:648:1, line:650:79> line:648:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x55914fbe0768 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x55914fbe07e8 <line:649:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x55914fbe09d8 <line:650:22>
| `-NonNullAttr 0x55914fbe0a30 <col:63, col:77> 1
|-FunctionDecl 0x55914fbe0d78 <line:651:1, line:653:79> line:651:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x55914fbe0b10 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x55914fbe0c30 <line:652:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x55914fbe0e28 <line:653:22>
| `-NonNullAttr 0x55914fbe0e80 <col:63, col:77> 1
|-FunctionDecl 0x55914fbe0fe8 <line:654:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x55914fbe0ec8 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x55914fbe1090 <col:69>
|-FunctionDecl 0x55914fbe1208 <line:655:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x55914fbe10f8 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x55914fbe12b0 <col:72>
|-FunctionDecl 0x55914fbe14e8 <line:656:1, line:657:67> line:656:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x55914fbe1318 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x55914fbe13c8 <line:657:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x55914fbe1598 <col:44>
|-FunctionDecl 0x55914fbe17b8 <line:658:1, line:660:79> line:658:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x55914fbe1600 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x55914fbe1678 <line:659:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x55914fbe1868 <line:660:22>
| `-NonNullAttr 0x55914fbe18c0 <col:63, col:77> 2
|-FunctionDecl 0x55914fbe1d08 <line:661:1, line:663:70> line:661:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x55914fbe19a0 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x55914fbe1ab0 <line:662:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x55914fbe1bc0 <line:663:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x55914fbe1dc0 <col:47>
|-FunctionDecl 0x55914fbe2f60 <line:665:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x55914fbe1e30 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x55914fbe30b8 <line:666:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x55914fbe3020 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x55914fbe3210 <line:667:1, col:20> col:8 used P2 'void *(void *)'
| `-ParmVarDecl 0x55914fbe3178 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x55914fbe3368 <line:668:1, col:20> col:8 used P3 'void *(void *)'
| `-ParmVarDecl 0x55914fbe32d0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x55914fbe3430 <line:669:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x55914fbe34f0 <line:670:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x55914fbe35b0 <line:671:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x55914fbe3668 <line:672:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x55914fbe36e8 prev 0x55914fbe3668 <line:673:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x55914fbe3750 <col:24> 'int' 0
|-VarDecl 0x55914fbe3788 <line:674:1, col:5> col:5 used __unbuffered_p0_EAX 'int'
|-VarDecl 0x55914fbe3808 prev 0x55914fbe3788 <line:675:1, col:27> col:5 used __unbuffered_p0_EAX 'int' cinit
| `-IntegerLiteral 0x55914fbe3870 <col:27> 'int' 0
|-VarDecl 0x55914fbe38a8 <line:676:1, col:5> col:5 used __unbuffered_p3_EAX 'int'
|-VarDecl 0x55914fbe3928 prev 0x55914fbe38a8 <line:677:1, col:27> col:5 used __unbuffered_p3_EAX 'int' cinit
| `-IntegerLiteral 0x55914fbe3990 <col:27> 'int' 0
|-VarDecl 0x55914fbe39c8 <line:678:1, col:5> col:5 used __unbuffered_p3_EBX 'int'
|-VarDecl 0x55914fbe3a48 prev 0x55914fbe39c8 <line:679:1, col:27> col:5 used __unbuffered_p3_EBX 'int' cinit
| `-IntegerLiteral 0x55914fbe3ab0 <col:27> 'int' 0
|-VarDecl 0x55914fbe3ae8 <line:680:1, col:5> col:5 used a 'int'
|-VarDecl 0x55914fbe3b68 prev 0x55914fbe3ae8 <line:681:1, col:9> col:5 used a 'int' cinit
| `-IntegerLiteral 0x55914fbe3bd0 <col:9> 'int' 0
|-VarDecl 0x55914fbe3c00 <line:682:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x55914fbe3c78 <line:683:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x55914fbe3cf8 <line:684:1, col:5> col:5 used x 'int'
|-VarDecl 0x55914fbe3d78 prev 0x55914fbe3cf8 <line:685:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x55914fbe3de0 <col:9> 'int' 0
|-VarDecl 0x55914fbe3e18 <line:686:1, col:5> col:5 used y 'int'
|-VarDecl 0x55914fbe3e98 prev 0x55914fbe3e18 <line:687:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x55914fbe3f00 <col:9> 'int' 0
|-VarDecl 0x55914fbe3f70 <line:688:1, col:7> col:7 used y$flush_delayed '_Bool'
|-VarDecl 0x55914fbe3ff0 <line:689:1, col:5> col:5 used y$mem_tmp 'int'
|-VarDecl 0x55914fbe4068 <line:690:1, col:7> col:7 used y$r_buff0_thd0 '_Bool'
|-VarDecl 0x55914fbe40e0 <line:691:1, col:7> col:7 used y$r_buff0_thd1 '_Bool'
|-VarDecl 0x55914fbe4158 <line:692:1, col:7> col:7 used y$r_buff0_thd2 '_Bool'
|-VarDecl 0x55914fbe41d0 <line:693:1, col:7> col:7 used y$r_buff0_thd3 '_Bool'
|-VarDecl 0x55914fbe4248 <line:694:1, col:7> col:7 used y$r_buff0_thd4 '_Bool'
|-VarDecl 0x55914fbe42c0 <line:695:1, col:7> col:7 used y$r_buff1_thd0 '_Bool'
|-VarDecl 0x55914fbe4338 <line:696:1, col:7> col:7 used y$r_buff1_thd1 '_Bool'
|-VarDecl 0x55914fbe43b0 <line:697:1, col:7> col:7 used y$r_buff1_thd2 '_Bool'
|-VarDecl 0x55914fbe4428 <line:698:1, col:7> col:7 used y$r_buff1_thd3 '_Bool'
|-VarDecl 0x55914fbe44a0 <line:699:1, col:7> col:7 used y$r_buff1_thd4 '_Bool'
|-VarDecl 0x55914fbe4518 <line:700:1, col:7> col:7 y$read_delayed '_Bool'
|-VarDecl 0x55914fbe4598 <line:701:1, col:6> col:6 y$read_delayed_var 'int *'
|-VarDecl 0x55914fbe4618 <line:702:1, col:5> col:5 used y$w_buff0 'int'
|-VarDecl 0x55914fbe4690 <line:703:1, col:7> col:7 used y$w_buff0_used '_Bool'
|-VarDecl 0x55914fbe4710 <line:704:1, col:5> col:5 used y$w_buff1 'int'
|-VarDecl 0x55914fbe4788 <line:705:1, col:7> col:7 used y$w_buff1_used '_Bool'
|-VarDecl 0x55914fbe4808 <line:706:1, col:5> col:5 used z 'int'
|-VarDecl 0x55914fbe4888 prev 0x55914fbe4808 <line:707:1, col:9> col:5 used z 'int' cinit
| `-IntegerLiteral 0x55914fbe48f0 <col:9> 'int' 0
|-VarDecl 0x55914fbe4920 <line:708:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x55914fbe4998 <line:709:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x55914fbe4ab0 prev 0x55914fbe2f60 <line:710:1, line:724:1> line:710:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x55914fbe4a18 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x55914fbe5098 <line:711:1, line:724:1>
|   |-CallExpr 0x55914fbe4bc8 <line:712:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55914fbe4bb0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55914fbe4b58 <col:3> 'void ()' Function 0x55914fb8a350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55914fbe4c28 <line:713:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x55914fbe4be8 <col:3> 'int' lvalue Var 0x55914fbe3b68 'a' 'int'
|   | `-IntegerLiteral 0x55914fbe4c08 <col:7> 'int' 1
|   |-CallExpr 0x55914fbe4c80 <line:714:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55914fbe4c68 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55914fbe4c48 <col:3> 'void ()' Function 0x55914fb8a410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55914fbe4cd8 <line:715:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55914fbe4cc0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55914fbe4ca0 <col:3> 'void ()' Function 0x55914fb8a350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55914fbe4d50 <line:716:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x55914fbe4cf8 <col:3> 'int' lvalue Var 0x55914fbe3808 '__unbuffered_p0_EAX' 'int'
|   | `-ImplicitCastExpr 0x55914fbe4d38 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55914fbe4d18 <col:25> 'int' lvalue Var 0x55914fbe3d78 'x' 'int'
|   |-CallExpr 0x55914fbe4da8 <line:717:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55914fbe4d90 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55914fbe4d70 <col:3> 'void ()' Function 0x55914fb8a410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55914fbe4e00 <line:718:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55914fbe4de8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55914fbe4dc8 <col:3> 'void ()' Function 0x55914fb8a350 '__VERIFIER_atomic_begin' 'void ()'
|   |-CallExpr 0x55914fbe4e58 <line:719:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55914fbe4e40 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55914fbe4e20 <col:3> 'void ()' Function 0x55914fb8a410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55914fbe4eb0 <line:720:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55914fbe4e98 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55914fbe4e78 <col:3> 'void ()' Function 0x55914fb8a350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55914fbe4f80 <line:721:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x55914fbe4ed0 <col:3> 'int' lvalue Var 0x55914fbe36e8 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x55914fbe4f48 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x55914fbe4f30 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55914fbe4ef0 <col:22> 'int' lvalue Var 0x55914fbe36e8 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x55914fbe4f10 <col:41> 'int' 1
|   |-CallExpr 0x55914fbe4fd8 <line:722:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55914fbe4fc0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55914fbe4fa0 <col:3> 'void ()' Function 0x55914fb8a410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x55914fbe5088 <line:723:3, col:36>
|     `-CallExpr 0x55914fbe5068 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x55914fbe5050 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x55914fbe4ff8 <col:10> 'void *(void)' Function 0x55914fb89e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x55914fbe51b8 prev 0x55914fbe30b8 <line:725:1, line:744:1> line:725:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x55914fbe5120 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x55914fbe63e0 <line:726:1, line:744:1>
|   |-CallExpr 0x55914fbe5298 <line:727:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55914fbe5280 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55914fbe5260 <col:3> 'void ()' Function 0x55914fb8a350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55914fbe52f8 <line:728:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x55914fbe52b8 <col:3> 'int' lvalue Var 0x55914fbe3d78 'x' 'int'
|   | `-IntegerLiteral 0x55914fbe52d8 <col:7> 'int' 1
|   |-CallExpr 0x55914fbe5350 <line:729:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55914fbe5338 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55914fbe5318 <col:3> 'void ()' Function 0x55914fb8a410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55914fbe53a8 <line:730:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55914fbe5390 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55914fbe5370 <col:3> 'void ()' Function 0x55914fb8a350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55914fbe5408 <line:731:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x55914fbe53c8 <col:3> 'int' lvalue Var 0x55914fbe3e98 'y' 'int'
|   | `-IntegerLiteral 0x55914fbe53e8 <col:7> 'int' 1
|   |-CallExpr 0x55914fbe5460 <line:732:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55914fbe5448 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55914fbe5428 <col:3> 'void ()' Function 0x55914fb8a410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55914fbe54b8 <line:733:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55914fbe54a0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55914fbe5480 <col:3> 'void ()' Function 0x55914fb8a350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55914fbe57a0 <line:734:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x55914fbe54d8 <col:3> 'int' lvalue Var 0x55914fbe3e98 'y' 'int'
|   | `-ConditionalOperator 0x55914fbe5770 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x55914fbe5598 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x55914fbe5550 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x55914fbe5538 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x55914fbe54f8 <col:7> '_Bool' lvalue Var 0x55914fbe4690 'y$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x55914fbe5580 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x55914fbe5568 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x55914fbe5518 <col:25> '_Bool' lvalue Var 0x55914fbe4158 'y$r_buff0_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x55914fbe5758 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55914fbe55b8 <col:42> 'int' lvalue Var 0x55914fbe4618 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x55914fbe5738 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x55914fbe5708 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x55914fbe5678 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55914fbe5630 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55914fbe5618 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55914fbe55d8 <col:55> '_Bool' lvalue Var 0x55914fbe4788 'y$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55914fbe5660 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55914fbe5648 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55914fbe55f8 <col:73> '_Bool' lvalue Var 0x55914fbe43b0 'y$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x55914fbe56d8 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55914fbe5698 <col:90> 'int' lvalue Var 0x55914fbe4710 'y$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x55914fbe56f0 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55914fbe56b8 <col:102> 'int' lvalue Var 0x55914fbe3e98 'y' 'int'
|   |-BinaryOperator 0x55914fbe59a8 <line:735:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55914fbe57c0 <col:3> '_Bool' lvalue Var 0x55914fbe4690 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55914fbe5990 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55914fbe5960 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55914fbe5880 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55914fbe5838 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55914fbe5820 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55914fbe57e0 <col:20> '_Bool' lvalue Var 0x55914fbe4690 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55914fbe5868 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55914fbe5850 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55914fbe5800 <col:38> '_Bool' lvalue Var 0x55914fbe4158 'y$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x55914fbe5918 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55914fbe58d0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55914fbe58a0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55914fbe5948 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55914fbe5930 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55914fbe58f8 <col:66> '_Bool' lvalue Var 0x55914fbe4690 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55914fbe5c90 <line:736:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55914fbe59c8 <col:3> '_Bool' lvalue Var 0x55914fbe4788 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55914fbe5c78 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55914fbe5c48 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55914fbe5b68 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55914fbe5a88 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55914fbe5a40 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55914fbe5a28 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55914fbe59e8 <col:20> '_Bool' lvalue Var 0x55914fbe4690 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55914fbe5a70 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55914fbe5a58 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55914fbe5a08 <col:38> '_Bool' lvalue Var 0x55914fbe4158 'y$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x55914fbe5b48 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55914fbe5b00 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55914fbe5ae8 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55914fbe5aa8 <col:56> '_Bool' lvalue Var 0x55914fbe4788 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55914fbe5b30 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55914fbe5b18 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55914fbe5ac8 <col:74> '_Bool' lvalue Var 0x55914fbe43b0 'y$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x55914fbe5c00 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55914fbe5bb8 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55914fbe5b88 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55914fbe5c30 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55914fbe5c18 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55914fbe5be0 <col:102> '_Bool' lvalue Var 0x55914fbe4788 'y$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x55914fbe5e98 <line:737:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55914fbe5cb0 <col:3> '_Bool' lvalue Var 0x55914fbe4158 'y$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x55914fbe5e80 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55914fbe5e50 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55914fbe5d70 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55914fbe5d28 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55914fbe5d10 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55914fbe5cd0 <col:20> '_Bool' lvalue Var 0x55914fbe4690 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55914fbe5d58 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55914fbe5d40 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55914fbe5cf0 <col:38> '_Bool' lvalue Var 0x55914fbe4158 'y$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x55914fbe5e08 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55914fbe5dc0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55914fbe5d90 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55914fbe5e38 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55914fbe5e20 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55914fbe5de8 <col:66> '_Bool' lvalue Var 0x55914fbe4158 'y$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x55914fbe6198 <line:738:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55914fbe5eb8 <col:3> '_Bool' lvalue Var 0x55914fbe43b0 'y$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x55914fbe6180 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55914fbe6150 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55914fbe6070 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55914fbe5f90 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55914fbe5f30 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55914fbe5f18 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55914fbe5ed8 <col:20> '_Bool' lvalue Var 0x55914fbe4690 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55914fbe5f60 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55914fbe5f48 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55914fbe5ef8 <col:38> '_Bool' lvalue Var 0x55914fbe4158 'y$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x55914fbe6050 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55914fbe6008 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55914fbe5ff0 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55914fbe5fb0 <col:56> '_Bool' lvalue Var 0x55914fbe4788 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55914fbe6038 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55914fbe6020 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55914fbe5fd0 <col:74> '_Bool' lvalue Var 0x55914fbe43b0 'y$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x55914fbe6108 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55914fbe60c0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55914fbe6090 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55914fbe6138 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55914fbe6120 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55914fbe60e8 <col:102> '_Bool' lvalue Var 0x55914fbe43b0 'y$r_buff1_thd2' '_Bool'
|   |-CallExpr 0x55914fbe61f0 <line:739:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55914fbe61d8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55914fbe61b8 <col:3> 'void ()' Function 0x55914fb8a410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55914fbe6248 <line:740:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55914fbe6230 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55914fbe6210 <col:3> 'void ()' Function 0x55914fb8a350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55914fbe6300 <line:741:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x55914fbe6268 <col:3> 'int' lvalue Var 0x55914fbe36e8 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x55914fbe62e0 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x55914fbe62c8 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55914fbe6288 <col:22> 'int' lvalue Var 0x55914fbe36e8 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x55914fbe62a8 <col:41> 'int' 1
|   |-CallExpr 0x55914fbe6358 <line:742:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55914fbe6340 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55914fbe6320 <col:3> 'void ()' Function 0x55914fb8a410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x55914fbe63d0 <line:743:3, col:36>
|     `-CallExpr 0x55914fbe63b0 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x55914fbe6398 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x55914fbe6378 <col:10> 'void *(void)' Function 0x55914fb89e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x55914fbe6528 prev 0x55914fbe3210 <line:745:1, line:774:1> line:745:8 used P2 'void *(void *)'
| |-ParmVarDecl 0x55914fbe6490 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x55914fbe7d50 <line:746:1, line:774:1>
|   |-CallExpr 0x55914fbe6608 <line:747:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55914fbe65f0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55914fbe65d0 <col:3> 'void ()' Function 0x55914fb8a350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55914fbe6680 <line:748:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x55914fbe6628 <col:3> 'int' lvalue Var 0x55914fbe4710 'y$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x55914fbe6668 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55914fbe6648 <col:15> 'int' lvalue Var 0x55914fbe4618 'y$w_buff0' 'int'
|   |-BinaryOperator 0x55914fbe66e0 <line:749:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x55914fbe66a0 <col:3> 'int' lvalue Var 0x55914fbe4618 'y$w_buff0' 'int'
|   | `-IntegerLiteral 0x55914fbe66c0 <col:15> 'int' 2
|   |-BinaryOperator 0x55914fbe6758 <line:750:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55914fbe6700 <col:3> '_Bool' lvalue Var 0x55914fbe4788 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55914fbe6740 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55914fbe6720 <col:20> '_Bool' lvalue Var 0x55914fbe4690 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55914fbe67f0 <line:751:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x55914fbe6778 <col:3> '_Bool' lvalue Var 0x55914fbe4690 'y$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x55914fbe67c8 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x55914fbe6798 <col:27> 'int' 1
|   |-CallExpr 0x55914fbe6978 <line:752:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x55914fbe6960 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x55914fbe6810 <col:3> 'void (int)' Function 0x55914fb8a0d8 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x55914fbe6910 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x55914fbe68f0 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x55914fbe68d0 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x55914fbe6888 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x55914fbe6870 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x55914fbe6830 <col:23> '_Bool' lvalue Var 0x55914fbe4788 'y$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x55914fbe68b8 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x55914fbe68a0 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x55914fbe6850 <col:41> '_Bool' lvalue Var 0x55914fbe4690 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55914fbe69f8 <line:753:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55914fbe69a0 <col:3> '_Bool' lvalue Var 0x55914fbe42c0 'y$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x55914fbe69e0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55914fbe69c0 <col:20> '_Bool' lvalue Var 0x55914fbe4068 'y$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x55914fbe6a70 <line:754:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55914fbe6a18 <col:3> '_Bool' lvalue Var 0x55914fbe4338 'y$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x55914fbe6a58 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55914fbe6a38 <col:20> '_Bool' lvalue Var 0x55914fbe40e0 'y$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x55914fbe6ae8 <line:755:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55914fbe6a90 <col:3> '_Bool' lvalue Var 0x55914fbe43b0 'y$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x55914fbe6ad0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55914fbe6ab0 <col:20> '_Bool' lvalue Var 0x55914fbe4158 'y$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x55914fbe6b60 <line:756:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55914fbe6b08 <col:3> '_Bool' lvalue Var 0x55914fbe4428 'y$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x55914fbe6b48 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55914fbe6b28 <col:20> '_Bool' lvalue Var 0x55914fbe41d0 'y$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x55914fbe6bd8 <line:757:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55914fbe6b80 <col:3> '_Bool' lvalue Var 0x55914fbe44a0 'y$r_buff1_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x55914fbe6bc0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55914fbe6ba0 <col:20> '_Bool' lvalue Var 0x55914fbe4248 'y$r_buff0_thd4' '_Bool'
|   |-BinaryOperator 0x55914fbe6c70 <line:758:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x55914fbe6bf8 <col:3> '_Bool' lvalue Var 0x55914fbe41d0 'y$r_buff0_thd3' '_Bool'
|   | `-CStyleCastExpr 0x55914fbe6c48 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x55914fbe6c18 <col:27> 'int' 1
|   |-CallExpr 0x55914fbe6cc8 <line:759:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55914fbe6cb0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55914fbe6c90 <col:3> 'void ()' Function 0x55914fb8a410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55914fbe6d20 <line:760:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55914fbe6d08 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55914fbe6ce8 <col:3> 'void ()' Function 0x55914fb8a350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55914fbe6d80 <line:761:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x55914fbe6d40 <col:3> 'int' lvalue Var 0x55914fbe4888 'z' 'int'
|   | `-IntegerLiteral 0x55914fbe6d60 <col:7> 'int' 1
|   |-CallExpr 0x55914fbe6dd8 <line:762:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55914fbe6dc0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55914fbe6da0 <col:3> 'void ()' Function 0x55914fb8a410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55914fbe6e30 <line:763:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55914fbe6e18 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55914fbe6df8 <col:3> 'void ()' Function 0x55914fb8a350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55914fbe7128 <line:764:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x55914fbe6e50 <col:3> 'int' lvalue Var 0x55914fbe3e98 'y' 'int'
|   | `-ConditionalOperator 0x55914fbe70f8 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x55914fbe6f10 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x55914fbe6ec8 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x55914fbe6eb0 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x55914fbe6e70 <col:7> '_Bool' lvalue Var 0x55914fbe4690 'y$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x55914fbe6ef8 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x55914fbe6ee0 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x55914fbe6e90 <col:25> '_Bool' lvalue Var 0x55914fbe41d0 'y$r_buff0_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x55914fbe70e0 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55914fbe6f30 <col:42> 'int' lvalue Var 0x55914fbe4618 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x55914fbe70c0 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x55914fbe7090 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x55914fbe7000 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55914fbe6fb8 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55914fbe6fa0 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55914fbe6f50 <col:55> '_Bool' lvalue Var 0x55914fbe4788 'y$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55914fbe6fe8 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55914fbe6fd0 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55914fbe6f70 <col:73> '_Bool' lvalue Var 0x55914fbe4428 'y$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x55914fbe7060 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55914fbe7020 <col:90> 'int' lvalue Var 0x55914fbe4710 'y$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x55914fbe7078 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55914fbe7040 <col:102> 'int' lvalue Var 0x55914fbe3e98 'y' 'int'
|   |-BinaryOperator 0x55914fbe7330 <line:765:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55914fbe7148 <col:3> '_Bool' lvalue Var 0x55914fbe4690 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55914fbe7318 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55914fbe72e8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55914fbe7208 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55914fbe71c0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55914fbe71a8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55914fbe7168 <col:20> '_Bool' lvalue Var 0x55914fbe4690 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55914fbe71f0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55914fbe71d8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55914fbe7188 <col:38> '_Bool' lvalue Var 0x55914fbe41d0 'y$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x55914fbe72a0 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55914fbe7258 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55914fbe7228 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55914fbe72d0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55914fbe72b8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55914fbe7280 <col:66> '_Bool' lvalue Var 0x55914fbe4690 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55914fbe7618 <line:766:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55914fbe7350 <col:3> '_Bool' lvalue Var 0x55914fbe4788 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55914fbe7600 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55914fbe75d0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55914fbe74f0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55914fbe7410 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55914fbe73c8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55914fbe73b0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55914fbe7370 <col:20> '_Bool' lvalue Var 0x55914fbe4690 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55914fbe73f8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55914fbe73e0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55914fbe7390 <col:38> '_Bool' lvalue Var 0x55914fbe41d0 'y$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x55914fbe74d0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55914fbe7488 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55914fbe7470 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55914fbe7430 <col:56> '_Bool' lvalue Var 0x55914fbe4788 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55914fbe74b8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55914fbe74a0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55914fbe7450 <col:74> '_Bool' lvalue Var 0x55914fbe4428 'y$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x55914fbe7588 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55914fbe7540 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55914fbe7510 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55914fbe75b8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55914fbe75a0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55914fbe7568 <col:102> '_Bool' lvalue Var 0x55914fbe4788 'y$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x55914fbe7820 <line:767:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55914fbe7638 <col:3> '_Bool' lvalue Var 0x55914fbe41d0 'y$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x55914fbe7808 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55914fbe77d8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55914fbe76f8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55914fbe76b0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55914fbe7698 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55914fbe7658 <col:20> '_Bool' lvalue Var 0x55914fbe4690 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55914fbe76e0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55914fbe76c8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55914fbe7678 <col:38> '_Bool' lvalue Var 0x55914fbe41d0 'y$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x55914fbe7790 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55914fbe7748 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55914fbe7718 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55914fbe77c0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55914fbe77a8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55914fbe7770 <col:66> '_Bool' lvalue Var 0x55914fbe41d0 'y$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x55914fbe7b08 <line:768:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55914fbe7840 <col:3> '_Bool' lvalue Var 0x55914fbe4428 'y$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x55914fbe7af0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55914fbe7ac0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55914fbe79e0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55914fbe7900 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55914fbe78b8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55914fbe78a0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55914fbe7860 <col:20> '_Bool' lvalue Var 0x55914fbe4690 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55914fbe78e8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55914fbe78d0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55914fbe7880 <col:38> '_Bool' lvalue Var 0x55914fbe41d0 'y$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x55914fbe79c0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55914fbe7978 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55914fbe7960 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55914fbe7920 <col:56> '_Bool' lvalue Var 0x55914fbe4788 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55914fbe79a8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55914fbe7990 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55914fbe7940 <col:74> '_Bool' lvalue Var 0x55914fbe4428 'y$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x55914fbe7a78 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55914fbe7a30 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55914fbe7a00 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55914fbe7aa8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55914fbe7a90 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55914fbe7a58 <col:102> '_Bool' lvalue Var 0x55914fbe4428 'y$r_buff1_thd3' '_Bool'
|   |-CallExpr 0x55914fbe7b60 <line:769:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55914fbe7b48 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55914fbe7b28 <col:3> 'void ()' Function 0x55914fb8a410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55914fbe7bb8 <line:770:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55914fbe7ba0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55914fbe7b80 <col:3> 'void ()' Function 0x55914fb8a350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55914fbe7c70 <line:771:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x55914fbe7bd8 <col:3> 'int' lvalue Var 0x55914fbe36e8 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x55914fbe7c50 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x55914fbe7c38 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55914fbe7bf8 <col:22> 'int' lvalue Var 0x55914fbe36e8 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x55914fbe7c18 <col:41> 'int' 1
|   |-CallExpr 0x55914fbe7cc8 <line:772:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55914fbe7cb0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55914fbe7c90 <col:3> 'void ()' Function 0x55914fb8a410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x55914fbe7d40 <line:773:3, col:36>
|     `-CallExpr 0x55914fbe7d20 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x55914fbe7d08 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x55914fbe7ce8 <col:10> 'void *(void)' Function 0x55914fb89e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x55914fbe7ee8 prev 0x55914fbe3368 <line:775:1, line:797:1> line:775:8 used P3 'void *(void *)'
| |-ParmVarDecl 0x55914fbe7e50 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x55914fbe9268 <line:776:1, line:797:1>
|   |-CallExpr 0x55914fbe7fe8 <line:777:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55914fbe7fd0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55914fbe7fb0 <col:3> 'void ()' Function 0x55914fb8a350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55914fbe8048 <line:778:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x55914fbe8008 <col:3> 'int' lvalue Var 0x55914fbe4888 'z' 'int'
|   | `-IntegerLiteral 0x55914fbe8028 <col:7> 'int' 2
|   |-CallExpr 0x55914fbe80a0 <line:779:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55914fbe8088 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55914fbe8068 <col:3> 'void ()' Function 0x55914fb8a410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55914fbe80f8 <line:780:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55914fbe80e0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55914fbe80c0 <col:3> 'void ()' Function 0x55914fb8a350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55914fbe8170 <line:781:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x55914fbe8118 <col:3> 'int' lvalue Var 0x55914fbe3928 '__unbuffered_p3_EAX' 'int'
|   | `-ImplicitCastExpr 0x55914fbe8158 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55914fbe8138 <col:25> 'int' lvalue Var 0x55914fbe4888 'z' 'int'
|   |-CallExpr 0x55914fbe81c8 <line:782:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55914fbe81b0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55914fbe8190 <col:3> 'void ()' Function 0x55914fb8a410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55914fbe8220 <line:783:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55914fbe8208 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55914fbe81e8 <col:3> 'void ()' Function 0x55914fb8a350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55914fbe8298 <line:784:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x55914fbe8240 <col:3> 'int' lvalue Var 0x55914fbe3a48 '__unbuffered_p3_EBX' 'int'
|   | `-ImplicitCastExpr 0x55914fbe8280 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55914fbe8260 <col:25> 'int' lvalue Var 0x55914fbe3b68 'a' 'int'
|   |-CallExpr 0x55914fbe82f0 <line:785:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55914fbe82d8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55914fbe82b8 <col:3> 'void ()' Function 0x55914fb8a410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55914fbe8348 <line:786:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55914fbe8330 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55914fbe8310 <col:3> 'void ()' Function 0x55914fb8a350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55914fbe8630 <line:787:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x55914fbe8368 <col:3> 'int' lvalue Var 0x55914fbe3e98 'y' 'int'
|   | `-ConditionalOperator 0x55914fbe8600 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x55914fbe8428 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x55914fbe83e0 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x55914fbe83c8 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x55914fbe8388 <col:7> '_Bool' lvalue Var 0x55914fbe4690 'y$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x55914fbe8410 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x55914fbe83f8 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x55914fbe83a8 <col:25> '_Bool' lvalue Var 0x55914fbe4248 'y$r_buff0_thd4' '_Bool'
|   |   |-ImplicitCastExpr 0x55914fbe85e8 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55914fbe8448 <col:42> 'int' lvalue Var 0x55914fbe4618 'y$w_buff0' 'int'
|   |   `-ParenExpr 0x55914fbe85c8 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x55914fbe8598 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x55914fbe8508 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55914fbe84c0 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55914fbe84a8 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55914fbe8468 <col:55> '_Bool' lvalue Var 0x55914fbe4788 'y$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55914fbe84f0 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55914fbe84d8 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55914fbe8488 <col:73> '_Bool' lvalue Var 0x55914fbe44a0 'y$r_buff1_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x55914fbe8568 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55914fbe8528 <col:90> 'int' lvalue Var 0x55914fbe4710 'y$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x55914fbe8580 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55914fbe8548 <col:102> 'int' lvalue Var 0x55914fbe3e98 'y' 'int'
|   |-BinaryOperator 0x55914fbe8838 <line:788:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55914fbe8650 <col:3> '_Bool' lvalue Var 0x55914fbe4690 'y$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55914fbe8820 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55914fbe87f0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55914fbe8710 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55914fbe86c8 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55914fbe86b0 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55914fbe8670 <col:20> '_Bool' lvalue Var 0x55914fbe4690 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55914fbe86f8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55914fbe86e0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55914fbe8690 <col:38> '_Bool' lvalue Var 0x55914fbe4248 'y$r_buff0_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x55914fbe87a8 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55914fbe8760 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55914fbe8730 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55914fbe87d8 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55914fbe87c0 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55914fbe8788 <col:66> '_Bool' lvalue Var 0x55914fbe4690 'y$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55914fbe8b20 <line:789:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55914fbe8858 <col:3> '_Bool' lvalue Var 0x55914fbe4788 'y$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55914fbe8b08 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55914fbe8ad8 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55914fbe89f8 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55914fbe8918 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55914fbe88d0 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55914fbe88b8 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55914fbe8878 <col:20> '_Bool' lvalue Var 0x55914fbe4690 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55914fbe8900 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55914fbe88e8 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55914fbe8898 <col:38> '_Bool' lvalue Var 0x55914fbe4248 'y$r_buff0_thd4' '_Bool'
|   |     | `-BinaryOperator 0x55914fbe89d8 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55914fbe8990 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55914fbe8978 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55914fbe8938 <col:56> '_Bool' lvalue Var 0x55914fbe4788 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55914fbe89c0 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55914fbe89a8 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55914fbe8958 <col:74> '_Bool' lvalue Var 0x55914fbe44a0 'y$r_buff1_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x55914fbe8a90 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55914fbe8a48 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55914fbe8a18 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55914fbe8ac0 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55914fbe8aa8 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55914fbe8a70 <col:102> '_Bool' lvalue Var 0x55914fbe4788 'y$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x55914fbe8d28 <line:790:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55914fbe8b40 <col:3> '_Bool' lvalue Var 0x55914fbe4248 'y$r_buff0_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x55914fbe8d10 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55914fbe8ce0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55914fbe8c00 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55914fbe8bb8 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55914fbe8ba0 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55914fbe8b60 <col:20> '_Bool' lvalue Var 0x55914fbe4690 'y$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55914fbe8be8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55914fbe8bd0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55914fbe8b80 <col:38> '_Bool' lvalue Var 0x55914fbe4248 'y$r_buff0_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x55914fbe8c98 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55914fbe8c50 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55914fbe8c20 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55914fbe8cc8 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55914fbe8cb0 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55914fbe8c78 <col:66> '_Bool' lvalue Var 0x55914fbe4248 'y$r_buff0_thd4' '_Bool'
|   |-BinaryOperator 0x55914fbe9020 <line:791:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55914fbe8d48 <col:3> '_Bool' lvalue Var 0x55914fbe44a0 'y$r_buff1_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x55914fbe9008 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55914fbe8fd8 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55914fbe8ee8 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55914fbe8e08 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55914fbe8dc0 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55914fbe8da8 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55914fbe8d68 <col:20> '_Bool' lvalue Var 0x55914fbe4690 'y$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55914fbe8df0 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55914fbe8dd8 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55914fbe8d88 <col:38> '_Bool' lvalue Var 0x55914fbe4248 'y$r_buff0_thd4' '_Bool'
|   |     | `-BinaryOperator 0x55914fbe8ec8 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55914fbe8e80 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55914fbe8e68 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55914fbe8e28 <col:56> '_Bool' lvalue Var 0x55914fbe4788 'y$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55914fbe8eb0 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55914fbe8e98 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55914fbe8e48 <col:74> '_Bool' lvalue Var 0x55914fbe44a0 'y$r_buff1_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x55914fbe8f80 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55914fbe8f38 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55914fbe8f08 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55914fbe8fc0 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55914fbe8f98 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55914fbe8f60 <col:102> '_Bool' lvalue Var 0x55914fbe44a0 'y$r_buff1_thd4' '_Bool'
|   |-CallExpr 0x55914fbe9078 <line:792:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55914fbe9060 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55914fbe9040 <col:3> 'void ()' Function 0x55914fb8a410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55914fbe90d0 <line:793:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55914fbe90b8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55914fbe9098 <col:3> 'void ()' Function 0x55914fb8a350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55914fbe9188 <line:794:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x55914fbe90f0 <col:3> 'int' lvalue Var 0x55914fbe36e8 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x55914fbe9168 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x55914fbe9150 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55914fbe9110 <col:22> 'int' lvalue Var 0x55914fbe36e8 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x55914fbe9130 <col:41> 'int' 1
|   |-CallExpr 0x55914fbe91e0 <line:795:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55914fbe91c8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55914fbe91a8 <col:3> 'void ()' Function 0x55914fb8a410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x55914fbe9258 <line:796:3, col:36>
|     `-CallExpr 0x55914fbe9238 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x55914fbe9220 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x55914fbe9200 <col:10> 'void *(void)' Function 0x55914fb89e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x55914fbe9338 prev 0x55914fbe3430 <line:798:1, line:800:1> line:798:6 fence 'void ()'
| `-CompoundStmt 0x55914fbe93d8 <line:799:1, line:800:1>
|-FunctionDecl 0x55914fbe9408 prev 0x55914fbe34f0 <line:801:1, line:803:1> line:801:6 isync 'void ()'
| `-CompoundStmt 0x55914fbe94a8 <line:802:1, line:803:1>
|-FunctionDecl 0x55914fbe94d8 prev 0x55914fbe35b0 <line:804:1, line:806:1> line:804:6 lwfence 'void ()'
| `-CompoundStmt 0x55914fbe9578 <line:805:1, line:806:1>
`-FunctionDecl 0x55914fbe95e8 <line:807:1, line:846:1> line:807:5 main 'int ()'
  `-CompoundStmt 0x55914fbee010 <line:808:1, line:846:1>
    |-DeclStmt 0x55914fbe9700 <line:809:3, col:17>
    | `-VarDecl 0x55914fbe9698 <col:3, col:13> col:13 used t791 'pthread_t':'unsigned long'
    |-CallExpr 0x55914fbe9908 <line:810:3, col:53> 'int'
    | |-ImplicitCastExpr 0x55914fbe98f0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55914fbe9718 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x55914fbca8f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x55914fbe9758 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x55914fbe9738 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x55914fbe9698 't791' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x55914fbe9948 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x55914fbe97d0 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x55914fbe97a8 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x55914fbe9770 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x55914fbe9960 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55914fbe97f0 <col:38> 'void *(void *)' Function 0x55914fbe4ab0 'P0' 'void *(void *)'
    | `-ParenExpr 0x55914fbe9870 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x55914fbe9848 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x55914fbe9810 <col:51> 'int' 0
    |-DeclStmt 0x55914fbe99f0 <line:811:3, col:17>
    | `-VarDecl 0x55914fbe9988 <col:3, col:13> col:13 used t792 'pthread_t':'unsigned long'
    |-CallExpr 0x55914fbe9b98 <line:812:3, col:53> 'int'
    | |-ImplicitCastExpr 0x55914fbe9b80 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55914fbe9a08 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x55914fbca8f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x55914fbe9a48 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x55914fbe9a28 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x55914fbe9988 't792' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x55914fbe9bd8 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x55914fbe9ac0 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x55914fbe9a98 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x55914fbe9a60 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x55914fbe9bf0 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55914fbe9ae0 <col:38> 'void *(void *)' Function 0x55914fbe51b8 'P1' 'void *(void *)'
    | `-ParenExpr 0x55914fbe9b60 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x55914fbe9b38 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x55914fbe9b00 <col:51> 'int' 0
    |-DeclStmt 0x55914fbe9c80 <line:813:3, col:17>
    | `-VarDecl 0x55914fbe9c18 <col:3, col:13> col:13 used t793 'pthread_t':'unsigned long'
    |-CallExpr 0x55914fbe9e28 <line:814:3, col:53> 'int'
    | |-ImplicitCastExpr 0x55914fbe9e10 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55914fbe9c98 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x55914fbca8f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x55914fbe9cd8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x55914fbe9cb8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x55914fbe9c18 't793' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x55914fbe9e68 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x55914fbe9d50 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x55914fbe9d28 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x55914fbe9cf0 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x55914fbe9e80 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55914fbe9d70 <col:38> 'void *(void *)' Function 0x55914fbe6528 'P2' 'void *(void *)'
    | `-ParenExpr 0x55914fbe9df0 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x55914fbe9dc8 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x55914fbe9d90 <col:51> 'int' 0
    |-DeclStmt 0x55914fbe9f10 <line:815:3, col:17>
    | `-VarDecl 0x55914fbe9ea8 <col:3, col:13> col:13 used t794 'pthread_t':'unsigned long'
    |-CallExpr 0x55914fbea0d0 <line:816:3, col:53> 'int'
    | |-ImplicitCastExpr 0x55914fbea0b8 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55914fbe9f28 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x55914fbca8f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x55914fbe9f68 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x55914fbe9f48 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x55914fbe9ea8 't794' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x55914fbea110 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x55914fbe9ff8 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x55914fbe9fd0 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x55914fbe9f80 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x55914fbea128 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55914fbea018 <col:38> 'void *(void *)' Function 0x55914fbe7ee8 'P3' 'void *(void *)'
    | `-ParenExpr 0x55914fbea098 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x55914fbea070 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x55914fbea038 <col:51> 'int' 0
    |-CallExpr 0x55914fbea178 <line:817:3, col:27> 'void'
    | `-ImplicitCastExpr 0x55914fbea160 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55914fbea140 <col:3> 'void ()' Function 0x55914fb8a350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x55914fbea248 <line:818:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x55914fbea198 <col:3> '_Bool' lvalue Var 0x55914fbe3c00 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x55914fbea230 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x55914fbea210 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x55914fbea1f8 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x55914fbea1b8 <col:21> 'int' lvalue Var 0x55914fbe36e8 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x55914fbea1d8 <col:41> 'int' 4
    |-CallExpr 0x55914fbea2a0 <line:819:3, col:25> 'void'
    | `-ImplicitCastExpr 0x55914fbea288 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55914fbea268 <col:3> 'void ()' Function 0x55914fb8a410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x55914fbea318 <line:820:3, col:36> 'void'
    | |-ImplicitCastExpr 0x55914fbea300 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55914fbea2c0 <col:3> 'void (int)' Function 0x55914fb89ca0 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x55914fbea358 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x55914fbea340 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x55914fbea2e0 <col:21> '_Bool' lvalue Var 0x55914fbe3c00 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x55914fbea3a8 <line:821:3, col:27> 'void'
    | `-ImplicitCastExpr 0x55914fbea390 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55914fbea370 <col:3> 'void ()' Function 0x55914fb8a350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x55914fbea690 <line:822:3, col:103> 'int' '='
    | |-DeclRefExpr 0x55914fbea3c8 <col:3> 'int' lvalue Var 0x55914fbe3e98 'y' 'int'
    | `-ConditionalOperator 0x55914fbea660 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x55914fbea488 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x55914fbea440 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x55914fbea428 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x55914fbea3e8 <col:7> '_Bool' lvalue Var 0x55914fbe4690 'y$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x55914fbea470 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x55914fbea458 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x55914fbea408 <col:25> '_Bool' lvalue Var 0x55914fbe4068 'y$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x55914fbea648 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x55914fbea4a8 <col:42> 'int' lvalue Var 0x55914fbe4618 'y$w_buff0' 'int'
    |   `-ParenExpr 0x55914fbea628 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x55914fbea5f8 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x55914fbea568 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x55914fbea520 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x55914fbea508 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x55914fbea4c8 <col:55> '_Bool' lvalue Var 0x55914fbe4788 'y$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x55914fbea550 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x55914fbea538 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x55914fbea4e8 <col:73> '_Bool' lvalue Var 0x55914fbe42c0 'y$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x55914fbea5c8 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x55914fbea588 <col:90> 'int' lvalue Var 0x55914fbe4710 'y$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x55914fbea5e0 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x55914fbea5a8 <col:102> 'int' lvalue Var 0x55914fbe3e98 'y' 'int'
    |-BinaryOperator 0x55914fbea898 <line:823:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x55914fbea6b0 <col:3> '_Bool' lvalue Var 0x55914fbe4690 'y$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x55914fbea880 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55914fbea850 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x55914fbea770 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x55914fbea728 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x55914fbea710 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x55914fbea6d0 <col:20> '_Bool' lvalue Var 0x55914fbe4690 'y$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x55914fbea758 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x55914fbea740 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x55914fbea6f0 <col:38> '_Bool' lvalue Var 0x55914fbe4068 'y$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55914fbea808 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55914fbea7c0 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55914fbea790 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x55914fbea838 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55914fbea820 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55914fbea7e8 <col:66> '_Bool' lvalue Var 0x55914fbe4690 'y$w_buff0_used' '_Bool'
    |-BinaryOperator 0x55914fbeab80 <line:824:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x55914fbea8b8 <col:3> '_Bool' lvalue Var 0x55914fbe4788 'y$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x55914fbeab68 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55914fbeab38 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x55914fbeaa58 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x55914fbea978 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x55914fbea930 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x55914fbea918 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x55914fbea8d8 <col:20> '_Bool' lvalue Var 0x55914fbe4690 'y$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x55914fbea960 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x55914fbea948 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x55914fbea8f8 <col:38> '_Bool' lvalue Var 0x55914fbe4068 'y$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x55914fbeaa38 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x55914fbea9f0 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x55914fbea9d8 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x55914fbea998 <col:56> '_Bool' lvalue Var 0x55914fbe4788 'y$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x55914fbeaa20 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x55914fbeaa08 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x55914fbea9b8 <col:74> '_Bool' lvalue Var 0x55914fbe42c0 'y$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55914fbeaaf0 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55914fbeaaa8 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55914fbeaa78 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x55914fbeab20 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55914fbeab08 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55914fbeaad0 <col:102> '_Bool' lvalue Var 0x55914fbe4788 'y$w_buff1_used' '_Bool'
    |-BinaryOperator 0x55914fbead88 <line:825:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x55914fbeaba0 <col:3> '_Bool' lvalue Var 0x55914fbe4068 'y$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x55914fbead70 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55914fbead40 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x55914fbeac60 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x55914fbeac18 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x55914fbeac00 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x55914fbeabc0 <col:20> '_Bool' lvalue Var 0x55914fbe4690 'y$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x55914fbeac48 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x55914fbeac30 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x55914fbeabe0 <col:38> '_Bool' lvalue Var 0x55914fbe4068 'y$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55914fbeacf8 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55914fbeacb0 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55914fbeac80 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x55914fbead28 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55914fbead10 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55914fbeacd8 <col:66> '_Bool' lvalue Var 0x55914fbe4068 'y$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x55914fbeb090 <line:826:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x55914fbeada8 <col:3> '_Bool' lvalue Var 0x55914fbe42c0 'y$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x55914fbeb078 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55914fbeb048 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x55914fbeaf48 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x55914fbeae68 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x55914fbeae20 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x55914fbeae08 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x55914fbeadc8 <col:20> '_Bool' lvalue Var 0x55914fbe4690 'y$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x55914fbeae50 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x55914fbeae38 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x55914fbeade8 <col:38> '_Bool' lvalue Var 0x55914fbe4068 'y$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x55914fbeaf28 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x55914fbeaee0 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x55914fbeaec8 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x55914fbeae88 <col:56> '_Bool' lvalue Var 0x55914fbe4788 'y$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x55914fbeaf10 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x55914fbeaef8 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x55914fbeaea8 <col:74> '_Bool' lvalue Var 0x55914fbe42c0 'y$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x55914fbeb000 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x55914fbeaf98 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x55914fbeaf68 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x55914fbeb030 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x55914fbeb018 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x55914fbeafe0 <col:102> '_Bool' lvalue Var 0x55914fbe42c0 'y$r_buff1_thd0' '_Bool'
    |-CallExpr 0x55914fbeb0e8 <line:827:3, col:25> 'void'
    | `-ImplicitCastExpr 0x55914fbeb0d0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55914fbeb0b0 <col:3> 'void ()' Function 0x55914fb8a410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x55914fbeb140 <line:828:3, col:27> 'void'
    | `-ImplicitCastExpr 0x55914fbeb128 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55914fbeb108 <col:3> 'void ()' Function 0x55914fb8a350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x55914fbeb1f0 <line:829:3, col:45> '_Bool' '='
    | |-DeclRefExpr 0x55914fbeb160 <col:3> '_Bool' lvalue Var 0x55914fbe4920 'weak$$choice0' '_Bool'
    | `-ImplicitCastExpr 0x55914fbeb1d8 <col:19, col:45> '_Bool' <PointerToBoolean>
    |   `-CallExpr 0x55914fbeb1b8 <col:19, col:45> 'void *'
    |     `-ImplicitCastExpr 0x55914fbeb1a0 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
    |       `-DeclRefExpr 0x55914fbeb180 <col:19> 'void *(void)' Function 0x55914fb89e68 '__VERIFIER_nondet_pointer' 'void *(void)'
    |-BinaryOperator 0x55914fbeb2a0 <line:830:3, col:45> '_Bool' '='
    | |-DeclRefExpr 0x55914fbeb210 <col:3> '_Bool' lvalue Var 0x55914fbe4998 'weak$$choice2' '_Bool'
    | `-ImplicitCastExpr 0x55914fbeb288 <col:19, col:45> '_Bool' <PointerToBoolean>
    |   `-CallExpr 0x55914fbeb268 <col:19, col:45> 'void *'
    |     `-ImplicitCastExpr 0x55914fbeb250 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
    |       `-DeclRefExpr 0x55914fbeb230 <col:19> 'void *(void)' Function 0x55914fb89e68 '__VERIFIER_nondet_pointer' 'void *(void)'
    |-BinaryOperator 0x55914fbeb318 <line:831:3, col:21> '_Bool' '='
    | |-DeclRefExpr 0x55914fbeb2c0 <col:3> '_Bool' lvalue Var 0x55914fbe3f70 'y$flush_delayed' '_Bool'
    | `-ImplicitCastExpr 0x55914fbeb300 <col:21> '_Bool' <LValueToRValue>
    |   `-DeclRefExpr 0x55914fbeb2e0 <col:21> '_Bool' lvalue Var 0x55914fbe4998 'weak$$choice2' '_Bool'
    |-BinaryOperator 0x55914fbeb390 <line:832:3, col:15> 'int' '='
    | |-DeclRefExpr 0x55914fbeb338 <col:3> 'int' lvalue Var 0x55914fbe3ff0 'y$mem_tmp' 'int'
    | `-ImplicitCastExpr 0x55914fbeb378 <col:15> 'int' <LValueToRValue>
    |   `-DeclRefExpr 0x55914fbeb358 <col:15> 'int' lvalue Var 0x55914fbe3e98 'y' 'int'
    |-BinaryOperator 0x55914fbeb7c8 <line:833:3, col:162> 'int' '='
    | |-DeclRefExpr 0x55914fbeb3b0 <col:3> 'int' lvalue Var 0x55914fbe3e98 'y' 'int'
    | `-ConditionalOperator 0x55914fbeb798 <col:7, col:162> 'int'
    |   |-BinaryOperator 0x55914fbeb5c0 <col:7, col:84> 'int' '||'
    |   | |-BinaryOperator 0x55914fbeb4e0 <col:7, col:46> 'int' '||'
    |   | | |-UnaryOperator 0x55914fbeb408 <col:7, col:8> 'int' prefix '!' cannot overflow
    |   | | | `-ImplicitCastExpr 0x55914fbeb3f0 <col:8> '_Bool' <LValueToRValue>
    |   | | |   `-DeclRefExpr 0x55914fbeb3d0 <col:8> '_Bool' lvalue Var 0x55914fbe4690 'y$w_buff0_used' '_Bool'
    |   | | `-BinaryOperator 0x55914fbeb4c0 <col:26, col:46> 'int' '&&'
    |   | |   |-UnaryOperator 0x55914fbeb458 <col:26, col:27> 'int' prefix '!' cannot overflow
    |   | |   | `-ImplicitCastExpr 0x55914fbeb440 <col:27> '_Bool' <LValueToRValue>
    |   | |   |   `-DeclRefExpr 0x55914fbeb420 <col:27> '_Bool' lvalue Var 0x55914fbe4068 'y$r_buff0_thd0' '_Bool'
    |   | |   `-UnaryOperator 0x55914fbeb4a8 <col:45, col:46> 'int' prefix '!' cannot overflow
    |   | |     `-ImplicitCastExpr 0x55914fbeb490 <col:46> '_Bool' <LValueToRValue>
    |   | |       `-DeclRefExpr 0x55914fbeb470 <col:46> '_Bool' lvalue Var 0x55914fbe4788 'y$w_buff1_used' '_Bool'
    |   | `-BinaryOperator 0x55914fbeb5a0 <col:64, col:84> 'int' '&&'
    |   |   |-UnaryOperator 0x55914fbeb538 <col:64, col:65> 'int' prefix '!' cannot overflow
    |   |   | `-ImplicitCastExpr 0x55914fbeb520 <col:65> '_Bool' <LValueToRValue>
    |   |   |   `-DeclRefExpr 0x55914fbeb500 <col:65> '_Bool' lvalue Var 0x55914fbe4068 'y$r_buff0_thd0' '_Bool'
    |   |   `-UnaryOperator 0x55914fbeb588 <col:83, col:84> 'int' prefix '!' cannot overflow
    |   |     `-ImplicitCastExpr 0x55914fbeb570 <col:84> '_Bool' <LValueToRValue>
    |   |       `-DeclRefExpr 0x55914fbeb550 <col:84> '_Bool' lvalue Var 0x55914fbe42c0 'y$r_buff1_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x55914fbeb780 <col:101> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x55914fbeb5e0 <col:101> 'int' lvalue Var 0x55914fbe3e98 'y' 'int'
    |   `-ParenExpr 0x55914fbeb760 <col:105, col:162> 'int'
    |     `-ConditionalOperator 0x55914fbeb730 <col:106, col:153> 'int'
    |       |-BinaryOperator 0x55914fbeb6a0 <col:106, col:124> 'int' '&&'
    |       | |-ImplicitCastExpr 0x55914fbeb658 <col:106> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x55914fbeb640 <col:106> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x55914fbeb600 <col:106> '_Bool' lvalue Var 0x55914fbe4690 'y$w_buff0_used' '_Bool'
    |       | `-ImplicitCastExpr 0x55914fbeb688 <col:124> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x55914fbeb670 <col:124> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x55914fbeb620 <col:124> '_Bool' lvalue Var 0x55914fbe4068 'y$r_buff0_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x55914fbeb700 <col:141> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x55914fbeb6c0 <col:141> 'int' lvalue Var 0x55914fbe4618 'y$w_buff0' 'int'
    |       `-ImplicitCastExpr 0x55914fbeb718 <col:153> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x55914fbeb6e0 <col:153> 'int' lvalue Var 0x55914fbe4710 'y$w_buff1' 'int'
    |-BinaryOperator 0x55914fbebcd8 <line:834:3, col:208> 'int' '='
    | |-DeclRefExpr 0x55914fbeb7e8 <col:3> 'int' lvalue Var 0x55914fbe4618 'y$w_buff0' 'int'
    | `-ConditionalOperator 0x55914fbebca8 <col:15, col:208> 'int'
    |   |-ImplicitCastExpr 0x55914fbebc78 <col:15> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x55914fbebc60 <col:15> '_Bool' <LValueToRValue>
    |   |   `-DeclRefExpr 0x55914fbeb808 <col:15> '_Bool' lvalue Var 0x55914fbe4998 'weak$$choice2' '_Bool'
    |   |-ImplicitCastExpr 0x55914fbebc90 <col:31> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x55914fbeb828 <col:31> 'int' lvalue Var 0x55914fbe4618 'y$w_buff0' 'int'
    |   `-ParenExpr 0x55914fbebc40 <col:43, col:208> 'int'
    |     `-ConditionalOperator 0x55914fbebc10 <col:44, col:207> 'int'
    |       |-BinaryOperator 0x55914fbeba38 <col:44, col:121> 'int' '||'
    |       | |-BinaryOperator 0x55914fbeb958 <col:44, col:83> 'int' '||'
    |       | | |-UnaryOperator 0x55914fbeb880 <col:44, col:45> 'int' prefix '!' cannot overflow
    |       | | | `-ImplicitCastExpr 0x55914fbeb868 <col:45> '_Bool' <LValueToRValue>
    |       | | |   `-DeclRefExpr 0x55914fbeb848 <col:45> '_Bool' lvalue Var 0x55914fbe4690 'y$w_buff0_used' '_Bool'
    |       | | `-BinaryOperator 0x55914fbeb938 <col:63, col:83> 'int' '&&'
    |       | |   |-UnaryOperator 0x55914fbeb8d0 <col:63, col:64> 'int' prefix '!' cannot overflow
    |       | |   | `-ImplicitCastExpr 0x55914fbeb8b8 <col:64> '_Bool' <LValueToRValue>
    |       | |   |   `-DeclRefExpr 0x55914fbeb898 <col:64> '_Bool' lvalue Var 0x55914fbe4068 'y$r_buff0_thd0' '_Bool'
    |       | |   `-UnaryOperator 0x55914fbeb920 <col:82, col:83> 'int' prefix '!' cannot overflow
    |       | |     `-ImplicitCastExpr 0x55914fbeb908 <col:83> '_Bool' <LValueToRValue>
    |       | |       `-DeclRefExpr 0x55914fbeb8e8 <col:83> '_Bool' lvalue Var 0x55914fbe4788 'y$w_buff1_used' '_Bool'
    |       | `-BinaryOperator 0x55914fbeba18 <col:101, col:121> 'int' '&&'
    |       |   |-UnaryOperator 0x55914fbeb9b0 <col:101, col:102> 'int' prefix '!' cannot overflow
    |       |   | `-ImplicitCastExpr 0x55914fbeb998 <col:102> '_Bool' <LValueToRValue>
    |       |   |   `-DeclRefExpr 0x55914fbeb978 <col:102> '_Bool' lvalue Var 0x55914fbe4068 'y$r_buff0_thd0' '_Bool'
    |       |   `-UnaryOperator 0x55914fbeba00 <col:120, col:121> 'int' prefix '!' cannot overflow
    |       |     `-ImplicitCastExpr 0x55914fbeb9e8 <col:121> '_Bool' <LValueToRValue>
    |       |       `-DeclRefExpr 0x55914fbeb9c8 <col:121> '_Bool' lvalue Var 0x55914fbe42c0 'y$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x55914fbebbf8 <col:138> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x55914fbeba58 <col:138> 'int' lvalue Var 0x55914fbe4618 'y$w_buff0' 'int'
    |       `-ParenExpr 0x55914fbebbd8 <col:150, col:207> 'int'
    |         `-ConditionalOperator 0x55914fbebba8 <col:151, col:198> 'int'
    |           |-BinaryOperator 0x55914fbebb18 <col:151, col:169> 'int' '&&'
    |           | |-ImplicitCastExpr 0x55914fbebad0 <col:151> 'int' <IntegralCast>
    |           | | `-ImplicitCastExpr 0x55914fbebab8 <col:151> '_Bool' <LValueToRValue>
    |           | |   `-DeclRefExpr 0x55914fbeba78 <col:151> '_Bool' lvalue Var 0x55914fbe4690 'y$w_buff0_used' '_Bool'
    |           | `-ImplicitCastExpr 0x55914fbebb00 <col:169> 'int' <IntegralCast>
    |           |   `-ImplicitCastExpr 0x55914fbebae8 <col:169> '_Bool' <LValueToRValue>
    |           |     `-DeclRefExpr 0x55914fbeba98 <col:169> '_Bool' lvalue Var 0x55914fbe4068 'y$r_buff0_thd0' '_Bool'
    |           |-ImplicitCastExpr 0x55914fbebb78 <col:186> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x55914fbebb38 <col:186> 'int' lvalue Var 0x55914fbe4618 'y$w_buff0' 'int'
    |           `-ImplicitCastExpr 0x55914fbebb90 <col:198> 'int' <LValueToRValue>
    |             `-DeclRefExpr 0x55914fbebb58 <col:198> 'int' lvalue Var 0x55914fbe4618 'y$w_buff0' 'int'
    |-BinaryOperator 0x55914fbec1f8 <line:835:3, col:208> 'int' '='
    | |-DeclRefExpr 0x55914fbebcf8 <col:3> 'int' lvalue Var 0x55914fbe4710 'y$w_buff1' 'int'
    | `-ConditionalOperator 0x55914fbec1c8 <col:15, col:208> 'int'
    |   |-ImplicitCastExpr 0x55914fbec198 <col:15> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x55914fbec180 <col:15> '_Bool' <LValueToRValue>
    |   |   `-DeclRefExpr 0x55914fbebd18 <col:15> '_Bool' lvalue Var 0x55914fbe4998 'weak$$choice2' '_Bool'
    |   |-ImplicitCastExpr 0x55914fbec1b0 <col:31> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x55914fbebd38 <col:31> 'int' lvalue Var 0x55914fbe4710 'y$w_buff1' 'int'
    |   `-ParenExpr 0x55914fbec160 <col:43, col:208> 'int'
    |     `-ConditionalOperator 0x55914fbec130 <col:44, col:207> 'int'
    |       |-BinaryOperator 0x55914fbebf48 <col:44, col:121> 'int' '||'
    |       | |-BinaryOperator 0x55914fbebe68 <col:44, col:83> 'int' '||'
    |       | | |-UnaryOperator 0x55914fbebd90 <col:44, col:45> 'int' prefix '!' cannot overflow
    |       | | | `-ImplicitCastExpr 0x55914fbebd78 <col:45> '_Bool' <LValueToRValue>
    |       | | |   `-DeclRefExpr 0x55914fbebd58 <col:45> '_Bool' lvalue Var 0x55914fbe4690 'y$w_buff0_used' '_Bool'
    |       | | `-BinaryOperator 0x55914fbebe48 <col:63, col:83> 'int' '&&'
    |       | |   |-UnaryOperator 0x55914fbebde0 <col:63, col:64> 'int' prefix '!' cannot overflow
    |       | |   | `-ImplicitCastExpr 0x55914fbebdc8 <col:64> '_Bool' <LValueToRValue>
    |       | |   |   `-DeclRefExpr 0x55914fbebda8 <col:64> '_Bool' lvalue Var 0x55914fbe4068 'y$r_buff0_thd0' '_Bool'
    |       | |   `-UnaryOperator 0x55914fbebe30 <col:82, col:83> 'int' prefix '!' cannot overflow
    |       | |     `-ImplicitCastExpr 0x55914fbebe18 <col:83> '_Bool' <LValueToRValue>
    |       | |       `-DeclRefExpr 0x55914fbebdf8 <col:83> '_Bool' lvalue Var 0x55914fbe4788 'y$w_buff1_used' '_Bool'
    |       | `-BinaryOperator 0x55914fbebf28 <col:101, col:121> 'int' '&&'
    |       |   |-UnaryOperator 0x55914fbebec0 <col:101, col:102> 'int' prefix '!' cannot overflow
    |       |   | `-ImplicitCastExpr 0x55914fbebea8 <col:102> '_Bool' <LValueToRValue>
    |       |   |   `-DeclRefExpr 0x55914fbebe88 <col:102> '_Bool' lvalue Var 0x55914fbe4068 'y$r_buff0_thd0' '_Bool'
    |       |   `-UnaryOperator 0x55914fbebf10 <col:120, col:121> 'int' prefix '!' cannot overflow
    |       |     `-ImplicitCastExpr 0x55914fbebef8 <col:121> '_Bool' <LValueToRValue>
    |       |       `-DeclRefExpr 0x55914fbebed8 <col:121> '_Bool' lvalue Var 0x55914fbe42c0 'y$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x55914fbec118 <col:138> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x55914fbebf68 <col:138> 'int' lvalue Var 0x55914fbe4710 'y$w_buff1' 'int'
    |       `-ParenExpr 0x55914fbec0f8 <col:150, col:207> 'int'
    |         `-ConditionalOperator 0x55914fbec0c8 <col:151, col:198> 'int'
    |           |-BinaryOperator 0x55914fbec038 <col:151, col:169> 'int' '&&'
    |           | |-ImplicitCastExpr 0x55914fbebff0 <col:151> 'int' <IntegralCast>
    |           | | `-ImplicitCastExpr 0x55914fbebfc8 <col:151> '_Bool' <LValueToRValue>
    |           | |   `-DeclRefExpr 0x55914fbebf88 <col:151> '_Bool' lvalue Var 0x55914fbe4690 'y$w_buff0_used' '_Bool'
    |           | `-ImplicitCastExpr 0x55914fbec020 <col:169> 'int' <IntegralCast>
    |           |   `-ImplicitCastExpr 0x55914fbec008 <col:169> '_Bool' <LValueToRValue>
    |           |     `-DeclRefExpr 0x55914fbebfa8 <col:169> '_Bool' lvalue Var 0x55914fbe4068 'y$r_buff0_thd0' '_Bool'
    |           |-ImplicitCastExpr 0x55914fbec098 <col:186> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x55914fbec058 <col:186> 'int' lvalue Var 0x55914fbe4710 'y$w_buff1' 'int'
    |           `-ImplicitCastExpr 0x55914fbec0b0 <col:198> 'int' <LValueToRValue>
    |             `-DeclRefExpr 0x55914fbec078 <col:198> 'int' lvalue Var 0x55914fbe4710 'y$w_buff1' 'int'
    |-BinaryOperator 0x55914fbec7a0 <line:836:3, col:227> '_Bool' '='
    | |-DeclRefExpr 0x55914fbec218 <col:3> '_Bool' lvalue Var 0x55914fbe4690 'y$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x55914fbec788 <col:20, col:227> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55914fbec758 <col:20, col:227> 'int'
    |     |-ImplicitCastExpr 0x55914fbec710 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x55914fbec6f8 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x55914fbec238 <col:20> '_Bool' lvalue Var 0x55914fbe4998 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x55914fbec740 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x55914fbec728 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x55914fbec258 <col:36> '_Bool' lvalue Var 0x55914fbe4690 'y$w_buff0_used' '_Bool'
    |     `-ParenExpr 0x55914fbec6d8 <col:53, col:227> 'int'
    |       `-ConditionalOperator 0x55914fbec6a8 <col:54, col:226> 'int'
    |         |-BinaryOperator 0x55914fbec468 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x55914fbec388 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x55914fbec2b0 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x55914fbec298 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x55914fbec278 <col:55> '_Bool' lvalue Var 0x55914fbe4690 'y$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x55914fbec368 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x55914fbec300 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x55914fbec2e8 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x55914fbec2c8 <col:74> '_Bool' lvalue Var 0x55914fbe4068 'y$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x55914fbec350 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x55914fbec338 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x55914fbec318 <col:93> '_Bool' lvalue Var 0x55914fbe4788 'y$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x55914fbec448 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x55914fbec3e0 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x55914fbec3c8 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x55914fbec3a8 <col:112> '_Bool' lvalue Var 0x55914fbe4068 'y$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x55914fbec430 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x55914fbec418 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x55914fbec3f8 <col:131> '_Bool' lvalue Var 0x55914fbe42c0 'y$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x55914fbec690 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x55914fbec678 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x55914fbec488 <col:148> '_Bool' lvalue Var 0x55914fbe4690 'y$w_buff0_used' '_Bool'
    |         `-ParenExpr 0x55914fbec658 <col:165, col:226> 'int'
    |           `-ConditionalOperator 0x55914fbec628 <col:166, col:212> 'int'
    |             |-BinaryOperator 0x55914fbec548 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x55914fbec500 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x55914fbec4e8 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x55914fbec4a8 <col:166> '_Bool' lvalue Var 0x55914fbe4690 'y$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x55914fbec530 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x55914fbec518 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x55914fbec4c8 <col:184> '_Bool' lvalue Var 0x55914fbe4068 'y$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x55914fbec5e0 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x55914fbec598 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x55914fbec568 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x55914fbec610 <col:212> 'int' <IntegralCast>
    |               `-ImplicitCastExpr 0x55914fbec5f8 <col:212> '_Bool' <LValueToRValue>
    |                 `-DeclRefExpr 0x55914fbec5c0 <col:212> '_Bool' lvalue Var 0x55914fbe4690 'y$w_buff0_used' '_Bool'
    |-BinaryOperator 0x55914fbecd68 <line:837:3, col:221> '_Bool' '='
    | |-DeclRefExpr 0x55914fbec7c0 <col:3> '_Bool' lvalue Var 0x55914fbe4788 'y$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x55914fbecd50 <col:20, col:221> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55914fbecd20 <col:20, col:221> 'int'
    |     |-ImplicitCastExpr 0x55914fbeccd8 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x55914fbeccc0 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x55914fbec7e0 <col:20> '_Bool' lvalue Var 0x55914fbe4998 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x55914fbecd08 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x55914fbeccf0 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x55914fbec800 <col:36> '_Bool' lvalue Var 0x55914fbe4788 'y$w_buff1_used' '_Bool'
    |     `-ParenExpr 0x55914fbecca0 <col:53, col:221> 'int'
    |       `-ConditionalOperator 0x55914fbecc70 <col:54, col:220> 'int'
    |         |-BinaryOperator 0x55914fbeca10 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x55914fbec930 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x55914fbec858 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x55914fbec840 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x55914fbec820 <col:55> '_Bool' lvalue Var 0x55914fbe4690 'y$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x55914fbec910 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x55914fbec8a8 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x55914fbec890 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x55914fbec870 <col:74> '_Bool' lvalue Var 0x55914fbe4068 'y$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x55914fbec8f8 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x55914fbec8e0 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x55914fbec8c0 <col:93> '_Bool' lvalue Var 0x55914fbe4788 'y$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x55914fbec9f0 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x55914fbec988 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x55914fbec970 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x55914fbec950 <col:112> '_Bool' lvalue Var 0x55914fbe4068 'y$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x55914fbec9d8 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x55914fbec9c0 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x55914fbec9a0 <col:131> '_Bool' lvalue Var 0x55914fbe42c0 'y$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x55914fbecc58 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x55914fbecc40 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x55914fbeca30 <col:148> '_Bool' lvalue Var 0x55914fbe4788 'y$w_buff1_used' '_Bool'
    |         `-ParenExpr 0x55914fbecc20 <col:165, col:220> 'int'
    |           `-ConditionalOperator 0x55914fbecbf0 <col:166, col:219> 'int'
    |             |-BinaryOperator 0x55914fbecaf0 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x55914fbecaa8 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x55914fbeca90 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x55914fbeca50 <col:166> '_Bool' lvalue Var 0x55914fbe4690 'y$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x55914fbecad8 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x55914fbecac0 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x55914fbeca70 <col:184> '_Bool' lvalue Var 0x55914fbe4068 'y$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x55914fbecbc0 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x55914fbecb40 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x55914fbecb10 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x55914fbecbd8 <col:212, col:219> 'int' <IntegralCast>
    |               `-CStyleCastExpr 0x55914fbecb98 <col:212, col:219> '_Bool' <IntegralToBoolean>
    |                 `-IntegerLiteral 0x55914fbecb68 <col:219> 'int' 0
    |-BinaryOperator 0x55914fbed338 <line:838:3, col:227> '_Bool' '='
    | |-DeclRefExpr 0x55914fbecd88 <col:3> '_Bool' lvalue Var 0x55914fbe4068 'y$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x55914fbed320 <col:20, col:227> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55914fbed2f0 <col:20, col:227> 'int'
    |     |-ImplicitCastExpr 0x55914fbed2a8 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x55914fbed290 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x55914fbecda8 <col:20> '_Bool' lvalue Var 0x55914fbe4998 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x55914fbed2d8 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x55914fbed2c0 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x55914fbecdc8 <col:36> '_Bool' lvalue Var 0x55914fbe4068 'y$r_buff0_thd0' '_Bool'
    |     `-ParenExpr 0x55914fbed270 <col:53, col:227> 'int'
    |       `-ConditionalOperator 0x55914fbed240 <col:54, col:226> 'int'
    |         |-BinaryOperator 0x55914fbed000 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x55914fbecef8 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x55914fbece20 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x55914fbece08 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x55914fbecde8 <col:55> '_Bool' lvalue Var 0x55914fbe4690 'y$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x55914fbeced8 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x55914fbece70 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x55914fbece58 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x55914fbece38 <col:74> '_Bool' lvalue Var 0x55914fbe4068 'y$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x55914fbecec0 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x55914fbecea8 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x55914fbece88 <col:93> '_Bool' lvalue Var 0x55914fbe4788 'y$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x55914fbecfb8 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x55914fbecf50 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x55914fbecf38 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x55914fbecf18 <col:112> '_Bool' lvalue Var 0x55914fbe4068 'y$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x55914fbecfa0 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x55914fbecf88 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x55914fbecf68 <col:131> '_Bool' lvalue Var 0x55914fbe42c0 'y$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x55914fbed228 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x55914fbed210 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x55914fbed020 <col:148> '_Bool' lvalue Var 0x55914fbe4068 'y$r_buff0_thd0' '_Bool'
    |         `-ParenExpr 0x55914fbed1f0 <col:165, col:226> 'int'
    |           `-ConditionalOperator 0x55914fbed1c0 <col:166, col:212> 'int'
    |             |-BinaryOperator 0x55914fbed0e0 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x55914fbed098 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x55914fbed080 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x55914fbed040 <col:166> '_Bool' lvalue Var 0x55914fbe4690 'y$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x55914fbed0c8 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x55914fbed0b0 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x55914fbed060 <col:184> '_Bool' lvalue Var 0x55914fbe4068 'y$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x55914fbed178 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x55914fbed130 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x55914fbed100 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x55914fbed1a8 <col:212> 'int' <IntegralCast>
    |               `-ImplicitCastExpr 0x55914fbed190 <col:212> '_Bool' <LValueToRValue>
    |                 `-DeclRefExpr 0x55914fbed158 <col:212> '_Bool' lvalue Var 0x55914fbe4068 'y$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x55914fbed900 <line:839:3, col:221> '_Bool' '='
    | |-DeclRefExpr 0x55914fbed358 <col:3> '_Bool' lvalue Var 0x55914fbe42c0 'y$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x55914fbed8e8 <col:20, col:221> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x55914fbed8b8 <col:20, col:221> 'int'
    |     |-ImplicitCastExpr 0x55914fbed870 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x55914fbed858 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x55914fbed378 <col:20> '_Bool' lvalue Var 0x55914fbe4998 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x55914fbed8a0 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x55914fbed888 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x55914fbed398 <col:36> '_Bool' lvalue Var 0x55914fbe42c0 'y$r_buff1_thd0' '_Bool'
    |     `-ParenExpr 0x55914fbed838 <col:53, col:221> 'int'
    |       `-ConditionalOperator 0x55914fbed808 <col:54, col:220> 'int'
    |         |-BinaryOperator 0x55914fbed5a8 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x55914fbed4c8 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x55914fbed3f0 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x55914fbed3d8 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x55914fbed3b8 <col:55> '_Bool' lvalue Var 0x55914fbe4690 'y$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x55914fbed4a8 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x55914fbed440 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x55914fbed428 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x55914fbed408 <col:74> '_Bool' lvalue Var 0x55914fbe4068 'y$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x55914fbed490 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x55914fbed478 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x55914fbed458 <col:93> '_Bool' lvalue Var 0x55914fbe4788 'y$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x55914fbed588 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x55914fbed520 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x55914fbed508 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x55914fbed4e8 <col:112> '_Bool' lvalue Var 0x55914fbe4068 'y$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x55914fbed570 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x55914fbed558 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x55914fbed538 <col:131> '_Bool' lvalue Var 0x55914fbe42c0 'y$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x55914fbed7f0 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x55914fbed7d8 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x55914fbed5c8 <col:148> '_Bool' lvalue Var 0x55914fbe42c0 'y$r_buff1_thd0' '_Bool'
    |         `-ParenExpr 0x55914fbed7b8 <col:165, col:220> 'int'
    |           `-ConditionalOperator 0x55914fbed788 <col:166, col:219> 'int'
    |             |-BinaryOperator 0x55914fbed688 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x55914fbed640 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x55914fbed628 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x55914fbed5e8 <col:166> '_Bool' lvalue Var 0x55914fbe4690 'y$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x55914fbed670 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x55914fbed658 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x55914fbed608 <col:184> '_Bool' lvalue Var 0x55914fbe4068 'y$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x55914fbed758 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x55914fbed6d8 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x55914fbed6a8 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x55914fbed770 <col:212, col:219> 'int' <IntegralCast>
    |               `-CStyleCastExpr 0x55914fbed730 <col:212, col:219> '_Bool' <IntegralToBoolean>
    |                 `-IntegerLiteral 0x55914fbed700 <col:219> 'int' 0
    |-BinaryOperator 0x55914fbedc68 <line:840:3, col:123> '_Bool' '='
    | |-DeclRefExpr 0x55914fbed920 <col:3> '_Bool' lvalue Var 0x55914fbe3c78 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x55914fbedc50 <col:21, col:123> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x55914fbedc38 <col:21, col:123> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x55914fbedc18 <col:22, col:123> 'int'
    |       `-BinaryOperator 0x55914fbedbf8 <col:23, col:122> 'int' '&&'
    |         |-BinaryOperator 0x55914fbedb60 <col:23, col:94> 'int' '&&'
    |         | |-BinaryOperator 0x55914fbedac8 <col:23, col:66> 'int' '&&'
    |         | | |-BinaryOperator 0x55914fbeda30 <col:23, col:38> 'int' '&&'
    |         | | | |-BinaryOperator 0x55914fbed998 <col:23, col:28> 'int' '=='
    |         | | | | |-ImplicitCastExpr 0x55914fbed980 <col:23> 'int' <LValueToRValue>
    |         | | | | | `-DeclRefExpr 0x55914fbed940 <col:23> 'int' lvalue Var 0x55914fbe3e98 'y' 'int'
    |         | | | | `-IntegerLiteral 0x55914fbed960 <col:28> 'int' 2
    |         | | | `-BinaryOperator 0x55914fbeda10 <col:33, col:38> 'int' '=='
    |         | | |   |-ImplicitCastExpr 0x55914fbed9f8 <col:33> 'int' <LValueToRValue>
    |         | | |   | `-DeclRefExpr 0x55914fbed9b8 <col:33> 'int' lvalue Var 0x55914fbe4888 'z' 'int'
    |         | | |   `-IntegerLiteral 0x55914fbed9d8 <col:38> 'int' 2
    |         | | `-BinaryOperator 0x55914fbedaa8 <col:43, col:66> 'int' '=='
    |         | |   |-ImplicitCastExpr 0x55914fbeda90 <col:43> 'int' <LValueToRValue>
    |         | |   | `-DeclRefExpr 0x55914fbeda50 <col:43> 'int' lvalue Var 0x55914fbe3808 '__unbuffered_p0_EAX' 'int'
    |         | |   `-IntegerLiteral 0x55914fbeda70 <col:66> 'int' 0
    |         | `-BinaryOperator 0x55914fbedb40 <col:71, col:94> 'int' '=='
    |         |   |-ImplicitCastExpr 0x55914fbedb28 <col:71> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x55914fbedae8 <col:71> 'int' lvalue Var 0x55914fbe3928 '__unbuffered_p3_EAX' 'int'
    |         |   `-IntegerLiteral 0x55914fbedb08 <col:94> 'int' 2
    |         `-BinaryOperator 0x55914fbedbd8 <col:99, col:122> 'int' '=='
    |           |-ImplicitCastExpr 0x55914fbedbc0 <col:99> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x55914fbedb80 <col:99> 'int' lvalue Var 0x55914fbe3a48 '__unbuffered_p3_EBX' 'int'
    |           `-IntegerLiteral 0x55914fbedba0 <col:122> 'int' 0
    |-BinaryOperator 0x55914fbedd98 <line:841:3, col:37> 'int' '='
    | |-DeclRefExpr 0x55914fbedc88 <col:3> 'int' lvalue Var 0x55914fbe3e98 'y' 'int'
    | `-ConditionalOperator 0x55914fbedd68 <col:7, col:37> 'int'
    |   |-ImplicitCastExpr 0x55914fbedd20 <col:7> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x55914fbedd08 <col:7> '_Bool' <LValueToRValue>
    |   |   `-DeclRefExpr 0x55914fbedca8 <col:7> '_Bool' lvalue Var 0x55914fbe3f70 'y$flush_delayed' '_Bool'
    |   |-ImplicitCastExpr 0x55914fbedd38 <col:25> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x55914fbedcc8 <col:25> 'int' lvalue Var 0x55914fbe3ff0 'y$mem_tmp' 'int'
    |   `-ImplicitCastExpr 0x55914fbedd50 <col:37> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x55914fbedce8 <col:37> 'int' lvalue Var 0x55914fbe3e98 'y' 'int'
    |-BinaryOperator 0x55914fbede30 <line:842:3, col:28> '_Bool' '='
    | |-DeclRefExpr 0x55914fbeddb8 <col:3> '_Bool' lvalue Var 0x55914fbe3f70 'y$flush_delayed' '_Bool'
    | `-CStyleCastExpr 0x55914fbede08 <col:21, col:28> '_Bool' <IntegralToBoolean>
    |   `-IntegerLiteral 0x55914fbeddd8 <col:28> 'int' 0
    |-CallExpr 0x55914fbede88 <line:843:3, col:25> 'void'
    | `-ImplicitCastExpr 0x55914fbede70 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x55914fbede50 <col:3> 'void ()' Function 0x55914fb8a410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x55914fbedf00 <line:844:3, col:36> 'void'
    | |-ImplicitCastExpr 0x55914fbedee8 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55914fbedea8 <col:3> 'void (int)' Function 0x55914fb8a0d8 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x55914fbedf40 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x55914fbedf28 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x55914fbedec8 <col:21> '_Bool' lvalue Var 0x55914fbe3c78 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x55914fbedf78 <line:845:3, col:10>
      `-IntegerLiteral 0x55914fbedf58 <col:10> 'int' 0
