TranslationUnitDecl 0x564583b53f88 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x564583b54848 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x564583b54520 '__int128'
|-TypedefDecl 0x564583b548b8 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x564583b54540 'unsigned __int128'
|-TypedefDecl 0x564583b54bc0 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x564583b54990 'struct __NSConstantString_tag'
|   `-Record 0x564583b54910 '__NSConstantString_tag'
|-TypedefDecl 0x564583b54c68 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x564583b54c20 'char *'
|   `-BuiltinType 0x564583b54020 'char'
|-TypedefDecl 0x564583b93b60 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x564583b54f00 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x564583b54d40 'struct __va_list_tag'
|     `-Record 0x564583b54cc0 '__va_list_tag'
|-FunctionDecl 0x564583b93ca0 <pthread-wmm/mix011_power.oepc_false-unreach-call.i:1:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x564583b93bd0 <col:31> col:34 'int'
|-FunctionDecl 0x564583b93e68 <line:2:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x564583b93f90 <line:3:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x564583b940d8 <line:4:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x564583b94048 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x564583b94308 <col:40, col:99>
|   |-IfStmt 0x564583b942d8 <col:42, col:88>
|   | |-UnaryOperator 0x564583b941b8 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x564583b941a0 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x564583b94180 <col:47> 'int' lvalue ParmVar 0x564583b94048 'expression' 'int'
|   | `-CompoundStmt 0x564583b942c0 <col:59, col:88>
|   |   `-LabelStmt 0x564583b942a8 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x564583b94238 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x564583b94220 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x564583b941d0 <col:68> 'void () __attribute__((noreturn))' Function 0x564583b93f90 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x564583b942f0 <col:89>
|   `-ReturnStmt 0x564583b942f8 <col:91>
|-FunctionDecl 0x564583b94350 <line:5:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x564583b94410 <line:6:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x564583b94790 <line:8:1, line:10:76> line:8:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x564583b944c8 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x564583b94548 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x564583b945c8 <line:9:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x564583b94648 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x564583b94850 <line:10:22>
|-FunctionDecl 0x564583bba8a0 <line:11:1, line:13:76> line:11:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x564583b948c0 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x564583b94940 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x564583b949c0 <line:12:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x564583b94a40 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x564583bba960 <line:13:22>
|-FunctionDecl 0x564583bbac10 <line:14:1, line:15:76> line:14:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x564583bba9d0 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x564583bbaa50 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x564583bbaad0 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x564583bbacc8 <line:15:22>
|-TypedefDecl 0x564583bbad38 <line:17:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x564583b540e0 'unsigned char'
|-TypedefDecl 0x564583bbada8 <line:18:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x564583b54100 'unsigned short'
|-TypedefDecl 0x564583bbae18 <line:19:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x564583b54120 'unsigned int'
|-TypedefDecl 0x564583bbae88 <line:20:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x564583b54140 'unsigned long'
|-TypedefDecl 0x564583bbaef8 <line:21:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x564583b54040 'signed char'
|-TypedefDecl 0x564583bbaf68 <line:22:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x564583b540e0 'unsigned char'
|-TypedefDecl 0x564583bbafd8 <line:23:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x564583b54060 'short'
|-TypedefDecl 0x564583bbb048 <line:24:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x564583b54100 'unsigned short'
|-TypedefDecl 0x564583bbb0b8 <line:25:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x564583b54080 'int'
|-TypedefDecl 0x564583bbb128 <line:26:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x564583b54120 'unsigned int'
|-TypedefDecl 0x564583bbb198 <line:27:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x564583b540a0 'long'
|-TypedefDecl 0x564583bbb208 <line:28:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x564583b54140 'unsigned long'
|-TypedefDecl 0x564583bbb278 <line:29:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x564583b540a0 'long'
|-TypedefDecl 0x564583bbb2e8 <line:30:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x564583b54140 'unsigned long'
|-TypedefDecl 0x564583bbb358 <line:31:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x564583b54140 'unsigned long'
|-TypedefDecl 0x564583bbb3c8 <line:32:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x564583b54120 'unsigned int'
|-TypedefDecl 0x564583bbb438 <line:33:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x564583b54120 'unsigned int'
|-TypedefDecl 0x564583bbb4a8 <line:34:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x564583b54140 'unsigned long'
|-TypedefDecl 0x564583bbb518 <line:35:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x564583b54140 'unsigned long'
|-TypedefDecl 0x564583bbb588 <line:36:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x564583b54120 'unsigned int'
|-TypedefDecl 0x564583bbb5f8 <line:37:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x564583b54140 'unsigned long'
|-TypedefDecl 0x564583bbb668 <line:38:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x564583b540a0 'long'
|-TypedefDecl 0x564583bbb6d8 <line:39:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x564583b540a0 'long'
|-TypedefDecl 0x564583bbb748 <line:40:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x564583b54080 'int'
|-RecordDecl 0x564583bbb7a0 <line:41:9, col:32> col:9 struct definition
| `-FieldDecl 0x564583bbb918 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x564583bbb9d0 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x564583bbb970 'struct __fsid_t' sugar
|   `-RecordType 0x564583bbb820 '__fsid_t'
|     `-Record 0x564583bbb7a0 ''
|-TypedefDecl 0x564583bbba58 <line:42:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x564583b540a0 'long'
|-TypedefDecl 0x564583bbbac8 <line:43:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x564583b54140 'unsigned long'
|-TypedefDecl 0x564583bbbb38 <line:44:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x564583b54140 'unsigned long'
|-TypedefDecl 0x564583bbbba8 <line:45:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x564583b54120 'unsigned int'
|-TypedefDecl 0x564583bbbc18 <line:46:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x564583b540a0 'long'
|-TypedefDecl 0x564583bbbc88 <line:47:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x564583b54120 'unsigned int'
|-TypedefDecl 0x564583bbbcf8 <line:48:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x564583b540a0 'long'
|-TypedefDecl 0x564583bbbd68 <line:49:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x564583b54080 'int'
|-TypedefDecl 0x564583bbbdd8 <line:50:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x564583b54080 'int'
|-TypedefDecl 0x564583bbbe48 <line:51:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x564583b54080 'int'
|-TypedefDecl 0x564583bbbeb8 <line:52:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x564583b547a0 'void *'
|   `-BuiltinType 0x564583b53fe0 'void'
|-TypedefDecl 0x564583bbbf28 <line:53:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x564583b540a0 'long'
|-TypedefDecl 0x564583bbbf98 <line:54:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x564583b540a0 'long'
|-TypedefDecl 0x564583bbc008 <line:55:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x564583b540a0 'long'
|-TypedefDecl 0x564583bbc078 <line:56:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x564583b54140 'unsigned long'
|-TypedefDecl 0x564583bbc0e8 <line:57:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x564583b54140 'unsigned long'
|-TypedefDecl 0x564583bbc158 <line:58:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x564583b54140 'unsigned long'
|-TypedefDecl 0x564583bbc1c8 <line:59:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x564583b54140 'unsigned long'
|-TypedefDecl 0x564583bbc238 <line:60:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x564583b540a0 'long'
|-TypedefDecl 0x564583bbc2a8 <line:61:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x564583b540a0 'long'
|-TypedefDecl 0x564583bbc318 <line:62:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x564583b540a0 'long'
|-TypedefDecl 0x564583bbc388 <line:63:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x564583b54140 'unsigned long'
|-TypedefDecl 0x564583bbc418 <line:64:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x564583bbc3e0 '__off64_t' sugar
|   |-Typedef 0x564583bbb6d8 '__off64_t'
|   `-BuiltinType 0x564583b540a0 'long'
|-TypedefDecl 0x564583bbc510 <line:65:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x564583bbc4d0 '__quad_t *'
|   `-TypedefType 0x564583bbc470 '__quad_t' sugar
|     |-Typedef 0x564583bbb278 '__quad_t'
|     `-BuiltinType 0x564583b540a0 'long'
|-TypedefDecl 0x564583bbc580 <line:66:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x564583b54c20 'char *'
|   `-BuiltinType 0x564583b54020 'char'
|-TypedefDecl 0x564583bbc5f0 <line:67:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x564583b540a0 'long'
|-TypedefDecl 0x564583bbc660 <line:68:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x564583b54120 'unsigned int'
|-FunctionDecl 0x564583bbc7a8 <line:69:1, line:73:1> line:70:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x564583bbc6d0 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x564583bbcae8 <line:71:1, line:73:1>
|   `-ReturnStmt 0x564583bbcad8 <line:72:3, col:34>
|     `-CallExpr 0x564583bbca98 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x564583bbca80 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x564583bbca10 <col:10> '<builtin fn type>' Function 0x564583bbc880 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x564583bbcac0 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x564583bbca30 <col:29> 'unsigned int' lvalue ParmVar 0x564583bbc6d0 '__bsx' 'unsigned int'
|-FunctionDecl 0x564583bbc880 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x564583bbc920 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x564583bbc990 <col:10> Implicit
| `-ConstAttr 0x564583bbc9e8 <col:10> Implicit
|-FunctionDecl 0x564583bbcc40 <line:74:1, line:78:1> line:75:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x564583bbcb38 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x564583bbcf58 <line:76:1, line:78:1>
|   `-ReturnStmt 0x564583bbcf48 <line:77:3, col:34>
|     `-CallExpr 0x564583bbcf08 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x564583bbcef0 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x564583bbce78 <col:10> '<builtin fn type>' Function 0x564583bbcce8 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x564583bbcf30 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x564583bbce98 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x564583bbcb38 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x564583bbcce8 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x564583bbcd88 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x564583bbcdf8 <col:10> Implicit
| `-ConstAttr 0x564583bbce50 <col:10> Implicit
|-TypedefDecl 0x564583bbcf88 <line:79:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x564583b54140 'unsigned long'
|-TypedefDecl 0x564583bbd018 <line:81:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x564583bbcfe0 '__time_t' sugar
|   |-Typedef 0x564583bbbc18 '__time_t'
|   `-BuiltinType 0x564583b540a0 'long'
|-RecordDecl 0x564583bbd070 <line:84:1, line:88:3> line:84:8 struct timespec definition
| |-FieldDecl 0x564583bbd128 <line:86:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x564583bbd1b8 <line:87:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x564583bbd248 <line:89:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x564583bbd210 '__pid_t' sugar
|   |-Typedef 0x564583bbb748 '__pid_t'
|   `-BuiltinType 0x564583b54080 'int'
|-RecordDecl 0x564583bbd2a0 <line:90:1, line:93:3> line:90:8 struct sched_param definition
| `-FieldDecl 0x564583bbd360 <line:92:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x564583bbd3b0 <line:96:1, line:99:3> line:96:8 struct __sched_param definition
| `-FieldDecl 0x564583bbd470 <line:98:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x564583bbd4d8 <line:100:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x564583b54140 'unsigned long'
|-RecordDecl 0x564583bbd530 <line:101:9, line:104:1> line:101:9 struct definition
| `-FieldDecl 0x564583bbd7c0 <line:103:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x564583bbf8b0 <line:101:1, line:104:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x564583bbd810 'struct cpu_set_t' sugar
|   `-RecordType 0x564583bbd5b0 'cpu_set_t'
|     `-Record 0x564583bbd530 ''
|-FunctionDecl 0x564583bbfb88 <line:106:1, line:107:42> line:106:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x564583bbf958 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x564583bbfa60 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x564583bbfc38 <line:107:19>
|-FunctionDecl 0x564583bbfe10 <line:108:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x564583bbfca0 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x564583bbfeb8 <col:69>
|-FunctionDecl 0x564583bc0030 <line:109:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x564583bbff20 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x564583bc00d8 <col:64>
|-FunctionDecl 0x564583bc0398 <line:112:1, line:113:45> line:112:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x564583bc0140 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x564583bc0278 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x564583bc0448 <line:113:22>
|-FunctionDecl 0x564583bc06c8 <line:114:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x564583bc04b0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x564583bc05a8 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x564583bc0778 <col:88>
|-FunctionDecl 0x564583bc0a98 <line:115:1, line:116:85> line:115:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x564583bc07e0 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x564583bc08c0 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x564583bc0950 <line:116:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x564583bc0b50 <col:62>
|-FunctionDecl 0x564583bc0cc8 <line:117:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x564583bc0bb8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x564583bc0d70 <col:63>
|-FunctionDecl 0x564583bc0e98 <line:118:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x564583bc0f38 <col:47>
|-FunctionDecl 0x564583bc1040 <line:119:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x564583bc0fa8 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x564583bc10e8 <col:69>
|-FunctionDecl 0x564583bc11f0 <line:120:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x564583bc1158 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x564583bc1298 <col:69>
|-FunctionDecl 0x564583bc1558 <line:121:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x564583bc1300 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x564583bc1438 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x564583bc1608 <col:88>
|-TypedefDecl 0x564583bc1698 <line:125:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x564583bc1660 '__clock_t' sugar
|   |-Typedef 0x564583bbba58 '__clock_t'
|   `-BuiltinType 0x564583b540a0 'long'
|-TypedefDecl 0x564583bc1728 <line:128:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x564583bc16f0 '__clockid_t' sugar
|   |-Typedef 0x564583bbbe48 '__clockid_t'
|   `-BuiltinType 0x564583b54080 'int'
|-TypedefDecl 0x564583bc17b8 <line:129:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x564583bc1780 '__timer_t' sugar
|   |-Typedef 0x564583bbbeb8 '__timer_t'
|   `-PointerType 0x564583b547a0 'void *'
|     `-BuiltinType 0x564583b53fe0 'void'
|-RecordDecl 0x564583bc1810 <line:131:1, line:144:1> line:131:8 struct tm definition
| |-FieldDecl 0x564583bc18e8 <line:133:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x564583bc1950 <line:134:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x564583bc19b8 <line:135:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x564583bc1a20 <line:136:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x564583bc1a88 <line:137:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x564583bc1af0 <line:138:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x564583bc1b58 <line:139:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x564583bc1bc0 <line:140:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x564583bc1c28 <line:141:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x564583bc1c90 <line:142:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x564583bc1cf8 <line:143:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x564583bc1d48 <line:147:1, line:151:3> line:147:8 struct itimerspec definition
| |-FieldDecl 0x564583bc1e18 <line:149:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x564583bc1e88 <line:150:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x564583bc1f30 <line:152:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x564583bc2100 <line:154:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x564583bc21a0 <col:45>
|-FunctionDecl 0x564583bc2380 <line:155:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x564583bc2270 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x564583bc2428 <col:54>
|-FunctionDecl 0x564583bc2628 <line:156:1, line:157:73> line:156:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x564583bc2490 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x564583bc2508 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x564583bc26d8 <line:157:22>
| `-ConstAttr 0x564583bc2730 <col:63>
|-FunctionDecl 0x564583bc3560 <line:158:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x564583bc2828 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x564583bc3608 <col:56>
|-FunctionDecl 0x564583bc39b0 <line:159:1, line:161:77> line:159:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x564583bc3678 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x564583bc36f0 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x564583bc3770 <line:160:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x564583bc3868 <line:161:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x564583bc3a70 <col:54>
|-RecordDecl 0x564583bc3ac8 <line:163:9, line:170:1> line:163:16 struct __locale_struct definition
| |-RecordDecl 0x564583bc3b78 parent 0x564583b53f88 <line:165:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x564583bc3dd8 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x564583bc3e78 <line:166:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x564583bc3ee0 <line:167:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x564583bc3f48 <line:168:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x564583bc4038 <line:169:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x564583bc4158 <line:163:1, line:170:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x564583bc4100 'struct __locale_struct *'
|   `-ElaboratedType 0x564583bc4090 'struct __locale_struct' sugar
|     `-RecordType 0x564583bc3b50 'struct __locale_struct'
|       `-Record 0x564583bc3ac8 '__locale_struct'
|-TypedefDecl 0x564583bc4208 <line:171:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x564583bc41d0 '__locale_t' sugar
|   |-Typedef 0x564583bc4158 '__locale_t'
|   `-PointerType 0x564583bc4100 'struct __locale_struct *'
|     `-ElaboratedType 0x564583bc4090 'struct __locale_struct' sugar
|       `-RecordType 0x564583bc3b50 'struct __locale_struct'
|         `-Record 0x564583bc3ac8 '__locale_struct'
|-FunctionDecl 0x564583bc4610 <line:172:1, line:175:63> line:172:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x564583bc4278 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x564583bc42f0 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x564583bc4370 <line:173:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x564583bc4400 <line:174:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x564583bc4478 <line:175:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x564583bc46d8 <col:40>
|-FunctionDecl 0x564583bc48c8 <line:177:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x564583bc47a0 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x564583bc4970 <col:66>
|-FunctionDecl 0x564583bc4a80 <line:178:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x564583bc49d8 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x564583bc4b28 <col:69>
|-FunctionDecl 0x564583bc4d58 <line:180:1, line:181:75> line:180:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x564583bc4b90 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x564583bc4c20 <line:181:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x564583bc4e08 <col:52>
|-FunctionDecl 0x564583bc4fb0 <line:182:1, line:183:78> line:182:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x564583bc4e70 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x564583bc4f00 <line:183:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x564583bc5060 <col:55>
|-FunctionDecl 0x564583bc51f8 <line:185:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x564583bc50e0 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x564583bc52a0 <col:62>
|-FunctionDecl 0x564583bc5418 <line:186:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x564583bc5308 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x564583bc54c0 <col:60>
|-FunctionDecl 0x564583bc5718 <line:188:1, line:189:67> line:188:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x564583bc5578 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x564583bc55f8 <line:189:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x564583bc57c8 <col:44>
|-FunctionDecl 0x564583bc59d8 <line:190:1, line:191:72> line:190:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x564583bc5830 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x564583bc58b0 <line:191:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x564583bc5a88 <col:49>
|-VarDecl 0x564583bc5b88 <line:192:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x564583bc5c08 <line:193:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x564583bc5c88 <line:194:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x564583bc5d50 <line:195:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x564583bc5e80 <line:196:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x564583bc5f20 <col:42>
|-VarDecl 0x564583bc5f90 <line:197:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x564583bc6010 <line:198:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x564583bc6198 <line:199:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x564583bc6088 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x564583bc6240 <col:57>
|-FunctionDecl 0x564583bc6350 <line:200:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x564583bc62c0 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x564583bc63f8 <col:56>
|-FunctionDecl 0x564583bc7540 <line:201:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x564583bc6478 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x564583bc75e8 <col:59>
|-FunctionDecl 0x564583bc76f0 <line:202:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x564583bc7658 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x564583bc7798 <col:48>
| `-ConstAttr 0x564583bc77f0 <col:89>
|-FunctionDecl 0x564583bc7a58 <line:203:1, line:204:37> line:203:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x564583bc78a8 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x564583bc7938 <line:204:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x564583bc7cb8 <line:205:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x564583bc7b48 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x564583bc7bd8 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x564583bc7d68 <col:88>
|-FunctionDecl 0x564583bc7f00 <line:206:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x564583bc7dd0 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x564583bc7e60 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x564583bc7fb0 <col:88>
|-FunctionDecl 0x564583bc81c8 <line:207:1, line:208:45> line:207:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x564583bc8018 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x564583bc80a8 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x564583bc8278 <line:208:22>
|-FunctionDecl 0x564583bc85e8 <line:209:1, line:211:30> line:209:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x564583bc82e0 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x564583bc8360 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x564583bc83f0 <line:210:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x564583bc8480 <line:211:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x564583bc88e8 <line:212:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x564583bc86e8 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x564583bc87c0 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x564583bc8998 <col:85>
|-FunctionDecl 0x564583bc8d88 <line:213:1, line:215:75> line:213:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x564583bc8a00 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x564583bc8b38 <line:214:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x564583bc8c40 <line:215:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x564583bc8e40 <col:52>
|-FunctionDecl 0x564583bc8fb8 <line:216:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x564583bc8ea8 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x564583bc9060 <col:61>
|-FunctionDecl 0x564583bc9560 <line:217:1, line:219:85> line:217:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x564583bc90c8 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x564583bc9148 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x564583bc9278 <line:218:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x564583bc9368 <line:219:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x564583bc9620 <col:62>
|-FunctionDecl 0x564583bc9838 <line:220:1, line:221:45> line:220:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x564583bc9688 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x564583bc9718 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x564583bc98e8 <line:221:22>
|-FunctionDecl 0x564583bc99e8 <line:222:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x564583bc9950 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x564583bc9a90 <col:65>
|-TypedefDecl 0x564583bc9b00 <line:224:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x564583b54140 'unsigned long'
|-RecordDecl 0x564583bc9b58 <line:225:1, line:229:1> line:225:7 union pthread_attr_t definition
| |-FieldDecl 0x564583bc9ca0 <line:227:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x564583bc9d08 <line:228:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x564583bc9db8 <line:230:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x564583bc9d60 'union pthread_attr_t' sugar
|   `-RecordType 0x564583bc9be0 'union pthread_attr_t'
|     `-Record 0x564583bc9b58 'pthread_attr_t'
|-RecordDecl 0x564583bc9e10 <line:231:9, line:235:1> line:231:16 struct __pthread_internal_list definition
| |-FieldDecl 0x564583bc9f88 <line:233:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x564583bca000 <line:234:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x564583bca0b0 <line:231:1, line:235:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x564583bca050 'struct __pthread_internal_list' sugar
|   `-RecordType 0x564583bc9e90 'struct __pthread_internal_list'
|     `-Record 0x564583bc9e10 '__pthread_internal_list'
|-RecordDecl 0x564583bca120 <line:236:9, line:250:1> line:236:9 union definition
| |-RecordDecl 0x564583bca1c8 parent 0x564583b53f88 <line:238:3, line:247:3> line:238:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x564583bca2a0 <line:240:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x564583bca308 <line:241:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x564583bca370 <line:242:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x564583bca3d8 <line:243:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x564583bca440 <line:244:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x564583bca4a8 <line:245:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x564583bce580 <line:246:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x564583bce630 <line:238:3, line:247:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x564583bce720 <line:248:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x564583bce788 <line:249:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x564583bce910 <line:236:1, line:250:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x564583bce8b0 'union pthread_mutex_t' sugar
|   `-RecordType 0x564583bca1a0 'pthread_mutex_t'
|     `-Record 0x564583bca120 ''
|-RecordDecl 0x564583bce980 <line:251:9, line:255:1> line:251:9 union definition
| |-FieldDecl 0x564583bceac0 <line:253:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x564583bceb28 <line:254:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x564583bcebe0 <line:251:1, line:255:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x564583bceb80 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x564583bcea00 'pthread_mutexattr_t'
|     `-Record 0x564583bce980 ''
|-RecordDecl 0x564583bcec50 <line:256:9, line:271:1> line:256:9 union definition
| |-RecordDecl 0x564583bcecf8 <line:258:3, line:268:3> line:258:3 struct definition
| | |-FieldDecl 0x564583bcedc0 <line:260:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x564583bcee28 <line:261:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x564583bcee90 <line:262:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x564583bceef8 <line:263:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x564583bcef60 <line:264:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x564583bcefc8 <line:265:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x564583bcf030 <line:266:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x564583bcf098 <line:267:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x564583bcf150 <line:258:3, line:268:5> col:5 __data 'struct (anonymous struct at pthread-wmm/mix011_power.oepc_false-unreach-call.i:258:3)':'struct pthread_cond_t::(anonymous at pthread-wmm/mix011_power.oepc_false-unreach-call.i:258:3)'
| |-FieldDecl 0x564583bcf240 <line:269:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x564583bcf2a8 <line:270:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x564583bcf3e0 <line:256:1, line:271:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x564583bcf380 'union pthread_cond_t' sugar
|   `-RecordType 0x564583bcecd0 'pthread_cond_t'
|     `-Record 0x564583bcec50 ''
|-RecordDecl 0x564583bcf450 <line:272:9, line:276:1> line:272:9 union definition
| |-FieldDecl 0x564583bcf590 <line:274:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x564583bcf5f8 <line:275:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x564583bcf6b0 <line:272:1, line:276:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x564583bcf650 'union pthread_condattr_t' sugar
|   `-RecordType 0x564583bcf4d0 'pthread_condattr_t'
|     `-Record 0x564583bcf450 ''
|-TypedefDecl 0x564583bcf738 <line:277:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x564583b54120 'unsigned int'
|-TypedefDecl 0x564583bcf7a8 <line:278:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x564583b54080 'int'
|-RecordDecl 0x564583bcf800 <line:279:9, line:297:1> line:279:9 union definition
| |-RecordDecl 0x564583bcf8a8 <line:281:3, line:294:3> line:281:3 struct definition
| | |-FieldDecl 0x564583bcf970 <line:283:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x564583bcf9d8 <line:284:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x564583bcfa40 <line:285:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x564583bcfaa8 <line:286:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x564583bcfb10 <line:287:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x564583bcfb78 <line:288:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x564583bcfbe0 <line:289:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x564583bcfc48 <line:290:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x564583bcfcb0 <line:291:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x564583bcfd18 <line:292:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x564583bcfd80 <line:293:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x564583bcfe30 <line:281:3, line:294:5> col:5 __data 'struct (anonymous struct at pthread-wmm/mix011_power.oepc_false-unreach-call.i:281:3)':'struct pthread_rwlock_t::(anonymous at pthread-wmm/mix011_power.oepc_false-unreach-call.i:281:3)'
| |-FieldDecl 0x564583bcfed8 <line:295:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x564583bcff40 <line:296:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x564583bd0090 <line:279:1, line:297:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x564583bd0030 'union pthread_rwlock_t' sugar
|   `-RecordType 0x564583bcf880 'pthread_rwlock_t'
|     `-Record 0x564583bcf800 ''
|-RecordDecl 0x564583bd0100 <line:298:9, line:302:1> line:298:9 union definition
| |-FieldDecl 0x564583bd0240 <line:300:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x564583bd02a8 <line:301:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x564583bd0360 <line:298:1, line:302:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x564583bd0300 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x564583bd0180 'pthread_rwlockattr_t'
|     `-Record 0x564583bd0100 ''
|-TypedefDecl 0x564583bd03e8 <line:303:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x564583b54084 'volatile int' volatile
|   `-BuiltinType 0x564583b54080 'int'
|-RecordDecl 0x564583bd0440 <line:304:9, line:308:1> line:304:9 union definition
| |-FieldDecl 0x564583bd25b0 <line:306:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x564583bd2618 <line:307:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x564583bd26d0 <line:304:1, line:308:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x564583bd2670 'union pthread_barrier_t' sugar
|   `-RecordType 0x564583bd04c0 'pthread_barrier_t'
|     `-Record 0x564583bd0440 ''
|-RecordDecl 0x564583bd2740 <line:309:9, line:313:1> line:309:9 union definition
| |-FieldDecl 0x564583bd2840 <line:311:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x564583bd28a8 <line:312:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x564583bd2960 <line:309:1, line:313:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x564583bd2900 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x564583bd27c0 'pthread_barrierattr_t'
|     `-Record 0x564583bd2740 ''
|-TypedefDecl 0x564583bd2a78 <line:314:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x564583bd2a10 'long [8]' 8 
|   `-BuiltinType 0x564583b540a0 'long'
|-EnumDecl 0x564583bd2ad0 <line:315:1, line:319:1> line:315:1
| |-EnumConstantDecl 0x564583bd2b98 <line:317:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x564583bd2be8 <line:318:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x564583bd2c38 <line:320:1, line:331:1> line:320:1
| |-EnumConstantDecl 0x564583bd2d08 <line:322:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x564583bd2d58 <line:323:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x564583bd2da8 <line:324:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x564583bd2df8 <line:325:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x564583bd2e80 <line:327:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x564583bd2e68 <col:26> 'int'
| |   `-DeclRefExpr 0x564583bd2e48 <col:26> 'int' EnumConstant 0x564583bd2d08 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x564583bd2f08 <line:328:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x564583bd2ef0 <col:29> 'int'
| |   `-DeclRefExpr 0x564583bd2ed0 <col:29> 'int' EnumConstant 0x564583bd2d58 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x564583bd2f90 <line:329:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x564583bd2f78 <col:30> 'int'
| |   `-DeclRefExpr 0x564583bd2f58 <col:30> 'int' EnumConstant 0x564583bd2da8 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x564583bd3018 <line:330:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x564583bd3000 <col:27> 'int'
|     `-DeclRefExpr 0x564583bd2fe0 <col:27> 'int' EnumConstant 0x564583bd2e80 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x564583bd3068 <line:332:1, line:338:1> line:332:1
| |-EnumConstantDecl 0x564583bd3138 <line:334:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x564583bd31c0 <line:335:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x564583bd31a8 <col:30> 'int'
| |   `-DeclRefExpr 0x564583bd3188 <col:30> 'int' EnumConstant 0x564583bd3138 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x564583bd3210 <line:336:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x564583bd3298 <line:337:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x564583bd3280 <col:29> 'int'
|     `-DeclRefExpr 0x564583bd3260 <col:29> 'int' EnumConstant 0x564583bd3210 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x564583bd32e8 <line:339:1, line:344:1> line:339:1
| |-EnumConstantDecl 0x564583bd33b8 <line:341:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x564583bd3408 <line:342:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x564583bd3458 <line:343:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x564583bd34a8 <line:345:1, line:351:1> line:345:1
| |-EnumConstantDecl 0x564583bd35c0 <line:347:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x564583bd3610 <line:348:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x564583bd3660 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x564583bd36e8 <line:350:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x564583bd36d0 <col:31> 'int'
|     `-DeclRefExpr 0x564583bd36b0 <col:31> 'int' EnumConstant 0x564583bd35c0 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x564583bd3738 <line:352:1, line:356:1> line:352:1
| |-EnumConstantDecl 0x564583bd3808 <line:354:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x564583bd3858 <line:355:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x564583bd38a8 <line:357:1, line:361:1> line:357:1
| |-EnumConstantDecl 0x564583bd3978 <line:359:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x564583bd39c8 <line:360:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x564583bd3a18 <line:362:1, line:366:1> line:362:1
| |-EnumConstantDecl 0x564583bd3ae8 <line:364:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x564583bd3b38 <line:365:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x564583bd3b88 <line:367:1, line:373:1> line:367:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x564583bd3dc8 <line:369:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x564583bd3e30 <line:370:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x564583bd3e98 <line:371:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x564583bd3fb8 <line:372:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x564583bd4008 <line:374:1, line:378:1> line:374:1
| |-EnumConstantDecl 0x564583bd40d8 <line:376:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x564583bd4128 <line:377:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x564583bd4178 <line:379:1, line:383:1> line:379:1
| |-EnumConstantDecl 0x564583bd4248 <line:381:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x564583bd4298 <line:382:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x564583bd48f8 <line:385:1, line:388:96> line:385:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x564583bd4390 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x564583bd44a0 <line:386:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x564583bd46e0 <line:387:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x564583bd4760 <line:388:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x564583bd49b8 <col:47>
| |-NonNullAttr 0x564583bd4a10 <col:77, col:94> 1 3
| `-CallbackAttr 0x564583bd4a48 <line:385:12> Implicit 2 3
|-FunctionDecl 0x564583bd4b70 <line:389:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x564583bd4aa0 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x564583bd4dc8 <line:390:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x564583bd4c28 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x564583bd4ca8 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x564583bd4f98 <line:391:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x564583bd4e88 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x564583bd5040 <col:60>
|-FunctionDecl 0x564583bd5190 <line:392:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x564583bd5230 <col:54>
| `-ConstAttr 0x564583bd5288 <col:95>
|-FunctionDecl 0x564583bd5458 <line:393:1, line:394:70> line:393:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x564583bd52c0 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x564583bd5338 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x564583bd5508 <line:394:19>
| `-ConstAttr 0x564583bd5560 <col:60>
|-FunctionDecl 0x564583bd5f68 <line:395:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x564583bd5e30 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x564583bd6010 <col:71>
| `-NonNullAttr 0x564583bd6068 <col:112, col:126> 1
|-FunctionDecl 0x564583bd6170 <line:396:1, line:397:79> line:396:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x564583bd60b8 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x564583bd6218 <line:397:22>
| `-NonNullAttr 0x564583bd6270 <col:63, col:77> 1
|-FunctionDecl 0x564583bd6498 <line:398:1, line:400:82> line:398:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x564583bd62b8 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x564583bd6338 <line:399:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x564583bd6548 <line:400:22>
| `-NonNullAttr 0x564583bd65a0 <col:63, col:80> 1 2
|-FunctionDecl 0x564583bd67a8 <line:401:1, line:403:79> line:401:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x564583bd65e8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x564583bd6668 <line:402:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x564583bd6858 <line:403:22>
| `-NonNullAttr 0x564583bd68b0 <col:63, col:77> 1
|-FunctionDecl 0x564583bd6b08 <line:404:1, line:406:82> line:404:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x564583bd68f8 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x564583bd69a0 <line:405:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x564583bd6bb8 <line:406:22>
| `-NonNullAttr 0x564583bd6c10 <col:63, col:80> 1 2
|-FunctionDecl 0x564583bd7e48 <line:407:1, line:409:79> line:407:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x564583bd6c58 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x564583bd6cd0 <line:408:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x564583bd7ef8 <line:409:22>
| `-NonNullAttr 0x564583bd7f50 <col:63, col:77> 1
|-FunctionDecl 0x564583bd8188 <line:410:1, line:412:82> line:410:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x564583bd7f98 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x564583bd8028 <line:411:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x564583bd8238 <line:412:22>
| `-NonNullAttr 0x564583bd8290 <col:63, col:80> 1 2
|-FunctionDecl 0x564583bd84c8 <line:413:1, line:415:97> line:413:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x564583bd82d8 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x564583bd8368 <line:414:12, line:415:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x564583bd8578 <col:37>
| `-NonNullAttr 0x564583bd85d0 <col:78, col:95> 1 2
|-FunctionDecl 0x564583bd87b8 <line:416:1, line:418:82> line:416:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x564583bd8618 <col:41, line:417:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x564583bd8698 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x564583bd8868 <line:418:22>
| `-NonNullAttr 0x564583bd88c0 <col:63, col:80> 1 2
|-FunctionDecl 0x564583bd8a48 <line:419:1, line:420:79> line:419:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x564583bd8908 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x564583bd8988 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x564583bd8af8 <line:420:22>
| `-NonNullAttr 0x564583bd8b50 <col:63, col:77> 1
|-FunctionDecl 0x564583bd8cf8 <line:421:1, line:423:82> line:421:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x564583bd8b98 <col:42, line:422:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x564583bd8c18 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x564583bd8da8 <line:423:22>
| `-NonNullAttr 0x564583bd9e30 <col:63, col:80> 1 2
|-FunctionDecl 0x564583bd9fb8 <line:424:1, line:426:79> line:424:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x564583bd9e78 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x564583bd9ef8 <line:425:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x564583bda068 <line:426:22>
| `-NonNullAttr 0x564583bda0c0 <col:63, col:77> 1
|-FunctionDecl 0x564583bda268 <line:427:1, line:429:82> line:427:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x564583bda108 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x564583bda188 <line:428:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x564583bda318 <line:429:22>
| `-NonNullAttr 0x564583bda370 <col:63, col:80> 1 2
|-FunctionDecl 0x564583bda4f8 <line:430:1, line:431:79> line:430:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x564583bda3b8 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x564583bda438 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x564583bda5a8 <line:431:22>
| `-NonNullAttr 0x564583bda600 <col:63, col:77> 1
|-FunctionDecl 0x564583bda828 <line:432:1, line:434:115> line:432:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x564583bda648 <col:39, line:433:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x564583bda6c8 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x564583bda8d8 <line:434:22>
| |-NonNullAttr 0x564583bda930 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x564583bda968 <col:100> "" ""
|-FunctionDecl 0x564583bdab78 <line:435:1, line:437:112> line:435:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x564583bda9b8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x564583bdaa38 <line:436:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x564583bdac28 <line:437:22>
| |-NonNullAttr 0x564583bdac80 <col:63, col:77> 1
| `-DeprecatedAttr 0x564583bdacb8 <col:97> "" ""
|-FunctionDecl 0x564583bdaeb8 <line:438:1, line:440:82> line:438:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x564583bdad08 <col:39, line:439:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x564583bdad80 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x564583bdaf68 <line:440:22>
| `-NonNullAttr 0x564583bdafc0 <col:63, col:80> 1 2
|-FunctionDecl 0x564583bdb140 <line:441:1, line:443:79> line:441:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x564583bdb008 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x564583bdb080 <line:442:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x564583bdb1f0 <line:443:22>
| `-NonNullAttr 0x564583bdb248 <col:63, col:77> 1
|-FunctionDecl 0x564583bdb538 <line:444:1, line:447:85> line:444:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x564583bdb298 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x564583bdb318 <line:445:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x564583bdb390 <line:446:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x564583bdb5f0 <line:447:22>
| `-NonNullAttr 0x564583bdb648 <col:63, col:83> 1 2 3
|-FunctionDecl 0x564583bdb8f8 <line:448:1, line:449:100> line:448:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x564583bdb6a0 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x564583bdb720 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x564583bdb798 <line:449:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x564583bdb9b0 <col:43>
| `-NonNullAttr 0x564583bdba08 <col:84, col:98> 1
|-FunctionDecl 0x564583bdbcc8 <line:450:1, line:452:79> line:450:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x564583bdba58 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x564583bdbad8 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x564583bdbb68 <line:451:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x564583bdbd80 <line:452:22>
| `-NonNullAttr 0x564583bdbdd8 <col:63, col:77> 3
|-FunctionDecl 0x564583bdc0e8 <line:453:1, line:456:82> line:453:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x564583bdbe50 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x564583bdbed0 <line:454:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x564583bdbf60 <line:455:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x564583bdc1a0 <line:456:22>
| `-NonNullAttr 0x564583bdc1f8 <col:63, col:80> 2 3
|-FunctionDecl 0x564583bdc3e8 <line:457:1, line:458:45> line:457:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x564583bdc248 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x564583bdc2c8 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x564583bdc498 <line:458:22>
|-FunctionDecl 0x564583bdc868 <line:459:1, line:460:71> line:459:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x564583bdc560 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x564583bdc700 <line:460:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x564583bdc918 <col:52, col:69> 1 2
|-FunctionDecl 0x564583bdcac0 <line:461:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x564583bdc9a0 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x564583bdca20 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x564583bdcca8 <line:462:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x564583bdcb88 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x564583bdcc08 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x564583bdce60 <line:463:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x564583bdcd68 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x564583bdcfa0 <line:464:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x564583bdd040 <line:465:9, line:473:1> line:465:9 struct definition
| |-RecordDecl 0x564583bdd0e8 <line:467:3, line:471:3> line:467:3 struct definition
| | |-FieldDecl 0x564583bdd1d8 <line:469:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x564583bdd240 <line:470:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x564583bdd410 <line:467:3, line:471:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at pthread-wmm/mix011_power.oepc_false-unreach-call.i:467:3) [1]'
| `-FieldDecl 0x564583bdd508 <line:472:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x564583bdd5c0 <line:465:1, line:473:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x564583bdd560 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x564583bdd0c0 '__pthread_unwind_buf_t'
| |   `-Record 0x564583bdd040 ''
| `-AlignedAttr 0x564583bdd618 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x564583bdd690 <line:474:1, line:480:1> line:474:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x564583bdd7f0 <line:476:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x564583bdd858 <line:477:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x564583bdd8c0 <line:478:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x564583bdd928 <line:479:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x564583bddb30 <line:481:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x564583bdda20 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x564583bddc78 <line:483:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x564583bddbe8 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x564583bdde70 <line:485:1, line:487:31> line:485:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x564583bddd30 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x564583bddf18 <line:487:22>
|-RecordDecl 0x564583bddf70 <line:489:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x564583bde288 <line:490:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x564583bde0e8 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x564583bde168 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x564583bde338 <col:86>
| `-ReturnsTwiceAttr 0x564583bde390 <col:12> Implicit
|-FunctionDecl 0x564583bde6b8 <line:491:1, line:493:79> line:491:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x564583bde460 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x564583bde570 <line:492:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x564583bde768 <line:493:22>
| `-NonNullAttr 0x564583bde7c0 <col:63, col:77> 1
|-FunctionDecl 0x564583bde938 <line:494:1, line:495:79> line:494:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x564583bde808 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x564583bde9e0 <line:495:22>
| `-NonNullAttr 0x564583bdea38 <col:63, col:77> 1
|-FunctionDecl 0x564583bdeb40 <line:496:1, line:497:68> line:496:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x564583bdea88 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x564583bdebe8 <line:497:22>
| `-NonNullAttr 0x564583bdec40 <col:52, col:66> 1
|-FunctionDecl 0x564583bded40 <line:498:1, line:499:68> line:498:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x564583bdec88 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x564583bdede8 <line:499:22>
| `-NonNullAttr 0x564583bdee40 <col:52, col:66> 1
|-FunctionDecl 0x564583bdf088 <line:500:1, line:502:85> line:500:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x564583bdee98 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x564583bdef28 <line:501:9, line:502:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x564583bdf138 <col:36>
| `-NonNullAttr 0x564583bdf190 <col:66, col:83> 1 2
|-FunctionDecl 0x564583bdf290 <line:503:1, line:504:68> line:503:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x564583bdf1d8 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x564583bdf338 <line:504:22>
| `-NonNullAttr 0x564583bdf390 <col:52, col:66> 1
|-FunctionDecl 0x564583bdf628 <line:505:1, line:508:82> line:505:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x564583bdf440 <col:42, line:506:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x564583bdf4c0 <line:507:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x564583bdf6d8 <line:508:22>
| `-NonNullAttr 0x564583bdf730 <col:63, col:80> 1 2
|-FunctionDecl 0x564583bdf9f8 <line:509:1, line:512:82> line:509:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x564583bdf778 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x564583bdf7f8 <line:510:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x564583bdf878 <line:511:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x564583bdfab0 <line:512:22>
| `-NonNullAttr 0x564583bdfb08 <col:63, col:80> 1 3
|-FunctionDecl 0x564583bdfc10 <line:513:1, line:514:79> line:513:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x564583bdfb58 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x564583bdfcb8 <line:514:22>
| `-NonNullAttr 0x564583bdfd10 <col:63, col:77> 1
|-FunctionDecl 0x564583bdff38 <line:515:1, line:516:79> line:515:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x564583bdfdc0 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x564583bdffe0 <line:516:22>
| `-NonNullAttr 0x564583be0038 <col:63, col:77> 1
|-FunctionDecl 0x564583be0140 <line:517:1, line:518:79> line:517:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x564583be0088 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x564583be01e8 <line:518:22>
| `-NonNullAttr 0x564583be0240 <col:63, col:77> 1
|-FunctionDecl 0x564583be0468 <line:519:1, line:522:82> line:519:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x564583be0288 <col:42, line:520:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x564583be0308 <line:521:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x564583be0518 <line:522:22>
| `-NonNullAttr 0x564583be0570 <col:63, col:80> 1 2
|-FunctionDecl 0x564583be0778 <line:523:1, line:525:79> line:523:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x564583be05b8 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x564583be0638 <line:524:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x564583be0828 <line:525:22>
| `-NonNullAttr 0x564583be0880 <col:63, col:77> 1
|-FunctionDecl 0x564583be0a28 <line:526:1, line:528:82> line:526:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x564583be08c8 <col:39, line:527:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x564583be0948 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x564583be0ad8 <line:528:22>
| `-NonNullAttr 0x564583be0b30 <col:63, col:80> 1 2
|-FunctionDecl 0x564583be0cb8 <line:529:1, line:530:79> line:529:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x564583be0b78 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x564583be0bf8 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x564583be0d68 <line:530:22>
| `-NonNullAttr 0x564583be0dc0 <col:63, col:77> 1
|-FunctionDecl 0x564583be1f90 <line:531:1, line:534:82> line:531:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x564583be0e08 <col:43, line:532:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x564583be1eb0 <line:533:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x564583be2040 <line:534:22>
| `-NonNullAttr 0x564583be2098 <col:63, col:80> 1 2
|-FunctionDecl 0x564583be2228 <line:535:1, line:537:79> line:535:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x564583be20e8 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x564583be2168 <line:536:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x564583be22d8 <line:537:22>
| `-NonNullAttr 0x564583be2330 <col:63, col:77> 1
|-FunctionDecl 0x564583be24d8 <line:538:1, line:541:82> line:538:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x564583be2378 <col:46, line:539:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x564583be23f8 <line:540:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x564583be2588 <line:541:22>
| `-NonNullAttr 0x564583be25e0 <col:63, col:80> 1 2
|-FunctionDecl 0x564583be2768 <line:542:1, line:544:79> line:542:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x564583be2628 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x564583be26a8 <line:543:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x564583be2818 <line:544:22>
| `-NonNullAttr 0x564583be2870 <col:63, col:77> 1
|-FunctionDecl 0x564583be2a58 <line:545:1, line:547:82> line:545:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x564583be28b8 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x564583be2938 <line:546:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x564583be2b08 <line:547:22>
| `-NonNullAttr 0x564583be2b60 <col:63, col:80> 1 2
|-FunctionDecl 0x564583be2ce8 <line:548:1, line:550:79> line:548:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x564583be2ba8 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x564583be2c28 <line:549:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x564583be2d98 <line:550:22>
| `-NonNullAttr 0x564583be2df0 <col:63, col:77> 1
|-FunctionDecl 0x564583be4168 <line:551:1, line:553:86> line:551:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x564583be3f10 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x564583be4020 <line:552:5, line:553:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x564583be4218 <col:29>
| `-NonNullAttr 0x564583be4270 <col:70, col:84> 1
|-FunctionDecl 0x564583be43e8 <line:554:1, line:555:79> line:554:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x564583be42b8 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x564583be4490 <line:555:22>
| `-NonNullAttr 0x564583be44e8 <col:63, col:77> 1
|-FunctionDecl 0x564583be45f0 <line:556:1, line:557:68> line:556:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x564583be4538 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x564583be4698 <line:557:22>
| `-NonNullAttr 0x564583be46f0 <col:52, col:66> 1
|-FunctionDecl 0x564583be47f0 <line:558:1, line:559:65> line:558:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x564583be4738 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x564583be4898 <line:559:19>
| `-NonNullAttr 0x564583be48f0 <col:49, col:63> 1
|-FunctionDecl 0x564583be4b28 <line:560:1, line:562:88> line:560:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x564583be4938 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x564583be49c8 <line:561:12, line:562:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x564583be4bd8 <col:39>
| `-NonNullAttr 0x564583be4c30 <col:69, col:86> 1 2
|-FunctionDecl 0x564583be4d30 <line:563:1, line:564:68> line:563:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x564583be4c78 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x564583be4dd8 <line:564:22>
| `-NonNullAttr 0x564583be4e30 <col:52, col:66> 1
|-FunctionDecl 0x564583be4f98 <line:565:1, line:566:68> line:565:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x564583be4ee0 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x564583be5040 <line:566:22>
| `-NonNullAttr 0x564583be5098 <col:52, col:66> 1
|-FunctionDecl 0x564583be5258 <line:567:1, line:569:88> line:567:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x564583be50e8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x564583be5178 <line:568:12, line:569:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x564583be5308 <col:39>
| `-NonNullAttr 0x564583be5360 <col:69, col:86> 1 2
|-FunctionDecl 0x564583be5460 <line:570:1, line:571:68> line:570:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x564583be53a8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x564583be5508 <line:571:22>
| `-NonNullAttr 0x564583be5560 <col:52, col:66> 1
|-FunctionDecl 0x564583be5748 <line:572:1, line:573:79> line:572:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x564583be5610 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x564583be57f0 <line:573:22>
| `-NonNullAttr 0x564583be5848 <col:63, col:77> 1
|-FunctionDecl 0x564583be5950 <line:574:1, line:575:79> line:574:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x564583be5898 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x564583be59f8 <line:575:22>
| `-NonNullAttr 0x564583be5a50 <col:63, col:77> 1
|-FunctionDecl 0x564583be5c78 <line:576:1, line:579:82> line:576:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x564583be5a98 <col:43, line:577:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x564583be5b18 <line:578:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x564583be5d28 <line:579:22>
| `-NonNullAttr 0x564583be5d80 <col:63, col:80> 1 2
|-FunctionDecl 0x564583be5fa8 <line:580:1, line:582:79> line:580:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x564583be5dc8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x564583be5e48 <line:581:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x564583be6058 <line:582:22>
| `-NonNullAttr 0x564583be60b0 <col:63, col:77> 1
|-FunctionDecl 0x564583be6258 <line:583:1, line:586:82> line:583:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x564583be60f8 <col:43, line:584:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x564583be6178 <line:585:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x564583be6308 <line:586:22>
| `-NonNullAttr 0x564583be6360 <col:63, col:80> 1 2
|-FunctionDecl 0x564583be64e8 <line:587:1, line:588:93> line:587:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x564583be63a8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x564583be6428 <line:588:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x564583be6598 <col:36>
| `-NonNullAttr 0x564583be65f0 <col:77, col:91> 1
|-FunctionDecl 0x564583be6928 <line:589:1, line:591:79> line:589:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x564583be66d0 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x564583be67e0 <line:590:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x564583be69d8 <line:591:22>
| `-NonNullAttr 0x564583be6a30 <col:63, col:77> 1
|-FunctionDecl 0x564583be6ba8 <line:592:1, line:593:79> line:592:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x564583be6a78 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x564583be6c50 <line:593:22>
| `-NonNullAttr 0x564583be6ca8 <col:63, col:77> 1
|-FunctionDecl 0x564583be6db0 <line:594:1, line:595:68> line:594:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x564583be6cf8 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x564583be6e58 <line:595:22>
| `-NonNullAttr 0x564583be6eb0 <col:52, col:66> 1
|-FunctionDecl 0x564583be6fc8 <line:596:1, line:597:68> line:596:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x564583be6f10 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x564583be7070 <line:597:22>
| `-NonNullAttr 0x564583be70c8 <col:52, col:66> 1
|-FunctionDecl 0x564583be72f8 <line:598:1, line:600:41> line:598:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x564583be7118 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x564583be7190 <line:599:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x564583be73a8 <line:600:22, col:39> 1 2
|-FunctionDecl 0x564583be76d8 <line:601:1, line:604:44> line:601:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x564583be7428 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x564583be74a0 <line:602:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x564583be7530 <line:603:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x564583be7790 <line:604:22, col:42> 1 2 3
|-FunctionDecl 0x564583be79a8 <line:605:1, line:606:79> line:605:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x564583be7870 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x564583be7a50 <line:606:22>
| `-NonNullAttr 0x564583be7aa8 <col:63, col:77> 1
|-FunctionDecl 0x564583be7bb0 <line:607:1, line:608:79> line:607:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x564583be7af8 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x564583be7c58 <line:608:22>
| `-NonNullAttr 0x564583be7cb0 <col:63, col:77> 1
|-FunctionDecl 0x564583be7f10 <line:609:1, line:612:82> line:609:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x564583be7cf8 <col:41, line:610:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x564583be7d78 <line:611:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x564583be7fc0 <line:612:22>
| `-NonNullAttr 0x564583be8018 <col:63, col:80> 1 2
|-FunctionDecl 0x564583be8228 <line:613:1, line:614:94> line:613:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x564583be8068 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x564583be80e8 <line:614:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x564583be82d8 <col:37>
| `-NonNullAttr 0x564583be8330 <col:78, col:92> 1
|-FunctionDecl 0x564583be8548 <line:615:1, line:618:82> line:615:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x564583be8378 <col:39, line:616:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x564583be8420 <line:617:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x564583be85f8 <line:618:22>
| `-NonNullAttr 0x564583be8650 <col:63, col:80> 1 2
|-FunctionDecl 0x564583be8818 <line:619:1, line:621:79> line:619:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x564583be8698 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x564583be8710 <line:620:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x564583be88c8 <line:621:22>
| `-NonNullAttr 0x564583be8920 <col:63, col:77> 1
|-FunctionDecl 0x564583be8bc8 <line:622:1, line:623:79> line:622:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x564583be8a00 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x564583be8a80 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x564583be8c78 <line:623:22>
| `-NonNullAttr 0x564583be8cd0 <col:63, col:77> 1
|-FunctionDecl 0x564583be8e48 <line:624:1, line:625:79> line:624:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x564583be8d18 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x564583be8f20 <line:625:22>
| `-NonNullAttr 0x564583be8f78 <col:63, col:77> 1
|-FunctionDecl 0x564583be9080 <line:626:1, line:627:68> line:626:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x564583be8fc8 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x564583be9128 <line:627:22>
| `-NonNullAttr 0x564583be9180 <col:52, col:66> 1
|-FunctionDecl 0x564583be9280 <line:628:1, line:629:68> line:628:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x564583be91c8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x564583be9328 <line:629:22>
| `-NonNullAttr 0x564583be9380 <col:52, col:66> 1
|-FunctionDecl 0x564583be9480 <line:630:1, line:631:68> line:630:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x564583be93c8 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x564583be9528 <line:631:22>
| `-NonNullAttr 0x564583be9580 <col:52, col:66> 1
|-FunctionDecl 0x564583be9958 <line:632:1, line:635:79> line:632:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x564583be9660 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x564583be9770 <line:633:6, line:634:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x564583be97f0 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x564583be9a10 <line:635:22>
| `-NonNullAttr 0x564583be9a68 <col:63, col:77> 1
|-FunctionDecl 0x564583be9be8 <line:636:1, line:637:79> line:636:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x564583be9ab8 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x564583be9c90 <line:637:22>
| `-NonNullAttr 0x564583be9ce8 <col:63, col:77> 1
|-FunctionDecl 0x564583be9df0 <line:638:1, line:639:68> line:638:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x564583be9d38 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x564583be9e98 <line:639:22>
| `-NonNullAttr 0x564583be9ef0 <col:52, col:66> 1
|-FunctionDecl 0x564583bea0e8 <line:640:1, line:641:79> line:640:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x564583be9fb0 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x564583bea190 <line:641:22>
| `-NonNullAttr 0x564583bea1e8 <col:63, col:77> 1
|-FunctionDecl 0x564583bea2f0 <line:642:1, line:643:79> line:642:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x564583bea238 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x564583bea398 <line:643:22>
| `-NonNullAttr 0x564583bea3f0 <col:63, col:77> 1
|-FunctionDecl 0x564583bea618 <line:644:1, line:647:82> line:644:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x564583bea438 <col:44, line:645:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x564583bea4b8 <line:646:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x564583bea6c8 <line:647:22>
| `-NonNullAttr 0x564583bea720 <col:63, col:80> 1 2
|-FunctionDecl 0x564583bea928 <line:648:1, line:650:79> line:648:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x564583bea768 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x564583bea7e8 <line:649:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x564583bea9d8 <line:650:22>
| `-NonNullAttr 0x564583beaa30 <col:63, col:77> 1
|-FunctionDecl 0x564583bead78 <line:651:1, line:653:79> line:651:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x564583beab10 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x564583beac30 <line:652:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x564583beae28 <line:653:22>
| `-NonNullAttr 0x564583beae80 <col:63, col:77> 1
|-FunctionDecl 0x564583beafe8 <line:654:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x564583beaec8 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x564583beb090 <col:69>
|-FunctionDecl 0x564583beb208 <line:655:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x564583beb0f8 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x564583beb2b0 <col:72>
|-FunctionDecl 0x564583beb4e8 <line:656:1, line:657:67> line:656:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x564583beb318 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x564583beb3c8 <line:657:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x564583beb598 <col:44>
|-FunctionDecl 0x564583beb7b8 <line:658:1, line:660:79> line:658:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x564583beb600 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x564583beb678 <line:659:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x564583beb868 <line:660:22>
| `-NonNullAttr 0x564583beb8c0 <col:63, col:77> 2
|-FunctionDecl 0x564583bebd08 <line:661:1, line:663:70> line:661:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x564583beb9a0 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x564583bebab0 <line:662:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x564583bebbc0 <line:663:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x564583bebdc0 <col:47>
|-FunctionDecl 0x564583becf60 <line:665:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x564583bebe30 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x564583bed0b8 <line:666:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x564583bed020 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x564583bed210 <line:667:1, col:20> col:8 used P2 'void *(void *)'
| `-ParmVarDecl 0x564583bed178 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x564583bed2d8 <line:668:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x564583bed398 <line:669:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x564583bed458 <line:670:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x564583bed510 <line:671:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x564583bed590 prev 0x564583bed510 <line:672:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x564583bed5f8 <col:24> 'int' 0
|-VarDecl 0x564583bed630 <line:673:1, col:5> col:5 used __unbuffered_p1_EAX 'int'
|-VarDecl 0x564583bed6b0 prev 0x564583bed630 <line:674:1, col:27> col:5 used __unbuffered_p1_EAX 'int' cinit
| `-IntegerLiteral 0x564583bed718 <col:27> 'int' 0
|-VarDecl 0x564583bed750 <line:675:1, col:5> col:5 used __unbuffered_p1_EBX 'int'
|-VarDecl 0x564583bed7d0 prev 0x564583bed750 <line:676:1, col:27> col:5 used __unbuffered_p1_EBX 'int' cinit
| `-IntegerLiteral 0x564583bed838 <col:27> 'int' 0
|-VarDecl 0x564583bed870 <line:677:1, col:5> col:5 used __unbuffered_p2_EAX 'int'
|-VarDecl 0x564583bed8f0 prev 0x564583bed870 <line:678:1, col:27> col:5 used __unbuffered_p2_EAX 'int' cinit
| `-IntegerLiteral 0x564583bed958 <col:27> 'int' 0
|-VarDecl 0x564583bed990 <line:679:1, col:5> col:5 used __unbuffered_p2_EBX 'int'
|-VarDecl 0x564583beda10 prev 0x564583bed990 <line:680:1, col:27> col:5 used __unbuffered_p2_EBX 'int' cinit
| `-IntegerLiteral 0x564583beda78 <col:27> 'int' 0
|-VarDecl 0x564583bedab0 <line:681:1, col:5> col:5 used a 'int'
|-VarDecl 0x564583bedb30 prev 0x564583bedab0 <line:682:1, col:9> col:5 used a 'int' cinit
| `-IntegerLiteral 0x564583bedb98 <col:9> 'int' 0
|-VarDecl 0x564583bedbc8 <line:683:1, col:7> col:7 used a$flush_delayed '_Bool'
|-VarDecl 0x564583bedc48 <line:684:1, col:5> col:5 used a$mem_tmp 'int'
|-VarDecl 0x564583bedcc0 <line:685:1, col:7> col:7 used a$r_buff0_thd0 '_Bool'
|-VarDecl 0x564583bedd38 <line:686:1, col:7> col:7 used a$r_buff0_thd1 '_Bool'
|-VarDecl 0x564583beddb0 <line:687:1, col:7> col:7 used a$r_buff0_thd2 '_Bool'
|-VarDecl 0x564583bede28 <line:688:1, col:7> col:7 used a$r_buff0_thd3 '_Bool'
|-VarDecl 0x564583bedea0 <line:689:1, col:7> col:7 used a$r_buff1_thd0 '_Bool'
|-VarDecl 0x564583bedf70 <line:690:1, col:7> col:7 used a$r_buff1_thd1 '_Bool'
|-VarDecl 0x564583bedfe8 <line:691:1, col:7> col:7 used a$r_buff1_thd2 '_Bool'
|-VarDecl 0x564583bee060 <line:692:1, col:7> col:7 used a$r_buff1_thd3 '_Bool'
|-VarDecl 0x564583bee0d8 <line:693:1, col:7> col:7 a$read_delayed '_Bool'
|-VarDecl 0x564583bee158 <line:694:1, col:6> col:6 a$read_delayed_var 'int *'
|-VarDecl 0x564583bee1d8 <line:695:1, col:5> col:5 used a$w_buff0 'int'
|-VarDecl 0x564583bee250 <line:696:1, col:7> col:7 used a$w_buff0_used '_Bool'
|-VarDecl 0x564583bee2d0 <line:697:1, col:5> col:5 used a$w_buff1 'int'
|-VarDecl 0x564583bee348 <line:698:1, col:7> col:7 used a$w_buff1_used '_Bool'
|-VarDecl 0x564583bee3c0 <line:699:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x564583bee438 <line:700:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x564583bee4b8 <line:701:1, col:5> col:5 used x 'int'
|-VarDecl 0x564583bee538 prev 0x564583bee4b8 <line:702:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x564583bee5a0 <col:9> 'int' 0
|-VarDecl 0x564583bee5d8 <line:703:1, col:5> col:5 used y 'int'
|-VarDecl 0x564583bee658 prev 0x564583bee5d8 <line:704:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x564583bee6c0 <col:9> 'int' 0
|-VarDecl 0x564583bee6f8 <line:705:1, col:5> col:5 used z 'int'
|-VarDecl 0x564583bee778 prev 0x564583bee6f8 <line:706:1, col:9> col:5 used z 'int' cinit
| `-IntegerLiteral 0x564583bee7e0 <col:9> 'int' 0
|-VarDecl 0x564583bee810 <line:707:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x564583bee888 <line:708:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x564583bee9a0 prev 0x564583becf60 <line:709:1, line:737:1> line:709:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x564583bee908 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x564583bf01e8 <line:710:1, line:737:1>
|   |-CallExpr 0x564583beeab8 <line:711:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x564583beeaa0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564583beea48 <col:3> 'void ()' Function 0x564583b94350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x564583beeb30 <line:712:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x564583beead8 <col:3> 'int' lvalue Var 0x564583bee2d0 'a$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x564583beeb18 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x564583beeaf8 <col:15> 'int' lvalue Var 0x564583bee1d8 'a$w_buff0' 'int'
|   |-BinaryOperator 0x564583beeb90 <line:713:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x564583beeb50 <col:3> 'int' lvalue Var 0x564583bee1d8 'a$w_buff0' 'int'
|   | `-IntegerLiteral 0x564583beeb70 <col:15> 'int' 1
|   |-BinaryOperator 0x564583beec08 <line:714:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x564583beebb0 <col:3> '_Bool' lvalue Var 0x564583bee348 'a$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x564583beebf0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x564583beebd0 <col:20> '_Bool' lvalue Var 0x564583bee250 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x564583beeca0 <line:715:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x564583beec28 <col:3> '_Bool' lvalue Var 0x564583bee250 'a$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x564583beec78 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x564583beec48 <col:27> 'int' 1
|   |-CallExpr 0x564583beee28 <line:716:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x564583beee10 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x564583beecc0 <col:3> 'void (int)' Function 0x564583b940d8 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x564583beedc0 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x564583beeda0 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x564583beed80 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x564583beed38 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x564583beed20 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x564583beece0 <col:23> '_Bool' lvalue Var 0x564583bee348 'a$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x564583beed68 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x564583beed50 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x564583beed00 <col:41> '_Bool' lvalue Var 0x564583bee250 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x564583beeea8 <line:717:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x564583beee50 <col:3> '_Bool' lvalue Var 0x564583bedea0 'a$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x564583beee90 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x564583beee70 <col:20> '_Bool' lvalue Var 0x564583bedcc0 'a$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x564583beef20 <line:718:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x564583beeec8 <col:3> '_Bool' lvalue Var 0x564583bedf70 'a$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x564583beef08 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x564583beeee8 <col:20> '_Bool' lvalue Var 0x564583bedd38 'a$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x564583beefb8 <line:719:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x564583beef40 <col:3> '_Bool' lvalue Var 0x564583bedfe8 'a$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x564583beefa0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x564583beef80 <col:20> '_Bool' lvalue Var 0x564583beddb0 'a$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x564583bef030 <line:720:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x564583beefd8 <col:3> '_Bool' lvalue Var 0x564583bee060 'a$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x564583bef018 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x564583beeff8 <col:20> '_Bool' lvalue Var 0x564583bede28 'a$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x564583bef0c8 <line:721:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x564583bef050 <col:3> '_Bool' lvalue Var 0x564583bedd38 'a$r_buff0_thd1' '_Bool'
|   | `-CStyleCastExpr 0x564583bef0a0 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x564583bef070 <col:27> 'int' 1
|   |-CallExpr 0x564583bef120 <line:722:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x564583bef108 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564583bef0e8 <col:3> 'void ()' Function 0x564583b94410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x564583bef178 <line:723:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x564583bef160 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564583bef140 <col:3> 'void ()' Function 0x564583b94350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x564583bef1d8 <line:724:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x564583bef198 <col:3> 'int' lvalue Var 0x564583bee538 'x' 'int'
|   | `-IntegerLiteral 0x564583bef1b8 <col:7> 'int' 1
|   |-CallExpr 0x564583bef230 <line:725:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x564583bef218 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564583bef1f8 <col:3> 'void ()' Function 0x564583b94410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x564583bef288 <line:726:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x564583bef270 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564583bef250 <col:3> 'void ()' Function 0x564583b94350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x564583bef570 <line:727:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x564583bef2a8 <col:3> 'int' lvalue Var 0x564583bedb30 'a' 'int'
|   | `-ConditionalOperator 0x564583bef540 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x564583bef368 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x564583bef320 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x564583bef308 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x564583bef2c8 <col:7> '_Bool' lvalue Var 0x564583bee250 'a$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x564583bef350 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x564583bef338 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x564583bef2e8 <col:25> '_Bool' lvalue Var 0x564583bedd38 'a$r_buff0_thd1' '_Bool'
|   |   |-ImplicitCastExpr 0x564583bef528 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x564583bef388 <col:42> 'int' lvalue Var 0x564583bee1d8 'a$w_buff0' 'int'
|   |   `-ParenExpr 0x564583bef508 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x564583bef4d8 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x564583bef448 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x564583bef400 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x564583bef3e8 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x564583bef3a8 <col:55> '_Bool' lvalue Var 0x564583bee348 'a$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x564583bef430 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x564583bef418 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x564583bef3c8 <col:73> '_Bool' lvalue Var 0x564583bedf70 'a$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x564583bef4a8 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x564583bef468 <col:90> 'int' lvalue Var 0x564583bee2d0 'a$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x564583bef4c0 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x564583bef488 <col:102> 'int' lvalue Var 0x564583bedb30 'a' 'int'
|   |-BinaryOperator 0x564583bef778 <line:728:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x564583bef590 <col:3> '_Bool' lvalue Var 0x564583bee250 'a$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x564583bef760 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x564583bef730 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x564583bef650 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x564583bef608 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x564583bef5f0 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x564583bef5b0 <col:20> '_Bool' lvalue Var 0x564583bee250 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x564583bef638 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x564583bef620 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x564583bef5d0 <col:38> '_Bool' lvalue Var 0x564583bedd38 'a$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x564583bef6e8 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x564583bef6a0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x564583bef670 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x564583bef718 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x564583bef700 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x564583bef6c8 <col:66> '_Bool' lvalue Var 0x564583bee250 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x564583befa60 <line:729:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x564583bef798 <col:3> '_Bool' lvalue Var 0x564583bee348 'a$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x564583befa48 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x564583befa18 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x564583bef938 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x564583bef858 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x564583bef810 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x564583bef7f8 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x564583bef7b8 <col:20> '_Bool' lvalue Var 0x564583bee250 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x564583bef840 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x564583bef828 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x564583bef7d8 <col:38> '_Bool' lvalue Var 0x564583bedd38 'a$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x564583bef918 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x564583bef8d0 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x564583bef8b8 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x564583bef878 <col:56> '_Bool' lvalue Var 0x564583bee348 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x564583bef900 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x564583bef8e8 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x564583bef898 <col:74> '_Bool' lvalue Var 0x564583bedf70 'a$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x564583bef9d0 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x564583bef988 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x564583bef958 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x564583befa00 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x564583bef9e8 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x564583bef9b0 <col:102> '_Bool' lvalue Var 0x564583bee348 'a$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x564583befc68 <line:730:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x564583befa80 <col:3> '_Bool' lvalue Var 0x564583bedd38 'a$r_buff0_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x564583befc50 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x564583befc20 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x564583befb40 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x564583befaf8 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x564583befae0 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x564583befaa0 <col:20> '_Bool' lvalue Var 0x564583bee250 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x564583befb28 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x564583befb10 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x564583befac0 <col:38> '_Bool' lvalue Var 0x564583bedd38 'a$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x564583befbd8 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x564583befb90 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x564583befb60 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x564583befc08 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x564583befbf0 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x564583befbb8 <col:66> '_Bool' lvalue Var 0x564583bedd38 'a$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x564583beff50 <line:731:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x564583befc88 <col:3> '_Bool' lvalue Var 0x564583bedf70 'a$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x564583beff38 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x564583beff08 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x564583befe28 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x564583befd48 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x564583befd00 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x564583befce8 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x564583befca8 <col:20> '_Bool' lvalue Var 0x564583bee250 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x564583befd30 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x564583befd18 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x564583befcc8 <col:38> '_Bool' lvalue Var 0x564583bedd38 'a$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x564583befe08 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x564583befdc0 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x564583befda8 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x564583befd68 <col:56> '_Bool' lvalue Var 0x564583bee348 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x564583befdf0 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x564583befdd8 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x564583befd88 <col:74> '_Bool' lvalue Var 0x564583bedf70 'a$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x564583befec0 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x564583befe78 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x564583befe48 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x564583befef0 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x564583befed8 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x564583befea0 <col:102> '_Bool' lvalue Var 0x564583bedf70 'a$r_buff1_thd1' '_Bool'
|   |-CallExpr 0x564583beffc8 <line:732:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x564583beffb0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564583beff90 <col:3> 'void ()' Function 0x564583b94410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x564583bf0020 <line:733:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x564583bf0008 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564583beffe8 <col:3> 'void ()' Function 0x564583b94350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x564583bf00d8 <line:734:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x564583bf0040 <col:3> 'int' lvalue Var 0x564583bed590 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x564583bf00b8 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x564583bf00a0 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x564583bf0060 <col:22> 'int' lvalue Var 0x564583bed590 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x564583bf0080 <col:41> 'int' 1
|   |-CallExpr 0x564583bf0130 <line:735:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x564583bf0118 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564583bf00f8 <col:3> 'void ()' Function 0x564583b94410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x564583bf01d8 <line:736:3, col:36>
|     `-CallExpr 0x564583bf01b8 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x564583bf01a0 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x564583bf0150 <col:10> 'void *(void)' Function 0x564583b93e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x564583bf0378 prev 0x564583bed0b8 <line:738:1, line:763:1> line:738:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x564583bf02e0 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x564583bf1800 <line:739:1, line:763:1>
|   |-CallExpr 0x564583bf0458 <line:740:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x564583bf0440 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564583bf0420 <col:3> 'void ()' Function 0x564583b94350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x564583bf04b8 <line:741:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x564583bf0478 <col:3> 'int' lvalue Var 0x564583bee538 'x' 'int'
|   | `-IntegerLiteral 0x564583bf0498 <col:7> 'int' 2
|   |-CallExpr 0x564583bf0510 <line:742:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x564583bf04f8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564583bf04d8 <col:3> 'void ()' Function 0x564583b94410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x564583bf0568 <line:743:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x564583bf0550 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564583bf0530 <col:3> 'void ()' Function 0x564583b94350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x564583bf05c8 <line:744:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x564583bf0588 <col:3> 'int' lvalue Var 0x564583bee658 'y' 'int'
|   | `-IntegerLiteral 0x564583bf05a8 <col:7> 'int' 1
|   |-CallExpr 0x564583bf0620 <line:745:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x564583bf0608 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564583bf05e8 <col:3> 'void ()' Function 0x564583b94410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x564583bf0678 <line:746:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x564583bf0660 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564583bf0640 <col:3> 'void ()' Function 0x564583b94350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x564583bf06f0 <line:747:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x564583bf0698 <col:3> 'int' lvalue Var 0x564583bed6b0 '__unbuffered_p1_EAX' 'int'
|   | `-ImplicitCastExpr 0x564583bf06d8 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x564583bf06b8 <col:25> 'int' lvalue Var 0x564583bee658 'y' 'int'
|   |-CallExpr 0x564583bf0748 <line:748:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x564583bf0730 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564583bf0710 <col:3> 'void ()' Function 0x564583b94410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x564583bf07a0 <line:749:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x564583bf0788 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564583bf0768 <col:3> 'void ()' Function 0x564583b94350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x564583bf0818 <line:750:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x564583bf07c0 <col:3> 'int' lvalue Var 0x564583bed7d0 '__unbuffered_p1_EBX' 'int'
|   | `-ImplicitCastExpr 0x564583bf0800 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x564583bf07e0 <col:25> 'int' lvalue Var 0x564583bee778 'z' 'int'
|   |-CallExpr 0x564583bf0870 <line:751:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x564583bf0858 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564583bf0838 <col:3> 'void ()' Function 0x564583b94410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x564583bf08c8 <line:752:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x564583bf08b0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564583bf0890 <col:3> 'void ()' Function 0x564583b94350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x564583bf0bb0 <line:753:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x564583bf08e8 <col:3> 'int' lvalue Var 0x564583bedb30 'a' 'int'
|   | `-ConditionalOperator 0x564583bf0b80 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x564583bf09a8 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x564583bf0960 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x564583bf0948 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x564583bf0908 <col:7> '_Bool' lvalue Var 0x564583bee250 'a$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x564583bf0990 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x564583bf0978 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x564583bf0928 <col:25> '_Bool' lvalue Var 0x564583beddb0 'a$r_buff0_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x564583bf0b68 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x564583bf09c8 <col:42> 'int' lvalue Var 0x564583bee1d8 'a$w_buff0' 'int'
|   |   `-ParenExpr 0x564583bf0b48 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x564583bf0b18 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x564583bf0a88 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x564583bf0a40 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x564583bf0a28 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x564583bf09e8 <col:55> '_Bool' lvalue Var 0x564583bee348 'a$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x564583bf0a70 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x564583bf0a58 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x564583bf0a08 <col:73> '_Bool' lvalue Var 0x564583bedfe8 'a$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x564583bf0ae8 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x564583bf0aa8 <col:90> 'int' lvalue Var 0x564583bee2d0 'a$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x564583bf0b00 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x564583bf0ac8 <col:102> 'int' lvalue Var 0x564583bedb30 'a' 'int'
|   |-BinaryOperator 0x564583bf0db8 <line:754:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x564583bf0bd0 <col:3> '_Bool' lvalue Var 0x564583bee250 'a$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x564583bf0da0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x564583bf0d70 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x564583bf0c90 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x564583bf0c48 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x564583bf0c30 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x564583bf0bf0 <col:20> '_Bool' lvalue Var 0x564583bee250 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x564583bf0c78 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x564583bf0c60 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x564583bf0c10 <col:38> '_Bool' lvalue Var 0x564583beddb0 'a$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x564583bf0d28 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x564583bf0ce0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x564583bf0cb0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x564583bf0d58 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x564583bf0d40 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x564583bf0d08 <col:66> '_Bool' lvalue Var 0x564583bee250 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x564583bf10c8 <line:755:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x564583bf0dd8 <col:3> '_Bool' lvalue Var 0x564583bee348 'a$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x564583bf10b0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x564583bf1080 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x564583bf0fa0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x564583bf0e98 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x564583bf0e50 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x564583bf0e38 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x564583bf0df8 <col:20> '_Bool' lvalue Var 0x564583bee250 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x564583bf0e80 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x564583bf0e68 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x564583bf0e18 <col:38> '_Bool' lvalue Var 0x564583beddb0 'a$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x564583bf0f58 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x564583bf0f10 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x564583bf0ef8 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x564583bf0eb8 <col:56> '_Bool' lvalue Var 0x564583bee348 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x564583bf0f40 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x564583bf0f28 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x564583bf0ed8 <col:74> '_Bool' lvalue Var 0x564583bedfe8 'a$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x564583bf1038 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x564583bf0ff0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x564583bf0fc0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x564583bf1068 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x564583bf1050 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x564583bf1018 <col:102> '_Bool' lvalue Var 0x564583bee348 'a$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x564583bf12d0 <line:756:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x564583bf10e8 <col:3> '_Bool' lvalue Var 0x564583beddb0 'a$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x564583bf12b8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x564583bf1288 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x564583bf11a8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x564583bf1160 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x564583bf1148 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x564583bf1108 <col:20> '_Bool' lvalue Var 0x564583bee250 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x564583bf1190 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x564583bf1178 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x564583bf1128 <col:38> '_Bool' lvalue Var 0x564583beddb0 'a$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x564583bf1240 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x564583bf11f8 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x564583bf11c8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x564583bf1270 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x564583bf1258 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x564583bf1220 <col:66> '_Bool' lvalue Var 0x564583beddb0 'a$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x564583bf15b8 <line:757:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x564583bf12f0 <col:3> '_Bool' lvalue Var 0x564583bedfe8 'a$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x564583bf15a0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x564583bf1570 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x564583bf1490 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x564583bf13b0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x564583bf1368 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x564583bf1350 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x564583bf1310 <col:20> '_Bool' lvalue Var 0x564583bee250 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x564583bf1398 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x564583bf1380 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x564583bf1330 <col:38> '_Bool' lvalue Var 0x564583beddb0 'a$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x564583bf1470 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x564583bf1428 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x564583bf1410 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x564583bf13d0 <col:56> '_Bool' lvalue Var 0x564583bee348 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x564583bf1458 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x564583bf1440 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x564583bf13f0 <col:74> '_Bool' lvalue Var 0x564583bedfe8 'a$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x564583bf1528 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x564583bf14e0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x564583bf14b0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x564583bf1558 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x564583bf1540 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x564583bf1508 <col:102> '_Bool' lvalue Var 0x564583bedfe8 'a$r_buff1_thd2' '_Bool'
|   |-CallExpr 0x564583bf1610 <line:758:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x564583bf15f8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564583bf15d8 <col:3> 'void ()' Function 0x564583b94410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x564583bf1668 <line:759:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x564583bf1650 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564583bf1630 <col:3> 'void ()' Function 0x564583b94350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x564583bf1720 <line:760:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x564583bf1688 <col:3> 'int' lvalue Var 0x564583bed590 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x564583bf1700 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x564583bf16e8 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x564583bf16a8 <col:22> 'int' lvalue Var 0x564583bed590 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x564583bf16c8 <col:41> 'int' 1
|   |-CallExpr 0x564583bf1778 <line:761:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x564583bf1760 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564583bf1740 <col:3> 'void ()' Function 0x564583b94410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x564583bf17f0 <line:762:3, col:36>
|     `-CallExpr 0x564583bf17d0 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x564583bf17b8 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x564583bf1798 <col:10> 'void *(void)' Function 0x564583b93e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x564583bf1978 prev 0x564583bed210 <line:764:1, line:799:1> line:764:8 used P2 'void *(void *)'
| |-ParmVarDecl 0x564583bf18e0 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x564583bf5698 <line:765:1, line:799:1>
|   |-CallExpr 0x564583bf1a58 <line:766:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x564583bf1a40 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564583bf1a20 <col:3> 'void ()' Function 0x564583b94350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x564583bf1ab8 <line:767:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x564583bf1a78 <col:3> 'int' lvalue Var 0x564583bee778 'z' 'int'
|   | `-IntegerLiteral 0x564583bf1a98 <col:7> 'int' 1
|   |-CallExpr 0x564583bf1b10 <line:768:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x564583bf1af8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564583bf1ad8 <col:3> 'void ()' Function 0x564583b94410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x564583bf1b68 <line:769:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x564583bf1b50 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564583bf1b30 <col:3> 'void ()' Function 0x564583b94350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x564583bf1be0 <line:770:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x564583bf1b88 <col:3> 'int' lvalue Var 0x564583bed8f0 '__unbuffered_p2_EAX' 'int'
|   | `-ImplicitCastExpr 0x564583bf1bc8 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x564583bf1ba8 <col:25> 'int' lvalue Var 0x564583bee778 'z' 'int'
|   |-CallExpr 0x564583bf1c38 <line:771:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x564583bf1c20 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564583bf1c00 <col:3> 'void ()' Function 0x564583b94410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x564583bf1c90 <line:772:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x564583bf1c78 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564583bf1c58 <col:3> 'void ()' Function 0x564583b94350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x564583bf1d40 <line:773:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x564583bf1cb0 <col:3> '_Bool' lvalue Var 0x564583bee810 'weak$$choice0' '_Bool'
|   | `-ImplicitCastExpr 0x564583bf1d28 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x564583bf1d08 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x564583bf1cf0 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x564583bf1cd0 <col:19> 'void *(void)' Function 0x564583b93e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x564583bf1df0 <line:774:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x564583bf1d60 <col:3> '_Bool' lvalue Var 0x564583bee888 'weak$$choice2' '_Bool'
|   | `-ImplicitCastExpr 0x564583bf1dd8 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x564583bf1db8 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x564583bf1da0 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x564583bf1d80 <col:19> 'void *(void)' Function 0x564583b93e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x564583bf1e68 <line:775:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x564583bf1e10 <col:3> '_Bool' lvalue Var 0x564583bedbc8 'a$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x564583bf1e50 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x564583bf1e30 <col:21> '_Bool' lvalue Var 0x564583bee888 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x564583bf1ee0 <line:776:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x564583bf1e88 <col:3> 'int' lvalue Var 0x564583bedc48 'a$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x564583bf1ec8 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x564583bf1ea8 <col:15> 'int' lvalue Var 0x564583bedb30 'a' 'int'
|   |-BinaryOperator 0x564583bf2338 <line:777:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x564583bf1f00 <col:3> 'int' lvalue Var 0x564583bedb30 'a' 'int'
|   | `-ConditionalOperator 0x564583bf2308 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x564583bf2130 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x564583bf2050 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x564583bf1f58 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x564583bf1f40 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x564583bf1f20 <col:8> '_Bool' lvalue Var 0x564583bee250 'a$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x564583bf2030 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x564583bf1fc8 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x564583bf1fb0 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x564583bf1f70 <col:27> '_Bool' lvalue Var 0x564583bede28 'a$r_buff0_thd3' '_Bool'
|   |   | |   `-UnaryOperator 0x564583bf2018 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x564583bf2000 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x564583bf1fe0 <col:46> '_Bool' lvalue Var 0x564583bee348 'a$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x564583bf2110 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x564583bf20a8 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x564583bf2090 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x564583bf2070 <col:65> '_Bool' lvalue Var 0x564583bede28 'a$r_buff0_thd3' '_Bool'
|   |   |   `-UnaryOperator 0x564583bf20f8 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x564583bf20e0 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x564583bf20c0 <col:84> '_Bool' lvalue Var 0x564583bee060 'a$r_buff1_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x564583bf22f0 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x564583bf2150 <col:101> 'int' lvalue Var 0x564583bedb30 'a' 'int'
|   |   `-ParenExpr 0x564583bf22d0 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x564583bf22a0 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x564583bf2210 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x564583bf21c8 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x564583bf21b0 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x564583bf2170 <col:106> '_Bool' lvalue Var 0x564583bee250 'a$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x564583bf21f8 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x564583bf21e0 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x564583bf2190 <col:124> '_Bool' lvalue Var 0x564583bede28 'a$r_buff0_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x564583bf2270 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x564583bf2230 <col:141> 'int' lvalue Var 0x564583bee1d8 'a$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x564583bf2288 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x564583bf2250 <col:153> 'int' lvalue Var 0x564583bee2d0 'a$w_buff1' 'int'
|   |-BinaryOperator 0x564583bf2848 <line:778:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x564583bf2358 <col:3> 'int' lvalue Var 0x564583bee1d8 'a$w_buff0' 'int'
|   | `-ConditionalOperator 0x564583bf2818 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x564583bf27e8 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x564583bf27d0 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x564583bf2378 <col:15> '_Bool' lvalue Var 0x564583bee888 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x564583bf2800 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x564583bf2398 <col:31> 'int' lvalue Var 0x564583bee1d8 'a$w_buff0' 'int'
|   |   `-ParenExpr 0x564583bf27b0 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x564583bf2780 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x564583bf25a8 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x564583bf24c8 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x564583bf23f0 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x564583bf23d8 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x564583bf23b8 <col:45> '_Bool' lvalue Var 0x564583bee250 'a$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x564583bf24a8 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x564583bf2440 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x564583bf2428 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x564583bf2408 <col:64> '_Bool' lvalue Var 0x564583bede28 'a$r_buff0_thd3' '_Bool'
|   |       | |   `-UnaryOperator 0x564583bf2490 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x564583bf2478 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x564583bf2458 <col:83> '_Bool' lvalue Var 0x564583bee348 'a$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x564583bf2588 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x564583bf2520 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x564583bf2508 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x564583bf24e8 <col:102> '_Bool' lvalue Var 0x564583bede28 'a$r_buff0_thd3' '_Bool'
|   |       |   `-UnaryOperator 0x564583bf2570 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x564583bf2558 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x564583bf2538 <col:121> '_Bool' lvalue Var 0x564583bee060 'a$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x564583bf2768 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x564583bf25c8 <col:138> 'int' lvalue Var 0x564583bee1d8 'a$w_buff0' 'int'
|   |       `-ParenExpr 0x564583bf2748 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x564583bf2718 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x564583bf2688 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x564583bf2640 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x564583bf2628 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x564583bf25e8 <col:151> '_Bool' lvalue Var 0x564583bee250 'a$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x564583bf2670 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x564583bf2658 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x564583bf2608 <col:169> '_Bool' lvalue Var 0x564583bede28 'a$r_buff0_thd3' '_Bool'
|   |           |-ImplicitCastExpr 0x564583bf26e8 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x564583bf26a8 <col:186> 'int' lvalue Var 0x564583bee1d8 'a$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x564583bf2700 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x564583bf26c8 <col:198> 'int' lvalue Var 0x564583bee1d8 'a$w_buff0' 'int'
|   |-BinaryOperator 0x564583bf2d58 <line:779:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x564583bf2868 <col:3> 'int' lvalue Var 0x564583bee2d0 'a$w_buff1' 'int'
|   | `-ConditionalOperator 0x564583bf2d28 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x564583bf2cf8 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x564583bf2ce0 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x564583bf2888 <col:15> '_Bool' lvalue Var 0x564583bee888 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x564583bf2d10 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x564583bf28a8 <col:31> 'int' lvalue Var 0x564583bee2d0 'a$w_buff1' 'int'
|   |   `-ParenExpr 0x564583bf2cc0 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x564583bf2c90 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x564583bf2ab8 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x564583bf29d8 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x564583bf2900 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x564583bf28e8 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x564583bf28c8 <col:45> '_Bool' lvalue Var 0x564583bee250 'a$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x564583bf29b8 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x564583bf2950 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x564583bf2938 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x564583bf2918 <col:64> '_Bool' lvalue Var 0x564583bede28 'a$r_buff0_thd3' '_Bool'
|   |       | |   `-UnaryOperator 0x564583bf29a0 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x564583bf2988 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x564583bf2968 <col:83> '_Bool' lvalue Var 0x564583bee348 'a$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x564583bf2a98 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x564583bf2a30 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x564583bf2a18 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x564583bf29f8 <col:102> '_Bool' lvalue Var 0x564583bede28 'a$r_buff0_thd3' '_Bool'
|   |       |   `-UnaryOperator 0x564583bf2a80 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x564583bf2a68 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x564583bf2a48 <col:121> '_Bool' lvalue Var 0x564583bee060 'a$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x564583bf2c78 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x564583bf2ad8 <col:138> 'int' lvalue Var 0x564583bee2d0 'a$w_buff1' 'int'
|   |       `-ParenExpr 0x564583bf2c58 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x564583bf2c28 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x564583bf2b98 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x564583bf2b50 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x564583bf2b38 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x564583bf2af8 <col:151> '_Bool' lvalue Var 0x564583bee250 'a$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x564583bf2b80 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x564583bf2b68 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x564583bf2b18 <col:169> '_Bool' lvalue Var 0x564583bede28 'a$r_buff0_thd3' '_Bool'
|   |           |-ImplicitCastExpr 0x564583bf2bf8 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x564583bf2bb8 <col:186> 'int' lvalue Var 0x564583bee2d0 'a$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x564583bf2c10 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x564583bf2bd8 <col:198> 'int' lvalue Var 0x564583bee2d0 'a$w_buff1' 'int'
|   |-BinaryOperator 0x564583bf3318 <line:780:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x564583bf2d78 <col:3> '_Bool' lvalue Var 0x564583bee250 'a$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x564583bf3300 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x564583bf32d0 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x564583bf3288 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x564583bf3270 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x564583bf2d98 <col:20> '_Bool' lvalue Var 0x564583bee888 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x564583bf32b8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x564583bf32a0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x564583bf2db8 <col:36> '_Bool' lvalue Var 0x564583bee250 'a$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x564583bf3250 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x564583bf3220 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x564583bf2fe0 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x564583bf2ee8 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x564583bf2e10 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x564583bf2df8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x564583bf2dd8 <col:55> '_Bool' lvalue Var 0x564583bee250 'a$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x564583bf2ec8 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x564583bf2e60 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x564583bf2e48 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x564583bf2e28 <col:74> '_Bool' lvalue Var 0x564583bede28 'a$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x564583bf2eb0 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x564583bf2e98 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x564583bf2e78 <col:93> '_Bool' lvalue Var 0x564583bee348 'a$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x564583bf2fc0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x564583bf2f40 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x564583bf2f28 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x564583bf2f08 <col:112> '_Bool' lvalue Var 0x564583bede28 'a$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x564583bf2f90 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x564583bf2f78 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x564583bf2f58 <col:131> '_Bool' lvalue Var 0x564583bee060 'a$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x564583bf3208 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x564583bf31f0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x564583bf3000 <col:148> '_Bool' lvalue Var 0x564583bee250 'a$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x564583bf31d0 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x564583bf31a0 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x564583bf30c0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x564583bf3078 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x564583bf3060 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x564583bf3020 <col:166> '_Bool' lvalue Var 0x564583bee250 'a$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x564583bf30a8 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x564583bf3090 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x564583bf3040 <col:184> '_Bool' lvalue Var 0x564583bede28 'a$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x564583bf3158 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x564583bf3110 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x564583bf30e0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x564583bf3188 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x564583bf3170 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x564583bf3138 <col:212> '_Bool' lvalue Var 0x564583bee250 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x564583bf38e0 <line:781:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x564583bf3338 <col:3> '_Bool' lvalue Var 0x564583bee348 'a$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x564583bf38c8 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x564583bf3898 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x564583bf3850 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x564583bf3838 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x564583bf3358 <col:20> '_Bool' lvalue Var 0x564583bee888 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x564583bf3880 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x564583bf3868 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x564583bf3378 <col:36> '_Bool' lvalue Var 0x564583bee348 'a$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x564583bf3818 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x564583bf37e8 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x564583bf3588 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x564583bf34a8 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x564583bf33d0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x564583bf33b8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x564583bf3398 <col:55> '_Bool' lvalue Var 0x564583bee250 'a$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x564583bf3488 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x564583bf3420 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x564583bf3408 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x564583bf33e8 <col:74> '_Bool' lvalue Var 0x564583bede28 'a$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x564583bf3470 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x564583bf3458 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x564583bf3438 <col:93> '_Bool' lvalue Var 0x564583bee348 'a$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x564583bf3568 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x564583bf3500 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x564583bf34e8 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x564583bf34c8 <col:112> '_Bool' lvalue Var 0x564583bede28 'a$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x564583bf3550 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x564583bf3538 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x564583bf3518 <col:131> '_Bool' lvalue Var 0x564583bee060 'a$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x564583bf37d0 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x564583bf37b8 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x564583bf35a8 <col:148> '_Bool' lvalue Var 0x564583bee348 'a$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x564583bf3798 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x564583bf3768 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x564583bf3668 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x564583bf3620 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x564583bf3608 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x564583bf35c8 <col:166> '_Bool' lvalue Var 0x564583bee250 'a$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x564583bf3650 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x564583bf3638 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x564583bf35e8 <col:184> '_Bool' lvalue Var 0x564583bede28 'a$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x564583bf3738 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x564583bf36b8 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x564583bf3688 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x564583bf3750 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x564583bf3710 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x564583bf36e0 <col:219> 'int' 0
|   |-BinaryOperator 0x564583bf3e88 <line:782:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x564583bf3900 <col:3> '_Bool' lvalue Var 0x564583bede28 'a$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x564583bf3e70 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x564583bf3e40 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x564583bf3df8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x564583bf3de0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x564583bf3920 <col:20> '_Bool' lvalue Var 0x564583bee888 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x564583bf3e28 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x564583bf3e10 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x564583bf3940 <col:36> '_Bool' lvalue Var 0x564583bede28 'a$r_buff0_thd3' '_Bool'
|   |     `-ParenExpr 0x564583bf3dc0 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x564583bf3d90 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x564583bf3b50 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x564583bf3a70 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x564583bf3998 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x564583bf3980 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x564583bf3960 <col:55> '_Bool' lvalue Var 0x564583bee250 'a$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x564583bf3a50 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x564583bf39e8 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x564583bf39d0 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x564583bf39b0 <col:74> '_Bool' lvalue Var 0x564583bede28 'a$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x564583bf3a38 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x564583bf3a20 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x564583bf3a00 <col:93> '_Bool' lvalue Var 0x564583bee348 'a$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x564583bf3b30 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x564583bf3ac8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x564583bf3ab0 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x564583bf3a90 <col:112> '_Bool' lvalue Var 0x564583bede28 'a$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x564583bf3b18 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x564583bf3b00 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x564583bf3ae0 <col:131> '_Bool' lvalue Var 0x564583bee060 'a$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x564583bf3d78 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x564583bf3d60 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x564583bf3b70 <col:148> '_Bool' lvalue Var 0x564583bede28 'a$r_buff0_thd3' '_Bool'
|   |         `-ParenExpr 0x564583bf3d40 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x564583bf3d10 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x564583bf3c30 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x564583bf3be8 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x564583bf3bd0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x564583bf3b90 <col:166> '_Bool' lvalue Var 0x564583bee250 'a$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x564583bf3c18 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x564583bf3c00 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x564583bf3bb0 <col:184> '_Bool' lvalue Var 0x564583bede28 'a$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x564583bf3cc8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x564583bf3c80 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x564583bf3c50 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x564583bf3cf8 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x564583bf3ce0 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x564583bf3ca8 <col:212> '_Bool' lvalue Var 0x564583bede28 'a$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x564583bf4478 <line:783:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x564583bf3ea8 <col:3> '_Bool' lvalue Var 0x564583bee060 'a$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x564583bf4460 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x564583bf4430 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x564583bf43e8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x564583bf43d0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x564583bf3ec8 <col:20> '_Bool' lvalue Var 0x564583bee888 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x564583bf4418 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x564583bf4400 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x564583bf3ee8 <col:36> '_Bool' lvalue Var 0x564583bee060 'a$r_buff1_thd3' '_Bool'
|   |     `-ParenExpr 0x564583bf43b0 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x564583bf4380 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x564583bf4120 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x564583bf4040 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x564583bf3f40 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x564583bf3f28 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x564583bf3f08 <col:55> '_Bool' lvalue Var 0x564583bee250 'a$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x564583bf4020 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x564583bf3f90 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x564583bf3f78 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x564583bf3f58 <col:74> '_Bool' lvalue Var 0x564583bede28 'a$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x564583bf4008 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x564583bf3ff0 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x564583bf3fd0 <col:93> '_Bool' lvalue Var 0x564583bee348 'a$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x564583bf4100 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x564583bf4098 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x564583bf4080 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x564583bf4060 <col:112> '_Bool' lvalue Var 0x564583bede28 'a$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x564583bf40e8 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x564583bf40d0 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x564583bf40b0 <col:131> '_Bool' lvalue Var 0x564583bee060 'a$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x564583bf4368 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x564583bf4350 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x564583bf4140 <col:148> '_Bool' lvalue Var 0x564583bee060 'a$r_buff1_thd3' '_Bool'
|   |         `-ParenExpr 0x564583bf4330 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x564583bf4300 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x564583bf4200 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x564583bf41b8 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x564583bf41a0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x564583bf4160 <col:166> '_Bool' lvalue Var 0x564583bee250 'a$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x564583bf41e8 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x564583bf41d0 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x564583bf4180 <col:184> '_Bool' lvalue Var 0x564583bede28 'a$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x564583bf42d0 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x564583bf4250 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x564583bf4220 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x564583bf42e8 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x564583bf42a8 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x564583bf4278 <col:219> 'int' 0
|   |-BinaryOperator 0x564583bf44f0 <line:784:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x564583bf4498 <col:3> 'int' lvalue Var 0x564583beda10 '__unbuffered_p2_EBX' 'int'
|   | `-ImplicitCastExpr 0x564583bf44d8 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x564583bf44b8 <col:25> 'int' lvalue Var 0x564583bedb30 'a' 'int'
|   |-BinaryOperator 0x564583bf4620 <line:785:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x564583bf4510 <col:3> 'int' lvalue Var 0x564583bedb30 'a' 'int'
|   | `-ConditionalOperator 0x564583bf45f0 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x564583bf45a8 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x564583bf4590 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x564583bf4530 <col:7> '_Bool' lvalue Var 0x564583bedbc8 'a$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x564583bf45c0 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x564583bf4550 <col:25> 'int' lvalue Var 0x564583bedc48 'a$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x564583bf45d8 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x564583bf4570 <col:37> 'int' lvalue Var 0x564583bedb30 'a' 'int'
|   |-BinaryOperator 0x564583bf46b8 <line:786:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x564583bf4640 <col:3> '_Bool' lvalue Var 0x564583bedbc8 'a$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x564583bf4690 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x564583bf4660 <col:28> 'int' 0
|   |-CallExpr 0x564583bf4710 <line:787:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x564583bf46f8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564583bf46d8 <col:3> 'void ()' Function 0x564583b94410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x564583bf4768 <line:788:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x564583bf4750 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564583bf4730 <col:3> 'void ()' Function 0x564583b94350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x564583bf4a50 <line:789:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x564583bf4788 <col:3> 'int' lvalue Var 0x564583bedb30 'a' 'int'
|   | `-ConditionalOperator 0x564583bf4a20 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x564583bf4848 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x564583bf4800 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x564583bf47e8 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x564583bf47a8 <col:7> '_Bool' lvalue Var 0x564583bee250 'a$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x564583bf4830 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x564583bf4818 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x564583bf47c8 <col:25> '_Bool' lvalue Var 0x564583bede28 'a$r_buff0_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x564583bf4a08 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x564583bf4868 <col:42> 'int' lvalue Var 0x564583bee1d8 'a$w_buff0' 'int'
|   |   `-ParenExpr 0x564583bf49e8 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x564583bf49b8 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x564583bf4928 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x564583bf48e0 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x564583bf48c8 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x564583bf4888 <col:55> '_Bool' lvalue Var 0x564583bee348 'a$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x564583bf4910 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x564583bf48f8 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x564583bf48a8 <col:73> '_Bool' lvalue Var 0x564583bee060 'a$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x564583bf4988 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x564583bf4948 <col:90> 'int' lvalue Var 0x564583bee2d0 'a$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x564583bf49a0 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x564583bf4968 <col:102> 'int' lvalue Var 0x564583bedb30 'a' 'int'
|   |-BinaryOperator 0x564583bf4c58 <line:790:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x564583bf4a70 <col:3> '_Bool' lvalue Var 0x564583bee250 'a$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x564583bf4c40 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x564583bf4c10 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x564583bf4b30 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x564583bf4ae8 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x564583bf4ad0 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x564583bf4a90 <col:20> '_Bool' lvalue Var 0x564583bee250 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x564583bf4b18 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x564583bf4b00 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x564583bf4ab0 <col:38> '_Bool' lvalue Var 0x564583bede28 'a$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x564583bf4bc8 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x564583bf4b80 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x564583bf4b50 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x564583bf4bf8 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x564583bf4be0 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x564583bf4ba8 <col:66> '_Bool' lvalue Var 0x564583bee250 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x564583bf4f40 <line:791:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x564583bf4c78 <col:3> '_Bool' lvalue Var 0x564583bee348 'a$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x564583bf4f28 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x564583bf4ef8 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x564583bf4e18 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x564583bf4d38 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x564583bf4cf0 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x564583bf4cd8 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x564583bf4c98 <col:20> '_Bool' lvalue Var 0x564583bee250 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x564583bf4d20 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x564583bf4d08 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x564583bf4cb8 <col:38> '_Bool' lvalue Var 0x564583bede28 'a$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x564583bf4df8 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x564583bf4db0 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x564583bf4d98 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x564583bf4d58 <col:56> '_Bool' lvalue Var 0x564583bee348 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x564583bf4de0 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x564583bf4dc8 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x564583bf4d78 <col:74> '_Bool' lvalue Var 0x564583bee060 'a$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x564583bf4eb0 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x564583bf4e68 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x564583bf4e38 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x564583bf4ee0 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x564583bf4ec8 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x564583bf4e90 <col:102> '_Bool' lvalue Var 0x564583bee348 'a$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x564583bf5168 <line:792:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x564583bf4f60 <col:3> '_Bool' lvalue Var 0x564583bede28 'a$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x564583bf5150 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x564583bf5120 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x564583bf5040 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x564583bf4ff8 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x564583bf4fe0 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x564583bf4f80 <col:20> '_Bool' lvalue Var 0x564583bee250 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x564583bf5028 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x564583bf5010 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x564583bf4fa0 <col:38> '_Bool' lvalue Var 0x564583bede28 'a$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x564583bf50d8 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x564583bf5090 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x564583bf5060 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x564583bf5108 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x564583bf50f0 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x564583bf50b8 <col:66> '_Bool' lvalue Var 0x564583bede28 'a$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x564583bf5450 <line:793:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x564583bf5188 <col:3> '_Bool' lvalue Var 0x564583bee060 'a$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x564583bf5438 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x564583bf5408 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x564583bf5328 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x564583bf5248 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x564583bf5200 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x564583bf51e8 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x564583bf51a8 <col:20> '_Bool' lvalue Var 0x564583bee250 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x564583bf5230 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x564583bf5218 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x564583bf51c8 <col:38> '_Bool' lvalue Var 0x564583bede28 'a$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x564583bf5308 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x564583bf52c0 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x564583bf52a8 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x564583bf5268 <col:56> '_Bool' lvalue Var 0x564583bee348 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x564583bf52f0 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x564583bf52d8 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x564583bf5288 <col:74> '_Bool' lvalue Var 0x564583bee060 'a$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x564583bf53c0 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x564583bf5378 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x564583bf5348 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x564583bf53f0 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x564583bf53d8 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x564583bf53a0 <col:102> '_Bool' lvalue Var 0x564583bee060 'a$r_buff1_thd3' '_Bool'
|   |-CallExpr 0x564583bf54a8 <line:794:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x564583bf5490 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564583bf5470 <col:3> 'void ()' Function 0x564583b94410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x564583bf5500 <line:795:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x564583bf54e8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564583bf54c8 <col:3> 'void ()' Function 0x564583b94350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x564583bf55b8 <line:796:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x564583bf5520 <col:3> 'int' lvalue Var 0x564583bed590 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x564583bf5598 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x564583bf5580 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x564583bf5540 <col:22> 'int' lvalue Var 0x564583bed590 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x564583bf5560 <col:41> 'int' 1
|   |-CallExpr 0x564583bf5610 <line:797:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x564583bf55f8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564583bf55d8 <col:3> 'void ()' Function 0x564583b94410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x564583bf5688 <line:798:3, col:36>
|     `-CallExpr 0x564583bf5668 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x564583bf5650 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x564583bf5630 <col:10> 'void *(void)' Function 0x564583b93e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x564583bf57d0 prev 0x564583bed2d8 <line:800:1, line:802:1> line:800:6 fence 'void ()'
| `-CompoundStmt 0x564583bf5870 <line:801:1, line:802:1>
|-FunctionDecl 0x564583bf58a0 prev 0x564583bed398 <line:803:1, line:805:1> line:803:6 isync 'void ()'
| `-CompoundStmt 0x564583bf5940 <line:804:1, line:805:1>
|-FunctionDecl 0x564583bf5970 prev 0x564583bed458 <line:806:1, line:808:1> line:806:6 lwfence 'void ()'
| `-CompoundStmt 0x564583bf5a10 <line:807:1, line:808:1>
`-FunctionDecl 0x564583bf5a78 <line:809:1, line:833:1> line:809:5 main 'int ()'
  `-CompoundStmt 0x564583bf7818 <line:810:1, line:833:1>
    |-DeclStmt 0x564583bf5b90 <line:811:3, col:17>
    | `-VarDecl 0x564583bf5b28 <col:3, col:13> col:13 used t283 'pthread_t':'unsigned long'
    |-CallExpr 0x564583bf5d98 <line:812:3, col:53> 'int'
    | |-ImplicitCastExpr 0x564583bf5d80 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x564583bf5ba8 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x564583bd48f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x564583bf5be8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x564583bf5bc8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x564583bf5b28 't283' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x564583bf5dd8 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x564583bf5c60 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x564583bf5c38 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x564583bf5c00 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x564583bf5df0 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x564583bf5c80 <col:38> 'void *(void *)' Function 0x564583bee9a0 'P0' 'void *(void *)'
    | `-ParenExpr 0x564583bf5d00 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x564583bf5cd8 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x564583bf5ca0 <col:51> 'int' 0
    |-DeclStmt 0x564583bf5e80 <line:813:3, col:17>
    | `-VarDecl 0x564583bf5e18 <col:3, col:13> col:13 used t284 'pthread_t':'unsigned long'
    |-CallExpr 0x564583bf6050 <line:814:3, col:53> 'int'
    | |-ImplicitCastExpr 0x564583bf6038 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x564583bf5e98 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x564583bd48f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x564583bf5ed8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x564583bf5eb8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x564583bf5e18 't284' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x564583bf6090 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x564583bf5f50 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x564583bf5f28 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x564583bf5ef0 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x564583bf60a8 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x564583bf5f70 <col:38> 'void *(void *)' Function 0x564583bf0378 'P1' 'void *(void *)'
    | `-ParenExpr 0x564583bf6018 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x564583bf5ff0 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x564583bf5f90 <col:51> 'int' 0
    |-DeclStmt 0x564583bf6138 <line:815:3, col:17>
    | `-VarDecl 0x564583bf60d0 <col:3, col:13> col:13 used t285 'pthread_t':'unsigned long'
    |-CallExpr 0x564583bf62e0 <line:816:3, col:53> 'int'
    | |-ImplicitCastExpr 0x564583bf62c8 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x564583bf6150 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x564583bd48f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x564583bf6190 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x564583bf6170 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x564583bf60d0 't285' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x564583bf6320 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x564583bf6208 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x564583bf61e0 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x564583bf61a8 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x564583bf6338 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x564583bf6228 <col:38> 'void *(void *)' Function 0x564583bf1978 'P2' 'void *(void *)'
    | `-ParenExpr 0x564583bf62a8 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x564583bf6280 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x564583bf6248 <col:51> 'int' 0
    |-CallExpr 0x564583bf6388 <line:817:3, col:27> 'void'
    | `-ImplicitCastExpr 0x564583bf6370 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x564583bf6350 <col:3> 'void ()' Function 0x564583b94350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x564583bf6458 <line:818:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x564583bf63a8 <col:3> '_Bool' lvalue Var 0x564583bee3c0 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x564583bf6440 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x564583bf6420 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x564583bf6408 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x564583bf63c8 <col:21> 'int' lvalue Var 0x564583bed590 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x564583bf63e8 <col:41> 'int' 3
    |-CallExpr 0x564583bf64b0 <line:819:3, col:25> 'void'
    | `-ImplicitCastExpr 0x564583bf6498 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x564583bf6478 <col:3> 'void ()' Function 0x564583b94410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x564583bf6528 <line:820:3, col:36> 'void'
    | |-ImplicitCastExpr 0x564583bf6510 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x564583bf64d0 <col:3> 'void (int)' Function 0x564583b93ca0 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x564583bf6568 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x564583bf6550 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x564583bf64f0 <col:21> '_Bool' lvalue Var 0x564583bee3c0 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x564583bf65b8 <line:821:3, col:27> 'void'
    | `-ImplicitCastExpr 0x564583bf65a0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x564583bf6580 <col:3> 'void ()' Function 0x564583b94350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x564583bf68a0 <line:822:3, col:103> 'int' '='
    | |-DeclRefExpr 0x564583bf65d8 <col:3> 'int' lvalue Var 0x564583bedb30 'a' 'int'
    | `-ConditionalOperator 0x564583bf6870 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x564583bf6698 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x564583bf6650 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x564583bf6638 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x564583bf65f8 <col:7> '_Bool' lvalue Var 0x564583bee250 'a$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x564583bf6680 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x564583bf6668 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x564583bf6618 <col:25> '_Bool' lvalue Var 0x564583bedcc0 'a$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x564583bf6858 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x564583bf66b8 <col:42> 'int' lvalue Var 0x564583bee1d8 'a$w_buff0' 'int'
    |   `-ParenExpr 0x564583bf6838 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x564583bf6808 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x564583bf6778 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x564583bf6730 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x564583bf6718 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x564583bf66d8 <col:55> '_Bool' lvalue Var 0x564583bee348 'a$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x564583bf6760 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x564583bf6748 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x564583bf66f8 <col:73> '_Bool' lvalue Var 0x564583bedea0 'a$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x564583bf67d8 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x564583bf6798 <col:90> 'int' lvalue Var 0x564583bee2d0 'a$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x564583bf67f0 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x564583bf67b8 <col:102> 'int' lvalue Var 0x564583bedb30 'a' 'int'
    |-BinaryOperator 0x564583bf6aa8 <line:823:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x564583bf68c0 <col:3> '_Bool' lvalue Var 0x564583bee250 'a$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x564583bf6a90 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x564583bf6a60 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x564583bf6980 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x564583bf6938 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x564583bf6920 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x564583bf68e0 <col:20> '_Bool' lvalue Var 0x564583bee250 'a$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x564583bf6968 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x564583bf6950 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x564583bf6900 <col:38> '_Bool' lvalue Var 0x564583bedcc0 'a$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x564583bf6a18 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x564583bf69d0 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x564583bf69a0 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x564583bf6a48 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x564583bf6a30 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x564583bf69f8 <col:66> '_Bool' lvalue Var 0x564583bee250 'a$w_buff0_used' '_Bool'
    |-BinaryOperator 0x564583bf6d90 <line:824:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x564583bf6ac8 <col:3> '_Bool' lvalue Var 0x564583bee348 'a$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x564583bf6d78 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x564583bf6d48 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x564583bf6c68 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x564583bf6b88 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x564583bf6b40 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x564583bf6b28 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x564583bf6ae8 <col:20> '_Bool' lvalue Var 0x564583bee250 'a$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x564583bf6b70 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x564583bf6b58 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x564583bf6b08 <col:38> '_Bool' lvalue Var 0x564583bedcc0 'a$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x564583bf6c48 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x564583bf6c00 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x564583bf6be8 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x564583bf6ba8 <col:56> '_Bool' lvalue Var 0x564583bee348 'a$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x564583bf6c30 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x564583bf6c18 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x564583bf6bc8 <col:74> '_Bool' lvalue Var 0x564583bedea0 'a$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x564583bf6d00 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x564583bf6cb8 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x564583bf6c88 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x564583bf6d30 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x564583bf6d18 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x564583bf6ce0 <col:102> '_Bool' lvalue Var 0x564583bee348 'a$w_buff1_used' '_Bool'
    |-BinaryOperator 0x564583bf6f98 <line:825:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x564583bf6db0 <col:3> '_Bool' lvalue Var 0x564583bedcc0 'a$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x564583bf6f80 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x564583bf6f50 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x564583bf6e70 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x564583bf6e28 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x564583bf6e10 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x564583bf6dd0 <col:20> '_Bool' lvalue Var 0x564583bee250 'a$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x564583bf6e58 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x564583bf6e40 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x564583bf6df0 <col:38> '_Bool' lvalue Var 0x564583bedcc0 'a$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x564583bf6f08 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x564583bf6ec0 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x564583bf6e90 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x564583bf6f38 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x564583bf6f20 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x564583bf6ee8 <col:66> '_Bool' lvalue Var 0x564583bedcc0 'a$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x564583bf72a8 <line:826:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x564583bf6fb8 <col:3> '_Bool' lvalue Var 0x564583bedea0 'a$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x564583bf7290 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x564583bf7260 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x564583bf7180 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x564583bf70a0 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x564583bf7058 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x564583bf7040 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x564583bf7000 <col:20> '_Bool' lvalue Var 0x564583bee250 'a$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x564583bf7088 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x564583bf7070 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x564583bf7020 <col:38> '_Bool' lvalue Var 0x564583bedcc0 'a$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x564583bf7160 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x564583bf7118 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x564583bf7100 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x564583bf70c0 <col:56> '_Bool' lvalue Var 0x564583bee348 'a$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x564583bf7148 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x564583bf7130 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x564583bf70e0 <col:74> '_Bool' lvalue Var 0x564583bedea0 'a$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x564583bf7218 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x564583bf71d0 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x564583bf71a0 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x564583bf7248 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x564583bf7230 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x564583bf71f8 <col:102> '_Bool' lvalue Var 0x564583bedea0 'a$r_buff1_thd0' '_Bool'
    |-CallExpr 0x564583bf7300 <line:827:3, col:25> 'void'
    | `-ImplicitCastExpr 0x564583bf72e8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x564583bf72c8 <col:3> 'void ()' Function 0x564583b94410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x564583bf7358 <line:828:3, col:27> 'void'
    | `-ImplicitCastExpr 0x564583bf7340 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x564583bf7320 <col:3> 'void ()' Function 0x564583b94350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x564583bf76c0 <line:829:3, col:141> '_Bool' '='
    | |-DeclRefExpr 0x564583bf7378 <col:3> '_Bool' lvalue Var 0x564583bee438 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x564583bf76a8 <col:21, col:141> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x564583bf7690 <col:21, col:141> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x564583bf7670 <col:22, col:141> 'int'
    |       `-BinaryOperator 0x564583bf7650 <col:23, col:140> 'int' '&&'
    |         |-BinaryOperator 0x564583bf75b8 <col:23, col:112> 'int' '&&'
    |         | |-BinaryOperator 0x564583bf7520 <col:23, col:84> 'int' '&&'
    |         | | |-BinaryOperator 0x564583bf7488 <col:23, col:56> 'int' '&&'
    |         | | | |-BinaryOperator 0x564583bf73f0 <col:23, col:28> 'int' '=='
    |         | | | | |-ImplicitCastExpr 0x564583bf73d8 <col:23> 'int' <LValueToRValue>
    |         | | | | | `-DeclRefExpr 0x564583bf7398 <col:23> 'int' lvalue Var 0x564583bee538 'x' 'int'
    |         | | | | `-IntegerLiteral 0x564583bf73b8 <col:28> 'int' 2
    |         | | | `-BinaryOperator 0x564583bf7468 <col:33, col:56> 'int' '=='
    |         | | |   |-ImplicitCastExpr 0x564583bf7450 <col:33> 'int' <LValueToRValue>
    |         | | |   | `-DeclRefExpr 0x564583bf7410 <col:33> 'int' lvalue Var 0x564583bed6b0 '__unbuffered_p1_EAX' 'int'
    |         | | |   `-IntegerLiteral 0x564583bf7430 <col:56> 'int' 1
    |         | | `-BinaryOperator 0x564583bf7500 <col:61, col:84> 'int' '=='
    |         | |   |-ImplicitCastExpr 0x564583bf74e8 <col:61> 'int' <LValueToRValue>
    |         | |   | `-DeclRefExpr 0x564583bf74a8 <col:61> 'int' lvalue Var 0x564583bed7d0 '__unbuffered_p1_EBX' 'int'
    |         | |   `-IntegerLiteral 0x564583bf74c8 <col:84> 'int' 0
    |         | `-BinaryOperator 0x564583bf7598 <col:89, col:112> 'int' '=='
    |         |   |-ImplicitCastExpr 0x564583bf7580 <col:89> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x564583bf7540 <col:89> 'int' lvalue Var 0x564583bed8f0 '__unbuffered_p2_EAX' 'int'
    |         |   `-IntegerLiteral 0x564583bf7560 <col:112> 'int' 1
    |         `-BinaryOperator 0x564583bf7630 <col:117, col:140> 'int' '=='
    |           |-ImplicitCastExpr 0x564583bf7618 <col:117> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x564583bf75d8 <col:117> 'int' lvalue Var 0x564583beda10 '__unbuffered_p2_EBX' 'int'
    |           `-IntegerLiteral 0x564583bf75f8 <col:140> 'int' 0
    |-CallExpr 0x564583bf7718 <line:830:3, col:25> 'void'
    | `-ImplicitCastExpr 0x564583bf7700 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x564583bf76e0 <col:3> 'void ()' Function 0x564583b94410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x564583bf7790 <line:831:3, col:36> 'void'
    | |-ImplicitCastExpr 0x564583bf7778 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x564583bf7738 <col:3> 'void (int)' Function 0x564583b940d8 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x564583bf77d0 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x564583bf77b8 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x564583bf7758 <col:21> '_Bool' lvalue Var 0x564583bee438 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x564583bf7808 <line:832:3, col:10>
      `-IntegerLiteral 0x564583bf77e8 <col:10> 'int' 0
