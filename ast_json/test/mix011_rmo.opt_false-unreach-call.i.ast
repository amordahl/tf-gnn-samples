TranslationUnitDecl 0x564e2fd92f88 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x564e2fd93848 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x564e2fd93520 '__int128'
|-TypedefDecl 0x564e2fd938b8 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x564e2fd93540 'unsigned __int128'
|-TypedefDecl 0x564e2fd93bc0 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x564e2fd93990 'struct __NSConstantString_tag'
|   `-Record 0x564e2fd93910 '__NSConstantString_tag'
|-TypedefDecl 0x564e2fd93c68 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x564e2fd93c20 'char *'
|   `-BuiltinType 0x564e2fd93020 'char'
|-TypedefDecl 0x564e2fdd2b60 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x564e2fd93f00 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x564e2fd93d40 'struct __va_list_tag'
|     `-Record 0x564e2fd93cc0 '__va_list_tag'
|-FunctionDecl 0x564e2fdd2ca0 <pthread-wmm/mix011_rmo.opt_false-unreach-call.i:1:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x564e2fdd2bd0 <col:31> col:34 'int'
|-FunctionDecl 0x564e2fdd2e68 <line:2:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x564e2fdd2f90 <line:3:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x564e2fdd30d8 <line:4:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x564e2fdd3048 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x564e2fdd3308 <col:40, col:99>
|   |-IfStmt 0x564e2fdd32d8 <col:42, col:88>
|   | |-UnaryOperator 0x564e2fdd31b8 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x564e2fdd31a0 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x564e2fdd3180 <col:47> 'int' lvalue ParmVar 0x564e2fdd3048 'expression' 'int'
|   | `-CompoundStmt 0x564e2fdd32c0 <col:59, col:88>
|   |   `-LabelStmt 0x564e2fdd32a8 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x564e2fdd3238 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x564e2fdd3220 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x564e2fdd31d0 <col:68> 'void () __attribute__((noreturn))' Function 0x564e2fdd2f90 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x564e2fdd32f0 <col:89>
|   `-ReturnStmt 0x564e2fdd32f8 <col:91>
|-FunctionDecl 0x564e2fdd3350 <line:5:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x564e2fdd3410 <line:6:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x564e2fdd3790 <line:8:1, line:10:76> line:8:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x564e2fdd34c8 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x564e2fdd3548 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x564e2fdd35c8 <line:9:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x564e2fdd3648 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x564e2fdd3850 <line:10:22>
|-FunctionDecl 0x564e2fdf98a0 <line:11:1, line:13:76> line:11:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x564e2fdd38c0 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x564e2fdd3940 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x564e2fdd39c0 <line:12:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x564e2fdd3a40 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x564e2fdf9960 <line:13:22>
|-FunctionDecl 0x564e2fdf9c10 <line:14:1, line:15:76> line:14:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x564e2fdf99d0 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x564e2fdf9a50 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x564e2fdf9ad0 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x564e2fdf9cc8 <line:15:22>
|-TypedefDecl 0x564e2fdf9d38 <line:17:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x564e2fd930e0 'unsigned char'
|-TypedefDecl 0x564e2fdf9da8 <line:18:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x564e2fd93100 'unsigned short'
|-TypedefDecl 0x564e2fdf9e18 <line:19:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x564e2fd93120 'unsigned int'
|-TypedefDecl 0x564e2fdf9e88 <line:20:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x564e2fd93140 'unsigned long'
|-TypedefDecl 0x564e2fdf9ef8 <line:21:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x564e2fd93040 'signed char'
|-TypedefDecl 0x564e2fdf9f68 <line:22:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x564e2fd930e0 'unsigned char'
|-TypedefDecl 0x564e2fdf9fd8 <line:23:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x564e2fd93060 'short'
|-TypedefDecl 0x564e2fdfa048 <line:24:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x564e2fd93100 'unsigned short'
|-TypedefDecl 0x564e2fdfa0b8 <line:25:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x564e2fd93080 'int'
|-TypedefDecl 0x564e2fdfa128 <line:26:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x564e2fd93120 'unsigned int'
|-TypedefDecl 0x564e2fdfa198 <line:27:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x564e2fd930a0 'long'
|-TypedefDecl 0x564e2fdfa208 <line:28:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x564e2fd93140 'unsigned long'
|-TypedefDecl 0x564e2fdfa278 <line:29:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x564e2fd930a0 'long'
|-TypedefDecl 0x564e2fdfa2e8 <line:30:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x564e2fd93140 'unsigned long'
|-TypedefDecl 0x564e2fdfa358 <line:31:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x564e2fd93140 'unsigned long'
|-TypedefDecl 0x564e2fdfa3c8 <line:32:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x564e2fd93120 'unsigned int'
|-TypedefDecl 0x564e2fdfa438 <line:33:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x564e2fd93120 'unsigned int'
|-TypedefDecl 0x564e2fdfa4a8 <line:34:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x564e2fd93140 'unsigned long'
|-TypedefDecl 0x564e2fdfa518 <line:35:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x564e2fd93140 'unsigned long'
|-TypedefDecl 0x564e2fdfa588 <line:36:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x564e2fd93120 'unsigned int'
|-TypedefDecl 0x564e2fdfa5f8 <line:37:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x564e2fd93140 'unsigned long'
|-TypedefDecl 0x564e2fdfa668 <line:38:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x564e2fd930a0 'long'
|-TypedefDecl 0x564e2fdfa6d8 <line:39:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x564e2fd930a0 'long'
|-TypedefDecl 0x564e2fdfa748 <line:40:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x564e2fd93080 'int'
|-RecordDecl 0x564e2fdfa7a0 <line:41:9, col:32> col:9 struct definition
| `-FieldDecl 0x564e2fdfa918 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x564e2fdfa9d0 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x564e2fdfa970 'struct __fsid_t' sugar
|   `-RecordType 0x564e2fdfa820 '__fsid_t'
|     `-Record 0x564e2fdfa7a0 ''
|-TypedefDecl 0x564e2fdfaa58 <line:42:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x564e2fd930a0 'long'
|-TypedefDecl 0x564e2fdfaac8 <line:43:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x564e2fd93140 'unsigned long'
|-TypedefDecl 0x564e2fdfab38 <line:44:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x564e2fd93140 'unsigned long'
|-TypedefDecl 0x564e2fdfaba8 <line:45:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x564e2fd93120 'unsigned int'
|-TypedefDecl 0x564e2fdfac18 <line:46:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x564e2fd930a0 'long'
|-TypedefDecl 0x564e2fdfac88 <line:47:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x564e2fd93120 'unsigned int'
|-TypedefDecl 0x564e2fdfacf8 <line:48:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x564e2fd930a0 'long'
|-TypedefDecl 0x564e2fdfad68 <line:49:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x564e2fd93080 'int'
|-TypedefDecl 0x564e2fdfadd8 <line:50:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x564e2fd93080 'int'
|-TypedefDecl 0x564e2fdfae48 <line:51:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x564e2fd93080 'int'
|-TypedefDecl 0x564e2fdfaeb8 <line:52:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x564e2fd937a0 'void *'
|   `-BuiltinType 0x564e2fd92fe0 'void'
|-TypedefDecl 0x564e2fdfaf28 <line:53:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x564e2fd930a0 'long'
|-TypedefDecl 0x564e2fdfaf98 <line:54:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x564e2fd930a0 'long'
|-TypedefDecl 0x564e2fdfb008 <line:55:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x564e2fd930a0 'long'
|-TypedefDecl 0x564e2fdfb078 <line:56:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x564e2fd93140 'unsigned long'
|-TypedefDecl 0x564e2fdfb0e8 <line:57:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x564e2fd93140 'unsigned long'
|-TypedefDecl 0x564e2fdfb158 <line:58:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x564e2fd93140 'unsigned long'
|-TypedefDecl 0x564e2fdfb1c8 <line:59:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x564e2fd93140 'unsigned long'
|-TypedefDecl 0x564e2fdfb238 <line:60:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x564e2fd930a0 'long'
|-TypedefDecl 0x564e2fdfb2a8 <line:61:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x564e2fd930a0 'long'
|-TypedefDecl 0x564e2fdfb318 <line:62:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x564e2fd930a0 'long'
|-TypedefDecl 0x564e2fdfb388 <line:63:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x564e2fd93140 'unsigned long'
|-TypedefDecl 0x564e2fdfb418 <line:64:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x564e2fdfb3e0 '__off64_t' sugar
|   |-Typedef 0x564e2fdfa6d8 '__off64_t'
|   `-BuiltinType 0x564e2fd930a0 'long'
|-TypedefDecl 0x564e2fdfb510 <line:65:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x564e2fdfb4d0 '__quad_t *'
|   `-TypedefType 0x564e2fdfb470 '__quad_t' sugar
|     |-Typedef 0x564e2fdfa278 '__quad_t'
|     `-BuiltinType 0x564e2fd930a0 'long'
|-TypedefDecl 0x564e2fdfb580 <line:66:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x564e2fd93c20 'char *'
|   `-BuiltinType 0x564e2fd93020 'char'
|-TypedefDecl 0x564e2fdfb5f0 <line:67:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x564e2fd930a0 'long'
|-TypedefDecl 0x564e2fdfb660 <line:68:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x564e2fd93120 'unsigned int'
|-FunctionDecl 0x564e2fdfb7a8 <line:69:1, line:73:1> line:70:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x564e2fdfb6d0 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x564e2fdfbae8 <line:71:1, line:73:1>
|   `-ReturnStmt 0x564e2fdfbad8 <line:72:3, col:34>
|     `-CallExpr 0x564e2fdfba98 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x564e2fdfba80 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x564e2fdfba10 <col:10> '<builtin fn type>' Function 0x564e2fdfb880 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x564e2fdfbac0 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x564e2fdfba30 <col:29> 'unsigned int' lvalue ParmVar 0x564e2fdfb6d0 '__bsx' 'unsigned int'
|-FunctionDecl 0x564e2fdfb880 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x564e2fdfb920 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x564e2fdfb990 <col:10> Implicit
| `-ConstAttr 0x564e2fdfb9e8 <col:10> Implicit
|-FunctionDecl 0x564e2fdfbc40 <line:74:1, line:78:1> line:75:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x564e2fdfbb38 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x564e2fdfbf58 <line:76:1, line:78:1>
|   `-ReturnStmt 0x564e2fdfbf48 <line:77:3, col:34>
|     `-CallExpr 0x564e2fdfbf08 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x564e2fdfbef0 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x564e2fdfbe78 <col:10> '<builtin fn type>' Function 0x564e2fdfbce8 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x564e2fdfbf30 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x564e2fdfbe98 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x564e2fdfbb38 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x564e2fdfbce8 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x564e2fdfbd88 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x564e2fdfbdf8 <col:10> Implicit
| `-ConstAttr 0x564e2fdfbe50 <col:10> Implicit
|-TypedefDecl 0x564e2fdfbf88 <line:79:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x564e2fd93140 'unsigned long'
|-TypedefDecl 0x564e2fdfc018 <line:81:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x564e2fdfbfe0 '__time_t' sugar
|   |-Typedef 0x564e2fdfac18 '__time_t'
|   `-BuiltinType 0x564e2fd930a0 'long'
|-RecordDecl 0x564e2fdfc070 <line:84:1, line:88:3> line:84:8 struct timespec definition
| |-FieldDecl 0x564e2fdfc128 <line:86:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x564e2fdfc1b8 <line:87:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x564e2fdfc248 <line:89:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x564e2fdfc210 '__pid_t' sugar
|   |-Typedef 0x564e2fdfa748 '__pid_t'
|   `-BuiltinType 0x564e2fd93080 'int'
|-RecordDecl 0x564e2fdfc2a0 <line:90:1, line:93:3> line:90:8 struct sched_param definition
| `-FieldDecl 0x564e2fdfc360 <line:92:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x564e2fdfc3b0 <line:96:1, line:99:3> line:96:8 struct __sched_param definition
| `-FieldDecl 0x564e2fdfc470 <line:98:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x564e2fdfc4d8 <line:100:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x564e2fd93140 'unsigned long'
|-RecordDecl 0x564e2fdfc530 <line:101:9, line:104:1> line:101:9 struct definition
| `-FieldDecl 0x564e2fdfc7c0 <line:103:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x564e2fdfe8b0 <line:101:1, line:104:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x564e2fdfc810 'struct cpu_set_t' sugar
|   `-RecordType 0x564e2fdfc5b0 'cpu_set_t'
|     `-Record 0x564e2fdfc530 ''
|-FunctionDecl 0x564e2fdfeb88 <line:106:1, line:107:42> line:106:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x564e2fdfe958 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x564e2fdfea60 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x564e2fdfec38 <line:107:19>
|-FunctionDecl 0x564e2fdfee10 <line:108:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x564e2fdfeca0 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x564e2fdfeeb8 <col:69>
|-FunctionDecl 0x564e2fdff030 <line:109:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x564e2fdfef20 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x564e2fdff0d8 <col:64>
|-FunctionDecl 0x564e2fdff398 <line:112:1, line:113:45> line:112:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x564e2fdff140 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x564e2fdff278 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x564e2fdff448 <line:113:22>
|-FunctionDecl 0x564e2fdff6c8 <line:114:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x564e2fdff4b0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x564e2fdff5a8 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x564e2fdff778 <col:88>
|-FunctionDecl 0x564e2fdffa98 <line:115:1, line:116:85> line:115:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x564e2fdff7e0 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x564e2fdff8c0 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x564e2fdff950 <line:116:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x564e2fdffb50 <col:62>
|-FunctionDecl 0x564e2fdffcc8 <line:117:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x564e2fdffbb8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x564e2fdffd70 <col:63>
|-FunctionDecl 0x564e2fdffe98 <line:118:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x564e2fdfff38 <col:47>
|-FunctionDecl 0x564e2fe00040 <line:119:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x564e2fdfffa8 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x564e2fe000e8 <col:69>
|-FunctionDecl 0x564e2fe001f0 <line:120:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x564e2fe00158 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x564e2fe00298 <col:69>
|-FunctionDecl 0x564e2fe00558 <line:121:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x564e2fe00300 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x564e2fe00438 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x564e2fe00608 <col:88>
|-TypedefDecl 0x564e2fe00698 <line:125:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x564e2fe00660 '__clock_t' sugar
|   |-Typedef 0x564e2fdfaa58 '__clock_t'
|   `-BuiltinType 0x564e2fd930a0 'long'
|-TypedefDecl 0x564e2fe00728 <line:128:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x564e2fe006f0 '__clockid_t' sugar
|   |-Typedef 0x564e2fdfae48 '__clockid_t'
|   `-BuiltinType 0x564e2fd93080 'int'
|-TypedefDecl 0x564e2fe007b8 <line:129:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x564e2fe00780 '__timer_t' sugar
|   |-Typedef 0x564e2fdfaeb8 '__timer_t'
|   `-PointerType 0x564e2fd937a0 'void *'
|     `-BuiltinType 0x564e2fd92fe0 'void'
|-RecordDecl 0x564e2fe00810 <line:131:1, line:144:1> line:131:8 struct tm definition
| |-FieldDecl 0x564e2fe008e8 <line:133:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x564e2fe00950 <line:134:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x564e2fe009b8 <line:135:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x564e2fe00a20 <line:136:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x564e2fe00a88 <line:137:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x564e2fe00af0 <line:138:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x564e2fe00b58 <line:139:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x564e2fe00bc0 <line:140:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x564e2fe00c28 <line:141:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x564e2fe00c90 <line:142:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x564e2fe00cf8 <line:143:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x564e2fe00d48 <line:147:1, line:151:3> line:147:8 struct itimerspec definition
| |-FieldDecl 0x564e2fe00e18 <line:149:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x564e2fe00e88 <line:150:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x564e2fe00f30 <line:152:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x564e2fe01100 <line:154:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x564e2fe011a0 <col:45>
|-FunctionDecl 0x564e2fe01380 <line:155:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x564e2fe01270 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x564e2fe01428 <col:54>
|-FunctionDecl 0x564e2fe01628 <line:156:1, line:157:73> line:156:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x564e2fe01490 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x564e2fe01508 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x564e2fe016d8 <line:157:22>
| `-ConstAttr 0x564e2fe01730 <col:63>
|-FunctionDecl 0x564e2fe02560 <line:158:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x564e2fe01828 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x564e2fe02608 <col:56>
|-FunctionDecl 0x564e2fe029b0 <line:159:1, line:161:77> line:159:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x564e2fe02678 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x564e2fe026f0 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x564e2fe02770 <line:160:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x564e2fe02868 <line:161:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x564e2fe02a70 <col:54>
|-RecordDecl 0x564e2fe02ac8 <line:163:9, line:170:1> line:163:16 struct __locale_struct definition
| |-RecordDecl 0x564e2fe02b78 parent 0x564e2fd92f88 <line:165:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x564e2fe02dd8 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x564e2fe02e78 <line:166:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x564e2fe02ee0 <line:167:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x564e2fe02f48 <line:168:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x564e2fe03038 <line:169:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x564e2fe03158 <line:163:1, line:170:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x564e2fe03100 'struct __locale_struct *'
|   `-ElaboratedType 0x564e2fe03090 'struct __locale_struct' sugar
|     `-RecordType 0x564e2fe02b50 'struct __locale_struct'
|       `-Record 0x564e2fe02ac8 '__locale_struct'
|-TypedefDecl 0x564e2fe03208 <line:171:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x564e2fe031d0 '__locale_t' sugar
|   |-Typedef 0x564e2fe03158 '__locale_t'
|   `-PointerType 0x564e2fe03100 'struct __locale_struct *'
|     `-ElaboratedType 0x564e2fe03090 'struct __locale_struct' sugar
|       `-RecordType 0x564e2fe02b50 'struct __locale_struct'
|         `-Record 0x564e2fe02ac8 '__locale_struct'
|-FunctionDecl 0x564e2fe03610 <line:172:1, line:175:63> line:172:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x564e2fe03278 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x564e2fe032f0 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x564e2fe03370 <line:173:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x564e2fe03400 <line:174:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x564e2fe03478 <line:175:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x564e2fe036d8 <col:40>
|-FunctionDecl 0x564e2fe038c8 <line:177:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x564e2fe037a0 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x564e2fe03970 <col:66>
|-FunctionDecl 0x564e2fe03a80 <line:178:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x564e2fe039d8 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x564e2fe03b28 <col:69>
|-FunctionDecl 0x564e2fe03d58 <line:180:1, line:181:75> line:180:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x564e2fe03b90 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x564e2fe03c20 <line:181:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x564e2fe03e08 <col:52>
|-FunctionDecl 0x564e2fe03fb0 <line:182:1, line:183:78> line:182:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x564e2fe03e70 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x564e2fe03f00 <line:183:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x564e2fe04060 <col:55>
|-FunctionDecl 0x564e2fe041f8 <line:185:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x564e2fe040e0 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x564e2fe042a0 <col:62>
|-FunctionDecl 0x564e2fe04418 <line:186:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x564e2fe04308 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x564e2fe044c0 <col:60>
|-FunctionDecl 0x564e2fe04718 <line:188:1, line:189:67> line:188:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x564e2fe04578 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x564e2fe045f8 <line:189:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x564e2fe047c8 <col:44>
|-FunctionDecl 0x564e2fe049d8 <line:190:1, line:191:72> line:190:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x564e2fe04830 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x564e2fe048b0 <line:191:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x564e2fe04a88 <col:49>
|-VarDecl 0x564e2fe04b88 <line:192:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x564e2fe04c08 <line:193:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x564e2fe04c88 <line:194:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x564e2fe04d50 <line:195:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x564e2fe04e80 <line:196:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x564e2fe04f20 <col:42>
|-VarDecl 0x564e2fe04f90 <line:197:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x564e2fe05010 <line:198:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x564e2fe05198 <line:199:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x564e2fe05088 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x564e2fe05240 <col:57>
|-FunctionDecl 0x564e2fe05350 <line:200:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x564e2fe052c0 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x564e2fe053f8 <col:56>
|-FunctionDecl 0x564e2fe06540 <line:201:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x564e2fe05478 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x564e2fe065e8 <col:59>
|-FunctionDecl 0x564e2fe066f0 <line:202:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x564e2fe06658 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x564e2fe06798 <col:48>
| `-ConstAttr 0x564e2fe067f0 <col:89>
|-FunctionDecl 0x564e2fe06a58 <line:203:1, line:204:37> line:203:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x564e2fe068a8 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x564e2fe06938 <line:204:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x564e2fe06cb8 <line:205:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x564e2fe06b48 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x564e2fe06bd8 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x564e2fe06d68 <col:88>
|-FunctionDecl 0x564e2fe06f00 <line:206:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x564e2fe06dd0 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x564e2fe06e60 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x564e2fe06fb0 <col:88>
|-FunctionDecl 0x564e2fe071c8 <line:207:1, line:208:45> line:207:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x564e2fe07018 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x564e2fe070a8 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x564e2fe07278 <line:208:22>
|-FunctionDecl 0x564e2fe075e8 <line:209:1, line:211:30> line:209:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x564e2fe072e0 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x564e2fe07360 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x564e2fe073f0 <line:210:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x564e2fe07480 <line:211:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x564e2fe078e8 <line:212:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x564e2fe076e8 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x564e2fe077c0 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x564e2fe07998 <col:85>
|-FunctionDecl 0x564e2fe07d88 <line:213:1, line:215:75> line:213:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x564e2fe07a00 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x564e2fe07b38 <line:214:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x564e2fe07c40 <line:215:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x564e2fe07e40 <col:52>
|-FunctionDecl 0x564e2fe07fb8 <line:216:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x564e2fe07ea8 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x564e2fe08060 <col:61>
|-FunctionDecl 0x564e2fe08560 <line:217:1, line:219:85> line:217:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x564e2fe080c8 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x564e2fe08148 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x564e2fe08278 <line:218:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x564e2fe08368 <line:219:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x564e2fe08620 <col:62>
|-FunctionDecl 0x564e2fe08838 <line:220:1, line:221:45> line:220:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x564e2fe08688 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x564e2fe08718 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x564e2fe088e8 <line:221:22>
|-FunctionDecl 0x564e2fe089e8 <line:222:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x564e2fe08950 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x564e2fe08a90 <col:65>
|-TypedefDecl 0x564e2fe08b00 <line:224:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x564e2fd93140 'unsigned long'
|-RecordDecl 0x564e2fe08b58 <line:225:1, line:229:1> line:225:7 union pthread_attr_t definition
| |-FieldDecl 0x564e2fe08ca0 <line:227:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x564e2fe08d08 <line:228:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x564e2fe08db8 <line:230:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x564e2fe08d60 'union pthread_attr_t' sugar
|   `-RecordType 0x564e2fe08be0 'union pthread_attr_t'
|     `-Record 0x564e2fe08b58 'pthread_attr_t'
|-RecordDecl 0x564e2fe08e10 <line:231:9, line:235:1> line:231:16 struct __pthread_internal_list definition
| |-FieldDecl 0x564e2fe08f88 <line:233:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x564e2fe09000 <line:234:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x564e2fe090b0 <line:231:1, line:235:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x564e2fe09050 'struct __pthread_internal_list' sugar
|   `-RecordType 0x564e2fe08e90 'struct __pthread_internal_list'
|     `-Record 0x564e2fe08e10 '__pthread_internal_list'
|-RecordDecl 0x564e2fe09120 <line:236:9, line:250:1> line:236:9 union definition
| |-RecordDecl 0x564e2fe091c8 parent 0x564e2fd92f88 <line:238:3, line:247:3> line:238:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x564e2fe092a0 <line:240:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x564e2fe09308 <line:241:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x564e2fe09370 <line:242:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x564e2fe093d8 <line:243:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x564e2fe09440 <line:244:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x564e2fe094a8 <line:245:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x564e2fe0d580 <line:246:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x564e2fe0d630 <line:238:3, line:247:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x564e2fe0d720 <line:248:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x564e2fe0d788 <line:249:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x564e2fe0d910 <line:236:1, line:250:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x564e2fe0d8b0 'union pthread_mutex_t' sugar
|   `-RecordType 0x564e2fe091a0 'pthread_mutex_t'
|     `-Record 0x564e2fe09120 ''
|-RecordDecl 0x564e2fe0d980 <line:251:9, line:255:1> line:251:9 union definition
| |-FieldDecl 0x564e2fe0dac0 <line:253:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x564e2fe0db28 <line:254:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x564e2fe0dbe0 <line:251:1, line:255:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x564e2fe0db80 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x564e2fe0da00 'pthread_mutexattr_t'
|     `-Record 0x564e2fe0d980 ''
|-RecordDecl 0x564e2fe0dc50 <line:256:9, line:271:1> line:256:9 union definition
| |-RecordDecl 0x564e2fe0dcf8 <line:258:3, line:268:3> line:258:3 struct definition
| | |-FieldDecl 0x564e2fe0ddc0 <line:260:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x564e2fe0de28 <line:261:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x564e2fe0de90 <line:262:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x564e2fe0def8 <line:263:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x564e2fe0df60 <line:264:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x564e2fe0dfc8 <line:265:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x564e2fe0e030 <line:266:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x564e2fe0e098 <line:267:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x564e2fe0e150 <line:258:3, line:268:5> col:5 __data 'struct (anonymous struct at pthread-wmm/mix011_rmo.opt_false-unreach-call.i:258:3)':'struct pthread_cond_t::(anonymous at pthread-wmm/mix011_rmo.opt_false-unreach-call.i:258:3)'
| |-FieldDecl 0x564e2fe0e240 <line:269:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x564e2fe0e2a8 <line:270:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x564e2fe0e3e0 <line:256:1, line:271:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x564e2fe0e380 'union pthread_cond_t' sugar
|   `-RecordType 0x564e2fe0dcd0 'pthread_cond_t'
|     `-Record 0x564e2fe0dc50 ''
|-RecordDecl 0x564e2fe0e450 <line:272:9, line:276:1> line:272:9 union definition
| |-FieldDecl 0x564e2fe0e590 <line:274:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x564e2fe0e5f8 <line:275:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x564e2fe0e6b0 <line:272:1, line:276:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x564e2fe0e650 'union pthread_condattr_t' sugar
|   `-RecordType 0x564e2fe0e4d0 'pthread_condattr_t'
|     `-Record 0x564e2fe0e450 ''
|-TypedefDecl 0x564e2fe0e738 <line:277:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x564e2fd93120 'unsigned int'
|-TypedefDecl 0x564e2fe0e7a8 <line:278:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x564e2fd93080 'int'
|-RecordDecl 0x564e2fe0e800 <line:279:9, line:297:1> line:279:9 union definition
| |-RecordDecl 0x564e2fe0e8a8 <line:281:3, line:294:3> line:281:3 struct definition
| | |-FieldDecl 0x564e2fe0e970 <line:283:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x564e2fe0e9d8 <line:284:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x564e2fe0ea40 <line:285:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x564e2fe0eaa8 <line:286:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x564e2fe0eb10 <line:287:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x564e2fe0eb78 <line:288:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x564e2fe0ebe0 <line:289:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x564e2fe0ec48 <line:290:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x564e2fe0ecb0 <line:291:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x564e2fe0ed18 <line:292:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x564e2fe0ed80 <line:293:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x564e2fe0ee30 <line:281:3, line:294:5> col:5 __data 'struct (anonymous struct at pthread-wmm/mix011_rmo.opt_false-unreach-call.i:281:3)':'struct pthread_rwlock_t::(anonymous at pthread-wmm/mix011_rmo.opt_false-unreach-call.i:281:3)'
| |-FieldDecl 0x564e2fe0eed8 <line:295:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x564e2fe0ef40 <line:296:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x564e2fe0f090 <line:279:1, line:297:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x564e2fe0f030 'union pthread_rwlock_t' sugar
|   `-RecordType 0x564e2fe0e880 'pthread_rwlock_t'
|     `-Record 0x564e2fe0e800 ''
|-RecordDecl 0x564e2fe0f100 <line:298:9, line:302:1> line:298:9 union definition
| |-FieldDecl 0x564e2fe0f240 <line:300:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x564e2fe0f2a8 <line:301:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x564e2fe0f360 <line:298:1, line:302:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x564e2fe0f300 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x564e2fe0f180 'pthread_rwlockattr_t'
|     `-Record 0x564e2fe0f100 ''
|-TypedefDecl 0x564e2fe0f3e8 <line:303:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x564e2fd93084 'volatile int' volatile
|   `-BuiltinType 0x564e2fd93080 'int'
|-RecordDecl 0x564e2fe0f440 <line:304:9, line:308:1> line:304:9 union definition
| |-FieldDecl 0x564e2fe115b0 <line:306:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x564e2fe11618 <line:307:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x564e2fe116d0 <line:304:1, line:308:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x564e2fe11670 'union pthread_barrier_t' sugar
|   `-RecordType 0x564e2fe0f4c0 'pthread_barrier_t'
|     `-Record 0x564e2fe0f440 ''
|-RecordDecl 0x564e2fe11740 <line:309:9, line:313:1> line:309:9 union definition
| |-FieldDecl 0x564e2fe11840 <line:311:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x564e2fe118a8 <line:312:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x564e2fe11960 <line:309:1, line:313:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x564e2fe11900 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x564e2fe117c0 'pthread_barrierattr_t'
|     `-Record 0x564e2fe11740 ''
|-TypedefDecl 0x564e2fe11a78 <line:314:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x564e2fe11a10 'long [8]' 8 
|   `-BuiltinType 0x564e2fd930a0 'long'
|-EnumDecl 0x564e2fe11ad0 <line:315:1, line:319:1> line:315:1
| |-EnumConstantDecl 0x564e2fe11b98 <line:317:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x564e2fe11be8 <line:318:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x564e2fe11c38 <line:320:1, line:331:1> line:320:1
| |-EnumConstantDecl 0x564e2fe11d08 <line:322:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x564e2fe11d58 <line:323:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x564e2fe11da8 <line:324:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x564e2fe11df8 <line:325:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x564e2fe11e80 <line:327:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x564e2fe11e68 <col:26> 'int'
| |   `-DeclRefExpr 0x564e2fe11e48 <col:26> 'int' EnumConstant 0x564e2fe11d08 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x564e2fe11f08 <line:328:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x564e2fe11ef0 <col:29> 'int'
| |   `-DeclRefExpr 0x564e2fe11ed0 <col:29> 'int' EnumConstant 0x564e2fe11d58 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x564e2fe11f90 <line:329:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x564e2fe11f78 <col:30> 'int'
| |   `-DeclRefExpr 0x564e2fe11f58 <col:30> 'int' EnumConstant 0x564e2fe11da8 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x564e2fe12018 <line:330:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x564e2fe12000 <col:27> 'int'
|     `-DeclRefExpr 0x564e2fe11fe0 <col:27> 'int' EnumConstant 0x564e2fe11e80 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x564e2fe12068 <line:332:1, line:338:1> line:332:1
| |-EnumConstantDecl 0x564e2fe12138 <line:334:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x564e2fe121c0 <line:335:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x564e2fe121a8 <col:30> 'int'
| |   `-DeclRefExpr 0x564e2fe12188 <col:30> 'int' EnumConstant 0x564e2fe12138 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x564e2fe12210 <line:336:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x564e2fe12298 <line:337:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x564e2fe12280 <col:29> 'int'
|     `-DeclRefExpr 0x564e2fe12260 <col:29> 'int' EnumConstant 0x564e2fe12210 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x564e2fe122e8 <line:339:1, line:344:1> line:339:1
| |-EnumConstantDecl 0x564e2fe123b8 <line:341:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x564e2fe12408 <line:342:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x564e2fe12458 <line:343:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x564e2fe124a8 <line:345:1, line:351:1> line:345:1
| |-EnumConstantDecl 0x564e2fe125c0 <line:347:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x564e2fe12610 <line:348:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x564e2fe12660 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x564e2fe126e8 <line:350:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x564e2fe126d0 <col:31> 'int'
|     `-DeclRefExpr 0x564e2fe126b0 <col:31> 'int' EnumConstant 0x564e2fe125c0 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x564e2fe12738 <line:352:1, line:356:1> line:352:1
| |-EnumConstantDecl 0x564e2fe12808 <line:354:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x564e2fe12858 <line:355:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x564e2fe128a8 <line:357:1, line:361:1> line:357:1
| |-EnumConstantDecl 0x564e2fe12978 <line:359:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x564e2fe129c8 <line:360:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x564e2fe12a18 <line:362:1, line:366:1> line:362:1
| |-EnumConstantDecl 0x564e2fe12ae8 <line:364:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x564e2fe12b38 <line:365:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x564e2fe12b88 <line:367:1, line:373:1> line:367:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x564e2fe12dc8 <line:369:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x564e2fe12e30 <line:370:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x564e2fe12e98 <line:371:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x564e2fe12fb8 <line:372:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x564e2fe13008 <line:374:1, line:378:1> line:374:1
| |-EnumConstantDecl 0x564e2fe130d8 <line:376:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x564e2fe13128 <line:377:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x564e2fe13178 <line:379:1, line:383:1> line:379:1
| |-EnumConstantDecl 0x564e2fe13248 <line:381:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x564e2fe13298 <line:382:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x564e2fe138f8 <line:385:1, line:388:96> line:385:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x564e2fe13390 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x564e2fe134a0 <line:386:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x564e2fe136e0 <line:387:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x564e2fe13760 <line:388:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x564e2fe139b8 <col:47>
| |-NonNullAttr 0x564e2fe13a10 <col:77, col:94> 1 3
| `-CallbackAttr 0x564e2fe13a48 <line:385:12> Implicit 2 3
|-FunctionDecl 0x564e2fe13b70 <line:389:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x564e2fe13aa0 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x564e2fe13dc8 <line:390:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x564e2fe13c28 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x564e2fe13ca8 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x564e2fe13f98 <line:391:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x564e2fe13e88 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x564e2fe14040 <col:60>
|-FunctionDecl 0x564e2fe14190 <line:392:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x564e2fe14230 <col:54>
| `-ConstAttr 0x564e2fe14288 <col:95>
|-FunctionDecl 0x564e2fe14458 <line:393:1, line:394:70> line:393:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x564e2fe142c0 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x564e2fe14338 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x564e2fe14508 <line:394:19>
| `-ConstAttr 0x564e2fe14560 <col:60>
|-FunctionDecl 0x564e2fe14f68 <line:395:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x564e2fe14e30 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x564e2fe15010 <col:71>
| `-NonNullAttr 0x564e2fe15068 <col:112, col:126> 1
|-FunctionDecl 0x564e2fe15170 <line:396:1, line:397:79> line:396:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x564e2fe150b8 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x564e2fe15218 <line:397:22>
| `-NonNullAttr 0x564e2fe15270 <col:63, col:77> 1
|-FunctionDecl 0x564e2fe15498 <line:398:1, line:400:82> line:398:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x564e2fe152b8 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x564e2fe15338 <line:399:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x564e2fe15548 <line:400:22>
| `-NonNullAttr 0x564e2fe155a0 <col:63, col:80> 1 2
|-FunctionDecl 0x564e2fe157a8 <line:401:1, line:403:79> line:401:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x564e2fe155e8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x564e2fe15668 <line:402:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x564e2fe15858 <line:403:22>
| `-NonNullAttr 0x564e2fe158b0 <col:63, col:77> 1
|-FunctionDecl 0x564e2fe15b08 <line:404:1, line:406:82> line:404:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x564e2fe158f8 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x564e2fe159a0 <line:405:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x564e2fe15bb8 <line:406:22>
| `-NonNullAttr 0x564e2fe15c10 <col:63, col:80> 1 2
|-FunctionDecl 0x564e2fe16e48 <line:407:1, line:409:79> line:407:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x564e2fe15c58 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x564e2fe15cd0 <line:408:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x564e2fe16ef8 <line:409:22>
| `-NonNullAttr 0x564e2fe16f50 <col:63, col:77> 1
|-FunctionDecl 0x564e2fe17188 <line:410:1, line:412:82> line:410:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x564e2fe16f98 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x564e2fe17028 <line:411:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x564e2fe17238 <line:412:22>
| `-NonNullAttr 0x564e2fe17290 <col:63, col:80> 1 2
|-FunctionDecl 0x564e2fe174c8 <line:413:1, line:415:97> line:413:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x564e2fe172d8 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x564e2fe17368 <line:414:12, line:415:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x564e2fe17578 <col:37>
| `-NonNullAttr 0x564e2fe175d0 <col:78, col:95> 1 2
|-FunctionDecl 0x564e2fe177b8 <line:416:1, line:418:82> line:416:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x564e2fe17618 <col:41, line:417:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x564e2fe17698 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x564e2fe17868 <line:418:22>
| `-NonNullAttr 0x564e2fe178c0 <col:63, col:80> 1 2
|-FunctionDecl 0x564e2fe17a48 <line:419:1, line:420:79> line:419:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x564e2fe17908 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x564e2fe17988 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x564e2fe17af8 <line:420:22>
| `-NonNullAttr 0x564e2fe17b50 <col:63, col:77> 1
|-FunctionDecl 0x564e2fe17cf8 <line:421:1, line:423:82> line:421:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x564e2fe17b98 <col:42, line:422:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x564e2fe17c18 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x564e2fe17da8 <line:423:22>
| `-NonNullAttr 0x564e2fe18e30 <col:63, col:80> 1 2
|-FunctionDecl 0x564e2fe18fb8 <line:424:1, line:426:79> line:424:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x564e2fe18e78 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x564e2fe18ef8 <line:425:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x564e2fe19068 <line:426:22>
| `-NonNullAttr 0x564e2fe190c0 <col:63, col:77> 1
|-FunctionDecl 0x564e2fe19268 <line:427:1, line:429:82> line:427:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x564e2fe19108 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x564e2fe19188 <line:428:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x564e2fe19318 <line:429:22>
| `-NonNullAttr 0x564e2fe19370 <col:63, col:80> 1 2
|-FunctionDecl 0x564e2fe194f8 <line:430:1, line:431:79> line:430:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x564e2fe193b8 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x564e2fe19438 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x564e2fe195a8 <line:431:22>
| `-NonNullAttr 0x564e2fe19600 <col:63, col:77> 1
|-FunctionDecl 0x564e2fe19828 <line:432:1, line:434:115> line:432:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x564e2fe19648 <col:39, line:433:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x564e2fe196c8 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x564e2fe198d8 <line:434:22>
| |-NonNullAttr 0x564e2fe19930 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x564e2fe19968 <col:100> "" ""
|-FunctionDecl 0x564e2fe19b78 <line:435:1, line:437:112> line:435:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x564e2fe199b8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x564e2fe19a38 <line:436:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x564e2fe19c28 <line:437:22>
| |-NonNullAttr 0x564e2fe19c80 <col:63, col:77> 1
| `-DeprecatedAttr 0x564e2fe19cb8 <col:97> "" ""
|-FunctionDecl 0x564e2fe19eb8 <line:438:1, line:440:82> line:438:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x564e2fe19d08 <col:39, line:439:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x564e2fe19d80 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x564e2fe19f68 <line:440:22>
| `-NonNullAttr 0x564e2fe19fc0 <col:63, col:80> 1 2
|-FunctionDecl 0x564e2fe1a140 <line:441:1, line:443:79> line:441:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x564e2fe1a008 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x564e2fe1a080 <line:442:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x564e2fe1a1f0 <line:443:22>
| `-NonNullAttr 0x564e2fe1a248 <col:63, col:77> 1
|-FunctionDecl 0x564e2fe1a538 <line:444:1, line:447:85> line:444:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x564e2fe1a298 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x564e2fe1a318 <line:445:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x564e2fe1a390 <line:446:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x564e2fe1a5f0 <line:447:22>
| `-NonNullAttr 0x564e2fe1a648 <col:63, col:83> 1 2 3
|-FunctionDecl 0x564e2fe1a8f8 <line:448:1, line:449:100> line:448:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x564e2fe1a6a0 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x564e2fe1a720 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x564e2fe1a798 <line:449:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x564e2fe1a9b0 <col:43>
| `-NonNullAttr 0x564e2fe1aa08 <col:84, col:98> 1
|-FunctionDecl 0x564e2fe1acc8 <line:450:1, line:452:79> line:450:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x564e2fe1aa58 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x564e2fe1aad8 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x564e2fe1ab68 <line:451:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x564e2fe1ad80 <line:452:22>
| `-NonNullAttr 0x564e2fe1add8 <col:63, col:77> 3
|-FunctionDecl 0x564e2fe1b0e8 <line:453:1, line:456:82> line:453:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x564e2fe1ae50 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x564e2fe1aed0 <line:454:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x564e2fe1af60 <line:455:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x564e2fe1b1a0 <line:456:22>
| `-NonNullAttr 0x564e2fe1b1f8 <col:63, col:80> 2 3
|-FunctionDecl 0x564e2fe1b3e8 <line:457:1, line:458:45> line:457:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x564e2fe1b248 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x564e2fe1b2c8 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x564e2fe1b498 <line:458:22>
|-FunctionDecl 0x564e2fe1b868 <line:459:1, line:460:71> line:459:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x564e2fe1b560 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x564e2fe1b700 <line:460:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x564e2fe1b918 <col:52, col:69> 1 2
|-FunctionDecl 0x564e2fe1bac0 <line:461:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x564e2fe1b9a0 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x564e2fe1ba20 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x564e2fe1bca8 <line:462:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x564e2fe1bb88 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x564e2fe1bc08 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x564e2fe1be60 <line:463:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x564e2fe1bd68 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x564e2fe1bfa0 <line:464:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x564e2fe1c040 <line:465:9, line:473:1> line:465:9 struct definition
| |-RecordDecl 0x564e2fe1c0e8 <line:467:3, line:471:3> line:467:3 struct definition
| | |-FieldDecl 0x564e2fe1c1d8 <line:469:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x564e2fe1c240 <line:470:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x564e2fe1c410 <line:467:3, line:471:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at pthread-wmm/mix011_rmo.opt_false-unreach-call.i:467:3) [1]'
| `-FieldDecl 0x564e2fe1c508 <line:472:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x564e2fe1c5c0 <line:465:1, line:473:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x564e2fe1c560 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x564e2fe1c0c0 '__pthread_unwind_buf_t'
| |   `-Record 0x564e2fe1c040 ''
| `-AlignedAttr 0x564e2fe1c618 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x564e2fe1c690 <line:474:1, line:480:1> line:474:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x564e2fe1c7f0 <line:476:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x564e2fe1c858 <line:477:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x564e2fe1c8c0 <line:478:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x564e2fe1c928 <line:479:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x564e2fe1cb30 <line:481:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x564e2fe1ca20 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x564e2fe1cc78 <line:483:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x564e2fe1cbe8 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x564e2fe1ce70 <line:485:1, line:487:31> line:485:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x564e2fe1cd30 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x564e2fe1cf18 <line:487:22>
|-RecordDecl 0x564e2fe1cf70 <line:489:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x564e2fe1d288 <line:490:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x564e2fe1d0e8 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x564e2fe1d168 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x564e2fe1d338 <col:86>
| `-ReturnsTwiceAttr 0x564e2fe1d390 <col:12> Implicit
|-FunctionDecl 0x564e2fe1d6b8 <line:491:1, line:493:79> line:491:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x564e2fe1d460 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x564e2fe1d570 <line:492:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x564e2fe1d768 <line:493:22>
| `-NonNullAttr 0x564e2fe1d7c0 <col:63, col:77> 1
|-FunctionDecl 0x564e2fe1d938 <line:494:1, line:495:79> line:494:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x564e2fe1d808 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x564e2fe1d9e0 <line:495:22>
| `-NonNullAttr 0x564e2fe1da38 <col:63, col:77> 1
|-FunctionDecl 0x564e2fe1db40 <line:496:1, line:497:68> line:496:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x564e2fe1da88 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x564e2fe1dbe8 <line:497:22>
| `-NonNullAttr 0x564e2fe1dc40 <col:52, col:66> 1
|-FunctionDecl 0x564e2fe1dd40 <line:498:1, line:499:68> line:498:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x564e2fe1dc88 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x564e2fe1dde8 <line:499:22>
| `-NonNullAttr 0x564e2fe1de40 <col:52, col:66> 1
|-FunctionDecl 0x564e2fe1e088 <line:500:1, line:502:85> line:500:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x564e2fe1de98 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x564e2fe1df28 <line:501:9, line:502:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x564e2fe1e138 <col:36>
| `-NonNullAttr 0x564e2fe1e190 <col:66, col:83> 1 2
|-FunctionDecl 0x564e2fe1e290 <line:503:1, line:504:68> line:503:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x564e2fe1e1d8 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x564e2fe1e338 <line:504:22>
| `-NonNullAttr 0x564e2fe1e390 <col:52, col:66> 1
|-FunctionDecl 0x564e2fe1e628 <line:505:1, line:508:82> line:505:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x564e2fe1e440 <col:42, line:506:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x564e2fe1e4c0 <line:507:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x564e2fe1e6d8 <line:508:22>
| `-NonNullAttr 0x564e2fe1e730 <col:63, col:80> 1 2
|-FunctionDecl 0x564e2fe1e9f8 <line:509:1, line:512:82> line:509:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x564e2fe1e778 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x564e2fe1e7f8 <line:510:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x564e2fe1e878 <line:511:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x564e2fe1eab0 <line:512:22>
| `-NonNullAttr 0x564e2fe1eb08 <col:63, col:80> 1 3
|-FunctionDecl 0x564e2fe1ec10 <line:513:1, line:514:79> line:513:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x564e2fe1eb58 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x564e2fe1ecb8 <line:514:22>
| `-NonNullAttr 0x564e2fe1ed10 <col:63, col:77> 1
|-FunctionDecl 0x564e2fe1ef38 <line:515:1, line:516:79> line:515:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x564e2fe1edc0 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x564e2fe1efe0 <line:516:22>
| `-NonNullAttr 0x564e2fe1f038 <col:63, col:77> 1
|-FunctionDecl 0x564e2fe1f140 <line:517:1, line:518:79> line:517:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x564e2fe1f088 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x564e2fe1f1e8 <line:518:22>
| `-NonNullAttr 0x564e2fe1f240 <col:63, col:77> 1
|-FunctionDecl 0x564e2fe1f468 <line:519:1, line:522:82> line:519:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x564e2fe1f288 <col:42, line:520:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x564e2fe1f308 <line:521:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x564e2fe1f518 <line:522:22>
| `-NonNullAttr 0x564e2fe1f570 <col:63, col:80> 1 2
|-FunctionDecl 0x564e2fe1f778 <line:523:1, line:525:79> line:523:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x564e2fe1f5b8 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x564e2fe1f638 <line:524:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x564e2fe1f828 <line:525:22>
| `-NonNullAttr 0x564e2fe1f880 <col:63, col:77> 1
|-FunctionDecl 0x564e2fe1fa28 <line:526:1, line:528:82> line:526:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x564e2fe1f8c8 <col:39, line:527:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x564e2fe1f948 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x564e2fe1fad8 <line:528:22>
| `-NonNullAttr 0x564e2fe1fb30 <col:63, col:80> 1 2
|-FunctionDecl 0x564e2fe1fcb8 <line:529:1, line:530:79> line:529:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x564e2fe1fb78 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x564e2fe1fbf8 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x564e2fe1fd68 <line:530:22>
| `-NonNullAttr 0x564e2fe1fdc0 <col:63, col:77> 1
|-FunctionDecl 0x564e2fe20f90 <line:531:1, line:534:82> line:531:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x564e2fe1fe08 <col:43, line:532:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x564e2fe20eb0 <line:533:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x564e2fe21040 <line:534:22>
| `-NonNullAttr 0x564e2fe21098 <col:63, col:80> 1 2
|-FunctionDecl 0x564e2fe21228 <line:535:1, line:537:79> line:535:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x564e2fe210e8 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x564e2fe21168 <line:536:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x564e2fe212d8 <line:537:22>
| `-NonNullAttr 0x564e2fe21330 <col:63, col:77> 1
|-FunctionDecl 0x564e2fe214d8 <line:538:1, line:541:82> line:538:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x564e2fe21378 <col:46, line:539:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x564e2fe213f8 <line:540:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x564e2fe21588 <line:541:22>
| `-NonNullAttr 0x564e2fe215e0 <col:63, col:80> 1 2
|-FunctionDecl 0x564e2fe21768 <line:542:1, line:544:79> line:542:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x564e2fe21628 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x564e2fe216a8 <line:543:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x564e2fe21818 <line:544:22>
| `-NonNullAttr 0x564e2fe21870 <col:63, col:77> 1
|-FunctionDecl 0x564e2fe21a58 <line:545:1, line:547:82> line:545:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x564e2fe218b8 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x564e2fe21938 <line:546:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x564e2fe21b08 <line:547:22>
| `-NonNullAttr 0x564e2fe21b60 <col:63, col:80> 1 2
|-FunctionDecl 0x564e2fe21ce8 <line:548:1, line:550:79> line:548:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x564e2fe21ba8 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x564e2fe21c28 <line:549:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x564e2fe21d98 <line:550:22>
| `-NonNullAttr 0x564e2fe21df0 <col:63, col:77> 1
|-FunctionDecl 0x564e2fe23168 <line:551:1, line:553:86> line:551:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x564e2fe22f10 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x564e2fe23020 <line:552:5, line:553:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x564e2fe23218 <col:29>
| `-NonNullAttr 0x564e2fe23270 <col:70, col:84> 1
|-FunctionDecl 0x564e2fe233e8 <line:554:1, line:555:79> line:554:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x564e2fe232b8 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x564e2fe23490 <line:555:22>
| `-NonNullAttr 0x564e2fe234e8 <col:63, col:77> 1
|-FunctionDecl 0x564e2fe235f0 <line:556:1, line:557:68> line:556:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x564e2fe23538 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x564e2fe23698 <line:557:22>
| `-NonNullAttr 0x564e2fe236f0 <col:52, col:66> 1
|-FunctionDecl 0x564e2fe237f0 <line:558:1, line:559:65> line:558:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x564e2fe23738 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x564e2fe23898 <line:559:19>
| `-NonNullAttr 0x564e2fe238f0 <col:49, col:63> 1
|-FunctionDecl 0x564e2fe23b28 <line:560:1, line:562:88> line:560:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x564e2fe23938 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x564e2fe239c8 <line:561:12, line:562:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x564e2fe23bd8 <col:39>
| `-NonNullAttr 0x564e2fe23c30 <col:69, col:86> 1 2
|-FunctionDecl 0x564e2fe23d30 <line:563:1, line:564:68> line:563:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x564e2fe23c78 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x564e2fe23dd8 <line:564:22>
| `-NonNullAttr 0x564e2fe23e30 <col:52, col:66> 1
|-FunctionDecl 0x564e2fe23f98 <line:565:1, line:566:68> line:565:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x564e2fe23ee0 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x564e2fe24040 <line:566:22>
| `-NonNullAttr 0x564e2fe24098 <col:52, col:66> 1
|-FunctionDecl 0x564e2fe24258 <line:567:1, line:569:88> line:567:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x564e2fe240e8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x564e2fe24178 <line:568:12, line:569:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x564e2fe24308 <col:39>
| `-NonNullAttr 0x564e2fe24360 <col:69, col:86> 1 2
|-FunctionDecl 0x564e2fe24460 <line:570:1, line:571:68> line:570:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x564e2fe243a8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x564e2fe24508 <line:571:22>
| `-NonNullAttr 0x564e2fe24560 <col:52, col:66> 1
|-FunctionDecl 0x564e2fe24748 <line:572:1, line:573:79> line:572:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x564e2fe24610 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x564e2fe247f0 <line:573:22>
| `-NonNullAttr 0x564e2fe24848 <col:63, col:77> 1
|-FunctionDecl 0x564e2fe24950 <line:574:1, line:575:79> line:574:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x564e2fe24898 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x564e2fe249f8 <line:575:22>
| `-NonNullAttr 0x564e2fe24a50 <col:63, col:77> 1
|-FunctionDecl 0x564e2fe24c78 <line:576:1, line:579:82> line:576:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x564e2fe24a98 <col:43, line:577:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x564e2fe24b18 <line:578:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x564e2fe24d28 <line:579:22>
| `-NonNullAttr 0x564e2fe24d80 <col:63, col:80> 1 2
|-FunctionDecl 0x564e2fe24fa8 <line:580:1, line:582:79> line:580:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x564e2fe24dc8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x564e2fe24e48 <line:581:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x564e2fe25058 <line:582:22>
| `-NonNullAttr 0x564e2fe250b0 <col:63, col:77> 1
|-FunctionDecl 0x564e2fe25258 <line:583:1, line:586:82> line:583:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x564e2fe250f8 <col:43, line:584:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x564e2fe25178 <line:585:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x564e2fe25308 <line:586:22>
| `-NonNullAttr 0x564e2fe25360 <col:63, col:80> 1 2
|-FunctionDecl 0x564e2fe254e8 <line:587:1, line:588:93> line:587:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x564e2fe253a8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x564e2fe25428 <line:588:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x564e2fe25598 <col:36>
| `-NonNullAttr 0x564e2fe255f0 <col:77, col:91> 1
|-FunctionDecl 0x564e2fe25928 <line:589:1, line:591:79> line:589:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x564e2fe256d0 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x564e2fe257e0 <line:590:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x564e2fe259d8 <line:591:22>
| `-NonNullAttr 0x564e2fe25a30 <col:63, col:77> 1
|-FunctionDecl 0x564e2fe25ba8 <line:592:1, line:593:79> line:592:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x564e2fe25a78 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x564e2fe25c50 <line:593:22>
| `-NonNullAttr 0x564e2fe25ca8 <col:63, col:77> 1
|-FunctionDecl 0x564e2fe25db0 <line:594:1, line:595:68> line:594:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x564e2fe25cf8 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x564e2fe25e58 <line:595:22>
| `-NonNullAttr 0x564e2fe25eb0 <col:52, col:66> 1
|-FunctionDecl 0x564e2fe25fc8 <line:596:1, line:597:68> line:596:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x564e2fe25f10 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x564e2fe26070 <line:597:22>
| `-NonNullAttr 0x564e2fe260c8 <col:52, col:66> 1
|-FunctionDecl 0x564e2fe262f8 <line:598:1, line:600:41> line:598:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x564e2fe26118 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x564e2fe26190 <line:599:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x564e2fe263a8 <line:600:22, col:39> 1 2
|-FunctionDecl 0x564e2fe266d8 <line:601:1, line:604:44> line:601:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x564e2fe26428 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x564e2fe264a0 <line:602:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x564e2fe26530 <line:603:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x564e2fe26790 <line:604:22, col:42> 1 2 3
|-FunctionDecl 0x564e2fe269a8 <line:605:1, line:606:79> line:605:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x564e2fe26870 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x564e2fe26a50 <line:606:22>
| `-NonNullAttr 0x564e2fe26aa8 <col:63, col:77> 1
|-FunctionDecl 0x564e2fe26bb0 <line:607:1, line:608:79> line:607:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x564e2fe26af8 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x564e2fe26c58 <line:608:22>
| `-NonNullAttr 0x564e2fe26cb0 <col:63, col:77> 1
|-FunctionDecl 0x564e2fe26f10 <line:609:1, line:612:82> line:609:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x564e2fe26cf8 <col:41, line:610:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x564e2fe26d78 <line:611:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x564e2fe26fc0 <line:612:22>
| `-NonNullAttr 0x564e2fe27018 <col:63, col:80> 1 2
|-FunctionDecl 0x564e2fe27228 <line:613:1, line:614:94> line:613:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x564e2fe27068 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x564e2fe270e8 <line:614:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x564e2fe272d8 <col:37>
| `-NonNullAttr 0x564e2fe27330 <col:78, col:92> 1
|-FunctionDecl 0x564e2fe27548 <line:615:1, line:618:82> line:615:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x564e2fe27378 <col:39, line:616:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x564e2fe27420 <line:617:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x564e2fe275f8 <line:618:22>
| `-NonNullAttr 0x564e2fe27650 <col:63, col:80> 1 2
|-FunctionDecl 0x564e2fe27818 <line:619:1, line:621:79> line:619:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x564e2fe27698 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x564e2fe27710 <line:620:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x564e2fe278c8 <line:621:22>
| `-NonNullAttr 0x564e2fe27920 <col:63, col:77> 1
|-FunctionDecl 0x564e2fe27bc8 <line:622:1, line:623:79> line:622:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x564e2fe27a00 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x564e2fe27a80 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x564e2fe27c78 <line:623:22>
| `-NonNullAttr 0x564e2fe27cd0 <col:63, col:77> 1
|-FunctionDecl 0x564e2fe27e48 <line:624:1, line:625:79> line:624:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x564e2fe27d18 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x564e2fe27f20 <line:625:22>
| `-NonNullAttr 0x564e2fe27f78 <col:63, col:77> 1
|-FunctionDecl 0x564e2fe28080 <line:626:1, line:627:68> line:626:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x564e2fe27fc8 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x564e2fe28128 <line:627:22>
| `-NonNullAttr 0x564e2fe28180 <col:52, col:66> 1
|-FunctionDecl 0x564e2fe28280 <line:628:1, line:629:68> line:628:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x564e2fe281c8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x564e2fe28328 <line:629:22>
| `-NonNullAttr 0x564e2fe28380 <col:52, col:66> 1
|-FunctionDecl 0x564e2fe28480 <line:630:1, line:631:68> line:630:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x564e2fe283c8 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x564e2fe28528 <line:631:22>
| `-NonNullAttr 0x564e2fe28580 <col:52, col:66> 1
|-FunctionDecl 0x564e2fe28958 <line:632:1, line:635:79> line:632:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x564e2fe28660 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x564e2fe28770 <line:633:6, line:634:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x564e2fe287f0 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x564e2fe28a10 <line:635:22>
| `-NonNullAttr 0x564e2fe28a68 <col:63, col:77> 1
|-FunctionDecl 0x564e2fe28be8 <line:636:1, line:637:79> line:636:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x564e2fe28ab8 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x564e2fe28c90 <line:637:22>
| `-NonNullAttr 0x564e2fe28ce8 <col:63, col:77> 1
|-FunctionDecl 0x564e2fe28df0 <line:638:1, line:639:68> line:638:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x564e2fe28d38 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x564e2fe28e98 <line:639:22>
| `-NonNullAttr 0x564e2fe28ef0 <col:52, col:66> 1
|-FunctionDecl 0x564e2fe290e8 <line:640:1, line:641:79> line:640:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x564e2fe28fb0 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x564e2fe29190 <line:641:22>
| `-NonNullAttr 0x564e2fe291e8 <col:63, col:77> 1
|-FunctionDecl 0x564e2fe292f0 <line:642:1, line:643:79> line:642:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x564e2fe29238 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x564e2fe29398 <line:643:22>
| `-NonNullAttr 0x564e2fe293f0 <col:63, col:77> 1
|-FunctionDecl 0x564e2fe29618 <line:644:1, line:647:82> line:644:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x564e2fe29438 <col:44, line:645:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x564e2fe294b8 <line:646:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x564e2fe296c8 <line:647:22>
| `-NonNullAttr 0x564e2fe29720 <col:63, col:80> 1 2
|-FunctionDecl 0x564e2fe29928 <line:648:1, line:650:79> line:648:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x564e2fe29768 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x564e2fe297e8 <line:649:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x564e2fe299d8 <line:650:22>
| `-NonNullAttr 0x564e2fe29a30 <col:63, col:77> 1
|-FunctionDecl 0x564e2fe29d78 <line:651:1, line:653:79> line:651:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x564e2fe29b10 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x564e2fe29c30 <line:652:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x564e2fe29e28 <line:653:22>
| `-NonNullAttr 0x564e2fe29e80 <col:63, col:77> 1
|-FunctionDecl 0x564e2fe29fe8 <line:654:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x564e2fe29ec8 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x564e2fe2a090 <col:69>
|-FunctionDecl 0x564e2fe2a208 <line:655:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x564e2fe2a0f8 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x564e2fe2a2b0 <col:72>
|-FunctionDecl 0x564e2fe2a4e8 <line:656:1, line:657:67> line:656:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x564e2fe2a318 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x564e2fe2a3c8 <line:657:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x564e2fe2a598 <col:44>
|-FunctionDecl 0x564e2fe2a7b8 <line:658:1, line:660:79> line:658:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x564e2fe2a600 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x564e2fe2a678 <line:659:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x564e2fe2a868 <line:660:22>
| `-NonNullAttr 0x564e2fe2a8c0 <col:63, col:77> 2
|-FunctionDecl 0x564e2fe2ad08 <line:661:1, line:663:70> line:661:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x564e2fe2a9a0 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x564e2fe2aab0 <line:662:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x564e2fe2abc0 <line:663:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x564e2fe2adc0 <col:47>
|-FunctionDecl 0x564e2fe2bf60 <line:665:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x564e2fe2ae30 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x564e2fe2c0b8 <line:666:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x564e2fe2c020 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x564e2fe2c210 <line:667:1, col:20> col:8 used P2 'void *(void *)'
| `-ParmVarDecl 0x564e2fe2c178 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x564e2fe2c2d8 <line:668:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x564e2fe2c398 <line:669:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x564e2fe2c458 <line:670:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x564e2fe2c510 <line:671:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x564e2fe2c590 prev 0x564e2fe2c510 <line:672:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x564e2fe2c5f8 <col:24> 'int' 0
|-VarDecl 0x564e2fe2c630 <line:673:1, col:5> col:5 used __unbuffered_p1_EAX 'int'
|-VarDecl 0x564e2fe2c6b0 prev 0x564e2fe2c630 <line:674:1, col:27> col:5 used __unbuffered_p1_EAX 'int' cinit
| `-IntegerLiteral 0x564e2fe2c718 <col:27> 'int' 0
|-VarDecl 0x564e2fe2c750 <line:675:1, col:5> col:5 used __unbuffered_p1_EBX 'int'
|-VarDecl 0x564e2fe2c7d0 prev 0x564e2fe2c750 <line:676:1, col:27> col:5 used __unbuffered_p1_EBX 'int' cinit
| `-IntegerLiteral 0x564e2fe2c838 <col:27> 'int' 0
|-VarDecl 0x564e2fe2c870 <line:677:1, col:5> col:5 used __unbuffered_p2_EAX 'int'
|-VarDecl 0x564e2fe2c8f0 prev 0x564e2fe2c870 <line:678:1, col:27> col:5 used __unbuffered_p2_EAX 'int' cinit
| `-IntegerLiteral 0x564e2fe2c958 <col:27> 'int' 0
|-VarDecl 0x564e2fe2c990 <line:679:1, col:5> col:5 used __unbuffered_p2_EBX 'int'
|-VarDecl 0x564e2fe2ca10 prev 0x564e2fe2c990 <line:680:1, col:27> col:5 used __unbuffered_p2_EBX 'int' cinit
| `-IntegerLiteral 0x564e2fe2ca78 <col:27> 'int' 0
|-VarDecl 0x564e2fe2cab0 <line:681:1, col:5> col:5 used a 'int'
|-VarDecl 0x564e2fe2cb30 prev 0x564e2fe2cab0 <line:682:1, col:9> col:5 used a 'int' cinit
| `-IntegerLiteral 0x564e2fe2cb98 <col:9> 'int' 0
|-VarDecl 0x564e2fe2cbc8 <line:683:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x564e2fe2cc40 <line:684:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x564e2fe2ccc0 <line:685:1, col:5> col:5 used x 'int'
|-VarDecl 0x564e2fe2cd40 prev 0x564e2fe2ccc0 <line:686:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x564e2fe2cda8 <col:9> 'int' 0
|-VarDecl 0x564e2fe2cde0 <line:687:1, col:5> col:5 used y 'int'
|-VarDecl 0x564e2fe2ce60 prev 0x564e2fe2cde0 <line:688:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x564e2fe2cec8 <col:9> 'int' 0
|-VarDecl 0x564e2fe2cf70 <line:689:1, col:5> col:5 used z 'int'
|-VarDecl 0x564e2fe2cff0 prev 0x564e2fe2cf70 <line:690:1, col:9> col:5 used z 'int' cinit
| `-IntegerLiteral 0x564e2fe2d058 <col:9> 'int' 0
|-VarDecl 0x564e2fe2d088 <line:691:1, col:7> col:7 used z$flush_delayed '_Bool'
|-VarDecl 0x564e2fe2d108 <line:692:1, col:5> col:5 used z$mem_tmp 'int'
|-VarDecl 0x564e2fe2d180 <line:693:1, col:7> col:7 used z$r_buff0_thd0 '_Bool'
|-VarDecl 0x564e2fe2d1f8 <line:694:1, col:7> col:7 used z$r_buff0_thd1 '_Bool'
|-VarDecl 0x564e2fe2d270 <line:695:1, col:7> col:7 used z$r_buff0_thd2 '_Bool'
|-VarDecl 0x564e2fe2d2e8 <line:696:1, col:7> col:7 used z$r_buff0_thd3 '_Bool'
|-VarDecl 0x564e2fe2d360 <line:697:1, col:7> col:7 used z$r_buff1_thd0 '_Bool'
|-VarDecl 0x564e2fe2d3d8 <line:698:1, col:7> col:7 used z$r_buff1_thd1 '_Bool'
|-VarDecl 0x564e2fe2d450 <line:699:1, col:7> col:7 used z$r_buff1_thd2 '_Bool'
|-VarDecl 0x564e2fe2d4c8 <line:700:1, col:7> col:7 used z$r_buff1_thd3 '_Bool'
|-VarDecl 0x564e2fe2d540 <line:701:1, col:7> col:7 z$read_delayed '_Bool'
|-VarDecl 0x564e2fe2d5c0 <line:702:1, col:6> col:6 z$read_delayed_var 'int *'
|-VarDecl 0x564e2fe2d640 <line:703:1, col:5> col:5 used z$w_buff0 'int'
|-VarDecl 0x564e2fe2d6b8 <line:704:1, col:7> col:7 used z$w_buff0_used '_Bool'
|-VarDecl 0x564e2fe2d738 <line:705:1, col:5> col:5 used z$w_buff1 'int'
|-VarDecl 0x564e2fe2d7b0 <line:706:1, col:7> col:7 used z$w_buff1_used '_Bool'
|-VarDecl 0x564e2fe2d828 <line:707:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x564e2fe2d8a0 <line:708:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x564e2fe2d9b8 prev 0x564e2fe2bf60 <line:709:1, line:723:1> line:709:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x564e2fe2d920 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x564e2fe2df80 <line:710:1, line:723:1>
|   |-CallExpr 0x564e2fe2dac8 <line:711:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x564e2fe2dab0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564e2fe2da60 <col:3> 'void ()' Function 0x564e2fdd3350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x564e2fe2db28 <line:712:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x564e2fe2dae8 <col:3> 'int' lvalue Var 0x564e2fe2cb30 'a' 'int'
|   | `-IntegerLiteral 0x564e2fe2db08 <col:7> 'int' 1
|   |-CallExpr 0x564e2fe2db80 <line:713:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x564e2fe2db68 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564e2fe2db48 <col:3> 'void ()' Function 0x564e2fdd3410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x564e2fe2dbd8 <line:714:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x564e2fe2dbc0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564e2fe2dba0 <col:3> 'void ()' Function 0x564e2fdd3350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x564e2fe2dc38 <line:715:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x564e2fe2dbf8 <col:3> 'int' lvalue Var 0x564e2fe2cd40 'x' 'int'
|   | `-IntegerLiteral 0x564e2fe2dc18 <col:7> 'int' 1
|   |-CallExpr 0x564e2fe2dc90 <line:716:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x564e2fe2dc78 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564e2fe2dc58 <col:3> 'void ()' Function 0x564e2fdd3410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x564e2fe2dce8 <line:717:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x564e2fe2dcd0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564e2fe2dcb0 <col:3> 'void ()' Function 0x564e2fdd3350 '__VERIFIER_atomic_begin' 'void ()'
|   |-CallExpr 0x564e2fe2dd40 <line:718:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x564e2fe2dd28 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564e2fe2dd08 <col:3> 'void ()' Function 0x564e2fdd3410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x564e2fe2dd98 <line:719:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x564e2fe2dd80 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564e2fe2dd60 <col:3> 'void ()' Function 0x564e2fdd3350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x564e2fe2de50 <line:720:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x564e2fe2ddb8 <col:3> 'int' lvalue Var 0x564e2fe2c590 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x564e2fe2de30 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x564e2fe2de18 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x564e2fe2ddd8 <col:22> 'int' lvalue Var 0x564e2fe2c590 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x564e2fe2ddf8 <col:41> 'int' 1
|   |-CallExpr 0x564e2fe2dea8 <line:721:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x564e2fe2de90 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564e2fe2de70 <col:3> 'void ()' Function 0x564e2fdd3410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x564e2fe2df58 <line:722:3, col:36>
|     `-CallExpr 0x564e2fe2df38 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x564e2fe2df20 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x564e2fe2dec8 <col:10> 'void *(void)' Function 0x564e2fdd2e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x564e2fe2e0a0 prev 0x564e2fe2c0b8 <line:724:1, line:757:1> line:724:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x564e2fe2e008 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x564e2fe311d8 <line:725:1, line:757:1>
|   |-CallExpr 0x564e2fe2e180 <line:726:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x564e2fe2e168 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564e2fe2e148 <col:3> 'void ()' Function 0x564e2fdd3350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x564e2fe2e1e0 <line:727:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x564e2fe2e1a0 <col:3> 'int' lvalue Var 0x564e2fe2cd40 'x' 'int'
|   | `-IntegerLiteral 0x564e2fe2e1c0 <col:7> 'int' 2
|   |-CallExpr 0x564e2fe2e238 <line:728:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x564e2fe2e220 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564e2fe2e200 <col:3> 'void ()' Function 0x564e2fdd3410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x564e2fe2e290 <line:729:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x564e2fe2e278 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564e2fe2e258 <col:3> 'void ()' Function 0x564e2fdd3350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x564e2fe2e2f0 <line:730:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x564e2fe2e2b0 <col:3> 'int' lvalue Var 0x564e2fe2ce60 'y' 'int'
|   | `-IntegerLiteral 0x564e2fe2e2d0 <col:7> 'int' 1
|   |-CallExpr 0x564e2fe2e348 <line:731:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x564e2fe2e330 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564e2fe2e310 <col:3> 'void ()' Function 0x564e2fdd3410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x564e2fe2e3a0 <line:732:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x564e2fe2e388 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564e2fe2e368 <col:3> 'void ()' Function 0x564e2fdd3350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x564e2fe2e418 <line:733:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x564e2fe2e3c0 <col:3> 'int' lvalue Var 0x564e2fe2c6b0 '__unbuffered_p1_EAX' 'int'
|   | `-ImplicitCastExpr 0x564e2fe2e400 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x564e2fe2e3e0 <col:25> 'int' lvalue Var 0x564e2fe2ce60 'y' 'int'
|   |-CallExpr 0x564e2fe2e470 <line:734:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x564e2fe2e458 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564e2fe2e438 <col:3> 'void ()' Function 0x564e2fdd3410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x564e2fe2e4c8 <line:735:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x564e2fe2e4b0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564e2fe2e490 <col:3> 'void ()' Function 0x564e2fdd3350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x564e2fe2e578 <line:736:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x564e2fe2e4e8 <col:3> '_Bool' lvalue Var 0x564e2fe2d828 'weak$$choice0' '_Bool'
|   | `-ImplicitCastExpr 0x564e2fe2e560 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x564e2fe2e540 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x564e2fe2e528 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x564e2fe2e508 <col:19> 'void *(void)' Function 0x564e2fdd2e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x564e2fe2e628 <line:737:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x564e2fe2e598 <col:3> '_Bool' lvalue Var 0x564e2fe2d8a0 'weak$$choice2' '_Bool'
|   | `-ImplicitCastExpr 0x564e2fe2e610 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x564e2fe2e5f0 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x564e2fe2e5d8 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x564e2fe2e5b8 <col:19> 'void *(void)' Function 0x564e2fdd2e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x564e2fe2e6a0 <line:738:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x564e2fe2e648 <col:3> '_Bool' lvalue Var 0x564e2fe2d088 'z$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x564e2fe2e688 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x564e2fe2e668 <col:21> '_Bool' lvalue Var 0x564e2fe2d8a0 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x564e2fe2e718 <line:739:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x564e2fe2e6c0 <col:3> 'int' lvalue Var 0x564e2fe2d108 'z$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x564e2fe2e700 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x564e2fe2e6e0 <col:15> 'int' lvalue Var 0x564e2fe2cff0 'z' 'int'
|   |-BinaryOperator 0x564e2fe2eb50 <line:740:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x564e2fe2e738 <col:3> 'int' lvalue Var 0x564e2fe2cff0 'z' 'int'
|   | `-ConditionalOperator 0x564e2fe2eb20 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x564e2fe2e948 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x564e2fe2e868 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x564e2fe2e790 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x564e2fe2e778 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x564e2fe2e758 <col:8> '_Bool' lvalue Var 0x564e2fe2d6b8 'z$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x564e2fe2e848 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x564e2fe2e7e0 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x564e2fe2e7c8 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x564e2fe2e7a8 <col:27> '_Bool' lvalue Var 0x564e2fe2d270 'z$r_buff0_thd2' '_Bool'
|   |   | |   `-UnaryOperator 0x564e2fe2e830 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x564e2fe2e818 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x564e2fe2e7f8 <col:46> '_Bool' lvalue Var 0x564e2fe2d7b0 'z$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x564e2fe2e928 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x564e2fe2e8c0 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x564e2fe2e8a8 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x564e2fe2e888 <col:65> '_Bool' lvalue Var 0x564e2fe2d270 'z$r_buff0_thd2' '_Bool'
|   |   |   `-UnaryOperator 0x564e2fe2e910 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x564e2fe2e8f8 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x564e2fe2e8d8 <col:84> '_Bool' lvalue Var 0x564e2fe2d450 'z$r_buff1_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x564e2fe2eb08 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x564e2fe2e968 <col:101> 'int' lvalue Var 0x564e2fe2cff0 'z' 'int'
|   |   `-ParenExpr 0x564e2fe2eae8 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x564e2fe2eab8 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x564e2fe2ea28 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x564e2fe2e9e0 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x564e2fe2e9c8 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x564e2fe2e988 <col:106> '_Bool' lvalue Var 0x564e2fe2d6b8 'z$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x564e2fe2ea10 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x564e2fe2e9f8 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x564e2fe2e9a8 <col:124> '_Bool' lvalue Var 0x564e2fe2d270 'z$r_buff0_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x564e2fe2ea88 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x564e2fe2ea48 <col:141> 'int' lvalue Var 0x564e2fe2d640 'z$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x564e2fe2eaa0 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x564e2fe2ea68 <col:153> 'int' lvalue Var 0x564e2fe2d738 'z$w_buff1' 'int'
|   |-BinaryOperator 0x564e2fe2f070 <line:741:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x564e2fe2eb70 <col:3> 'int' lvalue Var 0x564e2fe2d640 'z$w_buff0' 'int'
|   | `-ConditionalOperator 0x564e2fe2f040 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x564e2fe2f010 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x564e2fe2eff8 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x564e2fe2eb90 <col:15> '_Bool' lvalue Var 0x564e2fe2d8a0 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x564e2fe2f028 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x564e2fe2ebb0 <col:31> 'int' lvalue Var 0x564e2fe2d640 'z$w_buff0' 'int'
|   |   `-ParenExpr 0x564e2fe2efd8 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x564e2fe2efa8 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x564e2fe2edc0 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x564e2fe2ece0 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x564e2fe2ec08 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x564e2fe2ebf0 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x564e2fe2ebd0 <col:45> '_Bool' lvalue Var 0x564e2fe2d6b8 'z$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x564e2fe2ecc0 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x564e2fe2ec58 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x564e2fe2ec40 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x564e2fe2ec20 <col:64> '_Bool' lvalue Var 0x564e2fe2d270 'z$r_buff0_thd2' '_Bool'
|   |       | |   `-UnaryOperator 0x564e2fe2eca8 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x564e2fe2ec90 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x564e2fe2ec70 <col:83> '_Bool' lvalue Var 0x564e2fe2d7b0 'z$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x564e2fe2eda0 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x564e2fe2ed38 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x564e2fe2ed20 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x564e2fe2ed00 <col:102> '_Bool' lvalue Var 0x564e2fe2d270 'z$r_buff0_thd2' '_Bool'
|   |       |   `-UnaryOperator 0x564e2fe2ed88 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x564e2fe2ed70 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x564e2fe2ed50 <col:121> '_Bool' lvalue Var 0x564e2fe2d450 'z$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x564e2fe2ef90 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x564e2fe2ede0 <col:138> 'int' lvalue Var 0x564e2fe2d640 'z$w_buff0' 'int'
|   |       `-ParenExpr 0x564e2fe2ef60 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x564e2fe2ef30 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x564e2fe2eea0 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x564e2fe2ee58 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x564e2fe2ee40 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x564e2fe2ee00 <col:151> '_Bool' lvalue Var 0x564e2fe2d6b8 'z$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x564e2fe2ee88 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x564e2fe2ee70 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x564e2fe2ee20 <col:169> '_Bool' lvalue Var 0x564e2fe2d270 'z$r_buff0_thd2' '_Bool'
|   |           |-ImplicitCastExpr 0x564e2fe2ef00 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x564e2fe2eec0 <col:186> 'int' lvalue Var 0x564e2fe2d640 'z$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x564e2fe2ef18 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x564e2fe2eee0 <col:198> 'int' lvalue Var 0x564e2fe2d640 'z$w_buff0' 'int'
|   |-BinaryOperator 0x564e2fe2f580 <line:742:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x564e2fe2f090 <col:3> 'int' lvalue Var 0x564e2fe2d738 'z$w_buff1' 'int'
|   | `-ConditionalOperator 0x564e2fe2f550 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x564e2fe2f520 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x564e2fe2f508 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x564e2fe2f0b0 <col:15> '_Bool' lvalue Var 0x564e2fe2d8a0 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x564e2fe2f538 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x564e2fe2f0d0 <col:31> 'int' lvalue Var 0x564e2fe2d738 'z$w_buff1' 'int'
|   |   `-ParenExpr 0x564e2fe2f4e8 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x564e2fe2f4b8 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x564e2fe2f2e0 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x564e2fe2f200 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x564e2fe2f128 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x564e2fe2f110 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x564e2fe2f0f0 <col:45> '_Bool' lvalue Var 0x564e2fe2d6b8 'z$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x564e2fe2f1e0 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x564e2fe2f178 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x564e2fe2f160 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x564e2fe2f140 <col:64> '_Bool' lvalue Var 0x564e2fe2d270 'z$r_buff0_thd2' '_Bool'
|   |       | |   `-UnaryOperator 0x564e2fe2f1c8 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x564e2fe2f1b0 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x564e2fe2f190 <col:83> '_Bool' lvalue Var 0x564e2fe2d7b0 'z$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x564e2fe2f2c0 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x564e2fe2f258 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x564e2fe2f240 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x564e2fe2f220 <col:102> '_Bool' lvalue Var 0x564e2fe2d270 'z$r_buff0_thd2' '_Bool'
|   |       |   `-UnaryOperator 0x564e2fe2f2a8 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x564e2fe2f290 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x564e2fe2f270 <col:121> '_Bool' lvalue Var 0x564e2fe2d450 'z$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x564e2fe2f4a0 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x564e2fe2f300 <col:138> 'int' lvalue Var 0x564e2fe2d738 'z$w_buff1' 'int'
|   |       `-ParenExpr 0x564e2fe2f480 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x564e2fe2f450 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x564e2fe2f3c0 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x564e2fe2f378 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x564e2fe2f360 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x564e2fe2f320 <col:151> '_Bool' lvalue Var 0x564e2fe2d6b8 'z$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x564e2fe2f3a8 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x564e2fe2f390 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x564e2fe2f340 <col:169> '_Bool' lvalue Var 0x564e2fe2d270 'z$r_buff0_thd2' '_Bool'
|   |           |-ImplicitCastExpr 0x564e2fe2f420 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x564e2fe2f3e0 <col:186> 'int' lvalue Var 0x564e2fe2d738 'z$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x564e2fe2f438 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x564e2fe2f400 <col:198> 'int' lvalue Var 0x564e2fe2d738 'z$w_buff1' 'int'
|   |-BinaryOperator 0x564e2fe2fb28 <line:743:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x564e2fe2f5a0 <col:3> '_Bool' lvalue Var 0x564e2fe2d6b8 'z$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x564e2fe2fb10 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x564e2fe2fae0 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x564e2fe2fa98 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x564e2fe2fa80 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x564e2fe2f5c0 <col:20> '_Bool' lvalue Var 0x564e2fe2d8a0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x564e2fe2fac8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x564e2fe2fab0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x564e2fe2f5e0 <col:36> '_Bool' lvalue Var 0x564e2fe2d6b8 'z$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x564e2fe2fa60 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x564e2fe2fa30 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x564e2fe2f7f0 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x564e2fe2f710 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x564e2fe2f638 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x564e2fe2f620 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x564e2fe2f600 <col:55> '_Bool' lvalue Var 0x564e2fe2d6b8 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x564e2fe2f6f0 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x564e2fe2f688 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x564e2fe2f670 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x564e2fe2f650 <col:74> '_Bool' lvalue Var 0x564e2fe2d270 'z$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x564e2fe2f6d8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x564e2fe2f6c0 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x564e2fe2f6a0 <col:93> '_Bool' lvalue Var 0x564e2fe2d7b0 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x564e2fe2f7d0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x564e2fe2f768 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x564e2fe2f750 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x564e2fe2f730 <col:112> '_Bool' lvalue Var 0x564e2fe2d270 'z$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x564e2fe2f7b8 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x564e2fe2f7a0 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x564e2fe2f780 <col:131> '_Bool' lvalue Var 0x564e2fe2d450 'z$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x564e2fe2fa18 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x564e2fe2fa00 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x564e2fe2f810 <col:148> '_Bool' lvalue Var 0x564e2fe2d6b8 'z$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x564e2fe2f9e0 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x564e2fe2f9b0 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x564e2fe2f8d0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x564e2fe2f888 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x564e2fe2f870 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x564e2fe2f830 <col:166> '_Bool' lvalue Var 0x564e2fe2d6b8 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x564e2fe2f8b8 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x564e2fe2f8a0 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x564e2fe2f850 <col:184> '_Bool' lvalue Var 0x564e2fe2d270 'z$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x564e2fe2f968 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x564e2fe2f920 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x564e2fe2f8f0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x564e2fe2f998 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x564e2fe2f980 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x564e2fe2f948 <col:212> '_Bool' lvalue Var 0x564e2fe2d6b8 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x564e2fe30118 <line:744:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x564e2fe2fb48 <col:3> '_Bool' lvalue Var 0x564e2fe2d7b0 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x564e2fe30100 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x564e2fe300d0 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x564e2fe30088 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x564e2fe30070 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x564e2fe2fb68 <col:20> '_Bool' lvalue Var 0x564e2fe2d8a0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x564e2fe300b8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x564e2fe300a0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x564e2fe2fb88 <col:36> '_Bool' lvalue Var 0x564e2fe2d7b0 'z$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x564e2fe30050 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x564e2fe30020 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x564e2fe2fd98 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x564e2fe2fcb8 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x564e2fe2fbe0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x564e2fe2fbc8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x564e2fe2fba8 <col:55> '_Bool' lvalue Var 0x564e2fe2d6b8 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x564e2fe2fc98 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x564e2fe2fc30 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x564e2fe2fc18 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x564e2fe2fbf8 <col:74> '_Bool' lvalue Var 0x564e2fe2d270 'z$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x564e2fe2fc80 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x564e2fe2fc68 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x564e2fe2fc48 <col:93> '_Bool' lvalue Var 0x564e2fe2d7b0 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x564e2fe2fd78 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x564e2fe2fd10 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x564e2fe2fcf8 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x564e2fe2fcd8 <col:112> '_Bool' lvalue Var 0x564e2fe2d270 'z$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x564e2fe2fd60 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x564e2fe2fd48 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x564e2fe2fd28 <col:131> '_Bool' lvalue Var 0x564e2fe2d450 'z$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x564e2fe30008 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x564e2fe2fff0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x564e2fe2fdb8 <col:148> '_Bool' lvalue Var 0x564e2fe2d7b0 'z$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x564e2fe2ffd0 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x564e2fe2ffa0 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x564e2fe2fe78 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x564e2fe2fe30 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x564e2fe2fe18 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x564e2fe2fdd8 <col:166> '_Bool' lvalue Var 0x564e2fe2d6b8 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x564e2fe2fe60 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x564e2fe2fe48 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x564e2fe2fdf8 <col:184> '_Bool' lvalue Var 0x564e2fe2d270 'z$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x564e2fe2ff48 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x564e2fe2fec8 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x564e2fe2fe98 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x564e2fe2ff60 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x564e2fe2ff20 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x564e2fe2fef0 <col:219> 'int' 0
|   |-BinaryOperator 0x564e2fe306c0 <line:745:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x564e2fe30138 <col:3> '_Bool' lvalue Var 0x564e2fe2d270 'z$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x564e2fe306a8 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x564e2fe30678 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x564e2fe30630 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x564e2fe30618 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x564e2fe30158 <col:20> '_Bool' lvalue Var 0x564e2fe2d8a0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x564e2fe30660 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x564e2fe30648 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x564e2fe30178 <col:36> '_Bool' lvalue Var 0x564e2fe2d270 'z$r_buff0_thd2' '_Bool'
|   |     `-ParenExpr 0x564e2fe305f8 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x564e2fe305c8 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x564e2fe30388 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x564e2fe302a8 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x564e2fe301d0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x564e2fe301b8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x564e2fe30198 <col:55> '_Bool' lvalue Var 0x564e2fe2d6b8 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x564e2fe30288 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x564e2fe30220 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x564e2fe30208 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x564e2fe301e8 <col:74> '_Bool' lvalue Var 0x564e2fe2d270 'z$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x564e2fe30270 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x564e2fe30258 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x564e2fe30238 <col:93> '_Bool' lvalue Var 0x564e2fe2d7b0 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x564e2fe30368 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x564e2fe30300 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x564e2fe302e8 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x564e2fe302c8 <col:112> '_Bool' lvalue Var 0x564e2fe2d270 'z$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x564e2fe30350 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x564e2fe30338 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x564e2fe30318 <col:131> '_Bool' lvalue Var 0x564e2fe2d450 'z$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x564e2fe305b0 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x564e2fe30598 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x564e2fe303a8 <col:148> '_Bool' lvalue Var 0x564e2fe2d270 'z$r_buff0_thd2' '_Bool'
|   |         `-ParenExpr 0x564e2fe30578 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x564e2fe30548 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x564e2fe30468 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x564e2fe30420 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x564e2fe30408 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x564e2fe303c8 <col:166> '_Bool' lvalue Var 0x564e2fe2d6b8 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x564e2fe30450 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x564e2fe30438 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x564e2fe303e8 <col:184> '_Bool' lvalue Var 0x564e2fe2d270 'z$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x564e2fe30500 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x564e2fe304b8 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x564e2fe30488 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x564e2fe30530 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x564e2fe30518 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x564e2fe304e0 <col:212> '_Bool' lvalue Var 0x564e2fe2d270 'z$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x564e2fe30c88 <line:746:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x564e2fe306e0 <col:3> '_Bool' lvalue Var 0x564e2fe2d450 'z$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x564e2fe30c70 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x564e2fe30c40 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x564e2fe30bf8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x564e2fe30be0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x564e2fe30700 <col:20> '_Bool' lvalue Var 0x564e2fe2d8a0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x564e2fe30c28 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x564e2fe30c10 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x564e2fe30720 <col:36> '_Bool' lvalue Var 0x564e2fe2d450 'z$r_buff1_thd2' '_Bool'
|   |     `-ParenExpr 0x564e2fe30bc0 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x564e2fe30b90 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x564e2fe30930 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x564e2fe30850 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x564e2fe30778 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x564e2fe30760 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x564e2fe30740 <col:55> '_Bool' lvalue Var 0x564e2fe2d6b8 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x564e2fe30830 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x564e2fe307c8 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x564e2fe307b0 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x564e2fe30790 <col:74> '_Bool' lvalue Var 0x564e2fe2d270 'z$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x564e2fe30818 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x564e2fe30800 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x564e2fe307e0 <col:93> '_Bool' lvalue Var 0x564e2fe2d7b0 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x564e2fe30910 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x564e2fe308a8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x564e2fe30890 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x564e2fe30870 <col:112> '_Bool' lvalue Var 0x564e2fe2d270 'z$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x564e2fe308f8 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x564e2fe308e0 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x564e2fe308c0 <col:131> '_Bool' lvalue Var 0x564e2fe2d450 'z$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x564e2fe30b78 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x564e2fe30b60 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x564e2fe30950 <col:148> '_Bool' lvalue Var 0x564e2fe2d450 'z$r_buff1_thd2' '_Bool'
|   |         `-ParenExpr 0x564e2fe30b40 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x564e2fe30b10 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x564e2fe30a10 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x564e2fe309c8 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x564e2fe309b0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x564e2fe30970 <col:166> '_Bool' lvalue Var 0x564e2fe2d6b8 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x564e2fe309f8 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x564e2fe309e0 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x564e2fe30990 <col:184> '_Bool' lvalue Var 0x564e2fe2d270 'z$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x564e2fe30ae0 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x564e2fe30a60 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x564e2fe30a30 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x564e2fe30af8 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x564e2fe30ab8 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x564e2fe30a88 <col:219> 'int' 0
|   |-BinaryOperator 0x564e2fe30d00 <line:747:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x564e2fe30ca8 <col:3> 'int' lvalue Var 0x564e2fe2c7d0 '__unbuffered_p1_EBX' 'int'
|   | `-ImplicitCastExpr 0x564e2fe30ce8 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x564e2fe30cc8 <col:25> 'int' lvalue Var 0x564e2fe2cff0 'z' 'int'
|   |-BinaryOperator 0x564e2fe30e30 <line:748:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x564e2fe30d20 <col:3> 'int' lvalue Var 0x564e2fe2cff0 'z' 'int'
|   | `-ConditionalOperator 0x564e2fe30e00 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x564e2fe30db8 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x564e2fe30da0 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x564e2fe30d40 <col:7> '_Bool' lvalue Var 0x564e2fe2d088 'z$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x564e2fe30dd0 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x564e2fe30d60 <col:25> 'int' lvalue Var 0x564e2fe2d108 'z$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x564e2fe30de8 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x564e2fe30d80 <col:37> 'int' lvalue Var 0x564e2fe2cff0 'z' 'int'
|   |-BinaryOperator 0x564e2fe30ec8 <line:749:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x564e2fe30e50 <col:3> '_Bool' lvalue Var 0x564e2fe2d088 'z$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x564e2fe30ea0 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x564e2fe30e70 <col:28> 'int' 0
|   |-CallExpr 0x564e2fe30f20 <line:750:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x564e2fe30f08 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564e2fe30ee8 <col:3> 'void ()' Function 0x564e2fdd3410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x564e2fe30f78 <line:751:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x564e2fe30f60 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564e2fe30f40 <col:3> 'void ()' Function 0x564e2fdd3350 '__VERIFIER_atomic_begin' 'void ()'
|   |-CallExpr 0x564e2fe30fe8 <line:752:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x564e2fe30fd0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564e2fe30fb0 <col:3> 'void ()' Function 0x564e2fdd3410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x564e2fe31040 <line:753:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x564e2fe31028 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564e2fe31008 <col:3> 'void ()' Function 0x564e2fdd3350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x564e2fe310f8 <line:754:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x564e2fe31060 <col:3> 'int' lvalue Var 0x564e2fe2c590 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x564e2fe310d8 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x564e2fe310c0 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x564e2fe31080 <col:22> 'int' lvalue Var 0x564e2fe2c590 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x564e2fe310a0 <col:41> 'int' 1
|   |-CallExpr 0x564e2fe31150 <line:755:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x564e2fe31138 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564e2fe31118 <col:3> 'void ()' Function 0x564e2fdd3410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x564e2fe311c8 <line:756:3, col:36>
|     `-CallExpr 0x564e2fe311a8 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x564e2fe31190 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x564e2fe31170 <col:10> 'void *(void)' Function 0x564e2fdd2e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x564e2fe31390 prev 0x564e2fe2c210 <line:758:1, line:802:1> line:758:8 used P2 'void *(void *)'
| |-ParmVarDecl 0x564e2fe312f8 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x564e2fe35628 <line:759:1, line:802:1>
|   |-CallExpr 0x564e2fe31470 <line:760:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x564e2fe31458 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564e2fe31438 <col:3> 'void ()' Function 0x564e2fdd3350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x564e2fe314e8 <line:761:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x564e2fe31490 <col:3> 'int' lvalue Var 0x564e2fe2d738 'z$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x564e2fe314d0 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x564e2fe314b0 <col:15> 'int' lvalue Var 0x564e2fe2d640 'z$w_buff0' 'int'
|   |-BinaryOperator 0x564e2fe31548 <line:762:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x564e2fe31508 <col:3> 'int' lvalue Var 0x564e2fe2d640 'z$w_buff0' 'int'
|   | `-IntegerLiteral 0x564e2fe31528 <col:15> 'int' 1
|   |-BinaryOperator 0x564e2fe315c0 <line:763:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x564e2fe31568 <col:3> '_Bool' lvalue Var 0x564e2fe2d7b0 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x564e2fe315a8 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x564e2fe31588 <col:20> '_Bool' lvalue Var 0x564e2fe2d6b8 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x564e2fe31658 <line:764:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x564e2fe315e0 <col:3> '_Bool' lvalue Var 0x564e2fe2d6b8 'z$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x564e2fe31630 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x564e2fe31600 <col:27> 'int' 1
|   |-CallExpr 0x564e2fe317d8 <line:765:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x564e2fe317c0 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x564e2fe31678 <col:3> 'void (int)' Function 0x564e2fdd30d8 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x564e2fe31778 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x564e2fe31758 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x564e2fe31738 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x564e2fe316f0 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x564e2fe316d8 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x564e2fe31698 <col:23> '_Bool' lvalue Var 0x564e2fe2d7b0 'z$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x564e2fe31720 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x564e2fe31708 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x564e2fe316b8 <col:41> '_Bool' lvalue Var 0x564e2fe2d6b8 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x564e2fe31858 <line:766:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x564e2fe31800 <col:3> '_Bool' lvalue Var 0x564e2fe2d360 'z$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x564e2fe31840 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x564e2fe31820 <col:20> '_Bool' lvalue Var 0x564e2fe2d180 'z$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x564e2fe318d0 <line:767:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x564e2fe31878 <col:3> '_Bool' lvalue Var 0x564e2fe2d3d8 'z$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x564e2fe318b8 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x564e2fe31898 <col:20> '_Bool' lvalue Var 0x564e2fe2d1f8 'z$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x564e2fe31948 <line:768:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x564e2fe318f0 <col:3> '_Bool' lvalue Var 0x564e2fe2d450 'z$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x564e2fe31930 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x564e2fe31910 <col:20> '_Bool' lvalue Var 0x564e2fe2d270 'z$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x564e2fe319c0 <line:769:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x564e2fe31968 <col:3> '_Bool' lvalue Var 0x564e2fe2d4c8 'z$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x564e2fe319a8 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x564e2fe31988 <col:20> '_Bool' lvalue Var 0x564e2fe2d2e8 'z$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x564e2fe31a58 <line:770:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x564e2fe319e0 <col:3> '_Bool' lvalue Var 0x564e2fe2d2e8 'z$r_buff0_thd3' '_Bool'
|   | `-CStyleCastExpr 0x564e2fe31a30 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x564e2fe31a00 <col:27> 'int' 1
|   |-CallExpr 0x564e2fe31ab0 <line:771:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x564e2fe31a98 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564e2fe31a78 <col:3> 'void ()' Function 0x564e2fdd3410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x564e2fe31b08 <line:772:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x564e2fe31af0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564e2fe31ad0 <col:3> 'void ()' Function 0x564e2fdd3350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x564e2fe31bb8 <line:773:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x564e2fe31b28 <col:3> '_Bool' lvalue Var 0x564e2fe2d828 'weak$$choice0' '_Bool'
|   | `-ImplicitCastExpr 0x564e2fe31ba0 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x564e2fe31b80 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x564e2fe31b68 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x564e2fe31b48 <col:19> 'void *(void)' Function 0x564e2fdd2e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x564e2fe31c68 <line:774:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x564e2fe31bd8 <col:3> '_Bool' lvalue Var 0x564e2fe2d8a0 'weak$$choice2' '_Bool'
|   | `-ImplicitCastExpr 0x564e2fe31c50 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x564e2fe31c30 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x564e2fe31c18 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x564e2fe31bf8 <col:19> 'void *(void)' Function 0x564e2fdd2e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x564e2fe31ce0 <line:775:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x564e2fe31c88 <col:3> '_Bool' lvalue Var 0x564e2fe2d088 'z$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x564e2fe31cc8 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x564e2fe31ca8 <col:21> '_Bool' lvalue Var 0x564e2fe2d8a0 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x564e2fe31d58 <line:776:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x564e2fe31d00 <col:3> 'int' lvalue Var 0x564e2fe2d108 'z$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x564e2fe31d40 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x564e2fe31d20 <col:15> 'int' lvalue Var 0x564e2fe2cff0 'z' 'int'
|   |-BinaryOperator 0x564e2fe321a8 <line:777:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x564e2fe31d78 <col:3> 'int' lvalue Var 0x564e2fe2cff0 'z' 'int'
|   | `-ConditionalOperator 0x564e2fe32178 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x564e2fe31f88 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x564e2fe31ea8 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x564e2fe31dd0 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x564e2fe31db8 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x564e2fe31d98 <col:8> '_Bool' lvalue Var 0x564e2fe2d6b8 'z$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x564e2fe31e88 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x564e2fe31e20 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x564e2fe31e08 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x564e2fe31de8 <col:27> '_Bool' lvalue Var 0x564e2fe2d2e8 'z$r_buff0_thd3' '_Bool'
|   |   | |   `-UnaryOperator 0x564e2fe31e70 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x564e2fe31e58 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x564e2fe31e38 <col:46> '_Bool' lvalue Var 0x564e2fe2d7b0 'z$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x564e2fe31f68 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x564e2fe31f00 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x564e2fe31ee8 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x564e2fe31ec8 <col:65> '_Bool' lvalue Var 0x564e2fe2d2e8 'z$r_buff0_thd3' '_Bool'
|   |   |   `-UnaryOperator 0x564e2fe31f50 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x564e2fe31f38 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x564e2fe31f18 <col:84> '_Bool' lvalue Var 0x564e2fe2d4c8 'z$r_buff1_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x564e2fe32160 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x564e2fe31fc0 <col:101> 'int' lvalue Var 0x564e2fe2cff0 'z' 'int'
|   |   `-ParenExpr 0x564e2fe32140 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x564e2fe32110 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x564e2fe32080 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x564e2fe32038 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x564e2fe32020 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x564e2fe31fe0 <col:106> '_Bool' lvalue Var 0x564e2fe2d6b8 'z$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x564e2fe32068 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x564e2fe32050 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x564e2fe32000 <col:124> '_Bool' lvalue Var 0x564e2fe2d2e8 'z$r_buff0_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x564e2fe320e0 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x564e2fe320a0 <col:141> 'int' lvalue Var 0x564e2fe2d640 'z$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x564e2fe320f8 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x564e2fe320c0 <col:153> 'int' lvalue Var 0x564e2fe2d738 'z$w_buff1' 'int'
|   |-BinaryOperator 0x564e2fe326b8 <line:778:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x564e2fe321c8 <col:3> 'int' lvalue Var 0x564e2fe2d640 'z$w_buff0' 'int'
|   | `-ConditionalOperator 0x564e2fe32688 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x564e2fe32658 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x564e2fe32640 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x564e2fe321e8 <col:15> '_Bool' lvalue Var 0x564e2fe2d8a0 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x564e2fe32670 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x564e2fe32208 <col:31> 'int' lvalue Var 0x564e2fe2d640 'z$w_buff0' 'int'
|   |   `-ParenExpr 0x564e2fe32620 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x564e2fe325f0 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x564e2fe32418 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x564e2fe32338 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x564e2fe32260 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x564e2fe32248 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x564e2fe32228 <col:45> '_Bool' lvalue Var 0x564e2fe2d6b8 'z$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x564e2fe32318 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x564e2fe322b0 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x564e2fe32298 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x564e2fe32278 <col:64> '_Bool' lvalue Var 0x564e2fe2d2e8 'z$r_buff0_thd3' '_Bool'
|   |       | |   `-UnaryOperator 0x564e2fe32300 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x564e2fe322e8 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x564e2fe322c8 <col:83> '_Bool' lvalue Var 0x564e2fe2d7b0 'z$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x564e2fe323f8 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x564e2fe32390 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x564e2fe32378 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x564e2fe32358 <col:102> '_Bool' lvalue Var 0x564e2fe2d2e8 'z$r_buff0_thd3' '_Bool'
|   |       |   `-UnaryOperator 0x564e2fe323e0 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x564e2fe323c8 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x564e2fe323a8 <col:121> '_Bool' lvalue Var 0x564e2fe2d4c8 'z$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x564e2fe325d8 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x564e2fe32438 <col:138> 'int' lvalue Var 0x564e2fe2d640 'z$w_buff0' 'int'
|   |       `-ParenExpr 0x564e2fe325b8 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x564e2fe32588 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x564e2fe324f8 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x564e2fe324b0 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x564e2fe32498 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x564e2fe32458 <col:151> '_Bool' lvalue Var 0x564e2fe2d6b8 'z$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x564e2fe324e0 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x564e2fe324c8 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x564e2fe32478 <col:169> '_Bool' lvalue Var 0x564e2fe2d2e8 'z$r_buff0_thd3' '_Bool'
|   |           |-ImplicitCastExpr 0x564e2fe32558 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x564e2fe32518 <col:186> 'int' lvalue Var 0x564e2fe2d640 'z$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x564e2fe32570 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x564e2fe32538 <col:198> 'int' lvalue Var 0x564e2fe2d640 'z$w_buff0' 'int'
|   |-BinaryOperator 0x564e2fe32bc8 <line:779:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x564e2fe326d8 <col:3> 'int' lvalue Var 0x564e2fe2d738 'z$w_buff1' 'int'
|   | `-ConditionalOperator 0x564e2fe32b98 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x564e2fe32b68 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x564e2fe32b50 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x564e2fe326f8 <col:15> '_Bool' lvalue Var 0x564e2fe2d8a0 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x564e2fe32b80 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x564e2fe32718 <col:31> 'int' lvalue Var 0x564e2fe2d738 'z$w_buff1' 'int'
|   |   `-ParenExpr 0x564e2fe32b30 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x564e2fe32b00 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x564e2fe32928 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x564e2fe32848 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x564e2fe32770 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x564e2fe32758 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x564e2fe32738 <col:45> '_Bool' lvalue Var 0x564e2fe2d6b8 'z$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x564e2fe32828 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x564e2fe327c0 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x564e2fe327a8 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x564e2fe32788 <col:64> '_Bool' lvalue Var 0x564e2fe2d2e8 'z$r_buff0_thd3' '_Bool'
|   |       | |   `-UnaryOperator 0x564e2fe32810 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x564e2fe327f8 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x564e2fe327d8 <col:83> '_Bool' lvalue Var 0x564e2fe2d7b0 'z$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x564e2fe32908 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x564e2fe328a0 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x564e2fe32888 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x564e2fe32868 <col:102> '_Bool' lvalue Var 0x564e2fe2d2e8 'z$r_buff0_thd3' '_Bool'
|   |       |   `-UnaryOperator 0x564e2fe328f0 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x564e2fe328d8 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x564e2fe328b8 <col:121> '_Bool' lvalue Var 0x564e2fe2d4c8 'z$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x564e2fe32ae8 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x564e2fe32948 <col:138> 'int' lvalue Var 0x564e2fe2d738 'z$w_buff1' 'int'
|   |       `-ParenExpr 0x564e2fe32ac8 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x564e2fe32a98 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x564e2fe32a08 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x564e2fe329c0 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x564e2fe329a8 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x564e2fe32968 <col:151> '_Bool' lvalue Var 0x564e2fe2d6b8 'z$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x564e2fe329f0 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x564e2fe329d8 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x564e2fe32988 <col:169> '_Bool' lvalue Var 0x564e2fe2d2e8 'z$r_buff0_thd3' '_Bool'
|   |           |-ImplicitCastExpr 0x564e2fe32a68 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x564e2fe32a28 <col:186> 'int' lvalue Var 0x564e2fe2d738 'z$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x564e2fe32a80 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x564e2fe32a48 <col:198> 'int' lvalue Var 0x564e2fe2d738 'z$w_buff1' 'int'
|   |-BinaryOperator 0x564e2fe33190 <line:780:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x564e2fe32be8 <col:3> '_Bool' lvalue Var 0x564e2fe2d6b8 'z$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x564e2fe33178 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x564e2fe33148 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x564e2fe33100 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x564e2fe330e8 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x564e2fe32c08 <col:20> '_Bool' lvalue Var 0x564e2fe2d8a0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x564e2fe33130 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x564e2fe33118 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x564e2fe32c28 <col:36> '_Bool' lvalue Var 0x564e2fe2d6b8 'z$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x564e2fe330c8 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x564e2fe33098 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x564e2fe32e38 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x564e2fe32d58 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x564e2fe32c80 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x564e2fe32c68 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x564e2fe32c48 <col:55> '_Bool' lvalue Var 0x564e2fe2d6b8 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x564e2fe32d38 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x564e2fe32cd0 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x564e2fe32cb8 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x564e2fe32c98 <col:74> '_Bool' lvalue Var 0x564e2fe2d2e8 'z$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x564e2fe32d20 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x564e2fe32d08 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x564e2fe32ce8 <col:93> '_Bool' lvalue Var 0x564e2fe2d7b0 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x564e2fe32e18 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x564e2fe32db0 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x564e2fe32d98 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x564e2fe32d78 <col:112> '_Bool' lvalue Var 0x564e2fe2d2e8 'z$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x564e2fe32e00 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x564e2fe32de8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x564e2fe32dc8 <col:131> '_Bool' lvalue Var 0x564e2fe2d4c8 'z$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x564e2fe33080 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x564e2fe33068 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x564e2fe32e58 <col:148> '_Bool' lvalue Var 0x564e2fe2d6b8 'z$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x564e2fe33048 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x564e2fe33018 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x564e2fe32f18 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x564e2fe32ed0 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x564e2fe32eb8 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x564e2fe32e78 <col:166> '_Bool' lvalue Var 0x564e2fe2d6b8 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x564e2fe32f00 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x564e2fe32ee8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x564e2fe32e98 <col:184> '_Bool' lvalue Var 0x564e2fe2d2e8 'z$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x564e2fe32fd0 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x564e2fe32f68 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x564e2fe32f38 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x564e2fe33000 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x564e2fe32fe8 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x564e2fe32f90 <col:212> '_Bool' lvalue Var 0x564e2fe2d6b8 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x564e2fe33758 <line:781:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x564e2fe331b0 <col:3> '_Bool' lvalue Var 0x564e2fe2d7b0 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x564e2fe33740 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x564e2fe33710 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x564e2fe336c8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x564e2fe336b0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x564e2fe331d0 <col:20> '_Bool' lvalue Var 0x564e2fe2d8a0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x564e2fe336f8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x564e2fe336e0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x564e2fe331f0 <col:36> '_Bool' lvalue Var 0x564e2fe2d7b0 'z$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x564e2fe33690 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x564e2fe33660 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x564e2fe33400 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x564e2fe33320 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x564e2fe33248 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x564e2fe33230 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x564e2fe33210 <col:55> '_Bool' lvalue Var 0x564e2fe2d6b8 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x564e2fe33300 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x564e2fe33298 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x564e2fe33280 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x564e2fe33260 <col:74> '_Bool' lvalue Var 0x564e2fe2d2e8 'z$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x564e2fe332e8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x564e2fe332d0 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x564e2fe332b0 <col:93> '_Bool' lvalue Var 0x564e2fe2d7b0 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x564e2fe333e0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x564e2fe33378 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x564e2fe33360 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x564e2fe33340 <col:112> '_Bool' lvalue Var 0x564e2fe2d2e8 'z$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x564e2fe333c8 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x564e2fe333b0 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x564e2fe33390 <col:131> '_Bool' lvalue Var 0x564e2fe2d4c8 'z$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x564e2fe33648 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x564e2fe33630 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x564e2fe33420 <col:148> '_Bool' lvalue Var 0x564e2fe2d7b0 'z$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x564e2fe33610 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x564e2fe335e0 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x564e2fe334e0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x564e2fe33498 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x564e2fe33480 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x564e2fe33440 <col:166> '_Bool' lvalue Var 0x564e2fe2d6b8 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x564e2fe334c8 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x564e2fe334b0 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x564e2fe33460 <col:184> '_Bool' lvalue Var 0x564e2fe2d2e8 'z$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x564e2fe335b0 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x564e2fe33530 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x564e2fe33500 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x564e2fe335c8 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x564e2fe33588 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x564e2fe33558 <col:219> 'int' 0
|   |-BinaryOperator 0x564e2fe33d00 <line:782:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x564e2fe33778 <col:3> '_Bool' lvalue Var 0x564e2fe2d2e8 'z$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x564e2fe33ce8 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x564e2fe33cb8 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x564e2fe33c70 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x564e2fe33c58 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x564e2fe33798 <col:20> '_Bool' lvalue Var 0x564e2fe2d8a0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x564e2fe33ca0 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x564e2fe33c88 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x564e2fe337b8 <col:36> '_Bool' lvalue Var 0x564e2fe2d2e8 'z$r_buff0_thd3' '_Bool'
|   |     `-ParenExpr 0x564e2fe33c38 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x564e2fe33c08 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x564e2fe339c8 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x564e2fe338e8 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x564e2fe33810 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x564e2fe337f8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x564e2fe337d8 <col:55> '_Bool' lvalue Var 0x564e2fe2d6b8 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x564e2fe338c8 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x564e2fe33860 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x564e2fe33848 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x564e2fe33828 <col:74> '_Bool' lvalue Var 0x564e2fe2d2e8 'z$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x564e2fe338b0 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x564e2fe33898 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x564e2fe33878 <col:93> '_Bool' lvalue Var 0x564e2fe2d7b0 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x564e2fe339a8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x564e2fe33940 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x564e2fe33928 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x564e2fe33908 <col:112> '_Bool' lvalue Var 0x564e2fe2d2e8 'z$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x564e2fe33990 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x564e2fe33978 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x564e2fe33958 <col:131> '_Bool' lvalue Var 0x564e2fe2d4c8 'z$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x564e2fe33bf0 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x564e2fe33bd8 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x564e2fe339e8 <col:148> '_Bool' lvalue Var 0x564e2fe2d2e8 'z$r_buff0_thd3' '_Bool'
|   |         `-ParenExpr 0x564e2fe33bb8 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x564e2fe33b88 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x564e2fe33aa8 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x564e2fe33a60 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x564e2fe33a48 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x564e2fe33a08 <col:166> '_Bool' lvalue Var 0x564e2fe2d6b8 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x564e2fe33a90 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x564e2fe33a78 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x564e2fe33a28 <col:184> '_Bool' lvalue Var 0x564e2fe2d2e8 'z$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x564e2fe33b40 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x564e2fe33af8 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x564e2fe33ac8 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x564e2fe33b70 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x564e2fe33b58 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x564e2fe33b20 <col:212> '_Bool' lvalue Var 0x564e2fe2d2e8 'z$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x564e2fe342d8 <line:783:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x564e2fe33d20 <col:3> '_Bool' lvalue Var 0x564e2fe2d4c8 'z$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x564e2fe342c0 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x564e2fe34290 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x564e2fe34248 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x564e2fe34230 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x564e2fe33d40 <col:20> '_Bool' lvalue Var 0x564e2fe2d8a0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x564e2fe34278 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x564e2fe34260 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x564e2fe33d60 <col:36> '_Bool' lvalue Var 0x564e2fe2d4c8 'z$r_buff1_thd3' '_Bool'
|   |     `-ParenExpr 0x564e2fe34210 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x564e2fe341e0 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x564e2fe33f70 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x564e2fe33e90 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x564e2fe33db8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x564e2fe33da0 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x564e2fe33d80 <col:55> '_Bool' lvalue Var 0x564e2fe2d6b8 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x564e2fe33e70 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x564e2fe33e08 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x564e2fe33df0 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x564e2fe33dd0 <col:74> '_Bool' lvalue Var 0x564e2fe2d2e8 'z$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x564e2fe33e58 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x564e2fe33e40 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x564e2fe33e20 <col:93> '_Bool' lvalue Var 0x564e2fe2d7b0 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x564e2fe33f50 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x564e2fe33ee8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x564e2fe33ed0 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x564e2fe33eb0 <col:112> '_Bool' lvalue Var 0x564e2fe2d2e8 'z$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x564e2fe33f38 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x564e2fe33f20 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x564e2fe33f00 <col:131> '_Bool' lvalue Var 0x564e2fe2d4c8 'z$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x564e2fe341c8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x564e2fe341b0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x564e2fe33f90 <col:148> '_Bool' lvalue Var 0x564e2fe2d4c8 'z$r_buff1_thd3' '_Bool'
|   |         `-ParenExpr 0x564e2fe34190 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x564e2fe34160 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x564e2fe34060 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x564e2fe34018 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x564e2fe34000 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x564e2fe33fb0 <col:166> '_Bool' lvalue Var 0x564e2fe2d6b8 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x564e2fe34048 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x564e2fe34030 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x564e2fe33fe0 <col:184> '_Bool' lvalue Var 0x564e2fe2d2e8 'z$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x564e2fe34130 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x564e2fe340b0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x564e2fe34080 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x564e2fe34148 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x564e2fe34108 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x564e2fe340d8 <col:219> 'int' 0
|   |-BinaryOperator 0x564e2fe34350 <line:784:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x564e2fe342f8 <col:3> 'int' lvalue Var 0x564e2fe2c8f0 '__unbuffered_p2_EAX' 'int'
|   | `-ImplicitCastExpr 0x564e2fe34338 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x564e2fe34318 <col:25> 'int' lvalue Var 0x564e2fe2cff0 'z' 'int'
|   |-BinaryOperator 0x564e2fe34480 <line:785:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x564e2fe34370 <col:3> 'int' lvalue Var 0x564e2fe2cff0 'z' 'int'
|   | `-ConditionalOperator 0x564e2fe34450 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x564e2fe34408 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x564e2fe343f0 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x564e2fe34390 <col:7> '_Bool' lvalue Var 0x564e2fe2d088 'z$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x564e2fe34420 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x564e2fe343b0 <col:25> 'int' lvalue Var 0x564e2fe2d108 'z$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x564e2fe34438 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x564e2fe343d0 <col:37> 'int' lvalue Var 0x564e2fe2cff0 'z' 'int'
|   |-BinaryOperator 0x564e2fe34518 <line:786:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x564e2fe344a0 <col:3> '_Bool' lvalue Var 0x564e2fe2d088 'z$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x564e2fe344f0 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x564e2fe344c0 <col:28> 'int' 0
|   |-CallExpr 0x564e2fe34570 <line:787:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x564e2fe34558 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564e2fe34538 <col:3> 'void ()' Function 0x564e2fdd3410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x564e2fe345c8 <line:788:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x564e2fe345b0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564e2fe34590 <col:3> 'void ()' Function 0x564e2fdd3350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x564e2fe34640 <line:789:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x564e2fe345e8 <col:3> 'int' lvalue Var 0x564e2fe2ca10 '__unbuffered_p2_EBX' 'int'
|   | `-ImplicitCastExpr 0x564e2fe34628 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x564e2fe34608 <col:25> 'int' lvalue Var 0x564e2fe2cb30 'a' 'int'
|   |-CallExpr 0x564e2fe34698 <line:790:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x564e2fe34680 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564e2fe34660 <col:3> 'void ()' Function 0x564e2fdd3410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x564e2fe346f0 <line:791:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x564e2fe346d8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564e2fe346b8 <col:3> 'void ()' Function 0x564e2fdd3350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x564e2fe349d8 <line:792:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x564e2fe34710 <col:3> 'int' lvalue Var 0x564e2fe2cff0 'z' 'int'
|   | `-ConditionalOperator 0x564e2fe349a8 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x564e2fe347d0 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x564e2fe34788 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x564e2fe34770 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x564e2fe34730 <col:7> '_Bool' lvalue Var 0x564e2fe2d6b8 'z$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x564e2fe347b8 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x564e2fe347a0 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x564e2fe34750 <col:25> '_Bool' lvalue Var 0x564e2fe2d2e8 'z$r_buff0_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x564e2fe34990 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x564e2fe347f0 <col:42> 'int' lvalue Var 0x564e2fe2d640 'z$w_buff0' 'int'
|   |   `-ParenExpr 0x564e2fe34970 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x564e2fe34940 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x564e2fe348b0 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x564e2fe34868 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x564e2fe34850 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x564e2fe34810 <col:55> '_Bool' lvalue Var 0x564e2fe2d7b0 'z$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x564e2fe34898 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x564e2fe34880 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x564e2fe34830 <col:73> '_Bool' lvalue Var 0x564e2fe2d4c8 'z$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x564e2fe34910 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x564e2fe348d0 <col:90> 'int' lvalue Var 0x564e2fe2d738 'z$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x564e2fe34928 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x564e2fe348f0 <col:102> 'int' lvalue Var 0x564e2fe2cff0 'z' 'int'
|   |-BinaryOperator 0x564e2fe34be0 <line:793:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x564e2fe349f8 <col:3> '_Bool' lvalue Var 0x564e2fe2d6b8 'z$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x564e2fe34bc8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x564e2fe34b98 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x564e2fe34ab8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x564e2fe34a70 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x564e2fe34a58 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x564e2fe34a18 <col:20> '_Bool' lvalue Var 0x564e2fe2d6b8 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x564e2fe34aa0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x564e2fe34a88 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x564e2fe34a38 <col:38> '_Bool' lvalue Var 0x564e2fe2d2e8 'z$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x564e2fe34b50 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x564e2fe34b08 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x564e2fe34ad8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x564e2fe34b80 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x564e2fe34b68 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x564e2fe34b30 <col:66> '_Bool' lvalue Var 0x564e2fe2d6b8 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x564e2fe34ec8 <line:794:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x564e2fe34c00 <col:3> '_Bool' lvalue Var 0x564e2fe2d7b0 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x564e2fe34eb0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x564e2fe34e80 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x564e2fe34da0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x564e2fe34cc0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x564e2fe34c78 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x564e2fe34c60 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x564e2fe34c20 <col:20> '_Bool' lvalue Var 0x564e2fe2d6b8 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x564e2fe34ca8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x564e2fe34c90 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x564e2fe34c40 <col:38> '_Bool' lvalue Var 0x564e2fe2d2e8 'z$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x564e2fe34d80 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x564e2fe34d38 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x564e2fe34d20 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x564e2fe34ce0 <col:56> '_Bool' lvalue Var 0x564e2fe2d7b0 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x564e2fe34d68 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x564e2fe34d50 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x564e2fe34d00 <col:74> '_Bool' lvalue Var 0x564e2fe2d4c8 'z$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x564e2fe34e38 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x564e2fe34df0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x564e2fe34dc0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x564e2fe34e68 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x564e2fe34e50 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x564e2fe34e18 <col:102> '_Bool' lvalue Var 0x564e2fe2d7b0 'z$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x564e2fe350f8 <line:795:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x564e2fe34ee8 <col:3> '_Bool' lvalue Var 0x564e2fe2d2e8 'z$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x564e2fe350e0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x564e2fe350b0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x564e2fe34fa8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x564e2fe34f60 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x564e2fe34f48 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x564e2fe34f08 <col:20> '_Bool' lvalue Var 0x564e2fe2d6b8 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x564e2fe34f90 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x564e2fe34f78 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x564e2fe34f28 <col:38> '_Bool' lvalue Var 0x564e2fe2d2e8 'z$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x564e2fe35068 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x564e2fe35020 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x564e2fe34ff0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x564e2fe35098 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x564e2fe35080 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x564e2fe35048 <col:66> '_Bool' lvalue Var 0x564e2fe2d2e8 'z$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x564e2fe353e0 <line:796:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x564e2fe35118 <col:3> '_Bool' lvalue Var 0x564e2fe2d4c8 'z$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x564e2fe353c8 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x564e2fe35398 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x564e2fe352b8 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x564e2fe351d8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x564e2fe35190 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x564e2fe35178 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x564e2fe35138 <col:20> '_Bool' lvalue Var 0x564e2fe2d6b8 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x564e2fe351c0 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x564e2fe351a8 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x564e2fe35158 <col:38> '_Bool' lvalue Var 0x564e2fe2d2e8 'z$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x564e2fe35298 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x564e2fe35250 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x564e2fe35238 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x564e2fe351f8 <col:56> '_Bool' lvalue Var 0x564e2fe2d7b0 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x564e2fe35280 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x564e2fe35268 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x564e2fe35218 <col:74> '_Bool' lvalue Var 0x564e2fe2d4c8 'z$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x564e2fe35350 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x564e2fe35308 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x564e2fe352d8 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x564e2fe35380 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x564e2fe35368 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x564e2fe35330 <col:102> '_Bool' lvalue Var 0x564e2fe2d4c8 'z$r_buff1_thd3' '_Bool'
|   |-CallExpr 0x564e2fe35438 <line:797:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x564e2fe35420 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564e2fe35400 <col:3> 'void ()' Function 0x564e2fdd3410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x564e2fe35490 <line:798:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x564e2fe35478 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564e2fe35458 <col:3> 'void ()' Function 0x564e2fdd3350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x564e2fe35548 <line:799:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x564e2fe354b0 <col:3> 'int' lvalue Var 0x564e2fe2c590 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x564e2fe35528 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x564e2fe35510 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x564e2fe354d0 <col:22> 'int' lvalue Var 0x564e2fe2c590 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x564e2fe354f0 <col:41> 'int' 1
|   |-CallExpr 0x564e2fe355a0 <line:800:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x564e2fe35588 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564e2fe35568 <col:3> 'void ()' Function 0x564e2fdd3410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x564e2fe35618 <line:801:3, col:36>
|     `-CallExpr 0x564e2fe355f8 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x564e2fe355e0 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x564e2fe355c0 <col:10> 'void *(void)' Function 0x564e2fdd2e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x564e2fe357a8 prev 0x564e2fe2c2d8 <line:803:1, line:805:1> line:803:6 fence 'void ()'
| `-CompoundStmt 0x564e2fe35848 <line:804:1, line:805:1>
|-FunctionDecl 0x564e2fe35878 prev 0x564e2fe2c398 <line:806:1, line:808:1> line:806:6 isync 'void ()'
| `-CompoundStmt 0x564e2fe35918 <line:807:1, line:808:1>
|-FunctionDecl 0x564e2fe35948 prev 0x564e2fe2c458 <line:809:1, line:811:1> line:809:6 lwfence 'void ()'
| `-CompoundStmt 0x564e2fe359e8 <line:810:1, line:811:1>
`-FunctionDecl 0x564e2fe35a58 <line:812:1, line:836:1> line:812:5 main 'int ()'
  `-CompoundStmt 0x564e2fe377d0 <line:813:1, line:836:1>
    |-DeclStmt 0x564e2fe35b70 <line:814:3, col:17>
    | `-VarDecl 0x564e2fe35b08 <col:3, col:13> col:13 used t298 'pthread_t':'unsigned long'
    |-CallExpr 0x564e2fe35d78 <line:815:3, col:53> 'int'
    | |-ImplicitCastExpr 0x564e2fe35d60 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x564e2fe35b88 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x564e2fe138f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x564e2fe35bc8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x564e2fe35ba8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x564e2fe35b08 't298' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x564e2fe35db8 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x564e2fe35c40 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x564e2fe35c18 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x564e2fe35be0 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x564e2fe35dd0 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x564e2fe35c60 <col:38> 'void *(void *)' Function 0x564e2fe2d9b8 'P0' 'void *(void *)'
    | `-ParenExpr 0x564e2fe35ce0 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x564e2fe35cb8 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x564e2fe35c80 <col:51> 'int' 0
    |-DeclStmt 0x564e2fe35e60 <line:816:3, col:17>
    | `-VarDecl 0x564e2fe35df8 <col:3, col:13> col:13 used t299 'pthread_t':'unsigned long'
    |-CallExpr 0x564e2fe36018 <line:817:3, col:53> 'int'
    | |-ImplicitCastExpr 0x564e2fe36000 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x564e2fe35e78 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x564e2fe138f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x564e2fe35eb8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x564e2fe35e98 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x564e2fe35df8 't299' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x564e2fe36058 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x564e2fe35f30 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x564e2fe35f08 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x564e2fe35ed0 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x564e2fe36070 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x564e2fe35f50 <col:38> 'void *(void *)' Function 0x564e2fe2e0a0 'P1' 'void *(void *)'
    | `-ParenExpr 0x564e2fe35fd0 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x564e2fe35fa8 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x564e2fe35f70 <col:51> 'int' 0
    |-DeclStmt 0x564e2fe36100 <line:818:3, col:17>
    | `-VarDecl 0x564e2fe36098 <col:3, col:13> col:13 used t300 'pthread_t':'unsigned long'
    |-CallExpr 0x564e2fe362a8 <line:819:3, col:53> 'int'
    | |-ImplicitCastExpr 0x564e2fe36290 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x564e2fe36118 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x564e2fe138f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x564e2fe36158 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x564e2fe36138 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x564e2fe36098 't300' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x564e2fe362e8 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x564e2fe361d0 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x564e2fe361a8 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x564e2fe36170 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x564e2fe36300 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x564e2fe361f0 <col:38> 'void *(void *)' Function 0x564e2fe31390 'P2' 'void *(void *)'
    | `-ParenExpr 0x564e2fe36270 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x564e2fe36248 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x564e2fe36210 <col:51> 'int' 0
    |-CallExpr 0x564e2fe36350 <line:820:3, col:27> 'void'
    | `-ImplicitCastExpr 0x564e2fe36338 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x564e2fe36318 <col:3> 'void ()' Function 0x564e2fdd3350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x564e2fe36420 <line:821:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x564e2fe36370 <col:3> '_Bool' lvalue Var 0x564e2fe2cbc8 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x564e2fe36408 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x564e2fe363e8 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x564e2fe363d0 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x564e2fe36390 <col:21> 'int' lvalue Var 0x564e2fe2c590 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x564e2fe363b0 <col:41> 'int' 3
    |-CallExpr 0x564e2fe36478 <line:822:3, col:25> 'void'
    | `-ImplicitCastExpr 0x564e2fe36460 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x564e2fe36440 <col:3> 'void ()' Function 0x564e2fdd3410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x564e2fe364f0 <line:823:3, col:36> 'void'
    | |-ImplicitCastExpr 0x564e2fe364d8 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x564e2fe36498 <col:3> 'void (int)' Function 0x564e2fdd2ca0 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x564e2fe36530 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x564e2fe36518 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x564e2fe364b8 <col:21> '_Bool' lvalue Var 0x564e2fe2cbc8 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x564e2fe36580 <line:824:3, col:27> 'void'
    | `-ImplicitCastExpr 0x564e2fe36568 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x564e2fe36548 <col:3> 'void ()' Function 0x564e2fdd3350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x564e2fe36868 <line:825:3, col:103> 'int' '='
    | |-DeclRefExpr 0x564e2fe365a0 <col:3> 'int' lvalue Var 0x564e2fe2cff0 'z' 'int'
    | `-ConditionalOperator 0x564e2fe36838 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x564e2fe36660 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x564e2fe36618 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x564e2fe36600 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x564e2fe365c0 <col:7> '_Bool' lvalue Var 0x564e2fe2d6b8 'z$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x564e2fe36648 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x564e2fe36630 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x564e2fe365e0 <col:25> '_Bool' lvalue Var 0x564e2fe2d180 'z$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x564e2fe36820 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x564e2fe36680 <col:42> 'int' lvalue Var 0x564e2fe2d640 'z$w_buff0' 'int'
    |   `-ParenExpr 0x564e2fe36800 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x564e2fe367d0 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x564e2fe36740 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x564e2fe366f8 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x564e2fe366e0 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x564e2fe366a0 <col:55> '_Bool' lvalue Var 0x564e2fe2d7b0 'z$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x564e2fe36728 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x564e2fe36710 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x564e2fe366c0 <col:73> '_Bool' lvalue Var 0x564e2fe2d360 'z$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x564e2fe367a0 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x564e2fe36760 <col:90> 'int' lvalue Var 0x564e2fe2d738 'z$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x564e2fe367b8 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x564e2fe36780 <col:102> 'int' lvalue Var 0x564e2fe2cff0 'z' 'int'
    |-BinaryOperator 0x564e2fe36a70 <line:826:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x564e2fe36888 <col:3> '_Bool' lvalue Var 0x564e2fe2d6b8 'z$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x564e2fe36a58 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x564e2fe36a28 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x564e2fe36948 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x564e2fe36900 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x564e2fe368e8 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x564e2fe368a8 <col:20> '_Bool' lvalue Var 0x564e2fe2d6b8 'z$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x564e2fe36930 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x564e2fe36918 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x564e2fe368c8 <col:38> '_Bool' lvalue Var 0x564e2fe2d180 'z$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x564e2fe369e0 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x564e2fe36998 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x564e2fe36968 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x564e2fe36a10 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x564e2fe369f8 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x564e2fe369c0 <col:66> '_Bool' lvalue Var 0x564e2fe2d6b8 'z$w_buff0_used' '_Bool'
    |-BinaryOperator 0x564e2fe36d58 <line:827:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x564e2fe36a90 <col:3> '_Bool' lvalue Var 0x564e2fe2d7b0 'z$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x564e2fe36d40 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x564e2fe36d10 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x564e2fe36c30 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x564e2fe36b50 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x564e2fe36b08 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x564e2fe36af0 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x564e2fe36ab0 <col:20> '_Bool' lvalue Var 0x564e2fe2d6b8 'z$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x564e2fe36b38 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x564e2fe36b20 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x564e2fe36ad0 <col:38> '_Bool' lvalue Var 0x564e2fe2d180 'z$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x564e2fe36c10 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x564e2fe36bc8 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x564e2fe36bb0 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x564e2fe36b70 <col:56> '_Bool' lvalue Var 0x564e2fe2d7b0 'z$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x564e2fe36bf8 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x564e2fe36be0 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x564e2fe36b90 <col:74> '_Bool' lvalue Var 0x564e2fe2d360 'z$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x564e2fe36cc8 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x564e2fe36c80 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x564e2fe36c50 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x564e2fe36cf8 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x564e2fe36ce0 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x564e2fe36ca8 <col:102> '_Bool' lvalue Var 0x564e2fe2d7b0 'z$w_buff1_used' '_Bool'
    |-BinaryOperator 0x564e2fe36f60 <line:828:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x564e2fe36d78 <col:3> '_Bool' lvalue Var 0x564e2fe2d180 'z$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x564e2fe36f48 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x564e2fe36f18 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x564e2fe36e38 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x564e2fe36df0 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x564e2fe36dd8 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x564e2fe36d98 <col:20> '_Bool' lvalue Var 0x564e2fe2d6b8 'z$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x564e2fe36e20 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x564e2fe36e08 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x564e2fe36db8 <col:38> '_Bool' lvalue Var 0x564e2fe2d180 'z$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x564e2fe36ed0 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x564e2fe36e88 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x564e2fe36e58 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x564e2fe36f00 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x564e2fe36ee8 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x564e2fe36eb0 <col:66> '_Bool' lvalue Var 0x564e2fe2d180 'z$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x564e2fe37260 <line:829:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x564e2fe36f80 <col:3> '_Bool' lvalue Var 0x564e2fe2d360 'z$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x564e2fe37248 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x564e2fe37218 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x564e2fe37138 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x564e2fe37058 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x564e2fe37010 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x564e2fe36fe0 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x564e2fe36fa0 <col:20> '_Bool' lvalue Var 0x564e2fe2d6b8 'z$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x564e2fe37040 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x564e2fe37028 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x564e2fe36fc0 <col:38> '_Bool' lvalue Var 0x564e2fe2d180 'z$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x564e2fe37118 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x564e2fe370d0 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x564e2fe370b8 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x564e2fe37078 <col:56> '_Bool' lvalue Var 0x564e2fe2d7b0 'z$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x564e2fe37100 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x564e2fe370e8 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x564e2fe37098 <col:74> '_Bool' lvalue Var 0x564e2fe2d360 'z$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x564e2fe371d0 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x564e2fe37188 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x564e2fe37158 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x564e2fe37200 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x564e2fe371e8 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x564e2fe371b0 <col:102> '_Bool' lvalue Var 0x564e2fe2d360 'z$r_buff1_thd0' '_Bool'
    |-CallExpr 0x564e2fe372b8 <line:830:3, col:25> 'void'
    | `-ImplicitCastExpr 0x564e2fe372a0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x564e2fe37280 <col:3> 'void ()' Function 0x564e2fdd3410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x564e2fe37310 <line:831:3, col:27> 'void'
    | `-ImplicitCastExpr 0x564e2fe372f8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x564e2fe372d8 <col:3> 'void ()' Function 0x564e2fdd3350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x564e2fe37678 <line:832:3, col:141> '_Bool' '='
    | |-DeclRefExpr 0x564e2fe37330 <col:3> '_Bool' lvalue Var 0x564e2fe2cc40 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x564e2fe37660 <col:21, col:141> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x564e2fe37648 <col:21, col:141> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x564e2fe37628 <col:22, col:141> 'int'
    |       `-BinaryOperator 0x564e2fe37608 <col:23, col:140> 'int' '&&'
    |         |-BinaryOperator 0x564e2fe37570 <col:23, col:112> 'int' '&&'
    |         | |-BinaryOperator 0x564e2fe374d8 <col:23, col:84> 'int' '&&'
    |         | | |-BinaryOperator 0x564e2fe37440 <col:23, col:56> 'int' '&&'
    |         | | | |-BinaryOperator 0x564e2fe373a8 <col:23, col:28> 'int' '=='
    |         | | | | |-ImplicitCastExpr 0x564e2fe37390 <col:23> 'int' <LValueToRValue>
    |         | | | | | `-DeclRefExpr 0x564e2fe37350 <col:23> 'int' lvalue Var 0x564e2fe2cd40 'x' 'int'
    |         | | | | `-IntegerLiteral 0x564e2fe37370 <col:28> 'int' 2
    |         | | | `-BinaryOperator 0x564e2fe37420 <col:33, col:56> 'int' '=='
    |         | | |   |-ImplicitCastExpr 0x564e2fe37408 <col:33> 'int' <LValueToRValue>
    |         | | |   | `-DeclRefExpr 0x564e2fe373c8 <col:33> 'int' lvalue Var 0x564e2fe2c6b0 '__unbuffered_p1_EAX' 'int'
    |         | | |   `-IntegerLiteral 0x564e2fe373e8 <col:56> 'int' 1
    |         | | `-BinaryOperator 0x564e2fe374b8 <col:61, col:84> 'int' '=='
    |         | |   |-ImplicitCastExpr 0x564e2fe374a0 <col:61> 'int' <LValueToRValue>
    |         | |   | `-DeclRefExpr 0x564e2fe37460 <col:61> 'int' lvalue Var 0x564e2fe2c7d0 '__unbuffered_p1_EBX' 'int'
    |         | |   `-IntegerLiteral 0x564e2fe37480 <col:84> 'int' 0
    |         | `-BinaryOperator 0x564e2fe37550 <col:89, col:112> 'int' '=='
    |         |   |-ImplicitCastExpr 0x564e2fe37538 <col:89> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x564e2fe374f8 <col:89> 'int' lvalue Var 0x564e2fe2c8f0 '__unbuffered_p2_EAX' 'int'
    |         |   `-IntegerLiteral 0x564e2fe37518 <col:112> 'int' 1
    |         `-BinaryOperator 0x564e2fe375e8 <col:117, col:140> 'int' '=='
    |           |-ImplicitCastExpr 0x564e2fe375d0 <col:117> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x564e2fe37590 <col:117> 'int' lvalue Var 0x564e2fe2ca10 '__unbuffered_p2_EBX' 'int'
    |           `-IntegerLiteral 0x564e2fe375b0 <col:140> 'int' 0
    |-CallExpr 0x564e2fe376d0 <line:833:3, col:25> 'void'
    | `-ImplicitCastExpr 0x564e2fe376b8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x564e2fe37698 <col:3> 'void ()' Function 0x564e2fdd3410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x564e2fe37748 <line:834:3, col:36> 'void'
    | |-ImplicitCastExpr 0x564e2fe37730 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x564e2fe376f0 <col:3> 'void (int)' Function 0x564e2fdd30d8 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x564e2fe37788 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x564e2fe37770 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x564e2fe37710 <col:21> '_Bool' lvalue Var 0x564e2fe2cc40 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x564e2fe377c0 <line:835:3, col:10>
      `-IntegerLiteral 0x564e2fe377a0 <col:10> 'int' 0
