TranslationUnitDecl 0x558061632da8 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x558061633668 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x558061633340 '__int128'
|-TypedefDecl 0x5580616336d8 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x558061633360 'unsigned __int128'
|-TypedefDecl 0x5580616339e0 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x5580616337b0 'struct __NSConstantString_tag'
|   `-Record 0x558061633730 '__NSConstantString_tag'
|-TypedefDecl 0x558061633a88 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x558061633a40 'char *'
|   `-BuiltinType 0x558061632e40 'char'
|-TypedefDecl 0x558061672960 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x558061633d20 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x558061633b60 'struct __va_list_tag'
|     `-Record 0x558061633ae0 '__va_list_tag'
|-TypedefDecl 0x5580616729d0 <floats-esbmc-regression/trunc_nondet_2_true-unreach-call.i:22:1, col:15> col:15 float_t 'float'
| `-BuiltinType 0x558061632fa0 'float'
|-TypedefDecl 0x558061672a40 <line:23:1, col:16> col:16 double_t 'double'
| `-BuiltinType 0x558061632fc0 'double'
|-FunctionDecl 0x558061672b88 <line:24:15> col:15 implicit acos 'double (double)' extern
| |-ParmVarDecl 0x558061672c28 <<invalid sloc>> <invalid sloc> 'double'
| `-NoThrowAttr 0x558061672c98 <col:15> Implicit
|-FunctionDecl 0x558061672cf0 prev 0x558061672b88 <col:1, col:62> col:15 acos 'double (double)' extern
| |-ParmVarDecl 0x558061672ab0 <col:21, col:28> col:28 __x 'double'
| `-NoThrowAttr 0x558061672d98 <col:49>
|-FunctionDecl 0x558061672ea0 <col:65, col:128> col:79 __acos 'double (double)' extern
| |-ParmVarDecl 0x558061672e08 <col:87, col:94> col:94 __x 'double'
| `-NoThrowAttr 0x558061672f48 <col:115>
|-FunctionDecl 0x558061673098 <line:26:15> col:15 implicit asin 'double (double)' extern
| |-ParmVarDecl 0x558061673138 <<invalid sloc>> <invalid sloc> 'double'
| `-NoThrowAttr 0x5580616731a8 <col:15> Implicit
|-FunctionDecl 0x558061673200 prev 0x558061673098 <col:1, col:62> col:15 asin 'double (double)' extern
| |-ParmVarDecl 0x558061673000 <col:21, col:28> col:28 __x 'double'
| `-NoThrowAttr 0x5580616732a8 <col:49>
|-FunctionDecl 0x5580616733b0 <col:65, col:128> col:79 __asin 'double (double)' extern
| |-ParmVarDecl 0x558061673318 <col:87, col:94> col:94 __x 'double'
| `-NoThrowAttr 0x558061673458 <col:115>
|-FunctionDecl 0x558061673560 <line:28:15> col:15 implicit atan 'double (double)' extern
| |-ParmVarDecl 0x558061673600 <<invalid sloc>> <invalid sloc> 'double'
| `-NoThrowAttr 0x558061673670 <col:15> Implicit
|-FunctionDecl 0x5580616736c8 prev 0x558061673560 <col:1, col:62> col:15 atan 'double (double)' extern
| |-ParmVarDecl 0x5580616734c8 <col:21, col:28> col:28 __x 'double'
| `-NoThrowAttr 0x558061673770 <col:49>
|-FunctionDecl 0x558061673878 <col:65, col:128> col:79 __atan 'double (double)' extern
| |-ParmVarDecl 0x5580616737e0 <col:87, col:94> col:94 __x 'double'
| `-NoThrowAttr 0x558061673920 <col:115>
|-FunctionDecl 0x5580616967c8 <line:30:15> col:15 implicit atan2 'double (double, double)' extern
| |-ParmVarDecl 0x558061696868 <<invalid sloc>> <invalid sloc> 'double'
| |-ParmVarDecl 0x5580616968d0 <<invalid sloc>> <invalid sloc> 'double'
| `-NoThrowAttr 0x558061696948 <col:15> Implicit
|-FunctionDecl 0x5580616969a0 prev 0x5580616967c8 <col:1, col:75> col:15 atan2 'double (double, double)' extern
| |-ParmVarDecl 0x558061696668 <col:22, col:29> col:29 __y 'double'
| |-ParmVarDecl 0x5580616966e8 <col:34, col:41> col:41 __x 'double'
| `-NoThrowAttr 0x558061696a50 <col:62>
|-FunctionDecl 0x558061696be0 <col:78, col:154> col:92 __atan2 'double (double, double)' extern
| |-ParmVarDecl 0x558061696ac0 <col:101, col:108> col:108 __y 'double'
| |-ParmVarDecl 0x558061696b40 <col:113, col:120> col:120 __x 'double'
| `-NoThrowAttr 0x558061696c90 <col:141>
|-FunctionDecl 0x558061696d98 <line:33:16> col:16 implicit cos 'double (double)' extern
| |-ParmVarDecl 0x558061696e38 <<invalid sloc>> <invalid sloc> 'double'
| `-NoThrowAttr 0x558061696ea8 <col:16> Implicit
|-FunctionDecl 0x558061696f00 prev 0x558061696d98 <col:2, col:62> col:16 cos 'double (double)' extern
| |-ParmVarDecl 0x558061696d00 <col:21, col:28> col:28 __x 'double'
| `-NoThrowAttr 0x558061696fa8 <col:49>
|-FunctionDecl 0x5580616970b0 <col:65, col:127> col:79 __cos 'double (double)' extern
| |-ParmVarDecl 0x558061697018 <col:86, col:93> col:93 __x 'double'
| `-NoThrowAttr 0x558061697158 <col:114>
|-FunctionDecl 0x558061697260 <line:35:16> col:16 implicit sin 'double (double)' extern
| |-ParmVarDecl 0x558061697300 <<invalid sloc>> <invalid sloc> 'double'
| `-NoThrowAttr 0x558061697370 <col:16> Implicit
|-FunctionDecl 0x5580616973c8 prev 0x558061697260 <col:2, col:62> col:16 sin 'double (double)' extern
| |-ParmVarDecl 0x5580616971c8 <col:21, col:28> col:28 __x 'double'
| `-NoThrowAttr 0x558061697470 <col:49>
|-FunctionDecl 0x558061697578 <col:65, col:127> col:79 __sin 'double (double)' extern
| |-ParmVarDecl 0x5580616974e0 <col:86, col:93> col:93 __x 'double'
| `-NoThrowAttr 0x558061699660 <col:114>
|-FunctionDecl 0x558061699768 <line:37:15> col:15 implicit tan 'double (double)' extern
| |-ParmVarDecl 0x558061699808 <<invalid sloc>> <invalid sloc> 'double'
| `-NoThrowAttr 0x558061699878 <col:15> Implicit
|-FunctionDecl 0x5580616998d0 prev 0x558061699768 <col:1, col:61> col:15 tan 'double (double)' extern
| |-ParmVarDecl 0x5580616996d0 <col:20, col:27> col:27 __x 'double'
| `-NoThrowAttr 0x558061699978 <col:48>
|-FunctionDecl 0x558061699a80 <col:64, col:126> col:78 __tan 'double (double)' extern
| |-ParmVarDecl 0x5580616999e8 <col:85, col:92> col:92 __x 'double'
| `-NoThrowAttr 0x558061699b28 <col:113>
|-FunctionDecl 0x558061699c30 <line:42:15> col:15 implicit cosh 'double (double)' extern
| |-ParmVarDecl 0x558061699cd0 <<invalid sloc>> <invalid sloc> 'double'
| `-NoThrowAttr 0x558061699d40 <col:15> Implicit
|-FunctionDecl 0x558061699d98 prev 0x558061699c30 <col:1, col:62> col:15 cosh 'double (double)' extern
| |-ParmVarDecl 0x558061699b98 <col:21, col:28> col:28 __x 'double'
| `-NoThrowAttr 0x558061699e40 <col:49>
|-FunctionDecl 0x558061699f48 <col:65, col:128> col:79 __cosh 'double (double)' extern
| |-ParmVarDecl 0x558061699eb0 <col:87, col:94> col:94 __x 'double'
| `-NoThrowAttr 0x558061699ff0 <col:115>
|-FunctionDecl 0x55806169a0f8 <line:44:15> col:15 implicit sinh 'double (double)' extern
| |-ParmVarDecl 0x55806169a198 <<invalid sloc>> <invalid sloc> 'double'
| `-NoThrowAttr 0x55806169a208 <col:15> Implicit
|-FunctionDecl 0x55806169a260 prev 0x55806169a0f8 <col:1, col:62> col:15 sinh 'double (double)' extern
| |-ParmVarDecl 0x55806169a060 <col:21, col:28> col:28 __x 'double'
| `-NoThrowAttr 0x55806169a308 <col:49>
|-FunctionDecl 0x55806169a410 <col:65, col:128> col:79 __sinh 'double (double)' extern
| |-ParmVarDecl 0x55806169a378 <col:87, col:94> col:94 __x 'double'
| `-NoThrowAttr 0x55806169a4b8 <col:115>
|-FunctionDecl 0x55806169a5c0 <line:46:15> col:15 implicit tanh 'double (double)' extern
| |-ParmVarDecl 0x55806169a670 <<invalid sloc>> <invalid sloc> 'double'
| `-NoThrowAttr 0x55806169a6e0 <col:15> Implicit
|-FunctionDecl 0x55806169a738 prev 0x55806169a5c0 <col:1, col:62> col:15 tanh 'double (double)' extern
| |-ParmVarDecl 0x55806169a528 <col:21, col:28> col:28 __x 'double'
| `-NoThrowAttr 0x55806169a7e0 <col:49>
|-FunctionDecl 0x55806169a8e8 <col:65, col:128> col:79 __tanh 'double (double)' extern
| |-ParmVarDecl 0x55806169a850 <col:87, col:94> col:94 __x 'double'
| `-NoThrowAttr 0x55806169a990 <col:115>
|-FunctionDecl 0x55806169aa98 <line:47:15> col:15 implicit acosh 'double (double)' extern
| |-ParmVarDecl 0x55806169ab38 <<invalid sloc>> <invalid sloc> 'double'
| `-NoThrowAttr 0x55806169aba8 <col:15> Implicit
|-FunctionDecl 0x55806169ac00 prev 0x55806169aa98 <col:1, col:63> col:15 acosh 'double (double)' extern
| |-ParmVarDecl 0x55806169aa00 <col:22, col:29> col:29 __x 'double'
| `-NoThrowAttr 0x55806169aca8 <col:50>
|-FunctionDecl 0x55806169adb0 <col:66, col:130> col:80 __acosh 'double (double)' extern
| |-ParmVarDecl 0x55806169ad18 <col:89, col:96> col:96 __x 'double'
| `-NoThrowAttr 0x55806169ae58 <col:117>
|-FunctionDecl 0x55806169af60 <line:49:15> col:15 implicit asinh 'double (double)' extern
| |-ParmVarDecl 0x55806169b000 <<invalid sloc>> <invalid sloc> 'double'
| `-NoThrowAttr 0x55806169b070 <col:15> Implicit
|-FunctionDecl 0x55806169b0c8 prev 0x55806169af60 <col:1, col:63> col:15 asinh 'double (double)' extern
| |-ParmVarDecl 0x55806169aec8 <col:22, col:29> col:29 __x 'double'
| `-NoThrowAttr 0x55806169b170 <col:50>
|-FunctionDecl 0x55806169b278 <col:66, col:130> col:80 __asinh 'double (double)' extern
| |-ParmVarDecl 0x55806169b1e0 <col:89, col:96> col:96 __x 'double'
| `-NoThrowAttr 0x55806169b320 <col:117>
|-FunctionDecl 0x55806169b428 <line:51:15> col:15 implicit atanh 'double (double)' extern
| |-ParmVarDecl 0x55806169b4c8 <<invalid sloc>> <invalid sloc> 'double'
| `-NoThrowAttr 0x55806169b538 <col:15> Implicit
|-FunctionDecl 0x55806169b590 prev 0x55806169b428 <col:1, col:63> col:15 atanh 'double (double)' extern
| |-ParmVarDecl 0x55806169b390 <col:22, col:29> col:29 __x 'double'
| `-NoThrowAttr 0x55806169b638 <col:50>
|-FunctionDecl 0x55806169b760 <col:66, col:130> col:80 __atanh 'double (double)' extern
| |-ParmVarDecl 0x55806169b6c8 <col:89, col:96> col:96 __x 'double'
| `-NoThrowAttr 0x55806169b808 <col:117>
|-FunctionDecl 0x55806169b910 <line:59:16> col:16 implicit exp 'double (double)' extern
| |-ParmVarDecl 0x55806169b9b0 <<invalid sloc>> <invalid sloc> 'double'
| `-NoThrowAttr 0x55806169ba20 <col:16> Implicit
|-FunctionDecl 0x55806169ba78 prev 0x55806169b910 <col:2, col:62> col:16 exp 'double (double)' extern
| |-ParmVarDecl 0x55806169b878 <col:21, col:28> col:28 __x 'double'
| `-NoThrowAttr 0x55806169bb20 <col:49>
|-FunctionDecl 0x55806169bc28 <col:65, col:127> col:79 __exp 'double (double)' extern
| |-ParmVarDecl 0x55806169bb90 <col:86, col:93> col:93 __x 'double'
| `-NoThrowAttr 0x55806169bcd0 <col:114>
|-FunctionDecl 0x55806169bed8 <line:62:15> col:15 implicit frexp 'double (double, int *)' extern
| |-ParmVarDecl 0x55806169bf78 <<invalid sloc>> <invalid sloc> 'double'
| |-ParmVarDecl 0x55806169bfe0 <<invalid sloc>> <invalid sloc> 'int *'
| `-NoThrowAttr 0x55806169c058 <col:15> Implicit
|-FunctionDecl 0x55806169c0b0 prev 0x55806169bed8 <col:1, col:80> col:15 frexp 'double (double, int *)' extern
| |-ParmVarDecl 0x55806169bd40 <col:22, col:29> col:29 __x 'double'
| |-ParmVarDecl 0x55806169bdf8 <col:34, col:39> col:39 __exponent 'int *'
| `-NoThrowAttr 0x55806169c160 <col:67>
|-FunctionDecl 0x55806169c2f0 <col:83, col:164> col:97 __frexp 'double (double, int *)' extern
| |-ParmVarDecl 0x55806169c1d0 <col:106, col:113> col:113 __x 'double'
| |-ParmVarDecl 0x55806169c250 <col:118, col:123> col:123 __exponent 'int *'
| `-NoThrowAttr 0x55806169c3a0 <col:151>
|-FunctionDecl 0x55806169c578 <line:65:15> col:15 implicit ldexp 'double (double, int)' extern
| |-ParmVarDecl 0x55806169c618 <<invalid sloc>> <invalid sloc> 'double'
| |-ParmVarDecl 0x55806169c690 <<invalid sloc>> <invalid sloc> 'int'
| `-NoThrowAttr 0x55806169c708 <col:15> Implicit
|-FunctionDecl 0x55806169c760 prev 0x55806169c578 <col:1, col:79> col:15 ldexp 'double (double, int)' extern
| |-ParmVarDecl 0x55806169c410 <col:22, col:29> col:29 __x 'double'
| |-ParmVarDecl 0x55806169c490 <col:34, col:38> col:38 __exponent 'int'
| `-NoThrowAttr 0x55806169c810 <col:66>
|-FunctionDecl 0x55806169c9a0 <col:82, col:162> col:96 __ldexp 'double (double, int)' extern
| |-ParmVarDecl 0x55806169c880 <col:105, col:112> col:112 __x 'double'
| |-ParmVarDecl 0x55806169c900 <col:117, col:121> col:121 __exponent 'int'
| `-NoThrowAttr 0x55806169ca50 <col:149>
|-FunctionDecl 0x55806169cb58 <line:68:16> col:16 implicit log 'double (double)' extern
| |-ParmVarDecl 0x55806169cbf8 <<invalid sloc>> <invalid sloc> 'double'
| `-NoThrowAttr 0x55806169cc68 <col:16> Implicit
|-FunctionDecl 0x55806169ccc0 prev 0x55806169cb58 <col:2, col:62> col:16 log 'double (double)' extern
| |-ParmVarDecl 0x55806169cac0 <col:21, col:28> col:28 __x 'double'
| `-NoThrowAttr 0x55806169cd68 <col:49>
|-FunctionDecl 0x55806169ce70 <col:65, col:127> col:79 __log 'double (double)' extern
| |-ParmVarDecl 0x55806169cdd8 <col:86, col:93> col:93 __x 'double'
| `-NoThrowAttr 0x55806169cf18 <col:114>
|-FunctionDecl 0x55806169d020 <line:71:15> col:15 implicit log10 'double (double)' extern
| |-ParmVarDecl 0x55806169d0c0 <<invalid sloc>> <invalid sloc> 'double'
| `-NoThrowAttr 0x55806169d130 <col:15> Implicit
|-FunctionDecl 0x55806169d188 prev 0x55806169d020 <col:1, col:63> col:15 log10 'double (double)' extern
| |-ParmVarDecl 0x55806169cf88 <col:22, col:29> col:29 __x 'double'
| `-NoThrowAttr 0x55806169d230 <col:50>
|-FunctionDecl 0x55806169d338 <col:66, col:130> col:80 __log10 'double (double)' extern
| |-ParmVarDecl 0x55806169d2a0 <col:89, col:96> col:96 __x 'double'
| `-NoThrowAttr 0x55806169d3e0 <col:117>
|-FunctionDecl 0x55806169d5e8 <line:74:15> col:15 implicit modf 'double (double, double *)' extern
| |-ParmVarDecl 0x55806169deb0 <<invalid sloc>> <invalid sloc> 'double'
| |-ParmVarDecl 0x55806169df18 <<invalid sloc>> <invalid sloc> 'double *'
| `-NoThrowAttr 0x55806169df90 <col:15> Implicit
|-FunctionDecl 0x55806169dfe8 prev 0x55806169d5e8 <col:1, col:78> col:15 modf 'double (double, double *)' extern
| |-ParmVarDecl 0x55806169d450 <col:21, col:28> col:28 __x 'double'
| |-ParmVarDecl 0x55806169d508 <col:33, col:41> col:41 __iptr 'double *'
| `-NoThrowAttr 0x55806169e098 <col:65>
|-FunctionDecl 0x55806169e248 <col:81, col:194> col:95 __modf 'double (double, double *)' extern
| |-ParmVarDecl 0x55806169e108 <col:103, col:110> col:110 __x 'double'
| |-ParmVarDecl 0x55806169e188 <col:115, col:123> col:123 __iptr 'double *'
| |-NoThrowAttr 0x55806169e2f8 <col:147>
| `-NonNullAttr 0x55806169e350 <col:178, col:192> 2
|-FunctionDecl 0x55806169e438 <line:75:15> col:15 implicit expm1 'double (double)' extern
| |-ParmVarDecl 0x55806169e4d8 <<invalid sloc>> <invalid sloc> 'double'
| `-NoThrowAttr 0x55806169e548 <col:15> Implicit
|-FunctionDecl 0x55806169e5a0 prev 0x55806169e438 <col:1, col:63> col:15 expm1 'double (double)' extern
| |-ParmVarDecl 0x55806169e3a0 <col:22, col:29> col:29 __x 'double'
| `-NoThrowAttr 0x55806169e648 <col:50>
|-FunctionDecl 0x55806169e750 <col:66, col:130> col:80 __expm1 'double (double)' extern
| |-ParmVarDecl 0x55806169e6b8 <col:89, col:96> col:96 __x 'double'
| `-NoThrowAttr 0x55806169e7f8 <col:117>
|-FunctionDecl 0x55806169e900 <line:78:15> col:15 implicit log1p 'double (double)' extern
| |-ParmVarDecl 0x55806169e9a0 <<invalid sloc>> <invalid sloc> 'double'
| `-NoThrowAttr 0x55806169ea10 <col:15> Implicit
|-FunctionDecl 0x55806169ea68 prev 0x55806169e900 <col:1, col:63> col:15 log1p 'double (double)' extern
| |-ParmVarDecl 0x55806169e868 <col:22, col:29> col:29 __x 'double'
| `-NoThrowAttr 0x55806169eb10 <col:50>
|-FunctionDecl 0x55806169ec18 <col:66, col:130> col:80 __log1p 'double (double)' extern
| |-ParmVarDecl 0x55806169eb80 <col:89, col:96> col:96 __x 'double'
| `-NoThrowAttr 0x55806169ecc0 <col:117>
|-FunctionDecl 0x55806169edc8 <line:81:15> col:15 implicit logb 'double (double)' extern
| |-ParmVarDecl 0x55806169eec0 <<invalid sloc>> <invalid sloc> 'double'
| `-NoThrowAttr 0x55806169ef30 <col:15> Implicit
|-FunctionDecl 0x55806169ef88 prev 0x55806169edc8 <col:1, col:62> col:15 logb 'double (double)' extern
| |-ParmVarDecl 0x55806169ed30 <col:21, col:28> col:28 __x 'double'
| `-NoThrowAttr 0x55806169f030 <col:49>
|-FunctionDecl 0x55806169f138 <col:65, col:128> col:79 __logb 'double (double)' extern
| |-ParmVarDecl 0x55806169f0a0 <col:87, col:94> col:94 __x 'double'
| `-NoThrowAttr 0x55806169f1e0 <col:115>
|-FunctionDecl 0x55806169f2e8 <line:88:15> col:15 implicit exp2 'double (double)' extern
| |-ParmVarDecl 0x55806169f388 <<invalid sloc>> <invalid sloc> 'double'
| `-NoThrowAttr 0x55806169f3f8 <col:15> Implicit
|-FunctionDecl 0x55806169f450 prev 0x55806169f2e8 <col:1, col:62> col:15 exp2 'double (double)' extern
| |-ParmVarDecl 0x55806169f250 <col:21, col:28> col:28 __x 'double'
| `-NoThrowAttr 0x55806169f4f8 <col:49>
|-FunctionDecl 0x55806169f600 <col:65, col:128> col:79 __exp2 'double (double)' extern
| |-ParmVarDecl 0x55806169f568 <col:87, col:94> col:94 __x 'double'
| `-NoThrowAttr 0x55806169f6a8 <col:115>
|-FunctionDecl 0x55806169f7b0 <line:91:15> col:15 implicit log2 'double (double)' extern
| |-ParmVarDecl 0x55806169f850 <<invalid sloc>> <invalid sloc> 'double'
| `-NoThrowAttr 0x55806169f8c0 <col:15> Implicit
|-FunctionDecl 0x55806169f918 prev 0x55806169f7b0 <col:1, col:62> col:15 log2 'double (double)' extern
| |-ParmVarDecl 0x55806169f718 <col:21, col:28> col:28 __x 'double'
| `-NoThrowAttr 0x55806169f9c0 <col:49>
|-FunctionDecl 0x55806169fac8 <col:65, col:128> col:79 __log2 'double (double)' extern
| |-ParmVarDecl 0x55806169fa30 <col:87, col:94> col:94 __x 'double'
| `-NoThrowAttr 0x55806169fb70 <col:115>
|-FunctionDecl 0x55806169fd00 <line:92:16> col:16 implicit pow 'double (double, double)' extern
| |-ParmVarDecl 0x55806169fda0 <<invalid sloc>> <invalid sloc> 'double'
| |-ParmVarDecl 0x55806169fe08 <<invalid sloc>> <invalid sloc> 'double'
| `-NoThrowAttr 0x55806169fe80 <col:16> Implicit
|-FunctionDecl 0x55806169ff00 prev 0x55806169fd00 <col:2, col:74> col:16 pow 'double (double, double)' extern
| |-ParmVarDecl 0x55806169fbe0 <col:21, col:28> col:28 __x 'double'
| |-ParmVarDecl 0x55806169fc60 <col:33, col:40> col:40 __y 'double'
| `-NoThrowAttr 0x55806169ffb0 <col:61>
|-FunctionDecl 0x5580616a0140 <col:77, col:151> col:91 __pow 'double (double, double)' extern
| |-ParmVarDecl 0x5580616a0020 <col:98, col:105> col:105 __x 'double'
| |-ParmVarDecl 0x5580616a00a0 <col:110, col:117> col:117 __y 'double'
| `-NoThrowAttr 0x5580616a01f0 <col:138>
|-FunctionDecl 0x5580616a02f8 <line:95:15> col:15 implicit sqrt 'double (double)' extern
| |-ParmVarDecl 0x5580616a0398 <<invalid sloc>> <invalid sloc> 'double'
| `-NoThrowAttr 0x5580616a0408 <col:15> Implicit
|-FunctionDecl 0x5580616a0460 prev 0x5580616a02f8 <col:1, col:62> col:15 sqrt 'double (double)' extern
| |-ParmVarDecl 0x5580616a0260 <col:21, col:28> col:28 __x 'double'
| `-NoThrowAttr 0x5580616a0508 <col:49>
|-FunctionDecl 0x5580616a0610 <col:65, col:128> col:79 __sqrt 'double (double)' extern
| |-ParmVarDecl 0x5580616a0578 <col:87, col:94> col:94 __x 'double'
| `-NoThrowAttr 0x5580616a06b8 <col:115>
|-FunctionDecl 0x5580616a0848 <line:101:15> col:15 implicit hypot 'double (double, double)' extern
| |-ParmVarDecl 0x5580616a08e8 <<invalid sloc>> <invalid sloc> 'double'
| |-ParmVarDecl 0x5580616a0950 <<invalid sloc>> <invalid sloc> 'double'
| `-NoThrowAttr 0x5580616a09c8 <col:15> Implicit
|-FunctionDecl 0x5580616a0a20 prev 0x5580616a0848 <col:1, col:75> col:15 hypot 'double (double, double)' extern
| |-ParmVarDecl 0x5580616a0728 <col:22, col:29> col:29 __x 'double'
| |-ParmVarDecl 0x5580616a07a8 <col:34, col:41> col:41 __y 'double'
| `-NoThrowAttr 0x5580616a0ad0 <col:62>
|-FunctionDecl 0x5580616a0c60 <col:78, col:154> col:92 __hypot 'double (double, double)' extern
| |-ParmVarDecl 0x5580616a0b40 <col:101, col:108> col:108 __x 'double'
| |-ParmVarDecl 0x5580616a0bc0 <col:113, col:120> col:120 __y 'double'
| `-NoThrowAttr 0x5580616a0d10 <col:141>
|-FunctionDecl 0x5580616a0e18 <line:108:15> col:15 implicit cbrt 'double (double)' extern
| |-ParmVarDecl 0x5580616a0ee0 <<invalid sloc>> <invalid sloc> 'double'
| |-NoThrowAttr 0x5580616a0f50 <col:15> Implicit
| `-ConstAttr 0x5580616a0fa8 <col:15> Implicit
|-FunctionDecl 0x5580616a0fd0 prev 0x5580616a0e18 <col:1, col:62> col:15 cbrt 'double (double)' extern
| |-ParmVarDecl 0x5580616a0d80 <col:21, col:28> col:28 __x 'double'
| |-ConstAttr 0x5580616a10d0 <col:15> Inherited Implicit
| `-NoThrowAttr 0x5580616a1078 <col:49>
|-FunctionDecl 0x5580616a11a8 <col:65, col:128> col:79 __cbrt 'double (double)' extern
| |-ParmVarDecl 0x5580616a1110 <col:87, col:94> col:94 __x 'double'
| `-NoThrowAttr 0x5580616a1250 <col:115>
|-FunctionDecl 0x5580616a1358 <line:109:15> col:15 implicit ceil 'double (double)' extern
| |-ParmVarDecl 0x5580616a13f8 <<invalid sloc>> <invalid sloc> 'double'
| |-NoThrowAttr 0x5580616a1468 <col:15> Implicit
| `-ConstAttr 0x5580616a14c0 <col:15> Implicit
|-FunctionDecl 0x5580616a14e8 prev 0x5580616a1358 <col:1, col:90> col:15 ceil 'double (double)' extern
| |-ParmVarDecl 0x5580616a12c0 <col:21, col:28> col:28 __x 'double'
| |-NoThrowAttr 0x5580616a1590 <col:49>
| `-ConstAttr 0x5580616a15e8 <col:80>
|-FunctionDecl 0x5580616a16c0 <col:93, col:184> col:107 __ceil 'double (double)' extern
| |-ParmVarDecl 0x5580616a1628 <col:115, col:122> col:122 __x 'double'
| |-NoThrowAttr 0x5580616a1768 <col:143>
| `-ConstAttr 0x5580616a17c0 <col:174>
|-FunctionDecl 0x5580616a1898 <line:112:15> col:15 implicit fabs 'double (double)' extern
| |-ParmVarDecl 0x5580616a1938 <<invalid sloc>> <invalid sloc> 'double'
| |-NoThrowAttr 0x5580616a19a8 <col:15> Implicit
| `-ConstAttr 0x5580616a1a00 <col:15> Implicit
|-FunctionDecl 0x5580616a1a28 prev 0x5580616a1898 <col:1, col:90> col:15 fabs 'double (double)' extern
| |-ParmVarDecl 0x5580616a1800 <col:21, col:28> col:28 __x 'double'
| |-NoThrowAttr 0x5580616a1ad0 <col:49>
| `-ConstAttr 0x5580616a1b28 <col:80>
|-FunctionDecl 0x5580616a1c00 <col:93, col:184> col:107 __fabs 'double (double)' extern
| |-ParmVarDecl 0x5580616a1b68 <col:115, col:122> col:122 __x 'double'
| |-NoThrowAttr 0x5580616a1ca8 <col:143>
| `-ConstAttr 0x5580616a1d00 <col:174>
|-FunctionDecl 0x5580616a1dd8 <line:115:15> col:15 implicit floor 'double (double)' extern
| |-ParmVarDecl 0x5580616a1e78 <<invalid sloc>> <invalid sloc> 'double'
| |-NoThrowAttr 0x5580616a1ef8 <col:15> Implicit
| `-ConstAttr 0x5580616a1f50 <col:15> Implicit
|-FunctionDecl 0x5580616a1f78 prev 0x5580616a1dd8 <col:1, col:91> col:15 floor 'double (double)' extern
| |-ParmVarDecl 0x5580616a1d40 <col:22, col:29> col:29 __x 'double'
| |-NoThrowAttr 0x5580616a2020 <col:50>
| `-ConstAttr 0x5580616a2078 <col:81>
|-FunctionDecl 0x5580616a2150 <col:94, col:186> col:108 __floor 'double (double)' extern
| |-ParmVarDecl 0x5580616a20b8 <col:117, col:124> col:124 __x 'double'
| |-NoThrowAttr 0x5580616a21f8 <col:145>
| `-ConstAttr 0x5580616a2250 <col:176>
|-FunctionDecl 0x5580616a23b0 <line:118:15> col:15 implicit fmod 'double (double, double)' extern
| |-ParmVarDecl 0x5580616a2450 <<invalid sloc>> <invalid sloc> 'double'
| |-ParmVarDecl 0x5580616a24b8 <<invalid sloc>> <invalid sloc> 'double'
| `-NoThrowAttr 0x5580616a2530 <col:15> Implicit
|-FunctionDecl 0x5580616a2588 prev 0x5580616a23b0 <col:1, col:74> col:15 fmod 'double (double, double)' extern
| |-ParmVarDecl 0x5580616a2290 <col:21, col:28> col:28 __x 'double'
| |-ParmVarDecl 0x5580616a2310 <col:33, col:40> col:40 __y 'double'
| `-NoThrowAttr 0x5580616a2638 <col:61>
|-FunctionDecl 0x5580616a27c8 <col:77, col:152> col:91 __fmod 'double (double, double)' extern
| |-ParmVarDecl 0x5580616a26a8 <col:99, col:106> col:106 __x 'double'
| |-ParmVarDecl 0x5580616a2728 <col:111, col:118> col:118 __y 'double'
| `-NoThrowAttr 0x5580616a2878 <col:139>
|-FunctionDecl 0x5580616a29b8 <line:123:1, col:94> col:12 used __isinf 'int (double)' extern
| |-ParmVarDecl 0x5580616a28e8 <col:21, col:28> col:28 __value 'double'
| |-NoThrowAttr 0x5580616a2a60 <col:53>
| `-ConstAttr 0x5580616a2ab8 <col:84>
|-FunctionDecl 0x5580616a2b90 <line:126:12> col:12 implicit __finite 'int (double)' extern
| |-ParmVarDecl 0x5580616a2c30 <<invalid sloc>> <invalid sloc> 'double'
| |-NoThrowAttr 0x5580616a2ca0 <col:12> Implicit
| `-ConstAttr 0x5580616a2cf8 <col:12> Implicit
|-FunctionDecl 0x5580616a2d20 prev 0x5580616a2b90 <col:1, col:95> col:12 __finite 'int (double)' extern
| |-ParmVarDecl 0x5580616a2af8 <col:22, col:29> col:29 __value 'double'
| |-NoThrowAttr 0x5580616a2dc8 <col:54>
| `-ConstAttr 0x5580616a2e20 <col:85>
|-FunctionDecl 0x5580616a3f40 <line:132:1, col:92> col:12 isinf 'int (double)' extern
| |-ParmVarDecl 0x5580616a2e60 <col:19, col:26> col:26 __value 'double'
| |-NoThrowAttr 0x5580616a3fe8 <col:51>
| `-ConstAttr 0x5580616a4040 <col:82>
|-FunctionDecl 0x5580616a4118 <line:135:12> col:12 implicit finite 'int (double)' extern
| |-ParmVarDecl 0x5580616a41b8 <<invalid sloc>> <invalid sloc> 'double'
| |-NoThrowAttr 0x5580616a4228 <col:12> Implicit
| `-ConstAttr 0x5580616a4280 <col:12> Implicit
|-FunctionDecl 0x5580616a42a8 prev 0x5580616a4118 <col:1, col:93> col:12 finite 'int (double)' extern
| |-ParmVarDecl 0x5580616a4080 <col:20, col:27> col:27 __value 'double'
| |-NoThrowAttr 0x5580616a4350 <col:52>
| `-ConstAttr 0x5580616a43a8 <col:83>
|-FunctionDecl 0x5580616a4508 <line:138:1, col:74> col:15 drem 'double (double, double)' extern
| |-ParmVarDecl 0x5580616a43e8 <col:21, col:28> col:28 __x 'double'
| |-ParmVarDecl 0x5580616a4468 <col:33, col:40> col:40 __y 'double'
| `-NoThrowAttr 0x5580616a45b8 <col:61>
|-FunctionDecl 0x5580616a4748 <col:77, col:152> col:91 __drem 'double (double, double)' extern
| |-ParmVarDecl 0x5580616a4628 <col:99, col:106> col:106 __x 'double'
| |-ParmVarDecl 0x5580616a46a8 <col:111, col:118> col:118 __y 'double'
| `-NoThrowAttr 0x5580616a47f8 <col:139>
|-FunctionDecl 0x5580616a4900 <line:142:1, col:69> col:15 significand 'double (double)' extern
| |-ParmVarDecl 0x5580616a4868 <col:28, col:35> col:35 __x 'double'
| `-NoThrowAttr 0x5580616a49a8 <col:56>
|-FunctionDecl 0x5580616a4ab0 <col:72, col:142> col:86 __significand 'double (double)' extern
| |-ParmVarDecl 0x5580616a4a18 <col:101, col:108> col:108 __x 'double'
| `-NoThrowAttr 0x5580616a4b58 <col:129>
|-FunctionDecl 0x5580616a4ce8 <line:148:15> col:15 implicit copysign 'double (double, double)' extern
| |-ParmVarDecl 0x5580616a4d88 <<invalid sloc>> <invalid sloc> 'double'
| |-ParmVarDecl 0x5580616a4df0 <<invalid sloc>> <invalid sloc> 'double'
| |-NoThrowAttr 0x5580616a4e68 <col:15> Implicit
| `-ConstAttr 0x5580616a4ec0 <col:15> Implicit
|-FunctionDecl 0x5580616a4f20 prev 0x5580616a4ce8 <col:1, col:106> col:15 copysign 'double (double, double)' extern
| |-ParmVarDecl 0x5580616a4bc8 <col:25, col:32> col:32 __x 'double'
| |-ParmVarDecl 0x5580616a4c48 <col:37, col:44> col:44 __y 'double'
| |-NoThrowAttr 0x5580616a4fd0 <col:65>
| `-ConstAttr 0x5580616a5028 <col:96>
|-FunctionDecl 0x5580616a5188 <col:109, col:216> col:123 __copysign 'double (double, double)' extern
| |-ParmVarDecl 0x5580616a5068 <col:135, col:142> col:142 __x 'double'
| |-ParmVarDecl 0x5580616a50e8 <col:147, col:154> col:154 __y 'double'
| |-NoThrowAttr 0x5580616a5238 <col:175>
| `-ConstAttr 0x5580616a5290 <col:206>
|-FunctionDecl 0x5580616a53a8 <line:155:15> col:15 implicit nan 'double (const char *)' extern
| |-ParmVarDecl 0x5580616a5448 <<invalid sloc>> <invalid sloc> 'const char *'
| |-NoThrowAttr 0x5580616a54b8 <col:15> Implicit
| `-PureAttr 0x5580616a5510 <col:15> Implicit
|-FunctionDecl 0x5580616a5538 prev 0x5580616a53a8 <col:1, col:97> col:15 nan 'double (const char *)' extern
| |-ParmVarDecl 0x5580616a52d0 <col:20, col:32> col:32 __tagb 'const char *'
| |-PureAttr 0x5580616a5660 <col:15> Inherited Implicit
| |-NoThrowAttr 0x5580616a55e0 <col:56>
| `-ConstAttr 0x5580616a5638 <col:87>
|-FunctionDecl 0x5580616a5738 <col:100, col:198> col:114 __nan 'double (const char *)' extern
| |-ParmVarDecl 0x5580616a56a0 <col:121, col:133> col:133 __tagb 'const char *'
| |-NoThrowAttr 0x5580616a57e0 <col:157>
| `-ConstAttr 0x5580616a5838 <col:188>
|-FunctionDecl 0x5580616a5910 <line:161:1, col:94> col:12 used __isnan 'int (double)' extern
| |-ParmVarDecl 0x5580616a5878 <col:21, col:28> col:28 __value 'double'
| |-NoThrowAttr 0x5580616a59b8 <col:53>
| `-ConstAttr 0x5580616a5a10 <col:84>
|-FunctionDecl 0x5580616a5ae8 <line:165:1, col:92> col:12 isnan 'int (double)' extern
| |-ParmVarDecl 0x5580616a5a50 <col:19, col:26> col:26 __value 'double'
| |-NoThrowAttr 0x5580616a5b90 <col:51>
| `-ConstAttr 0x5580616a5be8 <col:82>
|-FunctionDecl 0x5580616a5cc0 <line:168:1, col:56> col:15 j0 'double (double)' extern
| |-ParmVarDecl 0x5580616a5c28 <col:19> col:25 'double'
| `-NoThrowAttr 0x5580616a5d68 <col:43>
|-FunctionDecl 0x5580616a5e70 <col:59, col:116> col:73 __j0 'double (double)' extern
| |-ParmVarDecl 0x5580616a5dd8 <col:79> col:85 'double'
| `-NoThrowAttr 0x5580616a5f30 <col:103>
|-FunctionDecl 0x5580616a6038 <line:169:1, col:56> col:15 j1 'double (double)' extern
| |-ParmVarDecl 0x5580616a5fa0 <col:19> col:25 'double'
| `-NoThrowAttr 0x5580616a60e0 <col:43>
|-FunctionDecl 0x5580616a61e8 <col:59, col:116> col:73 __j1 'double (double)' extern
| |-ParmVarDecl 0x5580616a6150 <col:79> col:85 'double'
| `-NoThrowAttr 0x5580616a6290 <col:103>
|-FunctionDecl 0x5580616a6468 <line:170:1, col:61> col:15 jn 'double (int, double)' extern
| |-ParmVarDecl 0x5580616a6300 <col:19> col:22 'int'
| |-ParmVarDecl 0x5580616a6380 <col:24> col:30 'double'
| `-NoThrowAttr 0x5580616a6518 <col:48>
|-FunctionDecl 0x5580616a66a8 <col:64, col:126> col:78 __jn 'double (int, double)' extern
| |-ParmVarDecl 0x5580616a6588 <col:84> col:87 'int'
| |-ParmVarDecl 0x5580616a6608 <col:89> col:95 'double'
| `-NoThrowAttr 0x5580616a6758 <col:113>
|-FunctionDecl 0x5580616a6860 <line:171:1, col:56> col:15 y0 'double (double)' extern
| |-ParmVarDecl 0x5580616a67c8 <col:19> col:25 'double'
| `-NoThrowAttr 0x5580616a6908 <col:43>
|-FunctionDecl 0x5580616a6a10 <col:59, col:116> col:73 __y0 'double (double)' extern
| |-ParmVarDecl 0x5580616a6978 <col:79> col:85 'double'
| `-NoThrowAttr 0x5580616a6ab8 <col:103>
|-FunctionDecl 0x5580616a6bc0 <line:172:1, col:56> col:15 y1 'double (double)' extern
| |-ParmVarDecl 0x5580616a6b28 <col:19> col:25 'double'
| `-NoThrowAttr 0x5580616a6c68 <col:43>
|-FunctionDecl 0x5580616a6d70 <col:59, col:116> col:73 __y1 'double (double)' extern
| |-ParmVarDecl 0x5580616a6cd8 <col:79> col:85 'double'
| `-NoThrowAttr 0x5580616a6e18 <col:103>
|-FunctionDecl 0x5580616a6fe0 <line:173:1, col:61> col:15 yn 'double (int, double)' extern
| |-ParmVarDecl 0x5580616a6e88 <col:19> col:22 'int'
| |-ParmVarDecl 0x5580616a6f40 <col:24> col:30 'double'
| `-NoThrowAttr 0x5580616a7090 <col:48>
|-FunctionDecl 0x5580616a7220 <col:64, col:126> col:78 __yn 'double (int, double)' extern
| |-ParmVarDecl 0x5580616a7100 <col:84> col:87 'int'
| |-ParmVarDecl 0x5580616a7180 <col:89> col:95 'double'
| `-NoThrowAttr 0x5580616a72d0 <col:113>
|-FunctionDecl 0x5580616a73d8 <line:180:15> col:15 implicit erf 'double (double)' extern
| |-ParmVarDecl 0x5580616a7478 <<invalid sloc>> <invalid sloc> 'double'
| `-NoThrowAttr 0x5580616a74e8 <col:15> Implicit
|-FunctionDecl 0x5580616a7540 prev 0x5580616a73d8 <col:1, col:57> col:15 erf 'double (double)' extern
| |-ParmVarDecl 0x5580616a7340 <col:20> col:26 'double'
| `-NoThrowAttr 0x5580616a75e8 <col:44>
|-FunctionDecl 0x5580616a76f0 <col:60, col:118> col:74 __erf 'double (double)' extern
| |-ParmVarDecl 0x5580616a7658 <col:81> col:87 'double'
| `-NoThrowAttr 0x5580616a7798 <col:105>
|-FunctionDecl 0x5580616a78a0 <line:181:15> col:15 implicit erfc 'double (double)' extern
| |-ParmVarDecl 0x5580616a7940 <<invalid sloc>> <invalid sloc> 'double'
| `-NoThrowAttr 0x5580616a79b0 <col:15> Implicit
|-FunctionDecl 0x5580616a7a08 prev 0x5580616a78a0 <col:1, col:58> col:15 erfc 'double (double)' extern
| |-ParmVarDecl 0x5580616a7808 <col:21> col:27 'double'
| `-NoThrowAttr 0x5580616a7ab0 <col:45>
|-FunctionDecl 0x5580616a7bb8 <col:61, col:120> col:75 __erfc 'double (double)' extern
| |-ParmVarDecl 0x5580616a7b20 <col:83> col:89 'double'
| `-NoThrowAttr 0x5580616a7c60 <col:107>
|-FunctionDecl 0x5580616a7d68 <line:182:15> col:15 implicit lgamma 'double (double)' extern
| |-ParmVarDecl 0x5580616a7e08 <<invalid sloc>> <invalid sloc> 'double'
| `-NoThrowAttr 0x5580616a7e78 <col:15> Implicit
|-FunctionDecl 0x5580616a7f50 prev 0x5580616a7d68 <col:1, col:60> col:15 lgamma 'double (double)' extern
| |-ParmVarDecl 0x5580616a7cd0 <col:23> col:29 'double'
| `-NoThrowAttr 0x5580616a7ff8 <col:47>
|-FunctionDecl 0x5580616a8100 <col:63, col:124> col:77 __lgamma 'double (double)' extern
| |-ParmVarDecl 0x5580616a8068 <col:87> col:93 'double'
| `-NoThrowAttr 0x5580616a81a8 <col:111>
|-FunctionDecl 0x5580616a82b0 <line:189:15> col:15 implicit tgamma 'double (double)' extern
| |-ParmVarDecl 0x5580616a8350 <<invalid sloc>> <invalid sloc> 'double'
| `-NoThrowAttr 0x5580616a83c0 <col:15> Implicit
|-FunctionDecl 0x5580616a8418 prev 0x5580616a82b0 <col:1, col:60> col:15 tgamma 'double (double)' extern
| |-ParmVarDecl 0x5580616a8218 <col:23> col:29 'double'
| `-NoThrowAttr 0x5580616a84c0 <col:47>
|-FunctionDecl 0x5580616a85c8 <col:63, col:124> col:77 __tgamma 'double (double)' extern
| |-ParmVarDecl 0x5580616a8530 <col:87> col:93 'double'
| `-NoThrowAttr 0x5580616a8670 <col:111>
|-FunctionDecl 0x5580616a8778 <line:195:1, col:59> col:15 gamma 'double (double)' extern
| |-ParmVarDecl 0x5580616a86e0 <col:22> col:28 'double'
| `-NoThrowAttr 0x5580616a8820 <col:46>
|-FunctionDecl 0x5580616a8928 <col:62, col:122> col:76 __gamma 'double (double)' extern
| |-ParmVarDecl 0x5580616a8890 <col:85> col:91 'double'
| `-NoThrowAttr 0x5580616a89d0 <col:109>
|-FunctionDecl 0x5580616a8b60 <line:202:1, col:79> col:15 lgamma_r 'double (double, int *)' extern
| |-ParmVarDecl 0x5580616a8a40 <col:25> col:31 'double'
| |-ParmVarDecl 0x5580616a8ac0 <col:33, col:38> col:38 __signgamp 'int *'
| `-NoThrowAttr 0x5580616a8c10 <col:66>
|-FunctionDecl 0x5580616a8da0 <col:82, col:162> col:96 __lgamma_r 'double (double, int *)' extern
| |-ParmVarDecl 0x5580616a8c80 <col:108> col:114 'double'
| |-ParmVarDecl 0x5580616a8d00 <col:116, col:121> col:121 __signgamp 'int *'
| `-NoThrowAttr 0x5580616a8e50 <col:149>
|-FunctionDecl 0x5580616a8f90 <line:210:15> col:15 implicit rint 'double (double)' extern
| |-ParmVarDecl 0x5580616a9030 <<invalid sloc>> <invalid sloc> 'double'
| |-NoThrowAttr 0x5580616a90a0 <col:15> Implicit
| `-ConstAttr 0x5580616a90f8 <col:15> Implicit
|-FunctionDecl 0x5580616a9120 prev 0x5580616a8f90 <col:1, col:62> col:15 rint 'double (double)' extern
| |-ParmVarDecl 0x5580616a8ec0 <col:21, col:28> col:28 __x 'double'
| |-ConstAttr 0x5580616a9220 <col:15> Inherited Implicit
| `-NoThrowAttr 0x5580616a91c8 <col:49>
|-FunctionDecl 0x5580616a92f8 <col:65, col:128> col:79 __rint 'double (double)' extern
| |-ParmVarDecl 0x5580616a9260 <col:87, col:94> col:94 __x 'double'
| `-NoThrowAttr 0x5580616a93a0 <col:115>
|-FunctionDecl 0x5580616a9530 <line:213:15> col:15 implicit nextafter 'double (double, double)' extern
| |-ParmVarDecl 0x5580616a95d0 <<invalid sloc>> <invalid sloc> 'double'
| |-ParmVarDecl 0x5580616a9638 <<invalid sloc>> <invalid sloc> 'double'
| `-NoThrowAttr 0x5580616a96b0 <col:15> Implicit
|-FunctionDecl 0x5580616a9708 prev 0x5580616a9530 <col:1, col:107> col:15 nextafter 'double (double, double)' extern
| |-ParmVarDecl 0x5580616a9410 <col:26, col:33> col:33 __x 'double'
| |-ParmVarDecl 0x5580616a9490 <col:38, col:45> col:45 __y 'double'
| |-NoThrowAttr 0x5580616a97b8 <col:66>
| `-ConstAttr 0x5580616a9810 <col:97>
|-FunctionDecl 0x5580616a9970 <col:110, col:218> col:124 __nextafter 'double (double, double)' extern
| |-ParmVarDecl 0x5580616a9850 <col:137, col:144> col:144 __x 'double'
| |-ParmVarDecl 0x5580616a98d0 <col:149, col:156> col:156 __y 'double'
| |-NoThrowAttr 0x5580616a9a20 <col:177>
| `-ConstAttr 0x5580616a9a78 <col:208>
|-FunctionDecl 0x5580616a9c18 <line:215:15> col:15 implicit nexttoward 'double (double, long double)' extern
| |-ParmVarDecl 0x5580616a9cb8 <<invalid sloc>> <invalid sloc> 'double'
| |-ParmVarDecl 0x5580616a9d20 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x5580616a9d98 <col:15> Implicit
|-FunctionDecl 0x5580616a9df0 prev 0x5580616a9c18 <col:1, col:113> col:15 nexttoward 'double (double, long double)' extern
| |-ParmVarDecl 0x5580616a9ab8 <col:27, col:34> col:34 __x 'double'
| |-ParmVarDecl 0x5580616a9b38 <col:39, col:51> col:51 __y 'long double'
| |-NoThrowAttr 0x5580616a9ea0 <col:72>
| `-ConstAttr 0x5580616a9ef8 <col:103>
|-FunctionDecl 0x5580616aa090 <col:116, col:230> col:130 __nexttoward 'double (double, long double)' extern
| |-ParmVarDecl 0x5580616a9f70 <col:144, col:151> col:151 __x 'double'
| |-ParmVarDecl 0x5580616a9ff0 <col:156, col:168> col:168 __y 'long double'
| |-NoThrowAttr 0x5580616aa140 <col:189>
| `-ConstAttr 0x5580616aa198 <col:220>
|-FunctionDecl 0x5580616aa2f8 <line:219:15> col:15 implicit remainder 'double (double, double)' extern
| |-ParmVarDecl 0x5580616aa398 <<invalid sloc>> <invalid sloc> 'double'
| |-ParmVarDecl 0x5580616aa400 <<invalid sloc>> <invalid sloc> 'double'
| `-NoThrowAttr 0x5580616aa478 <col:15> Implicit
|-FunctionDecl 0x5580616aa4d0 prev 0x5580616aa2f8 <col:1, col:79> col:15 remainder 'double (double, double)' extern
| |-ParmVarDecl 0x5580616aa1d8 <col:26, col:33> col:33 __x 'double'
| |-ParmVarDecl 0x5580616aa258 <col:38, col:45> col:45 __y 'double'
| `-NoThrowAttr 0x5580616aa580 <col:66>
|-FunctionDecl 0x5580616aa710 <col:82, col:162> col:96 __remainder 'double (double, double)' extern
| |-ParmVarDecl 0x5580616aa5f0 <col:109, col:116> col:116 __x 'double'
| |-ParmVarDecl 0x5580616aa670 <col:121, col:128> col:128 __y 'double'
| `-NoThrowAttr 0x5580616aa7c0 <col:149>
|-FunctionDecl 0x5580616aa950 <line:223:15> col:15 implicit scalbn 'double (double, int)' extern
| |-ParmVarDecl 0x5580616aa9f0 <<invalid sloc>> <invalid sloc> 'double'
| |-ParmVarDecl 0x5580616aaa58 <<invalid sloc>> <invalid sloc> 'int'
| `-NoThrowAttr 0x5580616aaad0 <col:15> Implicit
|-FunctionDecl 0x5580616aab28 prev 0x5580616aa950 <col:1, col:73> col:15 scalbn 'double (double, int)' extern
| |-ParmVarDecl 0x5580616aa830 <col:23, col:30> col:30 __x 'double'
| |-ParmVarDecl 0x5580616aa8b0 <col:35, col:39> col:39 __n 'int'
| `-NoThrowAttr 0x5580616aabd8 <col:60>
|-FunctionDecl 0x5580616aad68 <col:76, col:150> col:90 __scalbn 'double (double, int)' extern
| |-ParmVarDecl 0x5580616aac48 <col:100, col:107> col:107 __x 'double'
| |-ParmVarDecl 0x5580616aacc8 <col:112, col:116> col:116 __n 'int'
| `-NoThrowAttr 0x5580616aae18 <col:137>
|-FunctionDecl 0x5580616aaf80 <line:227:12> col:12 implicit ilogb 'int (double)' extern
| |-ParmVarDecl 0x5580616ab020 <<invalid sloc>> <invalid sloc> 'double'
| `-NoThrowAttr 0x5580616ab090 <col:12> Implicit
|-FunctionDecl 0x5580616ab0e8 prev 0x5580616aaf80 <col:1, col:60> col:12 ilogb 'int (double)' extern
| |-ParmVarDecl 0x5580616aae88 <col:19, col:26> col:26 __x 'double'
| `-NoThrowAttr 0x5580616ab190 <col:47>
|-FunctionDecl 0x5580616ab298 <col:63, col:124> col:74 __ilogb 'int (double)' extern
| |-ParmVarDecl 0x5580616ab200 <col:83, col:90> col:90 __x 'double'
| `-NoThrowAttr 0x5580616ab340 <col:111>
|-FunctionDecl 0x5580616ab518 <line:232:15> col:15 implicit scalbln 'double (double, long)' extern
| |-ParmVarDecl 0x5580616ab5b8 <<invalid sloc>> <invalid sloc> 'double'
| |-ParmVarDecl 0x5580616ab620 <<invalid sloc>> <invalid sloc> 'long'
| `-NoThrowAttr 0x5580616ab698 <col:15> Implicit
|-FunctionDecl 0x5580616ab6f0 prev 0x5580616ab518 <col:1, col:79> col:15 scalbln 'double (double, long)' extern
| |-ParmVarDecl 0x5580616ab3b0 <col:24, col:31> col:31 __x 'double'
| |-ParmVarDecl 0x5580616ab430 <col:36, col:45> col:45 __n 'long'
| `-NoThrowAttr 0x5580616ab7a0 <col:66>
|-FunctionDecl 0x5580616ab930 <col:82, col:162> col:96 __scalbln 'double (double, long)' extern
| |-ParmVarDecl 0x5580616ab810 <col:107, col:114> col:114 __x 'double'
| |-ParmVarDecl 0x5580616ab890 <col:119, col:128> col:128 __n 'long'
| `-NoThrowAttr 0x5580616ab9e0 <col:149>
|-FunctionDecl 0x5580616abae8 <line:236:15> col:15 implicit nearbyint 'double (double)' extern
| |-ParmVarDecl 0x5580616abb88 <<invalid sloc>> <invalid sloc> 'double'
| |-NoThrowAttr 0x5580616abbf8 <col:15> Implicit
| `-ConstAttr 0x5580616abc50 <col:15> Implicit
|-FunctionDecl 0x5580616abc78 prev 0x5580616abae8 <col:1, col:67> col:15 nearbyint 'double (double)' extern
| |-ParmVarDecl 0x5580616aba50 <col:26, col:33> col:33 __x 'double'
| |-ConstAttr 0x5580616abd78 <col:15> Inherited Implicit
| `-NoThrowAttr 0x5580616abd20 <col:54>
|-FunctionDecl 0x5580616abe50 <col:70, col:138> col:84 __nearbyint 'double (double)' extern
| |-ParmVarDecl 0x5580616abdb8 <col:97, col:104> col:104 __x 'double'
| `-NoThrowAttr 0x5580616abef8 <col:125>
|-FunctionDecl 0x5580616ac028 <line:240:15> col:15 implicit round 'double (double)' extern
| |-ParmVarDecl 0x5580616ac0c8 <<invalid sloc>> <invalid sloc> 'double'
| |-NoThrowAttr 0x5580616ac138 <col:15> Implicit
| `-ConstAttr 0x5580616ac190 <col:15> Implicit
|-FunctionDecl 0x5580616ac1b8 prev 0x5580616ac028 <col:1, col:91> col:15 round 'double (double)' extern
| |-ParmVarDecl 0x5580616abf90 <col:22, col:29> col:29 __x 'double'
| |-NoThrowAttr 0x5580616ac260 <col:50>
| `-ConstAttr 0x5580616ac2b8 <col:81>
|-FunctionDecl 0x5580616ac390 <col:94, col:186> col:108 __round 'double (double)' extern
| |-ParmVarDecl 0x5580616ac2f8 <col:117, col:124> col:124 __x 'double'
| |-NoThrowAttr 0x5580616ac438 <col:145>
| `-ConstAttr 0x5580616ac490 <col:176>
|-FunctionDecl 0x5580616ac568 <line:244:15> col:15 implicit used trunc 'double (double)' extern
| |-ParmVarDecl 0x5580616ac608 <<invalid sloc>> <invalid sloc> 'double'
| |-NoThrowAttr 0x5580616ac678 <col:15> Implicit
| `-ConstAttr 0x5580616ac6d0 <col:15> Implicit
|-FunctionDecl 0x5580616ac6f8 prev 0x5580616ac568 <col:1, col:91> col:15 used trunc 'double (double)' extern
| |-ParmVarDecl 0x5580616ac4d0 <col:22, col:29> col:29 __x 'double'
| |-NoThrowAttr 0x5580616ac7a0 <col:50>
| `-ConstAttr 0x5580616ac7f8 <col:81>
|-FunctionDecl 0x5580616ac8d0 <col:94, col:186> col:108 __trunc 'double (double)' extern
| |-ParmVarDecl 0x5580616ac838 <col:117, col:124> col:124 __x 'double'
| |-NoThrowAttr 0x5580616ac978 <col:145>
| `-ConstAttr 0x5580616ac9d0 <col:176>
|-FunctionDecl 0x5580616acc08 <line:249:15> col:15 implicit remquo 'double (double, double, int *)' extern
| |-ParmVarDecl 0x5580616acca8 <<invalid sloc>> <invalid sloc> 'double'
| |-ParmVarDecl 0x5580616acd10 <<invalid sloc>> <invalid sloc> 'double'
| |-ParmVarDecl 0x5580616acd78 <<invalid sloc>> <invalid sloc> 'int *'
| `-NoThrowAttr 0x5580616acdf8 <col:15> Implicit
|-FunctionDecl 0x5580616ace50 prev 0x5580616acc08 <col:1, col:88> col:15 remquo 'double (double, double, int *)' extern
| |-ParmVarDecl 0x5580616aca10 <col:23, col:30> col:30 __x 'double'
| |-ParmVarDecl 0x5580616aca90 <col:35, col:42> col:42 __y 'double'
| |-ParmVarDecl 0x5580616acb10 <col:47, col:52> col:52 __quo 'int *'
| `-NoThrowAttr 0x5580616acf08 <col:75>
|-FunctionDecl 0x5580616ad148 <col:91, col:180> col:105 __remquo 'double (double, double, int *)' extern
| |-ParmVarDecl 0x5580616acfa0 <col:115, col:122> col:122 __x 'double'
| |-ParmVarDecl 0x5580616ad020 <col:127, col:134> col:134 __y 'double'
| |-ParmVarDecl 0x5580616ad0a0 <col:139, col:144> col:144 __quo 'int *'
| `-NoThrowAttr 0x5580616ad200 <col:167>
|-FunctionDecl 0x5580616ad348 <line:256:17> col:17 implicit lrint 'long (double)' extern
| |-ParmVarDecl 0x5580616ad3e8 <<invalid sloc>> <invalid sloc> 'double'
| `-NoThrowAttr 0x5580616ad458 <col:17> Implicit
|-FunctionDecl 0x5580616ad4b0 prev 0x5580616ad348 <col:1, col:65> col:17 lrint 'long (double)' extern
| |-ParmVarDecl 0x5580616ad270 <col:24, col:31> col:31 __x 'double'
| `-NoThrowAttr 0x5580616ad558 <col:52>
|-FunctionDecl 0x5580616ad660 <col:68, col:134> col:84 __lrint 'long (double)' extern
| |-ParmVarDecl 0x5580616ad5c8 <col:93, col:100> col:100 __x 'double'
| `-NoThrowAttr 0x5580616ad708 <col:121>
|-FunctionDecl 0x5580616ad848 <line:258:22> col:22 implicit llrint 'long long (double)' extern
| |-ParmVarDecl 0x5580616ad8e8 <<invalid sloc>> <invalid sloc> 'double'
| `-NoThrowAttr 0x5580616ad958 <col:22> Implicit
|-FunctionDecl 0x5580616ad9b0 prev 0x5580616ad848 <col:1, col:71> col:22 llrint 'long long (double)' extern
| |-ParmVarDecl 0x5580616ad778 <col:30, col:37> col:37 __x 'double'
| `-NoThrowAttr 0x5580616ada58 <col:58>
|-FunctionDecl 0x5580616adb60 <col:74, col:146> col:95 __llrint 'long long (double)' extern
| |-ParmVarDecl 0x5580616adac8 <col:105, col:112> col:112 __x 'double'
| `-NoThrowAttr 0x5580616adc08 <col:133>
|-FunctionDecl 0x5580616add10 <line:262:17> col:17 implicit lround 'long (double)' extern
| |-ParmVarDecl 0x5580616addb0 <<invalid sloc>> <invalid sloc> 'double'
| `-NoThrowAttr 0x5580616ade20 <col:17> Implicit
|-FunctionDecl 0x5580616ade78 prev 0x5580616add10 <col:1, col:66> col:17 lround 'long (double)' extern
| |-ParmVarDecl 0x5580616adc78 <col:25, col:32> col:32 __x 'double'
| `-NoThrowAttr 0x5580616adf20 <col:53>
|-FunctionDecl 0x5580616ae048 <col:69, col:136> col:85 __lround 'long (double)' extern
| |-ParmVarDecl 0x5580616adfb0 <col:95, col:102> col:102 __x 'double'
| `-NoThrowAttr 0x5580616ae0f0 <col:123>
|-FunctionDecl 0x5580616ae1f8 <line:264:22> col:22 implicit llround 'long long (double)' extern
| |-ParmVarDecl 0x5580616ae298 <<invalid sloc>> <invalid sloc> 'double'
| `-NoThrowAttr 0x5580616ae308 <col:22> Implicit
|-FunctionDecl 0x5580616ae360 prev 0x5580616ae1f8 <col:1, col:72> col:22 llround 'long long (double)' extern
| |-ParmVarDecl 0x5580616ae160 <col:31, col:38> col:38 __x 'double'
| `-NoThrowAttr 0x5580616ae408 <col:59>
|-FunctionDecl 0x5580616ae510 <col:75, col:148> col:96 __llround 'long long (double)' extern
| |-ParmVarDecl 0x5580616ae478 <col:107, col:114> col:114 __x 'double'
| `-NoThrowAttr 0x5580616ae5b8 <col:135>
|-FunctionDecl 0x5580616ae748 <line:268:15> col:15 implicit fdim 'double (double, double)' extern
| |-ParmVarDecl 0x5580616ae7e8 <<invalid sloc>> <invalid sloc> 'double'
| |-ParmVarDecl 0x5580616ae850 <<invalid sloc>> <invalid sloc> 'double'
| `-NoThrowAttr 0x5580616ae8c8 <col:15> Implicit
|-FunctionDecl 0x5580616ae920 prev 0x5580616ae748 <col:1, col:74> col:15 fdim 'double (double, double)' extern
| |-ParmVarDecl 0x5580616ae628 <col:21, col:28> col:28 __x 'double'
| |-ParmVarDecl 0x5580616ae6a8 <col:33, col:40> col:40 __y 'double'
| `-NoThrowAttr 0x5580616ae9d0 <col:61>
|-FunctionDecl 0x5580616aeb60 <col:77, col:152> col:91 __fdim 'double (double, double)' extern
| |-ParmVarDecl 0x5580616aea40 <col:99, col:106> col:106 __x 'double'
| |-ParmVarDecl 0x5580616aeac0 <col:111, col:118> col:118 __y 'double'
| `-NoThrowAttr 0x5580616aec10 <col:139>
|-FunctionDecl 0x5580616aeda0 <line:271:15> col:15 implicit fmax 'double (double, double)' extern
| |-ParmVarDecl 0x5580616aee40 <<invalid sloc>> <invalid sloc> 'double'
| |-ParmVarDecl 0x5580616aeea8 <<invalid sloc>> <invalid sloc> 'double'
| |-NoThrowAttr 0x5580616aef20 <col:15> Implicit
| `-ConstAttr 0x5580616aef78 <col:15> Implicit
|-FunctionDecl 0x5580616a2f00 prev 0x5580616aeda0 <col:1, col:102> col:15 fmax 'double (double, double)' extern
| |-ParmVarDecl 0x5580616aec80 <col:21, col:28> col:28 __x 'double'
| |-ParmVarDecl 0x5580616aed00 <col:33, col:40> col:40 __y 'double'
| |-NoThrowAttr 0x5580616a2fb0 <col:61>
| `-ConstAttr 0x5580616a3008 <col:92>
|-FunctionDecl 0x5580616a3168 <col:105, col:208> col:119 __fmax 'double (double, double)' extern
| |-ParmVarDecl 0x5580616a3048 <col:127, col:134> col:134 __x 'double'
| |-ParmVarDecl 0x5580616a30c8 <col:139, col:146> col:146 __y 'double'
| |-NoThrowAttr 0x5580616a3218 <col:167>
| `-ConstAttr 0x5580616a3270 <col:198>
|-FunctionDecl 0x5580616a33d0 <line:274:15> col:15 implicit fmin 'double (double, double)' extern
| |-ParmVarDecl 0x5580616a3470 <<invalid sloc>> <invalid sloc> 'double'
| |-ParmVarDecl 0x5580616a34d8 <<invalid sloc>> <invalid sloc> 'double'
| |-NoThrowAttr 0x5580616a3550 <col:15> Implicit
| `-ConstAttr 0x5580616a35a8 <col:15> Implicit
|-FunctionDecl 0x5580616a35d0 prev 0x5580616a33d0 <col:1, col:102> col:15 fmin 'double (double, double)' extern
| |-ParmVarDecl 0x5580616a32b0 <col:21, col:28> col:28 __x 'double'
| |-ParmVarDecl 0x5580616a3330 <col:33, col:40> col:40 __y 'double'
| |-NoThrowAttr 0x5580616a3680 <col:61>
| `-ConstAttr 0x5580616a36d8 <col:92>
|-FunctionDecl 0x5580616a3838 <col:105, col:208> col:119 __fmin 'double (double, double)' extern
| |-ParmVarDecl 0x5580616a3718 <col:127, col:134> col:134 __x 'double'
| |-ParmVarDecl 0x5580616a3798 <col:139, col:146> col:146 __y 'double'
| |-NoThrowAttr 0x5580616a38e8 <col:167>
| `-ConstAttr 0x5580616a3940 <col:198>
|-FunctionDecl 0x5580616a3a18 <line:278:1, line:279:32> line:278:12 __fpclassify 'int (double)' extern
| |-ParmVarDecl 0x5580616a3980 <col:26, col:33> col:33 __value 'double'
| |-NoThrowAttr 0x5580616a3ac0 <col:58>
| `-ConstAttr 0x5580616a3b18 <line:279:22>
|-FunctionDecl 0x5580616a3bf0 <line:282:1, line:283:32> line:282:12 __signbit 'int (double)' extern
| |-ParmVarDecl 0x5580616a3b58 <col:23, col:30> col:30 __value 'double'
| |-NoThrowAttr 0x5580616a3c98 <col:55>
| `-ConstAttr 0x5580616a3cf0 <line:283:22>
|-FunctionDecl 0x5580616b2020 <line:287:15> col:15 implicit fma 'double (double, double, double)' extern
| |-ParmVarDecl 0x5580616b20c0 <<invalid sloc>> <invalid sloc> 'double'
| |-ParmVarDecl 0x5580616b2128 <<invalid sloc>> <invalid sloc> 'double'
| |-ParmVarDecl 0x5580616b2190 <<invalid sloc>> <invalid sloc> 'double'
| |-ConstAttr 0x5580616b2210 <col:15> Implicit
| `-NoThrowAttr 0x5580616b2268 <col:15> Implicit
|-FunctionDecl 0x5580616b2290 prev 0x5580616b2020 <col:1, col:85> col:15 fma 'double (double, double, double)' extern
| |-ParmVarDecl 0x5580616a3d30 <col:20, col:27> col:27 __x 'double'
| |-ParmVarDecl 0x5580616a3db0 <col:32, col:39> col:39 __y 'double'
| |-ParmVarDecl 0x5580616a3e30 <col:44, col:51> col:51 __z 'double'
| |-ConstAttr 0x5580616b23a0 <col:15> Inherited Implicit
| `-NoThrowAttr 0x5580616b2348 <col:72>
|-FunctionDecl 0x5580616b2588 <col:88, col:174> col:102 __fma 'double (double, double, double)' extern
| |-ParmVarDecl 0x5580616b23e0 <col:109, col:116> col:116 __x 'double'
| |-ParmVarDecl 0x5580616b2460 <col:121, col:128> col:128 __y 'double'
| |-ParmVarDecl 0x5580616b24e0 <col:133, col:140> col:140 __z 'double'
| `-NoThrowAttr 0x5580616b2640 <col:161>
|-FunctionDecl 0x5580616b27d0 <line:288:1, col:75> col:15 scalb 'double (double, double)' extern
| |-ParmVarDecl 0x5580616b26b0 <col:22, col:29> col:29 __x 'double'
| |-ParmVarDecl 0x5580616b2730 <col:34, col:41> col:41 __n 'double'
| `-NoThrowAttr 0x5580616b2880 <col:62>
|-FunctionDecl 0x5580616b2a10 <col:78, col:154> col:92 __scalb 'double (double, double)' extern
| |-ParmVarDecl 0x5580616b28f0 <col:101, col:108> col:108 __x 'double'
| |-ParmVarDecl 0x5580616b2970 <col:113, col:120> col:120 __n 'double'
| `-NoThrowAttr 0x5580616b2ac0 <col:141>
|-FunctionDecl 0x5580616b2c08 <line:289:14> col:14 implicit acosf 'float (float)' extern
| |-ParmVarDecl 0x5580616b2ca8 <<invalid sloc>> <invalid sloc> 'float'
| `-NoThrowAttr 0x5580616b2d18 <col:14> Implicit
|-FunctionDecl 0x5580616b2d70 prev 0x5580616b2c08 <col:1, col:61> col:14 acosf 'float (float)' extern
| |-ParmVarDecl 0x5580616b2b30 <col:21, col:27> col:27 __x 'float'
| `-NoThrowAttr 0x5580616b2e18 <col:48>
|-FunctionDecl 0x5580616b2f20 <col:64, col:126> col:77 __acosf 'float (float)' extern
| |-ParmVarDecl 0x5580616b2e88 <col:86, col:92> col:92 __x 'float'
| `-NoThrowAttr 0x5580616b2ff0 <col:113>
|-FunctionDecl 0x5580616b30f8 <line:291:14> col:14 implicit asinf 'float (float)' extern
| |-ParmVarDecl 0x5580616b3198 <<invalid sloc>> <invalid sloc> 'float'
| `-NoThrowAttr 0x5580616b3208 <col:14> Implicit
|-FunctionDecl 0x5580616b3260 prev 0x5580616b30f8 <col:1, col:61> col:14 asinf 'float (float)' extern
| |-ParmVarDecl 0x5580616b3060 <col:21, col:27> col:27 __x 'float'
| `-NoThrowAttr 0x5580616b3308 <col:48>
|-FunctionDecl 0x5580616b3410 <col:64, col:126> col:77 __asinf 'float (float)' extern
| |-ParmVarDecl 0x5580616b3378 <col:86, col:92> col:92 __x 'float'
| `-NoThrowAttr 0x5580616b34b8 <col:113>
|-FunctionDecl 0x5580616b35c0 <line:293:14> col:14 implicit atanf 'float (float)' extern
| |-ParmVarDecl 0x5580616b3660 <<invalid sloc>> <invalid sloc> 'float'
| `-NoThrowAttr 0x5580616b36d0 <col:14> Implicit
|-FunctionDecl 0x5580616b3728 prev 0x5580616b35c0 <col:1, col:61> col:14 atanf 'float (float)' extern
| |-ParmVarDecl 0x5580616b3528 <col:21, col:27> col:27 __x 'float'
| `-NoThrowAttr 0x5580616b37d0 <col:48>
|-FunctionDecl 0x5580616b38d8 <col:64, col:126> col:77 __atanf 'float (float)' extern
| |-ParmVarDecl 0x5580616b3840 <col:86, col:92> col:92 __x 'float'
| `-NoThrowAttr 0x5580616b3980 <col:113>
|-FunctionDecl 0x5580616b3b58 <line:295:14> col:14 implicit atan2f 'float (float, float)' extern
| |-ParmVarDecl 0x5580616b3bf8 <<invalid sloc>> <invalid sloc> 'float'
| |-ParmVarDecl 0x5580616b3c60 <<invalid sloc>> <invalid sloc> 'float'
| `-NoThrowAttr 0x5580616b3cd8 <col:14> Implicit
|-FunctionDecl 0x5580616b3d30 prev 0x5580616b3b58 <col:1, col:73> col:14 atan2f 'float (float, float)' extern
| |-ParmVarDecl 0x5580616b39f0 <col:22, col:28> col:28 __y 'float'
| |-ParmVarDecl 0x5580616b3a70 <col:33, col:39> col:39 __x 'float'
| `-NoThrowAttr 0x5580616b3de0 <col:60>
|-FunctionDecl 0x5580616b4000 <col:76, col:150> col:89 __atan2f 'float (float, float)' extern
| |-ParmVarDecl 0x5580616b3e50 <col:99, col:105> col:105 __y 'float'
| |-ParmVarDecl 0x5580616b3ed0 <col:110, col:116> col:116 __x 'float'
| `-NoThrowAttr 0x5580616b40b0 <col:137>
|-FunctionDecl 0x5580616b41b8 <line:298:15> col:15 implicit cosf 'float (float)' extern
| |-ParmVarDecl 0x5580616b4258 <<invalid sloc>> <invalid sloc> 'float'
| `-NoThrowAttr 0x5580616b42c8 <col:15> Implicit
|-FunctionDecl 0x5580616b4320 prev 0x5580616b41b8 <col:2, col:61> col:15 cosf 'float (float)' extern
| |-ParmVarDecl 0x5580616b4120 <col:21, col:27> col:27 __x 'float'
| `-NoThrowAttr 0x5580616b43c8 <col:48>
|-FunctionDecl 0x5580616b44d0 <col:64, col:125> col:77 __cosf 'float (float)' extern
| |-ParmVarDecl 0x5580616b4438 <col:85, col:91> col:91 __x 'float'
| `-NoThrowAttr 0x5580616b4578 <col:112>
|-FunctionDecl 0x5580616b4680 <line:300:15> col:15 implicit sinf 'float (float)' extern
| |-ParmVarDecl 0x5580616b4720 <<invalid sloc>> <invalid sloc> 'float'
| `-NoThrowAttr 0x5580616b4790 <col:15> Implicit
|-FunctionDecl 0x5580616b47e8 prev 0x5580616b4680 <col:2, col:61> col:15 sinf 'float (float)' extern
| |-ParmVarDecl 0x5580616b45e8 <col:21, col:27> col:27 __x 'float'
| `-NoThrowAttr 0x5580616b4890 <col:48>
|-FunctionDecl 0x5580616b4998 <col:64, col:125> col:77 __sinf 'float (float)' extern
| |-ParmVarDecl 0x5580616b4900 <col:85, col:91> col:91 __x 'float'
| `-NoThrowAttr 0x5580616b4a40 <col:112>
|-FunctionDecl 0x5580616b4b48 <line:302:14> col:14 implicit tanf 'float (float)' extern
| |-ParmVarDecl 0x5580616b4be8 <<invalid sloc>> <invalid sloc> 'float'
| `-NoThrowAttr 0x5580616b4c58 <col:14> Implicit
|-FunctionDecl 0x5580616b4cb0 prev 0x5580616b4b48 <col:1, col:60> col:14 tanf 'float (float)' extern
| |-ParmVarDecl 0x5580616b4ab0 <col:20, col:26> col:26 __x 'float'
| `-NoThrowAttr 0x5580616b4d58 <col:47>
|-FunctionDecl 0x5580616b4e60 <col:63, col:124> col:76 __tanf 'float (float)' extern
| |-ParmVarDecl 0x5580616b4dc8 <col:84, col:90> col:90 __x 'float'
| `-NoThrowAttr 0x5580616b4f08 <col:111>
|-FunctionDecl 0x5580616b5040 <line:307:14> col:14 implicit coshf 'float (float)' extern
| |-ParmVarDecl 0x5580616b50e0 <<invalid sloc>> <invalid sloc> 'float'
| `-NoThrowAttr 0x5580616b5150 <col:14> Implicit
|-FunctionDecl 0x5580616b51a8 prev 0x5580616b5040 <col:1, col:61> col:14 coshf 'float (float)' extern
| |-ParmVarDecl 0x5580616b4f78 <col:21, col:27> col:27 __x 'float'
| `-NoThrowAttr 0x5580616b5250 <col:48>
|-FunctionDecl 0x5580616b5358 <col:64, col:126> col:77 __coshf 'float (float)' extern
| |-ParmVarDecl 0x5580616b52c0 <col:86, col:92> col:92 __x 'float'
| `-NoThrowAttr 0x5580616b5400 <col:113>
|-FunctionDecl 0x5580616b5508 <line:309:14> col:14 implicit sinhf 'float (float)' extern
| |-ParmVarDecl 0x5580616b55a8 <<invalid sloc>> <invalid sloc> 'float'
| `-NoThrowAttr 0x5580616b5618 <col:14> Implicit
|-FunctionDecl 0x5580616b5670 prev 0x5580616b5508 <col:1, col:61> col:14 sinhf 'float (float)' extern
| |-ParmVarDecl 0x5580616b5470 <col:21, col:27> col:27 __x 'float'
| `-NoThrowAttr 0x5580616b5718 <col:48>
|-FunctionDecl 0x5580616b5820 <col:64, col:126> col:77 __sinhf 'float (float)' extern
| |-ParmVarDecl 0x5580616b5788 <col:86, col:92> col:92 __x 'float'
| `-NoThrowAttr 0x5580616b58c8 <col:113>
|-FunctionDecl 0x5580616b59d0 <line:311:14> col:14 implicit tanhf 'float (float)' extern
| |-ParmVarDecl 0x5580616b5a70 <<invalid sloc>> <invalid sloc> 'float'
| `-NoThrowAttr 0x5580616b5ae0 <col:14> Implicit
|-FunctionDecl 0x5580616b5b38 prev 0x5580616b59d0 <col:1, col:61> col:14 tanhf 'float (float)' extern
| |-ParmVarDecl 0x5580616b5938 <col:21, col:27> col:27 __x 'float'
| `-NoThrowAttr 0x5580616b5be0 <col:48>
|-FunctionDecl 0x5580616b5ce8 <col:64, col:126> col:77 __tanhf 'float (float)' extern
| |-ParmVarDecl 0x5580616b5c50 <col:86, col:92> col:92 __x 'float'
| `-NoThrowAttr 0x5580616b5d90 <col:113>
|-FunctionDecl 0x5580616b5e98 <line:312:14> col:14 implicit acoshf 'float (float)' extern
| |-ParmVarDecl 0x5580616b5f38 <<invalid sloc>> <invalid sloc> 'float'
| `-NoThrowAttr 0x5580616b5fa8 <col:14> Implicit
|-FunctionDecl 0x5580616b6020 prev 0x5580616b5e98 <col:1, col:62> col:14 acoshf 'float (float)' extern
| |-ParmVarDecl 0x5580616b5e00 <col:22, col:28> col:28 __x 'float'
| `-NoThrowAttr 0x5580616b60c8 <col:49>
|-FunctionDecl 0x5580616b61d0 <col:65, col:128> col:78 __acoshf 'float (float)' extern
| |-ParmVarDecl 0x5580616b6138 <col:88, col:94> col:94 __x 'float'
| `-NoThrowAttr 0x5580616b6278 <col:115>
|-FunctionDecl 0x5580616b6380 <line:314:14> col:14 implicit asinhf 'float (float)' extern
| |-ParmVarDecl 0x5580616b6420 <<invalid sloc>> <invalid sloc> 'float'
| `-NoThrowAttr 0x5580616b6490 <col:14> Implicit
|-FunctionDecl 0x5580616b64e8 prev 0x5580616b6380 <col:1, col:62> col:14 asinhf 'float (float)' extern
| |-ParmVarDecl 0x5580616b62e8 <col:22, col:28> col:28 __x 'float'
| `-NoThrowAttr 0x5580616b6590 <col:49>
|-FunctionDecl 0x5580616b6698 <col:65, col:128> col:78 __asinhf 'float (float)' extern
| |-ParmVarDecl 0x5580616b6600 <col:88, col:94> col:94 __x 'float'
| `-NoThrowAttr 0x5580616b6740 <col:115>
|-FunctionDecl 0x5580616b6848 <line:316:14> col:14 implicit atanhf 'float (float)' extern
| |-ParmVarDecl 0x5580616b68e8 <<invalid sloc>> <invalid sloc> 'float'
| `-NoThrowAttr 0x5580616b6958 <col:14> Implicit
|-FunctionDecl 0x5580616b69b0 prev 0x5580616b6848 <col:1, col:62> col:14 atanhf 'float (float)' extern
| |-ParmVarDecl 0x5580616b67b0 <col:22, col:28> col:28 __x 'float'
| `-NoThrowAttr 0x5580616b6a58 <col:49>
|-FunctionDecl 0x5580616b6b60 <col:65, col:128> col:78 __atanhf 'float (float)' extern
| |-ParmVarDecl 0x5580616b6ac8 <col:88, col:94> col:94 __x 'float'
| `-NoThrowAttr 0x5580616b6c08 <col:115>
|-FunctionDecl 0x5580616b6d10 <line:324:15> col:15 implicit expf 'float (float)' extern
| |-ParmVarDecl 0x5580616b6db0 <<invalid sloc>> <invalid sloc> 'float'
| `-NoThrowAttr 0x5580616b6e20 <col:15> Implicit
|-FunctionDecl 0x5580616b6e78 prev 0x5580616b6d10 <col:2, col:61> col:15 expf 'float (float)' extern
| |-ParmVarDecl 0x5580616b6c78 <col:21, col:27> col:27 __x 'float'
| `-NoThrowAttr 0x5580616b6f20 <col:48>
|-FunctionDecl 0x5580616b7060 <col:64, col:125> col:77 __expf 'float (float)' extern
| |-ParmVarDecl 0x5580616b6f90 <col:85, col:91> col:91 __x 'float'
| `-NoThrowAttr 0x5580616b7108 <col:112>
|-FunctionDecl 0x5580616b72d8 <line:327:14> col:14 implicit frexpf 'float (float, int *)' extern
| |-ParmVarDecl 0x5580616b7378 <<invalid sloc>> <invalid sloc> 'float'
| |-ParmVarDecl 0x5580616b73e0 <<invalid sloc>> <invalid sloc> 'int *'
| `-NoThrowAttr 0x5580616b7458 <col:14> Implicit
|-FunctionDecl 0x5580616b74b0 prev 0x5580616b72d8 <col:1, col:79> col:14 frexpf 'float (float, int *)' extern
| |-ParmVarDecl 0x5580616b7178 <col:22, col:28> col:28 __x 'float'
| |-ParmVarDecl 0x5580616b71f8 <col:33, col:38> col:38 __exponent 'int *'
| `-NoThrowAttr 0x5580616b7560 <col:66>
|-FunctionDecl 0x5580616b76f0 <col:82, col:162> col:95 __frexpf 'float (float, int *)' extern
| |-ParmVarDecl 0x5580616b75d0 <col:105, col:111> col:111 __x 'float'
| |-ParmVarDecl 0x5580616b7650 <col:116, col:121> col:121 __exponent 'int *'
| `-NoThrowAttr 0x5580616b77a0 <col:149>
|-FunctionDecl 0x5580616b7978 <line:330:14> col:14 implicit ldexpf 'float (float, int)' extern
| |-ParmVarDecl 0x5580616b7a18 <<invalid sloc>> <invalid sloc> 'float'
| |-ParmVarDecl 0x5580616b7a80 <<invalid sloc>> <invalid sloc> 'int'
| `-NoThrowAttr 0x5580616b7af8 <col:14> Implicit
|-FunctionDecl 0x5580616b7b50 prev 0x5580616b7978 <col:1, col:78> col:14 ldexpf 'float (float, int)' extern
| |-ParmVarDecl 0x5580616b7810 <col:22, col:28> col:28 __x 'float'
| |-ParmVarDecl 0x5580616b7890 <col:33, col:37> col:37 __exponent 'int'
| `-NoThrowAttr 0x5580616b7c00 <col:65>
|-FunctionDecl 0x5580616b7d90 <col:81, col:160> col:94 __ldexpf 'float (float, int)' extern
| |-ParmVarDecl 0x5580616b7c70 <col:104, col:110> col:110 __x 'float'
| |-ParmVarDecl 0x5580616b7cf0 <col:115, col:119> col:119 __exponent 'int'
| `-NoThrowAttr 0x5580616b7e40 <col:147>
|-FunctionDecl 0x5580616b7f48 <line:333:15> col:15 implicit logf 'float (float)' extern
| |-ParmVarDecl 0x5580616b8040 <<invalid sloc>> <invalid sloc> 'float'
| `-NoThrowAttr 0x5580616b80b0 <col:15> Implicit
|-FunctionDecl 0x5580616b8108 prev 0x5580616b7f48 <col:2, col:61> col:15 logf 'float (float)' extern
| |-ParmVarDecl 0x5580616b7eb0 <col:21, col:27> col:27 __x 'float'
| `-NoThrowAttr 0x5580616b81b0 <col:48>
|-FunctionDecl 0x5580616b82b8 <col:64, col:125> col:77 __logf 'float (float)' extern
| |-ParmVarDecl 0x5580616b8220 <col:85, col:91> col:91 __x 'float'
| `-NoThrowAttr 0x5580616b8360 <col:112>
|-FunctionDecl 0x5580616b8468 <line:336:14> col:14 implicit log10f 'float (float)' extern
| |-ParmVarDecl 0x5580616b8508 <<invalid sloc>> <invalid sloc> 'float'
| `-NoThrowAttr 0x5580616b8578 <col:14> Implicit
|-FunctionDecl 0x5580616b85d0 prev 0x5580616b8468 <col:1, col:62> col:14 log10f 'float (float)' extern
| |-ParmVarDecl 0x5580616b83d0 <col:22, col:28> col:28 __x 'float'
| `-NoThrowAttr 0x5580616b8678 <col:49>
|-FunctionDecl 0x5580616b8780 <col:65, col:128> col:78 __log10f 'float (float)' extern
| |-ParmVarDecl 0x5580616b86e8 <col:88, col:94> col:94 __x 'float'
| `-NoThrowAttr 0x5580616b8828 <col:115>
|-FunctionDecl 0x5580616b8a28 <line:339:14> col:14 implicit modff 'float (float, float *)' extern
| |-ParmVarDecl 0x5580616b8ac8 <<invalid sloc>> <invalid sloc> 'float'
| |-ParmVarDecl 0x5580616b8b30 <<invalid sloc>> <invalid sloc> 'float *'
| `-NoThrowAttr 0x5580616b8ba8 <col:14> Implicit
|-FunctionDecl 0x5580616b8c00 prev 0x5580616b8a28 <col:1, col:76> col:14 modff 'float (float, float *)' extern
| |-ParmVarDecl 0x5580616b8898 <col:21, col:27> col:27 __x 'float'
| |-ParmVarDecl 0x5580616b8948 <col:32, col:39> col:39 __iptr 'float *'
| `-NoThrowAttr 0x5580616b8cb0 <col:63>
|-FunctionDecl 0x5580616b8e60 <col:79, col:190> col:92 __modff 'float (float, float *)' extern
| |-ParmVarDecl 0x5580616b8d20 <col:101, col:107> col:107 __x 'float'
| |-ParmVarDecl 0x5580616b8da0 <col:112, col:119> col:119 __iptr 'float *'
| |-NoThrowAttr 0x5580616b8f10 <col:143>
| `-NonNullAttr 0x5580616b8f68 <col:174, col:188> 2
|-FunctionDecl 0x5580616b9080 <line:340:14> col:14 implicit expm1f 'float (float)' extern
| |-ParmVarDecl 0x5580616b9120 <<invalid sloc>> <invalid sloc> 'float'
| `-NoThrowAttr 0x5580616b9190 <col:14> Implicit
|-FunctionDecl 0x5580616b91e8 prev 0x5580616b9080 <col:1, col:62> col:14 expm1f 'float (float)' extern
| |-ParmVarDecl 0x5580616b8fc0 <col:22, col:28> col:28 __x 'float'
| `-NoThrowAttr 0x5580616b9290 <col:49>
|-FunctionDecl 0x5580616b9398 <col:65, col:128> col:78 __expm1f 'float (float)' extern
| |-ParmVarDecl 0x5580616b9300 <col:88, col:94> col:94 __x 'float'
| `-NoThrowAttr 0x5580616b9440 <col:115>
|-FunctionDecl 0x5580616b9548 <line:343:14> col:14 implicit log1pf 'float (float)' extern
| |-ParmVarDecl 0x5580616b95e8 <<invalid sloc>> <invalid sloc> 'float'
| `-NoThrowAttr 0x5580616b9658 <col:14> Implicit
|-FunctionDecl 0x5580616b96b0 prev 0x5580616b9548 <col:1, col:62> col:14 log1pf 'float (float)' extern
| |-ParmVarDecl 0x5580616b94b0 <col:22, col:28> col:28 __x 'float'
| `-NoThrowAttr 0x5580616b9758 <col:49>
|-FunctionDecl 0x5580616b9860 <col:65, col:128> col:78 __log1pf 'float (float)' extern
| |-ParmVarDecl 0x5580616b97c8 <col:88, col:94> col:94 __x 'float'
| `-NoThrowAttr 0x5580616b9908 <col:115>
|-FunctionDecl 0x5580616b9a10 <line:346:14> col:14 implicit logbf 'float (float)' extern
| |-ParmVarDecl 0x5580616b9ab0 <<invalid sloc>> <invalid sloc> 'float'
| `-NoThrowAttr 0x5580616b9b20 <col:14> Implicit
|-FunctionDecl 0x5580616b9b78 prev 0x5580616b9a10 <col:1, col:61> col:14 logbf 'float (float)' extern
| |-ParmVarDecl 0x5580616b9978 <col:21, col:27> col:27 __x 'float'
| `-NoThrowAttr 0x5580616b9c20 <col:48>
|-FunctionDecl 0x5580616b9d28 <col:64, col:126> col:77 __logbf 'float (float)' extern
| |-ParmVarDecl 0x5580616b9c90 <col:86, col:92> col:92 __x 'float'
| `-NoThrowAttr 0x5580616b9dd0 <col:113>
|-FunctionDecl 0x5580616b9ed8 <line:353:14> col:14 implicit exp2f 'float (float)' extern
| |-ParmVarDecl 0x5580616b9f78 <<invalid sloc>> <invalid sloc> 'float'
| `-NoThrowAttr 0x5580616b9fe8 <col:14> Implicit
|-FunctionDecl 0x5580616bb070 prev 0x5580616b9ed8 <col:1, col:61> col:14 exp2f 'float (float)' extern
| |-ParmVarDecl 0x5580616b9e40 <col:21, col:27> col:27 __x 'float'
| `-NoThrowAttr 0x5580616bb118 <col:48>
|-FunctionDecl 0x5580616bb220 <col:64, col:126> col:77 __exp2f 'float (float)' extern
| |-ParmVarDecl 0x5580616bb188 <col:86, col:92> col:92 __x 'float'
| `-NoThrowAttr 0x5580616bb2c8 <col:113>
|-FunctionDecl 0x5580616bb3d0 <line:356:14> col:14 implicit log2f 'float (float)' extern
| |-ParmVarDecl 0x5580616bb470 <<invalid sloc>> <invalid sloc> 'float'
| `-NoThrowAttr 0x5580616bb4e0 <col:14> Implicit
|-FunctionDecl 0x5580616bb538 prev 0x5580616bb3d0 <col:1, col:61> col:14 log2f 'float (float)' extern
| |-ParmVarDecl 0x5580616bb338 <col:21, col:27> col:27 __x 'float'
| `-NoThrowAttr 0x5580616bb5e0 <col:48>
|-FunctionDecl 0x5580616bb6e8 <col:64, col:126> col:77 __log2f 'float (float)' extern
| |-ParmVarDecl 0x5580616bb650 <col:86, col:92> col:92 __x 'float'
| `-NoThrowAttr 0x5580616bb790 <col:113>
|-FunctionDecl 0x5580616bb920 <line:357:15> col:15 implicit powf 'float (float, float)' extern
| |-ParmVarDecl 0x5580616bb9c0 <<invalid sloc>> <invalid sloc> 'float'
| |-ParmVarDecl 0x5580616bba28 <<invalid sloc>> <invalid sloc> 'float'
| `-NoThrowAttr 0x5580616bbaa0 <col:15> Implicit
|-FunctionDecl 0x5580616bbaf8 prev 0x5580616bb920 <col:2, col:72> col:15 powf 'float (float, float)' extern
| |-ParmVarDecl 0x5580616bb800 <col:21, col:27> col:27 __x 'float'
| |-ParmVarDecl 0x5580616bb880 <col:32, col:38> col:38 __y 'float'
| `-NoThrowAttr 0x5580616bbba8 <col:59>
|-FunctionDecl 0x5580616bbd38 <col:75, col:147> col:88 __powf 'float (float, float)' extern
| |-ParmVarDecl 0x5580616bbc18 <col:96, col:102> col:102 __x 'float'
| |-ParmVarDecl 0x5580616bbc98 <col:107, col:113> col:113 __y 'float'
| `-NoThrowAttr 0x5580616bbde8 <col:134>
|-FunctionDecl 0x5580616bbef0 <line:360:14> col:14 implicit sqrtf 'float (float)' extern
| |-ParmVarDecl 0x5580616bbf90 <<invalid sloc>> <invalid sloc> 'float'
| `-NoThrowAttr 0x5580616bc000 <col:14> Implicit
|-FunctionDecl 0x5580616bc080 prev 0x5580616bbef0 <col:1, col:61> col:14 sqrtf 'float (float)' extern
| |-ParmVarDecl 0x5580616bbe58 <col:21, col:27> col:27 __x 'float'
| `-NoThrowAttr 0x5580616bc128 <col:48>
|-FunctionDecl 0x5580616bc230 <col:64, col:126> col:77 __sqrtf 'float (float)' extern
| |-ParmVarDecl 0x5580616bc198 <col:86, col:92> col:92 __x 'float'
| `-NoThrowAttr 0x5580616bc2d8 <col:113>
|-FunctionDecl 0x5580616bc468 <line:366:14> col:14 implicit hypotf 'float (float, float)' extern
| |-ParmVarDecl 0x5580616bc508 <<invalid sloc>> <invalid sloc> 'float'
| |-ParmVarDecl 0x5580616bc570 <<invalid sloc>> <invalid sloc> 'float'
| `-NoThrowAttr 0x5580616bc5e8 <col:14> Implicit
|-FunctionDecl 0x5580616bc640 prev 0x5580616bc468 <col:1, col:73> col:14 hypotf 'float (float, float)' extern
| |-ParmVarDecl 0x5580616bc348 <col:22, col:28> col:28 __x 'float'
| |-ParmVarDecl 0x5580616bc3c8 <col:33, col:39> col:39 __y 'float'
| `-NoThrowAttr 0x5580616bc6f0 <col:60>
|-FunctionDecl 0x5580616bc880 <col:76, col:150> col:89 __hypotf 'float (float, float)' extern
| |-ParmVarDecl 0x5580616bc760 <col:99, col:105> col:105 __x 'float'
| |-ParmVarDecl 0x5580616bc7e0 <col:110, col:116> col:116 __y 'float'
| `-NoThrowAttr 0x5580616bc930 <col:137>
|-FunctionDecl 0x5580616bca38 <line:373:14> col:14 implicit cbrtf 'float (float)' extern
| |-ParmVarDecl 0x5580616bcad8 <<invalid sloc>> <invalid sloc> 'float'
| |-NoThrowAttr 0x5580616bcb48 <col:14> Implicit
| `-ConstAttr 0x5580616bcba0 <col:14> Implicit
|-FunctionDecl 0x5580616bcbc8 prev 0x5580616bca38 <col:1, col:61> col:14 cbrtf 'float (float)' extern
| |-ParmVarDecl 0x5580616bc9a0 <col:21, col:27> col:27 __x 'float'
| |-ConstAttr 0x5580616bccc8 <col:14> Inherited Implicit
| `-NoThrowAttr 0x5580616bcc70 <col:48>
|-FunctionDecl 0x5580616bcda0 <col:64, col:126> col:77 __cbrtf 'float (float)' extern
| |-ParmVarDecl 0x5580616bcd08 <col:86, col:92> col:92 __x 'float'
| `-NoThrowAttr 0x5580616bce48 <col:113>
|-FunctionDecl 0x5580616bcf50 <line:374:14> col:14 implicit ceilf 'float (float)' extern
| |-ParmVarDecl 0x5580616bcff0 <<invalid sloc>> <invalid sloc> 'float'
| |-NoThrowAttr 0x5580616bd090 <col:14> Implicit
| `-ConstAttr 0x5580616bd0e8 <col:14> Implicit
|-FunctionDecl 0x5580616bd110 prev 0x5580616bcf50 <col:1, col:89> col:14 ceilf 'float (float)' extern
| |-ParmVarDecl 0x5580616bceb8 <col:21, col:27> col:27 __x 'float'
| |-NoThrowAttr 0x5580616bd1b8 <col:48>
| `-ConstAttr 0x5580616bd210 <col:79>
|-FunctionDecl 0x5580616bd2e8 <col:92, col:182> col:105 __ceilf 'float (float)' extern
| |-ParmVarDecl 0x5580616bd250 <col:114, col:120> col:120 __x 'float'
| |-NoThrowAttr 0x5580616bd390 <col:141>
| `-ConstAttr 0x5580616bd3e8 <col:172>
|-FunctionDecl 0x5580616bd4c0 <line:377:14> col:14 implicit fabsf 'float (float)' extern
| |-ParmVarDecl 0x5580616bd560 <<invalid sloc>> <invalid sloc> 'float'
| |-NoThrowAttr 0x5580616bd5d0 <col:14> Implicit
| `-ConstAttr 0x5580616bd628 <col:14> Implicit
|-FunctionDecl 0x5580616bd650 prev 0x5580616bd4c0 <col:1, col:89> col:14 fabsf 'float (float)' extern
| |-ParmVarDecl 0x5580616bd428 <col:21, col:27> col:27 __x 'float'
| |-NoThrowAttr 0x5580616bd6f8 <col:48>
| `-ConstAttr 0x5580616bd750 <col:79>
|-FunctionDecl 0x5580616bd828 <col:92, col:182> col:105 __fabsf 'float (float)' extern
| |-ParmVarDecl 0x5580616bd790 <col:114, col:120> col:120 __x 'float'
| |-NoThrowAttr 0x5580616bd8d0 <col:141>
| `-ConstAttr 0x5580616bd928 <col:172>
|-FunctionDecl 0x5580616bda00 <line:380:14> col:14 implicit floorf 'float (float)' extern
| |-ParmVarDecl 0x5580616bdaa0 <<invalid sloc>> <invalid sloc> 'float'
| |-NoThrowAttr 0x5580616bdb10 <col:14> Implicit
| `-ConstAttr 0x5580616bdb68 <col:14> Implicit
|-FunctionDecl 0x5580616bdb90 prev 0x5580616bda00 <col:1, col:90> col:14 floorf 'float (float)' extern
| |-ParmVarDecl 0x5580616bd968 <col:22, col:28> col:28 __x 'float'
| |-NoThrowAttr 0x5580616bdc38 <col:49>
| `-ConstAttr 0x5580616bdc90 <col:80>
|-FunctionDecl 0x5580616bdd68 <col:93, col:184> col:106 __floorf 'float (float)' extern
| |-ParmVarDecl 0x5580616bdcd0 <col:116, col:122> col:122 __x 'float'
| |-NoThrowAttr 0x5580616bde10 <col:143>
| `-ConstAttr 0x5580616bde68 <col:174>
|-FunctionDecl 0x5580616bdfc8 <line:383:14> col:14 implicit fmodf 'float (float, float)' extern
| |-ParmVarDecl 0x5580616be0a0 <<invalid sloc>> <invalid sloc> 'float'
| |-ParmVarDecl 0x5580616be108 <<invalid sloc>> <invalid sloc> 'float'
| `-NoThrowAttr 0x5580616be180 <col:14> Implicit
|-FunctionDecl 0x5580616be1d8 prev 0x5580616bdfc8 <col:1, col:72> col:14 fmodf 'float (float, float)' extern
| |-ParmVarDecl 0x5580616bdea8 <col:21, col:27> col:27 __x 'float'
| |-ParmVarDecl 0x5580616bdf28 <col:32, col:38> col:38 __y 'float'
| `-NoThrowAttr 0x5580616be288 <col:59>
|-FunctionDecl 0x5580616be418 <col:75, col:148> col:88 __fmodf 'float (float, float)' extern
| |-ParmVarDecl 0x5580616be2f8 <col:97, col:103> col:103 __x 'float'
| |-ParmVarDecl 0x5580616be378 <col:108, col:114> col:114 __y 'float'
| `-NoThrowAttr 0x5580616be4c8 <col:135>
|-FunctionDecl 0x5580616be608 <line:388:1, col:94> col:12 used __isinff 'int (float)' extern
| |-ParmVarDecl 0x5580616be538 <col:22, col:28> col:28 __value 'float'
| |-NoThrowAttr 0x5580616be6b0 <col:53>
| `-ConstAttr 0x5580616be708 <col:84>
|-FunctionDecl 0x5580616be7e0 <line:391:12> col:12 implicit __finitef 'int (float)' extern
| |-ParmVarDecl 0x5580616be880 <<invalid sloc>> <invalid sloc> 'float'
| |-NoThrowAttr 0x5580616be8f0 <col:12> Implicit
| `-ConstAttr 0x5580616be948 <col:12> Implicit
|-FunctionDecl 0x5580616be970 prev 0x5580616be7e0 <col:1, col:95> col:12 __finitef 'int (float)' extern
| |-ParmVarDecl 0x5580616be748 <col:23, col:29> col:29 __value 'float'
| |-NoThrowAttr 0x5580616bea18 <col:54>
| `-ConstAttr 0x5580616bea70 <col:85>
|-FunctionDecl 0x5580616beb48 <line:397:1, col:92> col:12 isinff 'int (float)' extern
| |-ParmVarDecl 0x5580616beab0 <col:20, col:26> col:26 __value 'float'
| |-NoThrowAttr 0x5580616bebf0 <col:51>
| `-ConstAttr 0x5580616bec48 <col:82>
|-FunctionDecl 0x5580616bed20 <line:400:12> col:12 implicit finitef 'int (float)' extern
| |-ParmVarDecl 0x5580616bedc0 <<invalid sloc>> <invalid sloc> 'float'
| |-NoThrowAttr 0x5580616bee30 <col:12> Implicit
| `-ConstAttr 0x5580616bee88 <col:12> Implicit
|-FunctionDecl 0x5580616beeb0 prev 0x5580616bed20 <col:1, col:93> col:12 finitef 'int (float)' extern
| |-ParmVarDecl 0x5580616bec88 <col:21, col:27> col:27 __value 'float'
| |-NoThrowAttr 0x5580616bef58 <col:52>
| `-ConstAttr 0x5580616befb0 <col:83>
|-FunctionDecl 0x5580616bf150 <line:403:1, col:72> col:14 dremf 'float (float, float)' extern
| |-ParmVarDecl 0x5580616beff0 <col:21, col:27> col:27 __x 'float'
| |-ParmVarDecl 0x5580616bf0b0 <col:32, col:38> col:38 __y 'float'
| `-NoThrowAttr 0x5580616bf200 <col:59>
|-FunctionDecl 0x5580616bf390 <col:75, col:148> col:88 __dremf 'float (float, float)' extern
| |-ParmVarDecl 0x5580616bf270 <col:97, col:103> col:103 __x 'float'
| |-ParmVarDecl 0x5580616bf2f0 <col:108, col:114> col:114 __y 'float'
| `-NoThrowAttr 0x5580616bf440 <col:135>
|-FunctionDecl 0x5580616bf548 <line:407:1, col:68> col:14 significandf 'float (float)' extern
| |-ParmVarDecl 0x5580616bf4b0 <col:28, col:34> col:34 __x 'float'
| `-NoThrowAttr 0x5580616bf5f0 <col:55>
|-FunctionDecl 0x5580616bf6f8 <col:71, col:140> col:84 __significandf 'float (float)' extern
| |-ParmVarDecl 0x5580616bf660 <col:100, col:106> col:106 __x 'float'
| `-NoThrowAttr 0x5580616bf7a0 <col:127>
|-FunctionDecl 0x5580616bf930 <line:413:14> col:14 implicit copysignf 'float (float, float)' extern
| |-ParmVarDecl 0x5580616bf9d0 <<invalid sloc>> <invalid sloc> 'float'
| |-ParmVarDecl 0x5580616bfa38 <<invalid sloc>> <invalid sloc> 'float'
| |-NoThrowAttr 0x5580616bfab0 <col:14> Implicit
| `-ConstAttr 0x5580616bfb08 <col:14> Implicit
|-FunctionDecl 0x5580616bfb30 prev 0x5580616bf930 <col:1, col:104> col:14 copysignf 'float (float, float)' extern
| |-ParmVarDecl 0x5580616bf810 <col:25, col:31> col:31 __x 'float'
| |-ParmVarDecl 0x5580616bf890 <col:36, col:42> col:42 __y 'float'
| |-NoThrowAttr 0x5580616bfbe0 <col:63>
| `-ConstAttr 0x5580616bfc38 <col:94>
|-FunctionDecl 0x5580616bfd98 <col:107, col:212> col:120 __copysignf 'float (float, float)' extern
| |-ParmVarDecl 0x5580616bfc78 <col:133, col:139> col:139 __x 'float'
| |-ParmVarDecl 0x5580616bfcf8 <col:144, col:150> col:150 __y 'float'
| |-NoThrowAttr 0x5580616bfe48 <col:171>
| `-ConstAttr 0x5580616bfea0 <col:202>
|-FunctionDecl 0x5580616bffb8 <line:420:14> col:14 implicit nanf 'float (const char *)' extern
| |-ParmVarDecl 0x5580616c00c0 <<invalid sloc>> <invalid sloc> 'const char *'
| |-NoThrowAttr 0x5580616c0130 <col:14> Implicit
| `-PureAttr 0x5580616c0188 <col:14> Implicit
|-FunctionDecl 0x5580616c01b0 prev 0x5580616bffb8 <col:1, col:97> col:14 nanf 'float (const char *)' extern
| |-ParmVarDecl 0x5580616bfee0 <col:20, col:32> col:32 __tagb 'const char *'
| |-PureAttr 0x5580616c02d8 <col:14> Inherited Implicit
| |-NoThrowAttr 0x5580616c0258 <col:56>
| `-ConstAttr 0x5580616c02b0 <col:87>
|-FunctionDecl 0x5580616c03b0 <col:100, col:198> col:113 __nanf 'float (const char *)' extern
| |-ParmVarDecl 0x5580616c0318 <col:121, col:133> col:133 __tagb 'const char *'
| |-NoThrowAttr 0x5580616c0458 <col:157>
| `-ConstAttr 0x5580616c04b0 <col:188>
|-FunctionDecl 0x5580616c0588 <line:426:1, col:94> col:12 used __isnanf 'int (float)' extern
| |-ParmVarDecl 0x5580616c04f0 <col:22, col:28> col:28 __value 'float'
| |-NoThrowAttr 0x5580616c0630 <col:53>
| `-ConstAttr 0x5580616c0688 <col:84>
|-FunctionDecl 0x5580616c0760 <line:430:1, col:92> col:12 isnanf 'int (float)' extern
| |-ParmVarDecl 0x5580616c06c8 <col:20, col:26> col:26 __value 'float'
| |-NoThrowAttr 0x5580616c0808 <col:51>
| `-ConstAttr 0x5580616c0860 <col:82>
|-FunctionDecl 0x5580616c0938 <line:433:1, col:55> col:14 j0f 'float (float)' extern
| |-ParmVarDecl 0x5580616c08a0 <col:19> col:24 'float'
| `-NoThrowAttr 0x5580616c09e0 <col:42>
|-FunctionDecl 0x5580616c0ae8 <col:58, col:114> col:71 __j0f 'float (float)' extern
| |-ParmVarDecl 0x5580616c0a50 <col:78> col:83 'float'
| `-NoThrowAttr 0x5580616c0b90 <col:101>
|-FunctionDecl 0x5580616c0c98 <line:434:1, col:55> col:14 j1f 'float (float)' extern
| |-ParmVarDecl 0x5580616c0c00 <col:19> col:24 'float'
| `-NoThrowAttr 0x5580616c0d40 <col:42>
|-FunctionDecl 0x5580616c0e48 <col:58, col:114> col:71 __j1f 'float (float)' extern
| |-ParmVarDecl 0x5580616c0db0 <col:78> col:83 'float'
| `-NoThrowAttr 0x5580616c0ef0 <col:101>
|-FunctionDecl 0x5580616c1108 <line:435:1, col:60> col:14 jnf 'float (int, float)' extern
| |-ParmVarDecl 0x5580616c0f60 <col:19> col:22 'int'
| |-ParmVarDecl 0x5580616c0fe0 <col:24> col:29 'float'
| `-NoThrowAttr 0x5580616c11b8 <col:47>
|-FunctionDecl 0x5580616c1348 <col:63, col:124> col:76 __jnf 'float (int, float)' extern
| |-ParmVarDecl 0x5580616c1228 <col:83> col:86 'int'
| |-ParmVarDecl 0x5580616c12a8 <col:88> col:93 'float'
| `-NoThrowAttr 0x5580616c13f8 <col:111>
|-FunctionDecl 0x5580616c1500 <line:436:1, col:55> col:14 y0f 'float (float)' extern
| |-ParmVarDecl 0x5580616c1468 <col:19> col:24 'float'
| `-NoThrowAttr 0x5580616c15a8 <col:42>
|-FunctionDecl 0x5580616c16b0 <col:58, col:114> col:71 __y0f 'float (float)' extern
| |-ParmVarDecl 0x5580616c1618 <col:78> col:83 'float'
| `-NoThrowAttr 0x5580616c1758 <col:101>
|-FunctionDecl 0x5580616c1860 <line:437:1, col:55> col:14 y1f 'float (float)' extern
| |-ParmVarDecl 0x5580616c17c8 <col:19> col:24 'float'
| `-NoThrowAttr 0x5580616c1908 <col:42>
|-FunctionDecl 0x5580616c1a10 <col:58, col:114> col:71 __y1f 'float (float)' extern
| |-ParmVarDecl 0x5580616c1978 <col:78> col:83 'float'
| `-NoThrowAttr 0x5580616c1ab8 <col:101>
|-FunctionDecl 0x5580616c1c48 <line:438:1, col:60> col:14 ynf 'float (int, float)' extern
| |-ParmVarDecl 0x5580616c1b28 <col:19> col:22 'int'
| |-ParmVarDecl 0x5580616c1ba8 <col:24> col:29 'float'
| `-NoThrowAttr 0x5580616c1cf8 <col:47>
|-FunctionDecl 0x5580616c1e88 <col:63, col:124> col:76 __ynf 'float (int, float)' extern
| |-ParmVarDecl 0x5580616c1d68 <col:83> col:86 'int'
| |-ParmVarDecl 0x5580616c1de8 <col:88> col:93 'float'
| `-NoThrowAttr 0x5580616c1f38 <col:111>
|-FunctionDecl 0x5580616c20e0 <line:445:14> col:14 implicit erff 'float (float)' extern
| |-ParmVarDecl 0x5580616c2180 <<invalid sloc>> <invalid sloc> 'float'
| `-NoThrowAttr 0x5580616c21f0 <col:14> Implicit
|-FunctionDecl 0x5580616c2248 prev 0x5580616c20e0 <col:1, col:56> col:14 erff 'float (float)' extern
| |-ParmVarDecl 0x5580616c1fa8 <col:20> col:25 'float'
| `-NoThrowAttr 0x5580616c22f0 <col:43>
|-FunctionDecl 0x5580616c23f8 <col:59, col:116> col:72 __erff 'float (float)' extern
| |-ParmVarDecl 0x5580616c2360 <col:80> col:85 'float'
| `-NoThrowAttr 0x5580616c24a0 <col:103>
|-FunctionDecl 0x5580616c25a8 <line:446:14> col:14 implicit erfcf 'float (float)' extern
| |-ParmVarDecl 0x5580616c2648 <<invalid sloc>> <invalid sloc> 'float'
| `-NoThrowAttr 0x5580616c26b8 <col:14> Implicit
|-FunctionDecl 0x5580616c2710 prev 0x5580616c25a8 <col:1, col:57> col:14 erfcf 'float (float)' extern
| |-ParmVarDecl 0x5580616c2510 <col:21> col:26 'float'
| `-NoThrowAttr 0x5580616c27b8 <col:44>
|-FunctionDecl 0x5580616c28c0 <col:60, col:118> col:73 __erfcf 'float (float)' extern
| |-ParmVarDecl 0x5580616c2828 <col:82> col:87 'float'
| `-NoThrowAttr 0x5580616c2968 <col:105>
|-FunctionDecl 0x5580616c2a70 <line:447:14> col:14 implicit lgammaf 'float (float)' extern
| |-ParmVarDecl 0x5580616c2b10 <<invalid sloc>> <invalid sloc> 'float'
| `-NoThrowAttr 0x5580616c2b80 <col:14> Implicit
|-FunctionDecl 0x5580616c2bd8 prev 0x5580616c2a70 <col:1, col:59> col:14 lgammaf 'float (float)' extern
| |-ParmVarDecl 0x5580616c29d8 <col:23> col:28 'float'
| `-NoThrowAttr 0x5580616c2c80 <col:46>
|-FunctionDecl 0x5580616c2d88 <col:62, col:122> col:75 __lgammaf 'float (float)' extern
| |-ParmVarDecl 0x5580616c2cf0 <col:86> col:91 'float'
| `-NoThrowAttr 0x5580616c2e30 <col:109>
|-FunctionDecl 0x5580616c2f38 <line:454:14> col:14 implicit tgammaf 'float (float)' extern
| |-ParmVarDecl 0x5580616c2fd8 <<invalid sloc>> <invalid sloc> 'float'
| `-NoThrowAttr 0x5580616c3048 <col:14> Implicit
|-FunctionDecl 0x5580616c30f0 prev 0x5580616c2f38 <col:1, col:59> col:14 tgammaf 'float (float)' extern
| |-ParmVarDecl 0x5580616c2ea0 <col:23> col:28 'float'
| `-NoThrowAttr 0x5580616c3198 <col:46>
|-FunctionDecl 0x5580616c32a0 <col:62, col:122> col:75 __tgammaf 'float (float)' extern
| |-ParmVarDecl 0x5580616c3208 <col:86> col:91 'float'
| `-NoThrowAttr 0x5580616c3348 <col:109>
|-FunctionDecl 0x5580616c3450 <line:460:1, col:58> col:14 gammaf 'float (float)' extern
| |-ParmVarDecl 0x5580616c33b8 <col:22> col:27 'float'
| `-NoThrowAttr 0x5580616c34f8 <col:45>
|-FunctionDecl 0x5580616c3600 <col:61, col:120> col:74 __gammaf 'float (float)' extern
| |-ParmVarDecl 0x5580616c3568 <col:84> col:89 'float'
| `-NoThrowAttr 0x5580616c36a8 <col:107>
|-FunctionDecl 0x5580616c3838 <line:467:1, col:78> col:14 lgammaf_r 'float (float, int *)' extern
| |-ParmVarDecl 0x5580616c3718 <col:25> col:30 'float'
| |-ParmVarDecl 0x5580616c3798 <col:32, col:37> col:37 __signgamp 'int *'
| `-NoThrowAttr 0x5580616c38e8 <col:65>
|-FunctionDecl 0x5580616c3a78 <col:81, col:160> col:94 __lgammaf_r 'float (float, int *)' extern
| |-ParmVarDecl 0x5580616c3958 <col:107> col:112 'float'
| |-ParmVarDecl 0x5580616c39d8 <col:114, col:119> col:119 __signgamp 'int *'
| `-NoThrowAttr 0x5580616c3b28 <col:147>
|-FunctionDecl 0x5580616c3c30 <line:475:14> col:14 implicit rintf 'float (float)' extern
| |-ParmVarDecl 0x5580616c3cd0 <<invalid sloc>> <invalid sloc> 'float'
| |-NoThrowAttr 0x5580616c3d40 <col:14> Implicit
| `-ConstAttr 0x5580616c3d98 <col:14> Implicit
|-FunctionDecl 0x5580616c3dc0 prev 0x5580616c3c30 <col:1, col:61> col:14 rintf 'float (float)' extern
| |-ParmVarDecl 0x5580616c3b98 <col:21, col:27> col:27 __x 'float'
| |-ConstAttr 0x5580616c3ec0 <col:14> Inherited Implicit
| `-NoThrowAttr 0x5580616c3e68 <col:48>
|-FunctionDecl 0x5580616c3f98 <col:64, col:126> col:77 __rintf 'float (float)' extern
| |-ParmVarDecl 0x5580616c3f00 <col:86, col:92> col:92 __x 'float'
| `-NoThrowAttr 0x5580616c4040 <col:113>
|-FunctionDecl 0x5580616c4220 <line:478:14> col:14 implicit nextafterf 'float (float, float)' extern
| |-ParmVarDecl 0x5580616c42c0 <<invalid sloc>> <invalid sloc> 'float'
| |-ParmVarDecl 0x5580616c4328 <<invalid sloc>> <invalid sloc> 'float'
| `-NoThrowAttr 0x5580616c43a0 <col:14> Implicit
|-FunctionDecl 0x5580616c43f8 prev 0x5580616c4220 <col:1, col:105> col:14 nextafterf 'float (float, float)' extern
| |-ParmVarDecl 0x5580616c4100 <col:26, col:32> col:32 __x 'float'
| |-ParmVarDecl 0x5580616c4180 <col:37, col:43> col:43 __y 'float'
| |-NoThrowAttr 0x5580616c44a8 <col:64>
| `-ConstAttr 0x5580616c4500 <col:95>
|-FunctionDecl 0x5580616c4660 <col:108, col:214> col:121 __nextafterf 'float (float, float)' extern
| |-ParmVarDecl 0x5580616c4540 <col:135, col:141> col:141 __x 'float'
| |-ParmVarDecl 0x5580616c45c0 <col:146, col:152> col:152 __y 'float'
| |-NoThrowAttr 0x5580616c4710 <col:173>
| `-ConstAttr 0x5580616c4768 <col:204>
|-FunctionDecl 0x5580616c4908 <line:480:14> col:14 implicit nexttowardf 'float (float, long double)' extern
| |-ParmVarDecl 0x5580616c49a8 <<invalid sloc>> <invalid sloc> 'float'
| |-ParmVarDecl 0x5580616c4a10 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x5580616c4a88 <col:14> Implicit
|-FunctionDecl 0x5580616c4ae0 prev 0x5580616c4908 <col:1, col:112> col:14 nexttowardf 'float (float, long double)' extern
| |-ParmVarDecl 0x5580616c47a8 <col:27, col:33> col:33 __x 'float'
| |-ParmVarDecl 0x5580616c4828 <col:38, col:50> col:50 __y 'long double'
| |-NoThrowAttr 0x5580616c4b90 <col:71>
| `-ConstAttr 0x5580616c4be8 <col:102>
|-FunctionDecl 0x5580616c4d48 <col:115, col:228> col:128 __nexttowardf 'float (float, long double)' extern
| |-ParmVarDecl 0x5580616c4c28 <col:143, col:149> col:149 __x 'float'
| |-ParmVarDecl 0x5580616c4ca8 <col:154, col:166> col:166 __y 'long double'
| |-NoThrowAttr 0x5580616c4df8 <col:187>
| `-ConstAttr 0x5580616c4e50 <col:218>
|-FunctionDecl 0x5580616c4fb0 <line:484:14> col:14 implicit remainderf 'float (float, float)' extern
| |-ParmVarDecl 0x5580616c5050 <<invalid sloc>> <invalid sloc> 'float'
| |-ParmVarDecl 0x5580616c5110 <<invalid sloc>> <invalid sloc> 'float'
| `-NoThrowAttr 0x5580616c5188 <col:14> Implicit
|-FunctionDecl 0x5580616c51e0 prev 0x5580616c4fb0 <col:1, col:77> col:14 remainderf 'float (float, float)' extern
| |-ParmVarDecl 0x5580616c4e90 <col:26, col:32> col:32 __x 'float'
| |-ParmVarDecl 0x5580616c4f10 <col:37, col:43> col:43 __y 'float'
| `-NoThrowAttr 0x5580616c5290 <col:64>
|-FunctionDecl 0x5580616c5420 <col:80, col:158> col:93 __remainderf 'float (float, float)' extern
| |-ParmVarDecl 0x5580616c5300 <col:107, col:113> col:113 __x 'float'
| |-ParmVarDecl 0x5580616c5380 <col:118, col:124> col:124 __y 'float'
| `-NoThrowAttr 0x5580616c54d0 <col:145>
|-FunctionDecl 0x5580616c5660 <line:488:14> col:14 implicit scalbnf 'float (float, int)' extern
| |-ParmVarDecl 0x5580616c5700 <<invalid sloc>> <invalid sloc> 'float'
| |-ParmVarDecl 0x5580616c5768 <<invalid sloc>> <invalid sloc> 'int'
| `-NoThrowAttr 0x5580616c57e0 <col:14> Implicit
|-FunctionDecl 0x5580616c5838 prev 0x5580616c5660 <col:1, col:72> col:14 scalbnf 'float (float, int)' extern
| |-ParmVarDecl 0x5580616c5540 <col:23, col:29> col:29 __x 'float'
| |-ParmVarDecl 0x5580616c55c0 <col:34, col:38> col:38 __n 'int'
| `-NoThrowAttr 0x5580616c58e8 <col:59>
|-FunctionDecl 0x5580616c5a78 <col:75, col:148> col:88 __scalbnf 'float (float, int)' extern
| |-ParmVarDecl 0x5580616c5958 <col:99, col:105> col:105 __x 'float'
| |-ParmVarDecl 0x5580616c59d8 <col:110, col:114> col:114 __n 'int'
| `-NoThrowAttr 0x5580616c5b28 <col:135>
|-FunctionDecl 0x5580616c5c30 <line:492:12> col:12 implicit ilogbf 'int (float)' extern
| |-ParmVarDecl 0x5580616c5cd0 <<invalid sloc>> <invalid sloc> 'float'
| `-NoThrowAttr 0x5580616c5d40 <col:12> Implicit
|-FunctionDecl 0x5580616c5d98 prev 0x5580616c5c30 <col:1, col:60> col:12 ilogbf 'int (float)' extern
| |-ParmVarDecl 0x5580616c5b98 <col:20, col:26> col:26 __x 'float'
| `-NoThrowAttr 0x5580616c5e40 <col:47>
|-FunctionDecl 0x5580616c5f48 <col:63, col:124> col:74 __ilogbf 'int (float)' extern
| |-ParmVarDecl 0x5580616c5eb0 <col:84, col:90> col:90 __x 'float'
| `-NoThrowAttr 0x5580616c5ff0 <col:111>
|-FunctionDecl 0x5580616c6208 <line:497:14> col:14 implicit scalblnf 'float (float, long)' extern
| |-ParmVarDecl 0x5580616c62a8 <<invalid sloc>> <invalid sloc> 'float'
| |-ParmVarDecl 0x5580616c6310 <<invalid sloc>> <invalid sloc> 'long'
| `-NoThrowAttr 0x5580616c6388 <col:14> Implicit
|-FunctionDecl 0x5580616c63e0 prev 0x5580616c6208 <col:1, col:78> col:14 scalblnf 'float (float, long)' extern
| |-ParmVarDecl 0x5580616c6060 <col:24, col:30> col:30 __x 'float'
| |-ParmVarDecl 0x5580616c6120 <col:35, col:44> col:44 __n 'long'
| `-NoThrowAttr 0x5580616c6490 <col:65>
|-FunctionDecl 0x5580616c6620 <col:81, col:160> col:94 __scalblnf 'float (float, long)' extern
| |-ParmVarDecl 0x5580616c6500 <col:106, col:112> col:112 __x 'float'
| |-ParmVarDecl 0x5580616c6580 <col:117, col:126> col:126 __n 'long'
| `-NoThrowAttr 0x5580616c66d0 <col:147>
|-FunctionDecl 0x5580616c67d8 <line:501:14> col:14 implicit nearbyintf 'float (float)' extern
| |-ParmVarDecl 0x5580616c6878 <<invalid sloc>> <invalid sloc> 'float'
| |-NoThrowAttr 0x5580616c68e8 <col:14> Implicit
| `-ConstAttr 0x5580616c6940 <col:14> Implicit
|-FunctionDecl 0x5580616c6968 prev 0x5580616c67d8 <col:1, col:66> col:14 nearbyintf 'float (float)' extern
| |-ParmVarDecl 0x5580616c6740 <col:26, col:32> col:32 __x 'float'
| |-ConstAttr 0x5580616c6a68 <col:14> Inherited Implicit
| `-NoThrowAttr 0x5580616c6a10 <col:53>
|-FunctionDecl 0x5580616c6b40 <col:69, col:136> col:82 __nearbyintf 'float (float)' extern
| |-ParmVarDecl 0x5580616c6aa8 <col:96, col:102> col:102 __x 'float'
| `-NoThrowAttr 0x5580616c6be8 <col:123>
|-FunctionDecl 0x5580616c6cf0 <line:505:14> col:14 implicit roundf 'float (float)' extern
| |-ParmVarDecl 0x5580616c6d90 <<invalid sloc>> <invalid sloc> 'float'
| |-NoThrowAttr 0x5580616c6e00 <col:14> Implicit
| `-ConstAttr 0x5580616c6e58 <col:14> Implicit
|-FunctionDecl 0x5580616c6e80 prev 0x5580616c6cf0 <col:1, col:90> col:14 roundf 'float (float)' extern
| |-ParmVarDecl 0x5580616c6c58 <col:22, col:28> col:28 __x 'float'
| |-NoThrowAttr 0x5580616c6f28 <col:49>
| `-ConstAttr 0x5580616c6f80 <col:80>
|-FunctionDecl 0x5580616c7058 <col:93, col:184> col:106 __roundf 'float (float)' extern
| |-ParmVarDecl 0x5580616c6fc0 <col:116, col:122> col:122 __x 'float'
| |-NoThrowAttr 0x5580616c7130 <col:143>
| `-ConstAttr 0x5580616c7188 <col:174>
|-FunctionDecl 0x5580616c7260 <line:509:14> col:14 implicit truncf 'float (float)' extern
| |-ParmVarDecl 0x5580616c7300 <<invalid sloc>> <invalid sloc> 'float'
| |-NoThrowAttr 0x5580616c7370 <col:14> Implicit
| `-ConstAttr 0x5580616c73c8 <col:14> Implicit
|-FunctionDecl 0x5580616c73f0 prev 0x5580616c7260 <col:1, col:90> col:14 truncf 'float (float)' extern
| |-ParmVarDecl 0x5580616c71c8 <col:22, col:28> col:28 __x 'float'
| |-NoThrowAttr 0x5580616c7498 <col:49>
| `-ConstAttr 0x5580616c74f0 <col:80>
|-FunctionDecl 0x5580616c75c8 <col:93, col:184> col:106 __truncf 'float (float)' extern
| |-ParmVarDecl 0x5580616c7530 <col:116, col:122> col:122 __x 'float'
| |-NoThrowAttr 0x5580616c7670 <col:143>
| `-ConstAttr 0x5580616c76c8 <col:174>
|-FunctionDecl 0x5580616c78f8 <line:514:14> col:14 implicit remquof 'float (float, float, int *)' extern
| |-ParmVarDecl 0x5580616c7998 <<invalid sloc>> <invalid sloc> 'float'
| |-ParmVarDecl 0x5580616c7a00 <<invalid sloc>> <invalid sloc> 'float'
| |-ParmVarDecl 0x5580616c7a68 <<invalid sloc>> <invalid sloc> 'int *'
| `-NoThrowAttr 0x5580616c7ae8 <col:14> Implicit
|-FunctionDecl 0x5580616c7b40 prev 0x5580616c78f8 <col:1, col:86> col:14 remquof 'float (float, float, int *)' extern
| |-ParmVarDecl 0x5580616c7708 <col:23, col:29> col:29 __x 'float'
| |-ParmVarDecl 0x5580616c7788 <col:34, col:40> col:40 __y 'float'
| |-ParmVarDecl 0x5580616c7808 <col:45, col:50> col:50 __quo 'int *'
| `-NoThrowAttr 0x5580616c7bf8 <col:73>
|-FunctionDecl 0x5580616c7e10 <col:89, col:176> col:102 __remquof 'float (float, float, int *)' extern
| |-ParmVarDecl 0x5580616c7c68 <col:113, col:119> col:119 __x 'float'
| |-ParmVarDecl 0x5580616c7ce8 <col:124, col:130> col:130 __y 'float'
| |-ParmVarDecl 0x5580616c7d68 <col:135, col:140> col:140 __quo 'int *'
| `-NoThrowAttr 0x5580616c7ec8 <col:163>
|-FunctionDecl 0x5580616c8008 <line:521:17> col:17 implicit lrintf 'long (float)' extern
| |-ParmVarDecl 0x5580616c80a8 <<invalid sloc>> <invalid sloc> 'float'
| `-NoThrowAttr 0x5580616c9150 <col:17> Implicit
|-FunctionDecl 0x5580616c91a8 prev 0x5580616c8008 <col:1, col:65> col:17 lrintf 'long (float)' extern
| |-ParmVarDecl 0x5580616c7f38 <col:25, col:31> col:31 __x 'float'
| `-NoThrowAttr 0x5580616c9250 <col:52>
|-FunctionDecl 0x5580616c9358 <col:68, col:134> col:84 __lrintf 'long (float)' extern
| |-ParmVarDecl 0x5580616c92c0 <col:94, col:100> col:100 __x 'float'
| `-NoThrowAttr 0x5580616c9400 <col:121>
|-FunctionDecl 0x5580616c9548 <line:523:22> col:22 implicit llrintf 'long long (float)' extern
| |-ParmVarDecl 0x5580616c95e8 <<invalid sloc>> <invalid sloc> 'float'
| `-NoThrowAttr 0x5580616c9658 <col:22> Implicit
|-FunctionDecl 0x5580616c96b0 prev 0x5580616c9548 <col:1, col:71> col:22 llrintf 'long long (float)' extern
| |-ParmVarDecl 0x5580616c9470 <col:31, col:37> col:37 __x 'float'
| `-NoThrowAttr 0x5580616c9758 <col:58>
|-FunctionDecl 0x5580616c9860 <col:74, col:146> col:95 __llrintf 'long long (float)' extern
| |-ParmVarDecl 0x5580616c97c8 <col:106, col:112> col:112 __x 'float'
| `-NoThrowAttr 0x5580616c9908 <col:133>
|-FunctionDecl 0x5580616c9a10 <line:527:17> col:17 implicit lroundf 'long (float)' extern
| |-ParmVarDecl 0x5580616c9ab0 <<invalid sloc>> <invalid sloc> 'float'
| `-NoThrowAttr 0x5580616c9b20 <col:17> Implicit
|-FunctionDecl 0x5580616c9b78 prev 0x5580616c9a10 <col:1, col:66> col:17 lroundf 'long (float)' extern
| |-ParmVarDecl 0x5580616c9978 <col:26, col:32> col:32 __x 'float'
| `-NoThrowAttr 0x5580616c9c20 <col:53>
|-FunctionDecl 0x5580616c9d28 <col:69, col:136> col:85 __lroundf 'long (float)' extern
| |-ParmVarDecl 0x5580616c9c90 <col:96, col:102> col:102 __x 'float'
| `-NoThrowAttr 0x5580616c9dd0 <col:123>
|-FunctionDecl 0x5580616c9ed8 <line:529:22> col:22 implicit llroundf 'long long (float)' extern
| |-ParmVarDecl 0x5580616c9f78 <<invalid sloc>> <invalid sloc> 'float'
| `-NoThrowAttr 0x5580616c9fe8 <col:22> Implicit
|-FunctionDecl 0x5580616ca040 prev 0x5580616c9ed8 <col:1, col:72> col:22 llroundf 'long long (float)' extern
| |-ParmVarDecl 0x5580616c9e40 <col:32, col:38> col:38 __x 'float'
| `-NoThrowAttr 0x5580616ca0e8 <col:59>
|-FunctionDecl 0x5580616b0080 <col:75, col:148> col:96 __llroundf 'long long (float)' extern
| |-ParmVarDecl 0x5580616affe8 <col:108, col:114> col:114 __x 'float'
| `-NoThrowAttr 0x5580616b0128 <col:135>
|-FunctionDecl 0x5580616b02b8 <line:533:14> col:14 implicit fdimf 'float (float, float)' extern
| |-ParmVarDecl 0x5580616b0358 <<invalid sloc>> <invalid sloc> 'float'
| |-ParmVarDecl 0x5580616b03c0 <<invalid sloc>> <invalid sloc> 'float'
| `-NoThrowAttr 0x5580616b0438 <col:14> Implicit
|-FunctionDecl 0x5580616b0490 prev 0x5580616b02b8 <col:1, col:72> col:14 fdimf 'float (float, float)' extern
| |-ParmVarDecl 0x5580616b0198 <col:21, col:27> col:27 __x 'float'
| |-ParmVarDecl 0x5580616b0218 <col:32, col:38> col:38 __y 'float'
| `-NoThrowAttr 0x5580616b0540 <col:59>
|-FunctionDecl 0x5580616b06d0 <col:75, col:148> col:88 __fdimf 'float (float, float)' extern
| |-ParmVarDecl 0x5580616b05b0 <col:97, col:103> col:103 __x 'float'
| |-ParmVarDecl 0x5580616b0630 <col:108, col:114> col:114 __y 'float'
| `-NoThrowAttr 0x5580616b0780 <col:135>
|-FunctionDecl 0x5580616b0910 <line:536:14> col:14 implicit fmaxf 'float (float, float)' extern
| |-ParmVarDecl 0x5580616b09b0 <<invalid sloc>> <invalid sloc> 'float'
| |-ParmVarDecl 0x5580616b0a18 <<invalid sloc>> <invalid sloc> 'float'
| |-NoThrowAttr 0x5580616b0a90 <col:14> Implicit
| `-ConstAttr 0x5580616b0ae8 <col:14> Implicit
|-FunctionDecl 0x5580616b0b10 prev 0x5580616b0910 <col:1, col:100> col:14 fmaxf 'float (float, float)' extern
| |-ParmVarDecl 0x5580616b07f0 <col:21, col:27> col:27 __x 'float'
| |-ParmVarDecl 0x5580616b0870 <col:32, col:38> col:38 __y 'float'
| |-NoThrowAttr 0x5580616b0bc0 <col:59>
| `-ConstAttr 0x5580616b0c18 <col:90>
|-FunctionDecl 0x5580616b0d78 <col:103, col:204> col:116 __fmaxf 'float (float, float)' extern
| |-ParmVarDecl 0x5580616b0c58 <col:125, col:131> col:131 __x 'float'
| |-ParmVarDecl 0x5580616b0cd8 <col:136, col:142> col:142 __y 'float'
| |-NoThrowAttr 0x5580616b0e28 <col:163>
| `-ConstAttr 0x5580616b0e80 <col:194>
|-FunctionDecl 0x5580616ce1a8 <line:539:14> col:14 implicit fminf 'float (float, float)' extern
| |-ParmVarDecl 0x5580616ce248 <<invalid sloc>> <invalid sloc> 'float'
| |-ParmVarDecl 0x5580616ce2b0 <<invalid sloc>> <invalid sloc> 'float'
| |-NoThrowAttr 0x5580616ce328 <col:14> Implicit
| `-ConstAttr 0x5580616ce380 <col:14> Implicit
|-FunctionDecl 0x5580616ce3a8 prev 0x5580616ce1a8 <col:1, col:100> col:14 fminf 'float (float, float)' extern
| |-ParmVarDecl 0x5580616b0ec0 <col:21, col:27> col:27 __x 'float'
| |-ParmVarDecl 0x5580616b0f40 <col:32, col:38> col:38 __y 'float'
| |-NoThrowAttr 0x5580616ce458 <col:59>
| `-ConstAttr 0x5580616ce4b0 <col:90>
|-FunctionDecl 0x5580616ce610 <col:103, col:204> col:116 __fminf 'float (float, float)' extern
| |-ParmVarDecl 0x5580616ce4f0 <col:125, col:131> col:131 __x 'float'
| |-ParmVarDecl 0x5580616ce570 <col:136, col:142> col:142 __y 'float'
| |-NoThrowAttr 0x5580616ce6c0 <col:163>
| `-ConstAttr 0x5580616ce718 <col:194>
|-FunctionDecl 0x5580616ce7f0 <line:543:1, line:544:32> line:543:12 __fpclassifyf 'int (float)' extern
| |-ParmVarDecl 0x5580616ce758 <col:27, col:33> col:33 __value 'float'
| |-NoThrowAttr 0x5580616ce898 <col:58>
| `-ConstAttr 0x5580616ce8f0 <line:544:22>
|-FunctionDecl 0x5580616ce9c8 <line:547:1, line:548:32> line:547:12 __signbitf 'int (float)' extern
| |-ParmVarDecl 0x5580616ce930 <col:24, col:30> col:30 __value 'float'
| |-NoThrowAttr 0x5580616cea70 <col:55>
| `-ConstAttr 0x5580616ceac8 <line:548:22>
|-FunctionDecl 0x5580616cecf8 <line:552:14> col:14 implicit fmaf 'float (float, float, float)' extern
| |-ParmVarDecl 0x5580616ced98 <<invalid sloc>> <invalid sloc> 'float'
| |-ParmVarDecl 0x5580616cee00 <<invalid sloc>> <invalid sloc> 'float'
| |-ParmVarDecl 0x5580616cee68 <<invalid sloc>> <invalid sloc> 'float'
| |-ConstAttr 0x5580616ceee8 <col:14> Implicit
| `-NoThrowAttr 0x5580616cef40 <col:14> Implicit
|-FunctionDecl 0x5580616cef68 prev 0x5580616cecf8 <col:1, col:82> col:14 fmaf 'float (float, float, float)' extern
| |-ParmVarDecl 0x5580616ceb08 <col:20, col:26> col:26 __x 'float'
| |-ParmVarDecl 0x5580616ceb88 <col:31, col:37> col:37 __y 'float'
| |-ParmVarDecl 0x5580616cec08 <col:42, col:48> col:48 __z 'float'
| |-ConstAttr 0x5580616cf078 <col:14> Inherited Implicit
| `-NoThrowAttr 0x5580616cf020 <col:69>
|-FunctionDecl 0x5580616cf2a8 <col:85, col:168> col:98 __fmaf 'float (float, float, float)' extern
| |-ParmVarDecl 0x5580616cf0b8 <col:106, col:112> col:112 __x 'float'
| |-ParmVarDecl 0x5580616cf180 <col:117, col:123> col:123 __y 'float'
| |-ParmVarDecl 0x5580616cf200 <col:128, col:134> col:134 __z 'float'
| `-NoThrowAttr 0x5580616cf360 <col:155>
|-FunctionDecl 0x5580616cf4f0 <line:553:1, col:73> col:14 scalbf 'float (float, float)' extern
| |-ParmVarDecl 0x5580616cf3d0 <col:22, col:28> col:28 __x 'float'
| |-ParmVarDecl 0x5580616cf450 <col:33, col:39> col:39 __n 'float'
| `-NoThrowAttr 0x5580616cf5a0 <col:60>
|-FunctionDecl 0x5580616cf730 <col:76, col:150> col:89 __scalbf 'float (float, float)' extern
| |-ParmVarDecl 0x5580616cf610 <col:99, col:105> col:105 __x 'float'
| |-ParmVarDecl 0x5580616cf690 <col:110, col:116> col:116 __n 'float'
| `-NoThrowAttr 0x5580616cf7e0 <col:137>
|-FunctionDecl 0x5580616cf928 <line:554:20> col:20 implicit acosl 'long double (long double)' extern
| |-ParmVarDecl 0x5580616cf9c8 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x5580616cfa38 <col:20> Implicit
|-FunctionDecl 0x5580616cfa90 prev 0x5580616cf928 <col:1, col:73> col:20 acosl 'long double (long double)' extern
| |-ParmVarDecl 0x5580616cf850 <col:27, col:39> col:39 __x 'long double'
| `-NoThrowAttr 0x5580616cfb38 <col:60>
|-FunctionDecl 0x5580616cfc40 <col:76, col:150> col:95 __acosl 'long double (long double)' extern
| |-ParmVarDecl 0x5580616cfba8 <col:104, col:116> col:116 __x 'long double'
| `-NoThrowAttr 0x5580616cfce8 <col:137>
|-FunctionDecl 0x5580616cfdf0 <line:556:20> col:20 implicit asinl 'long double (long double)' extern
| |-ParmVarDecl 0x5580616cfe90 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x5580616cff00 <col:20> Implicit
|-FunctionDecl 0x5580616cff58 prev 0x5580616cfdf0 <col:1, col:73> col:20 asinl 'long double (long double)' extern
| |-ParmVarDecl 0x5580616cfd58 <col:27, col:39> col:39 __x 'long double'
| `-NoThrowAttr 0x5580616d0000 <col:60>
|-FunctionDecl 0x5580616d0190 <col:76, col:150> col:95 __asinl 'long double (long double)' extern
| |-ParmVarDecl 0x5580616d0070 <col:104, col:116> col:116 __x 'long double'
| `-NoThrowAttr 0x5580616d0238 <col:137>
|-FunctionDecl 0x5580616d0340 <line:558:20> col:20 implicit atanl 'long double (long double)' extern
| |-ParmVarDecl 0x5580616d03e0 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x5580616d0450 <col:20> Implicit
|-FunctionDecl 0x5580616d04a8 prev 0x5580616d0340 <col:1, col:73> col:20 atanl 'long double (long double)' extern
| |-ParmVarDecl 0x5580616d02a8 <col:27, col:39> col:39 __x 'long double'
| `-NoThrowAttr 0x5580616d0550 <col:60>
|-FunctionDecl 0x5580616d0658 <col:76, col:150> col:95 __atanl 'long double (long double)' extern
| |-ParmVarDecl 0x5580616d05c0 <col:104, col:116> col:116 __x 'long double'
| `-NoThrowAttr 0x5580616d0700 <col:137>
|-FunctionDecl 0x5580616d08d8 <line:560:20> col:20 implicit atan2l 'long double (long double, long double)' extern
| |-ParmVarDecl 0x5580616d0978 <<invalid sloc>> <invalid sloc> 'long double'
| |-ParmVarDecl 0x5580616d09e0 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x5580616d0a58 <col:20> Implicit
|-FunctionDecl 0x5580616d0ab0 prev 0x5580616d08d8 <col:1, col:91> col:20 atan2l 'long double (long double, long double)' extern
| |-ParmVarDecl 0x5580616d0770 <col:28, col:40> col:40 __y 'long double'
| |-ParmVarDecl 0x5580616d07f0 <col:45, col:57> col:57 __x 'long double'
| `-NoThrowAttr 0x5580616d0b60 <col:78>
|-FunctionDecl 0x5580616d0cf0 <col:94, col:186> col:113 __atan2l 'long double (long double, long double)' extern
| |-ParmVarDecl 0x5580616d0bd0 <col:123, col:135> col:135 __y 'long double'
| |-ParmVarDecl 0x5580616d0c50 <col:140, col:152> col:152 __x 'long double'
| `-NoThrowAttr 0x5580616d0da0 <col:173>
|-FunctionDecl 0x5580616d0ea8 <line:563:21> col:21 implicit cosl 'long double (long double)' extern
| |-ParmVarDecl 0x5580616d0f48 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x5580616d0fb8 <col:21> Implicit
|-FunctionDecl 0x5580616d1010 prev 0x5580616d0ea8 <col:2, col:73> col:21 cosl 'long double (long double)' extern
| |-ParmVarDecl 0x5580616d0e10 <col:27, col:39> col:39 __x 'long double'
| `-NoThrowAttr 0x5580616d10b8 <col:60>
|-FunctionDecl 0x5580616d11d0 <col:76, col:149> col:95 __cosl 'long double (long double)' extern
| |-ParmVarDecl 0x5580616d1128 <col:103, col:115> col:115 __x 'long double'
| `-NoThrowAttr 0x5580616d1278 <col:136>
|-FunctionDecl 0x5580616d1380 <line:565:21> col:21 implicit sinl 'long double (long double)' extern
| |-ParmVarDecl 0x5580616d1420 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x5580616d1490 <col:21> Implicit
|-FunctionDecl 0x5580616d14e8 prev 0x5580616d1380 <col:2, col:73> col:21 sinl 'long double (long double)' extern
| |-ParmVarDecl 0x5580616d12e8 <col:27, col:39> col:39 __x 'long double'
| `-NoThrowAttr 0x5580616d1590 <col:60>
|-FunctionDecl 0x5580616d1698 <col:76, col:149> col:95 __sinl 'long double (long double)' extern
| |-ParmVarDecl 0x5580616d1600 <col:103, col:115> col:115 __x 'long double'
| `-NoThrowAttr 0x5580616d1740 <col:136>
|-FunctionDecl 0x5580616d1848 <line:567:20> col:20 implicit tanl 'long double (long double)' extern
| |-ParmVarDecl 0x5580616d18e8 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x5580616d1958 <col:20> Implicit
|-FunctionDecl 0x5580616d19b0 prev 0x5580616d1848 <col:1, col:72> col:20 tanl 'long double (long double)' extern
| |-ParmVarDecl 0x5580616d17b0 <col:26, col:38> col:38 __x 'long double'
| `-NoThrowAttr 0x5580616d1a58 <col:59>
|-FunctionDecl 0x5580616d1b60 <col:75, col:148> col:94 __tanl 'long double (long double)' extern
| |-ParmVarDecl 0x5580616d1ac8 <col:102, col:114> col:114 __x 'long double'
| `-NoThrowAttr 0x5580616d1c08 <col:135>
|-FunctionDecl 0x5580616d1d10 <line:572:20> col:20 implicit coshl 'long double (long double)' extern
| |-ParmVarDecl 0x5580616d1db0 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x5580616d1e20 <col:20> Implicit
|-FunctionDecl 0x5580616d1e78 prev 0x5580616d1d10 <col:1, col:73> col:20 coshl 'long double (long double)' extern
| |-ParmVarDecl 0x5580616d1c78 <col:27, col:39> col:39 __x 'long double'
| `-NoThrowAttr 0x5580616d1f20 <col:60>
|-FunctionDecl 0x5580616d2028 <col:76, col:150> col:95 __coshl 'long double (long double)' extern
| |-ParmVarDecl 0x5580616d1f90 <col:104, col:116> col:116 __x 'long double'
| `-NoThrowAttr 0x5580616d20d0 <col:137>
|-FunctionDecl 0x5580616d2248 <line:574:20> col:20 implicit sinhl 'long double (long double)' extern
| |-ParmVarDecl 0x5580616d22e8 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x5580616d2358 <col:20> Implicit
|-FunctionDecl 0x5580616d23b0 prev 0x5580616d2248 <col:1, col:73> col:20 sinhl 'long double (long double)' extern
| |-ParmVarDecl 0x5580616d21b0 <col:27, col:39> col:39 __x 'long double'
| `-NoThrowAttr 0x5580616d2458 <col:60>
|-FunctionDecl 0x5580616d2560 <col:76, col:150> col:95 __sinhl 'long double (long double)' extern
| |-ParmVarDecl 0x5580616d24c8 <col:104, col:116> col:116 __x 'long double'
| `-NoThrowAttr 0x5580616d2608 <col:137>
|-FunctionDecl 0x5580616d2710 <line:576:20> col:20 implicit tanhl 'long double (long double)' extern
| |-ParmVarDecl 0x5580616d27b0 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x5580616d2820 <col:20> Implicit
|-FunctionDecl 0x5580616d2878 prev 0x5580616d2710 <col:1, col:73> col:20 tanhl 'long double (long double)' extern
| |-ParmVarDecl 0x5580616d2678 <col:27, col:39> col:39 __x 'long double'
| `-NoThrowAttr 0x5580616d2920 <col:60>
|-FunctionDecl 0x5580616d2a28 <col:76, col:150> col:95 __tanhl 'long double (long double)' extern
| |-ParmVarDecl 0x5580616d2990 <col:104, col:116> col:116 __x 'long double'
| `-NoThrowAttr 0x5580616d2ad0 <col:137>
|-FunctionDecl 0x5580616d2bd8 <line:577:20> col:20 implicit acoshl 'long double (long double)' extern
| |-ParmVarDecl 0x5580616d2c78 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x5580616d2ce8 <col:20> Implicit
|-FunctionDecl 0x5580616d2d40 prev 0x5580616d2bd8 <col:1, col:74> col:20 acoshl 'long double (long double)' extern
| |-ParmVarDecl 0x5580616d2b40 <col:28, col:40> col:40 __x 'long double'
| `-NoThrowAttr 0x5580616d2de8 <col:61>
|-FunctionDecl 0x5580616d2ef0 <col:77, col:152> col:96 __acoshl 'long double (long double)' extern
| |-ParmVarDecl 0x5580616d2e58 <col:106, col:118> col:118 __x 'long double'
| `-NoThrowAttr 0x5580616d2f98 <col:139>
|-FunctionDecl 0x5580616d30a0 <line:579:20> col:20 implicit asinhl 'long double (long double)' extern
| |-ParmVarDecl 0x5580616d3140 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x5580616d31c0 <col:20> Implicit
|-FunctionDecl 0x5580616d3218 prev 0x5580616d30a0 <col:1, col:74> col:20 asinhl 'long double (long double)' extern
| |-ParmVarDecl 0x5580616d3008 <col:28, col:40> col:40 __x 'long double'
| `-NoThrowAttr 0x5580616d32c0 <col:61>
|-FunctionDecl 0x5580616d33c8 <col:77, col:152> col:96 __asinhl 'long double (long double)' extern
| |-ParmVarDecl 0x5580616d3330 <col:106, col:118> col:118 __x 'long double'
| `-NoThrowAttr 0x5580616d3470 <col:139>
|-FunctionDecl 0x5580616d3578 <line:581:20> col:20 implicit atanhl 'long double (long double)' extern
| |-ParmVarDecl 0x5580616d3618 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x5580616d3688 <col:20> Implicit
|-FunctionDecl 0x5580616d36e0 prev 0x5580616d3578 <col:1, col:74> col:20 atanhl 'long double (long double)' extern
| |-ParmVarDecl 0x5580616d34e0 <col:28, col:40> col:40 __x 'long double'
| `-NoThrowAttr 0x5580616d3788 <col:61>
|-FunctionDecl 0x5580616d3890 <col:77, col:152> col:96 __atanhl 'long double (long double)' extern
| |-ParmVarDecl 0x5580616d37f8 <col:106, col:118> col:118 __x 'long double'
| `-NoThrowAttr 0x5580616d3938 <col:139>
|-FunctionDecl 0x5580616d3a40 <line:589:21> col:21 implicit expl 'long double (long double)' extern
| |-ParmVarDecl 0x5580616d3ae0 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x5580616d3b50 <col:21> Implicit
|-FunctionDecl 0x5580616d3ba8 prev 0x5580616d3a40 <col:2, col:73> col:21 expl 'long double (long double)' extern
| |-ParmVarDecl 0x5580616d39a8 <col:27, col:39> col:39 __x 'long double'
| `-NoThrowAttr 0x5580616d3c50 <col:60>
|-FunctionDecl 0x5580616d3d58 <col:76, col:149> col:95 __expl 'long double (long double)' extern
| |-ParmVarDecl 0x5580616d3cc0 <col:103, col:115> col:115 __x 'long double'
| `-NoThrowAttr 0x5580616d3e00 <col:136>
|-FunctionDecl 0x5580616d3fd8 <line:592:20> col:20 implicit frexpl 'long double (long double, int *)' extern
| |-ParmVarDecl 0x5580616d4078 <<invalid sloc>> <invalid sloc> 'long double'
| |-ParmVarDecl 0x5580616d40e0 <<invalid sloc>> <invalid sloc> 'int *'
| `-NoThrowAttr 0x5580616d4158 <col:20> Implicit
|-FunctionDecl 0x5580616d41d0 prev 0x5580616d3fd8 <col:1, col:91> col:20 frexpl 'long double (long double, int *)' extern
| |-ParmVarDecl 0x5580616d3e70 <col:28, col:40> col:40 __x 'long double'
| |-ParmVarDecl 0x5580616d3ef0 <col:45, col:50> col:50 __exponent 'int *'
| `-NoThrowAttr 0x5580616d4280 <col:78>
|-FunctionDecl 0x5580616d4410 <col:94, col:186> col:113 __frexpl 'long double (long double, int *)' extern
| |-ParmVarDecl 0x5580616d42f0 <col:123, col:135> col:135 __x 'long double'
| |-ParmVarDecl 0x5580616d4370 <col:140, col:145> col:145 __exponent 'int *'
| `-NoThrowAttr 0x5580616d44c0 <col:173>
|-FunctionDecl 0x5580616d4698 <line:595:20> col:20 implicit ldexpl 'long double (long double, int)' extern
| |-ParmVarDecl 0x5580616d4738 <<invalid sloc>> <invalid sloc> 'long double'
| |-ParmVarDecl 0x5580616d47a0 <<invalid sloc>> <invalid sloc> 'int'
| `-NoThrowAttr 0x5580616d4818 <col:20> Implicit
|-FunctionDecl 0x5580616d4870 prev 0x5580616d4698 <col:1, col:90> col:20 ldexpl 'long double (long double, int)' extern
| |-ParmVarDecl 0x5580616d4530 <col:28, col:40> col:40 __x 'long double'
| |-ParmVarDecl 0x5580616d45b0 <col:45, col:49> col:49 __exponent 'int'
| `-NoThrowAttr 0x5580616d4920 <col:77>
|-FunctionDecl 0x5580616d4ab0 <col:93, col:184> col:112 __ldexpl 'long double (long double, int)' extern
| |-ParmVarDecl 0x5580616d4990 <col:122, col:134> col:134 __x 'long double'
| |-ParmVarDecl 0x5580616d4a10 <col:139, col:143> col:143 __exponent 'int'
| `-NoThrowAttr 0x5580616d4b60 <col:171>
|-FunctionDecl 0x5580616d4c68 <line:598:21> col:21 implicit logl 'long double (long double)' extern
| |-ParmVarDecl 0x5580616d4d08 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x5580616d4d78 <col:21> Implicit
|-FunctionDecl 0x5580616d4dd0 prev 0x5580616d4c68 <col:2, col:73> col:21 logl 'long double (long double)' extern
| |-ParmVarDecl 0x5580616d4bd0 <col:27, col:39> col:39 __x 'long double'
| `-NoThrowAttr 0x5580616d4e78 <col:60>
|-FunctionDecl 0x5580616d4f80 <col:76, col:149> col:95 __logl 'long double (long double)' extern
| |-ParmVarDecl 0x5580616d4ee8 <col:103, col:115> col:115 __x 'long double'
| `-NoThrowAttr 0x5580616d5028 <col:136>
|-FunctionDecl 0x5580616d5130 <line:601:20> col:20 implicit log10l 'long double (long double)' extern
| |-ParmVarDecl 0x5580616d51e0 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x5580616d5250 <col:20> Implicit
|-FunctionDecl 0x5580616d52a8 prev 0x5580616d5130 <col:1, col:74> col:20 log10l 'long double (long double)' extern
| |-ParmVarDecl 0x5580616d5098 <col:28, col:40> col:40 __x 'long double'
| `-NoThrowAttr 0x5580616d5350 <col:61>
|-FunctionDecl 0x5580616d5458 <col:77, col:152> col:96 __log10l 'long double (long double)' extern
| |-ParmVarDecl 0x5580616d53c0 <col:106, col:118> col:118 __x 'long double'
| `-NoThrowAttr 0x5580616d5500 <col:139>
|-FunctionDecl 0x5580616d5708 <line:604:20> col:20 implicit modfl 'long double (long double, long double *)' extern
| |-ParmVarDecl 0x5580616d57a8 <<invalid sloc>> <invalid sloc> 'long double'
| |-ParmVarDecl 0x5580616d5810 <<invalid sloc>> <invalid sloc> 'long double *'
| `-NoThrowAttr 0x5580616d5888 <col:20> Implicit
|-FunctionDecl 0x5580616d58e0 prev 0x5580616d5708 <col:1, col:94> col:20 modfl 'long double (long double, long double *)' extern
| |-ParmVarDecl 0x5580616d5570 <col:27, col:39> col:39 __x 'long double'
| |-ParmVarDecl 0x5580616d5628 <col:44, col:57> col:57 __iptr 'long double *'
| `-NoThrowAttr 0x5580616d5990 <col:81>
|-FunctionDecl 0x5580616d5b40 <col:97, col:226> col:116 __modfl 'long double (long double, long double *)' extern
| |-ParmVarDecl 0x5580616d5a00 <col:125, col:137> col:137 __x 'long double'
| |-ParmVarDecl 0x5580616d5a80 <col:142, col:155> col:155 __iptr 'long double *'
| |-NoThrowAttr 0x5580616d5bf0 <col:179>
| `-NonNullAttr 0x5580616d5c48 <col:210, col:224> 2
|-FunctionDecl 0x5580616d5d38 <line:605:20> col:20 implicit expm1l 'long double (long double)' extern
| |-ParmVarDecl 0x5580616d5dd8 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x5580616d5e48 <col:20> Implicit
|-FunctionDecl 0x5580616d5ea0 prev 0x5580616d5d38 <col:1, col:74> col:20 expm1l 'long double (long double)' extern
| |-ParmVarDecl 0x5580616d5ca0 <col:28, col:40> col:40 __x 'long double'
| `-NoThrowAttr 0x5580616d5f48 <col:61>
|-FunctionDecl 0x5580616d6050 <col:77, col:152> col:96 __expm1l 'long double (long double)' extern
| |-ParmVarDecl 0x5580616d5fb8 <col:106, col:118> col:118 __x 'long double'
| `-NoThrowAttr 0x5580616d60f8 <col:139>
|-FunctionDecl 0x5580616d6220 <line:608:20> col:20 implicit log1pl 'long double (long double)' extern
| |-ParmVarDecl 0x5580616d62c0 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x5580616d6330 <col:20> Implicit
|-FunctionDecl 0x5580616d6388 prev 0x5580616d6220 <col:1, col:74> col:20 log1pl 'long double (long double)' extern
| |-ParmVarDecl 0x5580616d6168 <col:28, col:40> col:40 __x 'long double'
| `-NoThrowAttr 0x5580616d6430 <col:61>
|-FunctionDecl 0x5580616d6538 <col:77, col:152> col:96 __log1pl 'long double (long double)' extern
| |-ParmVarDecl 0x5580616d64a0 <col:106, col:118> col:118 __x 'long double'
| `-NoThrowAttr 0x5580616d65e0 <col:139>
|-FunctionDecl 0x5580616d66e8 <line:611:20> col:20 implicit logbl 'long double (long double)' extern
| |-ParmVarDecl 0x5580616d6788 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x5580616d67f8 <col:20> Implicit
|-FunctionDecl 0x5580616d6850 prev 0x5580616d66e8 <col:1, col:73> col:20 logbl 'long double (long double)' extern
| |-ParmVarDecl 0x5580616d6650 <col:27, col:39> col:39 __x 'long double'
| `-NoThrowAttr 0x5580616d68f8 <col:60>
|-FunctionDecl 0x5580616d6a00 <col:76, col:150> col:95 __logbl 'long double (long double)' extern
| |-ParmVarDecl 0x5580616d6968 <col:104, col:116> col:116 __x 'long double'
| `-NoThrowAttr 0x5580616d6aa8 <col:137>
|-FunctionDecl 0x5580616d6bb0 <line:618:20> col:20 implicit exp2l 'long double (long double)' extern
| |-ParmVarDecl 0x5580616d6c50 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x5580616d6cc0 <col:20> Implicit
|-FunctionDecl 0x5580616d6d18 prev 0x5580616d6bb0 <col:1, col:73> col:20 exp2l 'long double (long double)' extern
| |-ParmVarDecl 0x5580616d6b18 <col:27, col:39> col:39 __x 'long double'
| `-NoThrowAttr 0x5580616d6dc0 <col:60>
|-FunctionDecl 0x5580616d6ec8 <col:76, col:150> col:95 __exp2l 'long double (long double)' extern
| |-ParmVarDecl 0x5580616d6e30 <col:104, col:116> col:116 __x 'long double'
| `-NoThrowAttr 0x5580616d6f70 <col:137>
|-FunctionDecl 0x5580616d7078 <line:621:20> col:20 implicit log2l 'long double (long double)' extern
| |-ParmVarDecl 0x5580616d7118 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x5580616d7188 <col:20> Implicit
|-FunctionDecl 0x5580616d7200 prev 0x5580616d7078 <col:1, col:73> col:20 log2l 'long double (long double)' extern
| |-ParmVarDecl 0x5580616d6fe0 <col:27, col:39> col:39 __x 'long double'
| `-NoThrowAttr 0x5580616d72a8 <col:60>
|-FunctionDecl 0x5580616d73b0 <col:76, col:150> col:95 __log2l 'long double (long double)' extern
| |-ParmVarDecl 0x5580616d7318 <col:104, col:116> col:116 __x 'long double'
| `-NoThrowAttr 0x5580616d7458 <col:137>
|-FunctionDecl 0x5580616d75e8 <line:622:21> col:21 implicit powl 'long double (long double, long double)' extern
| |-ParmVarDecl 0x5580616d7688 <<invalid sloc>> <invalid sloc> 'long double'
| |-ParmVarDecl 0x5580616d76f0 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x5580616d7768 <col:21> Implicit
|-FunctionDecl 0x5580616d77c0 prev 0x5580616d75e8 <col:2, col:90> col:21 powl 'long double (long double, long double)' extern
| |-ParmVarDecl 0x5580616d74c8 <col:27, col:39> col:39 __x 'long double'
| |-ParmVarDecl 0x5580616d7548 <col:44, col:56> col:56 __y 'long double'
| `-NoThrowAttr 0x5580616d7870 <col:77>
|-FunctionDecl 0x5580616d7a00 <col:93, col:183> col:112 __powl 'long double (long double, long double)' extern
| |-ParmVarDecl 0x5580616d78e0 <col:120, col:132> col:132 __x 'long double'
| |-ParmVarDecl 0x5580616d7960 <col:137, col:149> col:149 __y 'long double'
| `-NoThrowAttr 0x5580616d7ab0 <col:170>
|-FunctionDecl 0x5580616d7bb8 <line:625:20> col:20 implicit sqrtl 'long double (long double)' extern
| |-ParmVarDecl 0x5580616d7c58 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x5580616d7cc8 <col:20> Implicit
|-FunctionDecl 0x5580616d7d20 prev 0x5580616d7bb8 <col:1, col:73> col:20 sqrtl 'long double (long double)' extern
| |-ParmVarDecl 0x5580616d7b20 <col:27, col:39> col:39 __x 'long double'
| `-NoThrowAttr 0x5580616d7dc8 <col:60>
|-FunctionDecl 0x5580616d7ed0 <col:76, col:150> col:95 __sqrtl 'long double (long double)' extern
| |-ParmVarDecl 0x5580616d7e38 <col:104, col:116> col:116 __x 'long double'
| `-NoThrowAttr 0x5580616d7f78 <col:137>
|-FunctionDecl 0x5580616d8108 <line:631:20> col:20 implicit hypotl 'long double (long double, long double)' extern
| |-ParmVarDecl 0x5580616d8210 <<invalid sloc>> <invalid sloc> 'long double'
| |-ParmVarDecl 0x5580616d8278 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x5580616d82f0 <col:20> Implicit
|-FunctionDecl 0x5580616d8348 prev 0x5580616d8108 <col:1, col:91> col:20 hypotl 'long double (long double, long double)' extern
| |-ParmVarDecl 0x5580616d7fe8 <col:28, col:40> col:40 __x 'long double'
| |-ParmVarDecl 0x5580616d8068 <col:45, col:57> col:57 __y 'long double'
| `-NoThrowAttr 0x5580616d83f8 <col:78>
|-FunctionDecl 0x5580616d8588 <col:94, col:186> col:113 __hypotl 'long double (long double, long double)' extern
| |-ParmVarDecl 0x5580616d8468 <col:123, col:135> col:135 __x 'long double'
| |-ParmVarDecl 0x5580616d84e8 <col:140, col:152> col:152 __y 'long double'
| `-NoThrowAttr 0x5580616d8638 <col:173>
|-FunctionDecl 0x5580616d8740 <line:638:20> col:20 implicit cbrtl 'long double (long double)' extern
| |-ParmVarDecl 0x5580616d87e0 <<invalid sloc>> <invalid sloc> 'long double'
| |-NoThrowAttr 0x5580616d8850 <col:20> Implicit
| `-ConstAttr 0x5580616d88a8 <col:20> Implicit
|-FunctionDecl 0x5580616d88d0 prev 0x5580616d8740 <col:1, col:73> col:20 cbrtl 'long double (long double)' extern
| |-ParmVarDecl 0x5580616d86a8 <col:27, col:39> col:39 __x 'long double'
| |-ConstAttr 0x5580616d89d0 <col:20> Inherited Implicit
| `-NoThrowAttr 0x5580616d8978 <col:60>
|-FunctionDecl 0x5580616d8aa8 <col:76, col:150> col:95 __cbrtl 'long double (long double)' extern
| |-ParmVarDecl 0x5580616d8a10 <col:104, col:116> col:116 __x 'long double'
| `-NoThrowAttr 0x5580616d8b50 <col:137>
|-FunctionDecl 0x5580616d8c58 <line:639:20> col:20 implicit ceill 'long double (long double)' extern
| |-ParmVarDecl 0x5580616d8cf8 <<invalid sloc>> <invalid sloc> 'long double'
| |-NoThrowAttr 0x5580616d8d68 <col:20> Implicit
| `-ConstAttr 0x5580616d8dc0 <col:20> Implicit
|-FunctionDecl 0x5580616d8de8 prev 0x5580616d8c58 <col:1, col:101> col:20 ceill 'long double (long double)' extern
| |-ParmVarDecl 0x5580616d8bc0 <col:27, col:39> col:39 __x 'long double'
| |-NoThrowAttr 0x5580616d8e90 <col:60>
| `-ConstAttr 0x5580616d8ee8 <col:91>
|-FunctionDecl 0x5580616d8fc0 <col:104, col:206> col:123 __ceill 'long double (long double)' extern
| |-ParmVarDecl 0x5580616d8f28 <col:132, col:144> col:144 __x 'long double'
| |-NoThrowAttr 0x5580616d9068 <col:165>
| `-ConstAttr 0x5580616d90c0 <col:196>
|-FunctionDecl 0x5580616d9220 <line:642:20> col:20 implicit fabsl 'long double (long double)' extern
| |-ParmVarDecl 0x5580616d92c0 <<invalid sloc>> <invalid sloc> 'long double'
| |-NoThrowAttr 0x5580616d9330 <col:20> Implicit
| `-ConstAttr 0x5580616d9388 <col:20> Implicit
|-FunctionDecl 0x5580616d93b0 prev 0x5580616d9220 <col:1, col:101> col:20 fabsl 'long double (long double)' extern
| |-ParmVarDecl 0x5580616d9100 <col:27, col:39> col:39 __x 'long double'
| |-NoThrowAttr 0x5580616d9458 <col:60>
| `-ConstAttr 0x5580616d94b0 <col:91>
|-FunctionDecl 0x5580616d9588 <col:104, col:206> col:123 __fabsl 'long double (long double)' extern
| |-ParmVarDecl 0x5580616d94f0 <col:132, col:144> col:144 __x 'long double'
| |-NoThrowAttr 0x5580616d9630 <col:165>
| `-ConstAttr 0x5580616d9688 <col:196>
|-FunctionDecl 0x5580616d9760 <line:645:20> col:20 implicit floorl 'long double (long double)' extern
| |-ParmVarDecl 0x5580616d9800 <<invalid sloc>> <invalid sloc> 'long double'
| |-NoThrowAttr 0x5580616d9870 <col:20> Implicit
| `-ConstAttr 0x5580616d98c8 <col:20> Implicit
|-FunctionDecl 0x5580616d98f0 prev 0x5580616d9760 <col:1, col:102> col:20 floorl 'long double (long double)' extern
| |-ParmVarDecl 0x5580616d96c8 <col:28, col:40> col:40 __x 'long double'
| |-NoThrowAttr 0x5580616d9998 <col:61>
| `-ConstAttr 0x5580616d99f0 <col:92>
|-FunctionDecl 0x5580616d9ac8 <col:105, col:208> col:124 __floorl 'long double (long double)' extern
| |-ParmVarDecl 0x5580616d9a30 <col:134, col:146> col:146 __x 'long double'
| |-NoThrowAttr 0x5580616d9b70 <col:167>
| `-ConstAttr 0x5580616d9bc8 <col:198>
|-FunctionDecl 0x5580616d9d28 <line:648:20> col:20 implicit fmodl 'long double (long double, long double)' extern
| |-ParmVarDecl 0x5580616d9dc8 <<invalid sloc>> <invalid sloc> 'long double'
| |-ParmVarDecl 0x5580616d9e30 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x5580616d9ea8 <col:20> Implicit
|-FunctionDecl 0x5580616d9f00 prev 0x5580616d9d28 <col:1, col:90> col:20 fmodl 'long double (long double, long double)' extern
| |-ParmVarDecl 0x5580616d9c08 <col:27, col:39> col:39 __x 'long double'
| |-ParmVarDecl 0x5580616d9c88 <col:44, col:56> col:56 __y 'long double'
| `-NoThrowAttr 0x5580616d9fb0 <col:77>
|-FunctionDecl 0x5580616da140 <col:93, col:184> col:112 __fmodl 'long double (long double, long double)' extern
| |-ParmVarDecl 0x5580616da020 <col:121, col:133> col:133 __x 'long double'
| |-ParmVarDecl 0x5580616da0a0 <col:138, col:150> col:150 __y 'long double'
| `-NoThrowAttr 0x5580616da1f0 <col:171>
|-FunctionDecl 0x5580616da348 <line:653:1, col:100> col:12 used __isinfl 'int (long double)' extern
| |-ParmVarDecl 0x5580616da278 <col:22, col:34> col:34 __value 'long double'
| |-NoThrowAttr 0x5580616da3f0 <col:59>
| `-ConstAttr 0x5580616da448 <col:90>
|-FunctionDecl 0x5580616da520 <line:656:12> col:12 implicit __finitel 'int (long double)' extern
| |-ParmVarDecl 0x5580616da5c0 <<invalid sloc>> <invalid sloc> 'long double'
| |-NoThrowAttr 0x5580616da630 <col:12> Implicit
| `-ConstAttr 0x5580616da688 <col:12> Implicit
|-FunctionDecl 0x5580616da6b0 prev 0x5580616da520 <col:1, col:101> col:12 __finitel 'int (long double)' extern
| |-ParmVarDecl 0x5580616da488 <col:23, col:35> col:35 __value 'long double'
| |-NoThrowAttr 0x5580616da758 <col:60>
| `-ConstAttr 0x5580616da7b0 <col:91>
|-FunctionDecl 0x5580616da888 <line:662:1, col:98> col:12 isinfl 'int (long double)' extern
| |-ParmVarDecl 0x5580616da7f0 <col:20, col:32> col:32 __value 'long double'
| |-NoThrowAttr 0x5580616da930 <col:57>
| `-ConstAttr 0x5580616da988 <col:88>
|-FunctionDecl 0x5580616daa60 <line:665:12> col:12 implicit finitel 'int (long double)' extern
| |-ParmVarDecl 0x5580616dab00 <<invalid sloc>> <invalid sloc> 'long double'
| |-NoThrowAttr 0x5580616dab70 <col:12> Implicit
| `-ConstAttr 0x5580616dabc8 <col:12> Implicit
|-FunctionDecl 0x5580616dabf0 prev 0x5580616daa60 <col:1, col:99> col:12 finitel 'int (long double)' extern
| |-ParmVarDecl 0x5580616da9c8 <col:21, col:33> col:33 __value 'long double'
| |-NoThrowAttr 0x5580616dac98 <col:58>
| `-ConstAttr 0x5580616dacf0 <col:89>
|-FunctionDecl 0x5580616dae50 <line:668:1, col:90> col:20 dreml 'long double (long double, long double)' extern
| |-ParmVarDecl 0x5580616dad30 <col:27, col:39> col:39 __x 'long double'
| |-ParmVarDecl 0x5580616dadb0 <col:44, col:56> col:56 __y 'long double'
| `-NoThrowAttr 0x5580616daf00 <col:77>
|-FunctionDecl 0x5580616db090 <col:93, col:184> col:112 __dreml 'long double (long double, long double)' extern
| |-ParmVarDecl 0x5580616daf70 <col:121, col:133> col:133 __x 'long double'
| |-ParmVarDecl 0x5580616daff0 <col:138, col:150> col:150 __y 'long double'
| `-NoThrowAttr 0x5580616db140 <col:171>
|-FunctionDecl 0x5580616db270 <line:672:1, col:80> col:20 significandl 'long double (long double)' extern
| |-ParmVarDecl 0x5580616db1b0 <col:34, col:46> col:46 __x 'long double'
| `-NoThrowAttr 0x5580616db318 <col:67>
|-FunctionDecl 0x5580616db420 <col:83, col:164> col:102 __significandl 'long double (long double)' extern
| |-ParmVarDecl 0x5580616db388 <col:118, col:130> col:130 __x 'long double'
| `-NoThrowAttr 0x5580616db4c8 <col:151>
|-FunctionDecl 0x5580616db658 <line:678:20> col:20 implicit copysignl 'long double (long double, long double)' extern
| |-ParmVarDecl 0x5580616db6f8 <<invalid sloc>> <invalid sloc> 'long double'
| |-ParmVarDecl 0x5580616db760 <<invalid sloc>> <invalid sloc> 'long double'
| |-NoThrowAttr 0x5580616db7d8 <col:20> Implicit
| `-ConstAttr 0x5580616db830 <col:20> Implicit
|-FunctionDecl 0x5580616db858 prev 0x5580616db658 <col:1, col:122> col:20 copysignl 'long double (long double, long double)' extern
| |-ParmVarDecl 0x5580616db538 <col:31, col:43> col:43 __x 'long double'
| |-ParmVarDecl 0x5580616db5b8 <col:48, col:60> col:60 __y 'long double'
| |-NoThrowAttr 0x5580616db908 <col:81>
| `-ConstAttr 0x5580616db960 <col:112>
|-FunctionDecl 0x5580616dbac0 <col:125, col:248> col:144 __copysignl 'long double (long double, long double)' extern
| |-ParmVarDecl 0x5580616db9a0 <col:157, col:169> col:169 __x 'long double'
| |-ParmVarDecl 0x5580616dba20 <col:174, col:186> col:186 __y 'long double'
| |-NoThrowAttr 0x5580616dbb70 <col:207>
| `-ConstAttr 0x5580616dbbc8 <col:238>
|-FunctionDecl 0x5580616dbcd8 <line:685:20> col:20 implicit nanl 'long double (const char *)' extern
| |-ParmVarDecl 0x5580616dbd78 <<invalid sloc>> <invalid sloc> 'const char *'
| |-NoThrowAttr 0x5580616dbde8 <col:20> Implicit
| `-PureAttr 0x5580616dbe40 <col:20> Implicit
|-FunctionDecl 0x5580616dbe68 prev 0x5580616dbcd8 <col:1, col:103> col:20 nanl 'long double (const char *)' extern
| |-ParmVarDecl 0x5580616dbc08 <col:26, col:38> col:38 __tagb 'const char *'
| |-PureAttr 0x5580616dbf90 <col:20> Inherited Implicit
| |-NoThrowAttr 0x5580616dbf10 <col:62>
| `-ConstAttr 0x5580616dbf68 <col:93>
|-FunctionDecl 0x5580616dc068 <col:106, col:210> col:125 __nanl 'long double (const char *)' extern
| |-ParmVarDecl 0x5580616dbfd0 <col:133, col:145> col:145 __tagb 'const char *'
| |-NoThrowAttr 0x5580616dc110 <col:169>
| `-ConstAttr 0x5580616dc168 <col:200>
|-FunctionDecl 0x5580616dc250 <line:691:1, col:100> col:12 used __isnanl 'int (long double)' extern
| |-ParmVarDecl 0x5580616dc1a8 <col:22, col:34> col:34 __value 'long double'
| |-NoThrowAttr 0x5580616dc2f8 <col:59>
| `-ConstAttr 0x5580616dc350 <col:90>
|-FunctionDecl 0x5580616dc428 <line:695:1, col:98> col:12 isnanl 'int (long double)' extern
| |-ParmVarDecl 0x5580616dc390 <col:20, col:32> col:32 __value 'long double'
| |-NoThrowAttr 0x5580616dc4d0 <col:57>
| `-ConstAttr 0x5580616dc528 <col:88>
|-FunctionDecl 0x5580616dc600 <line:698:1, col:67> col:20 j0l 'long double (long double)' extern
| |-ParmVarDecl 0x5580616dc568 <col:25, col:30> col:36 'long double'
| `-NoThrowAttr 0x5580616dc6a8 <col:54>
|-FunctionDecl 0x5580616dc7b0 <col:70, col:138> col:89 __j0l 'long double (long double)' extern
| |-ParmVarDecl 0x5580616dc718 <col:96, col:101> col:107 'long double'
| `-NoThrowAttr 0x5580616dc858 <col:125>
|-FunctionDecl 0x5580616dc960 <line:699:1, col:67> col:20 j1l 'long double (long double)' extern
| |-ParmVarDecl 0x5580616dc8c8 <col:25, col:30> col:36 'long double'
| `-NoThrowAttr 0x5580616dca08 <col:54>
|-FunctionDecl 0x5580616dcb10 <col:70, col:138> col:89 __j1l 'long double (long double)' extern
| |-ParmVarDecl 0x5580616dca78 <col:96, col:101> col:107 'long double'
| `-NoThrowAttr 0x5580616dcbb8 <col:125>
|-FunctionDecl 0x5580616dcd88 <line:700:1, col:72> col:20 jnl 'long double (int, long double)' extern
| |-ParmVarDecl 0x5580616dcc28 <col:25> col:28 'int'
| |-ParmVarDecl 0x5580616dcca8 <col:30, col:35> col:41 'long double'
| `-NoThrowAttr 0x5580616dce38 <col:59>
|-FunctionDecl 0x5580616dcfc8 <col:75, col:148> col:94 __jnl 'long double (int, long double)' extern
| |-ParmVarDecl 0x5580616dcea8 <col:101> col:104 'int'
| |-ParmVarDecl 0x5580616dcf28 <col:106, col:111> col:117 'long double'
| `-NoThrowAttr 0x5580616dd078 <col:135>
|-FunctionDecl 0x5580616dd180 <line:701:1, col:67> col:20 y0l 'long double (long double)' extern
| |-ParmVarDecl 0x5580616dd0e8 <col:25, col:30> col:36 'long double'
| `-NoThrowAttr 0x5580616dd228 <col:54>
|-FunctionDecl 0x5580616dd340 <col:70, col:138> col:89 __y0l 'long double (long double)' extern
| |-ParmVarDecl 0x5580616dd2a8 <col:96, col:101> col:107 'long double'
| `-NoThrowAttr 0x5580616dd3e8 <col:125>
|-FunctionDecl 0x5580616dd4f0 <line:702:1, col:67> col:20 y1l 'long double (long double)' extern
| |-ParmVarDecl 0x5580616dd458 <col:25, col:30> col:36 'long double'
| `-NoThrowAttr 0x5580616dd598 <col:54>
|-FunctionDecl 0x5580616dd6a0 <col:70, col:138> col:89 __y1l 'long double (long double)' extern
| |-ParmVarDecl 0x5580616dd608 <col:96, col:101> col:107 'long double'
| `-NoThrowAttr 0x5580616dd748 <col:125>
|-FunctionDecl 0x5580616dd8d8 <line:703:1, col:72> col:20 ynl 'long double (int, long double)' extern
| |-ParmVarDecl 0x5580616dd7b8 <col:25> col:28 'int'
| |-ParmVarDecl 0x5580616dd838 <col:30, col:35> col:41 'long double'
| `-NoThrowAttr 0x5580616dd988 <col:59>
|-FunctionDecl 0x5580616ddb18 <col:75, col:148> col:94 __ynl 'long double (int, long double)' extern
| |-ParmVarDecl 0x5580616dd9f8 <col:101> col:104 'int'
| |-ParmVarDecl 0x5580616dda78 <col:106, col:111> col:117 'long double'
| `-NoThrowAttr 0x5580616ddbc8 <col:135>
|-FunctionDecl 0x5580616ddcd0 <line:710:20> col:20 implicit erfl 'long double (long double)' extern
| |-ParmVarDecl 0x5580616ddd70 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x5580616ddde0 <col:20> Implicit
|-FunctionDecl 0x5580616dde38 prev 0x5580616ddcd0 <col:1, col:68> col:20 erfl 'long double (long double)' extern
| |-ParmVarDecl 0x5580616ddc38 <col:26, col:31> col:37 'long double'
| `-NoThrowAttr 0x5580616ddee0 <col:55>
|-FunctionDecl 0x5580616ddfe8 <col:71, col:140> col:90 __erfl 'long double (long double)' extern
| |-ParmVarDecl 0x5580616ddf50 <col:98, col:103> col:109 'long double'
| `-NoThrowAttr 0x5580616de090 <col:127>
|-FunctionDecl 0x5580616de198 <line:711:20> col:20 implicit erfcl 'long double (long double)' extern
| |-ParmVarDecl 0x5580616ba060 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x5580616ba0d0 <col:20> Implicit
|-FunctionDecl 0x5580616ba128 prev 0x5580616de198 <col:1, col:69> col:20 erfcl 'long double (long double)' extern
| |-ParmVarDecl 0x5580616de100 <col:27, col:32> col:38 'long double'
| `-NoThrowAttr 0x5580616ba1d0 <col:56>
|-FunctionDecl 0x5580616ba2d8 <col:72, col:142> col:91 __erfcl 'long double (long double)' extern
| |-ParmVarDecl 0x5580616ba240 <col:100, col:105> col:111 'long double'
| `-NoThrowAttr 0x5580616ba380 <col:129>
|-FunctionDecl 0x5580616ba488 <line:712:20> col:20 implicit lgammal 'long double (long double)' extern
| |-ParmVarDecl 0x5580616ba528 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x5580616ba598 <col:20> Implicit
|-FunctionDecl 0x5580616ba5f0 prev 0x5580616ba488 <col:1, col:71> col:20 lgammal 'long double (long double)' extern
| |-ParmVarDecl 0x5580616ba3f0 <col:29, col:34> col:40 'long double'
| `-NoThrowAttr 0x5580616ba698 <col:58>
|-FunctionDecl 0x5580616ba7a0 <col:74, col:146> col:93 __lgammal 'long double (long double)' extern
| |-ParmVarDecl 0x5580616ba708 <col:104, col:109> col:115 'long double'
| `-NoThrowAttr 0x5580616ba848 <col:133>
|-FunctionDecl 0x5580616ba950 <line:719:20> col:20 implicit tgammal 'long double (long double)' extern
| |-ParmVarDecl 0x5580616ba9f0 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x5580616baa60 <col:20> Implicit
|-FunctionDecl 0x5580616baab8 prev 0x5580616ba950 <col:1, col:71> col:20 tgammal 'long double (long double)' extern
| |-ParmVarDecl 0x5580616ba8b8 <col:29, col:34> col:40 'long double'
| `-NoThrowAttr 0x5580616bab60 <col:58>
|-FunctionDecl 0x5580616bac68 <col:74, col:146> col:93 __tgammal 'long double (long double)' extern
| |-ParmVarDecl 0x5580616babd0 <col:104, col:109> col:115 'long double'
| `-NoThrowAttr 0x5580616bad10 <col:133>
|-FunctionDecl 0x5580616bae18 <line:725:1, col:70> col:20 gammal 'long double (long double)' extern
| |-ParmVarDecl 0x5580616bad80 <col:28, col:33> col:39 'long double'
| `-NoThrowAttr 0x5580616baec0 <col:57>
|-FunctionDecl 0x5580616e0280 <col:73, col:144> col:92 __gammal 'long double (long double)' extern
| |-ParmVarDecl 0x5580616baf30 <col:102, col:107> col:113 'long double'
| `-NoThrowAttr 0x5580616e0328 <col:131>
|-FunctionDecl 0x5580616e04b8 <line:732:1, col:90> col:20 lgammal_r 'long double (long double, int *)' extern
| |-ParmVarDecl 0x5580616e0398 <col:31, col:36> col:42 'long double'
| |-ParmVarDecl 0x5580616e0418 <col:44, col:49> col:49 __signgamp 'int *'
| `-NoThrowAttr 0x5580616e0568 <col:77>
|-FunctionDecl 0x5580616e06f8 <col:93, col:184> col:112 __lgammal_r 'long double (long double, int *)' extern
| |-ParmVarDecl 0x5580616e05d8 <col:125, col:130> col:136 'long double'
| |-ParmVarDecl 0x5580616e0658 <col:138, col:143> col:143 __signgamp 'int *'
| `-NoThrowAttr 0x5580616e07a8 <col:171>
|-FunctionDecl 0x5580616e08b0 <line:740:20> col:20 implicit rintl 'long double (long double)' extern
| |-ParmVarDecl 0x5580616e0950 <<invalid sloc>> <invalid sloc> 'long double'
| |-NoThrowAttr 0x5580616e09c0 <col:20> Implicit
| `-ConstAttr 0x5580616e0a18 <col:20> Implicit
|-FunctionDecl 0x5580616e0a40 prev 0x5580616e08b0 <col:1, col:73> col:20 rintl 'long double (long double)' extern
| |-ParmVarDecl 0x5580616e0818 <col:27, col:39> col:39 __x 'long double'
| |-ConstAttr 0x5580616e0b40 <col:20> Inherited Implicit
| `-NoThrowAttr 0x5580616e0ae8 <col:60>
|-FunctionDecl 0x5580616e0c18 <col:76, col:150> col:95 __rintl 'long double (long double)' extern
| |-ParmVarDecl 0x5580616e0b80 <col:104, col:116> col:116 __x 'long double'
| `-NoThrowAttr 0x5580616e0cc0 <col:137>
|-FunctionDecl 0x5580616e0e50 <line:743:20> col:20 implicit nextafterl 'long double (long double, long double)' extern
| |-ParmVarDecl 0x5580616e0ef0 <<invalid sloc>> <invalid sloc> 'long double'
| |-ParmVarDecl 0x5580616e0f58 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x5580616e0fd0 <col:20> Implicit
|-FunctionDecl 0x5580616e1028 prev 0x5580616e0e50 <col:1, col:123> col:20 nextafterl 'long double (long double, long double)' extern
| |-ParmVarDecl 0x5580616e0d30 <col:32, col:44> col:44 __x 'long double'
| |-ParmVarDecl 0x5580616e0db0 <col:49, col:61> col:61 __y 'long double'
| |-NoThrowAttr 0x5580616e10d8 <col:82>
| `-ConstAttr 0x5580616e1130 <col:113>
|-FunctionDecl 0x5580616e12c8 <col:126, col:250> col:145 __nextafterl 'long double (long double, long double)' extern
| |-ParmVarDecl 0x5580616e1170 <col:159, col:171> col:171 __x 'long double'
| |-ParmVarDecl 0x5580616e11f0 <col:176, col:188> col:188 __y 'long double'
| |-NoThrowAttr 0x5580616e1378 <col:209>
| `-ConstAttr 0x5580616e13d0 <col:240>
|-FunctionDecl 0x5580616e1530 <line:745:20> col:20 implicit nexttowardl 'long double (long double, long double)' extern
| |-ParmVarDecl 0x5580616e15d0 <<invalid sloc>> <invalid sloc> 'long double'
| |-ParmVarDecl 0x5580616e1638 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x5580616e16b0 <col:20> Implicit
|-FunctionDecl 0x5580616e1708 prev 0x5580616e1530 <col:1, col:124> col:20 nexttowardl 'long double (long double, long double)' extern
| |-ParmVarDecl 0x5580616e1410 <col:33, col:45> col:45 __x 'long double'
| |-ParmVarDecl 0x5580616e1490 <col:50, col:62> col:62 __y 'long double'
| |-NoThrowAttr 0x5580616e17b8 <col:83>
| `-ConstAttr 0x5580616e1810 <col:114>
|-FunctionDecl 0x5580616e1970 <col:127, col:252> col:146 __nexttowardl 'long double (long double, long double)' extern
| |-ParmVarDecl 0x5580616e1850 <col:161, col:173> col:173 __x 'long double'
| |-ParmVarDecl 0x5580616e18d0 <col:178, col:190> col:190 __y 'long double'
| |-NoThrowAttr 0x5580616e1a20 <col:211>
| `-ConstAttr 0x5580616e1a78 <col:242>
|-FunctionDecl 0x5580616e1bd8 <line:749:20> col:20 implicit remainderl 'long double (long double, long double)' extern
| |-ParmVarDecl 0x5580616e1c78 <<invalid sloc>> <invalid sloc> 'long double'
| |-ParmVarDecl 0x5580616e1ce0 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x5580616e1d58 <col:20> Implicit
|-FunctionDecl 0x5580616e1db0 prev 0x5580616e1bd8 <col:1, col:95> col:20 remainderl 'long double (long double, long double)' extern
| |-ParmVarDecl 0x5580616e1ab8 <col:32, col:44> col:44 __x 'long double'
| |-ParmVarDecl 0x5580616e1b38 <col:49, col:61> col:61 __y 'long double'
| `-NoThrowAttr 0x5580616e1e60 <col:82>
|-FunctionDecl 0x5580616e1ff0 <col:98, col:194> col:117 __remainderl 'long double (long double, long double)' extern
| |-ParmVarDecl 0x5580616e1ed0 <col:131, col:143> col:143 __x 'long double'
| |-ParmVarDecl 0x5580616e1f50 <col:148, col:160> col:160 __y 'long double'
| `-NoThrowAttr 0x5580616e20a0 <col:181>
|-FunctionDecl 0x5580616e32b0 <line:753:20> col:20 implicit scalbnl 'long double (long double, int)' extern
| |-ParmVarDecl 0x5580616e3350 <<invalid sloc>> <invalid sloc> 'long double'
| |-ParmVarDecl 0x5580616e33b8 <<invalid sloc>> <invalid sloc> 'int'
| `-NoThrowAttr 0x5580616e3430 <col:20> Implicit
|-FunctionDecl 0x5580616e3488 prev 0x5580616e32b0 <col:1, col:84> col:20 scalbnl 'long double (long double, int)' extern
| |-ParmVarDecl 0x5580616e2110 <col:29, col:41> col:41 __x 'long double'
| |-ParmVarDecl 0x5580616e2190 <col:46, col:50> col:50 __n 'int'
| `-NoThrowAttr 0x5580616e3538 <col:71>
|-FunctionDecl 0x5580616e36c8 <col:87, col:172> col:106 __scalbnl 'long double (long double, int)' extern
| |-ParmVarDecl 0x5580616e35a8 <col:117, col:129> col:129 __x 'long double'
| |-ParmVarDecl 0x5580616e3628 <col:134, col:138> col:138 __n 'int'
| `-NoThrowAttr 0x5580616e3778 <col:159>
|-FunctionDecl 0x5580616e3880 <line:757:12> col:12 implicit ilogbl 'int (long double)' extern
| |-ParmVarDecl 0x5580616e3920 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x5580616e3990 <col:12> Implicit
|-FunctionDecl 0x5580616e39e8 prev 0x5580616e3880 <col:1, col:66> col:12 ilogbl 'int (long double)' extern
| |-ParmVarDecl 0x5580616e37e8 <col:20, col:32> col:32 __x 'long double'
| `-NoThrowAttr 0x5580616e3a90 <col:53>
|-FunctionDecl 0x5580616e3b98 <col:69, col:136> col:80 __ilogbl 'int (long double)' extern
| |-ParmVarDecl 0x5580616e3b00 <col:90, col:102> col:102 __x 'long double'
| `-NoThrowAttr 0x5580616e3c40 <col:123>
|-FunctionDecl 0x5580616e3e18 <line:762:20> col:20 implicit scalblnl 'long double (long double, long)' extern
| |-ParmVarDecl 0x5580616e3eb8 <<invalid sloc>> <invalid sloc> 'long double'
| |-ParmVarDecl 0x5580616e3f20 <<invalid sloc>> <invalid sloc> 'long'
| `-NoThrowAttr 0x5580616e3f98 <col:20> Implicit
|-FunctionDecl 0x5580616e3ff0 prev 0x5580616e3e18 <col:1, col:90> col:20 scalblnl 'long double (long double, long)' extern
| |-ParmVarDecl 0x5580616e3cb0 <col:30, col:42> col:42 __x 'long double'
| |-ParmVarDecl 0x5580616e3d30 <col:47, col:56> col:56 __n 'long'
| `-NoThrowAttr 0x5580616e40a0 <col:77>
|-FunctionDecl 0x5580616e42c0 <col:93, col:184> col:112 __scalblnl 'long double (long double, long)' extern
| |-ParmVarDecl 0x5580616e4110 <col:124, col:136> col:136 __x 'long double'
| |-ParmVarDecl 0x5580616e4190 <col:141, col:150> col:150 __n 'long'
| `-NoThrowAttr 0x5580616e4370 <col:171>
|-FunctionDecl 0x5580616e4478 <line:766:20> col:20 implicit nearbyintl 'long double (long double)' extern
| |-ParmVarDecl 0x5580616e4518 <<invalid sloc>> <invalid sloc> 'long double'
| |-NoThrowAttr 0x5580616e4588 <col:20> Implicit
| `-ConstAttr 0x5580616e45e0 <col:20> Implicit
|-FunctionDecl 0x5580616e4608 prev 0x5580616e4478 <col:1, col:78> col:20 nearbyintl 'long double (long double)' extern
| |-ParmVarDecl 0x5580616e43e0 <col:32, col:44> col:44 __x 'long double'
| |-ConstAttr 0x5580616e4708 <col:20> Inherited Implicit
| `-NoThrowAttr 0x5580616e46b0 <col:65>
|-FunctionDecl 0x5580616e47e0 <col:81, col:160> col:100 __nearbyintl 'long double (long double)' extern
| |-ParmVarDecl 0x5580616e4748 <col:114, col:126> col:126 __x 'long double'
| `-NoThrowAttr 0x5580616e4888 <col:147>
|-FunctionDecl 0x5580616e4990 <line:770:20> col:20 implicit roundl 'long double (long double)' extern
| |-ParmVarDecl 0x5580616e4a30 <<invalid sloc>> <invalid sloc> 'long double'
| |-NoThrowAttr 0x5580616e4aa0 <col:20> Implicit
| `-ConstAttr 0x5580616e4af8 <col:20> Implicit
|-FunctionDecl 0x5580616e4b20 prev 0x5580616e4990 <col:1, col:102> col:20 roundl 'long double (long double)' extern
| |-ParmVarDecl 0x5580616e48f8 <col:28, col:40> col:40 __x 'long double'
| |-NoThrowAttr 0x5580616e4bc8 <col:61>
| `-ConstAttr 0x5580616e4c20 <col:92>
|-FunctionDecl 0x5580616e4cf8 <col:105, col:208> col:124 __roundl 'long double (long double)' extern
| |-ParmVarDecl 0x5580616e4c60 <col:134, col:146> col:146 __x 'long double'
| |-NoThrowAttr 0x5580616e4da0 <col:167>
| `-ConstAttr 0x5580616e4df8 <col:198>
|-FunctionDecl 0x5580616e4ed0 <line:774:20> col:20 implicit truncl 'long double (long double)' extern
| |-ParmVarDecl 0x5580616e4f70 <<invalid sloc>> <invalid sloc> 'long double'
| |-NoThrowAttr 0x5580616e4fe0 <col:20> Implicit
| `-ConstAttr 0x5580616e5038 <col:20> Implicit
|-FunctionDecl 0x5580616e5060 prev 0x5580616e4ed0 <col:1, col:102> col:20 truncl 'long double (long double)' extern
| |-ParmVarDecl 0x5580616e4e38 <col:28, col:40> col:40 __x 'long double'
| |-NoThrowAttr 0x5580616e5108 <col:61>
| `-ConstAttr 0x5580616e5160 <col:92>
|-FunctionDecl 0x5580616e52d0 <col:105, col:208> col:124 __truncl 'long double (long double)' extern
| |-ParmVarDecl 0x5580616e51a0 <col:134, col:146> col:146 __x 'long double'
| |-NoThrowAttr 0x5580616e5378 <col:167>
| `-ConstAttr 0x5580616e53d0 <col:198>
|-FunctionDecl 0x5580616e5608 <line:779:20> col:20 implicit remquol 'long double (long double, long double, int *)' extern
| |-ParmVarDecl 0x5580616e56a8 <<invalid sloc>> <invalid sloc> 'long double'
| |-ParmVarDecl 0x5580616e5710 <<invalid sloc>> <invalid sloc> 'long double'
| |-ParmVarDecl 0x5580616e5778 <<invalid sloc>> <invalid sloc> 'int *'
| `-NoThrowAttr 0x5580616e57f8 <col:20> Implicit
|-FunctionDecl 0x5580616e5850 prev 0x5580616e5608 <col:1, col:104> col:20 remquol 'long double (long double, long double, int *)' extern
| |-ParmVarDecl 0x5580616e5410 <col:29, col:41> col:41 __x 'long double'
| |-ParmVarDecl 0x5580616e5490 <col:46, col:58> col:58 __y 'long double'
| |-ParmVarDecl 0x5580616e5510 <col:63, col:68> col:68 __quo 'int *'
| `-NoThrowAttr 0x5580616e5908 <col:91>
|-FunctionDecl 0x5580616e5b20 <col:107, col:212> col:126 __remquol 'long double (long double, long double, int *)' extern
| |-ParmVarDecl 0x5580616e5978 <col:137, col:149> col:149 __x 'long double'
| |-ParmVarDecl 0x5580616e59f8 <col:154, col:166> col:166 __y 'long double'
| |-ParmVarDecl 0x5580616e5a78 <col:171, col:176> col:176 __quo 'int *'
| `-NoThrowAttr 0x5580616e5bd8 <col:199>
|-FunctionDecl 0x5580616e5d18 <line:786:17> col:17 implicit lrintl 'long (long double)' extern
| |-ParmVarDecl 0x5580616e5db8 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x5580616e5e28 <col:17> Implicit
|-FunctionDecl 0x5580616e5e80 prev 0x5580616e5d18 <col:1, col:71> col:17 lrintl 'long (long double)' extern
| |-ParmVarDecl 0x5580616e5c48 <col:25, col:37> col:37 __x 'long double'
| `-NoThrowAttr 0x5580616e5f28 <col:58>
|-FunctionDecl 0x5580616e6030 <col:74, col:146> col:90 __lrintl 'long (long double)' extern
| |-ParmVarDecl 0x5580616e5f98 <col:100, col:112> col:112 __x 'long double'
| `-NoThrowAttr 0x5580616e60d8 <col:133>
|-FunctionDecl 0x5580616e6218 <line:788:22> col:22 implicit llrintl 'long long (long double)' extern
| |-ParmVarDecl 0x5580616e62e0 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x5580616e6350 <col:22> Implicit
|-FunctionDecl 0x5580616e63a8 prev 0x5580616e6218 <col:1, col:77> col:22 llrintl 'long long (long double)' extern
| |-ParmVarDecl 0x5580616e6148 <col:31, col:43> col:43 __x 'long double'
| `-NoThrowAttr 0x5580616e6450 <col:64>
|-FunctionDecl 0x5580616e6558 <col:80, col:158> col:101 __llrintl 'long long (long double)' extern
| |-ParmVarDecl 0x5580616e64c0 <col:112, col:124> col:124 __x 'long double'
| `-NoThrowAttr 0x5580616e6600 <col:145>
|-FunctionDecl 0x5580616e6708 <line:792:17> col:17 implicit lroundl 'long (long double)' extern
| |-ParmVarDecl 0x5580616e67a8 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x5580616e6818 <col:17> Implicit
|-FunctionDecl 0x5580616e6870 prev 0x5580616e6708 <col:1, col:72> col:17 lroundl 'long (long double)' extern
| |-ParmVarDecl 0x5580616e6670 <col:26, col:38> col:38 __x 'long double'
| `-NoThrowAttr 0x5580616e6918 <col:59>
|-FunctionDecl 0x5580616e6a20 <col:75, col:148> col:91 __lroundl 'long (long double)' extern
| |-ParmVarDecl 0x5580616e6988 <col:102, col:114> col:114 __x 'long double'
| `-NoThrowAttr 0x5580616e6ac8 <col:135>
|-FunctionDecl 0x5580616e6bd0 <line:794:22> col:22 implicit llroundl 'long long (long double)' extern
| |-ParmVarDecl 0x5580616e6c70 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x5580616e6ce0 <col:22> Implicit
|-FunctionDecl 0x5580616e6d38 prev 0x5580616e6bd0 <col:1, col:78> col:22 llroundl 'long long (long double)' extern
| |-ParmVarDecl 0x5580616e6b38 <col:32, col:44> col:44 __x 'long double'
| `-NoThrowAttr 0x5580616e6de0 <col:65>
|-FunctionDecl 0x5580616e6ee8 <col:81, col:160> col:102 __llroundl 'long long (long double)' extern
| |-ParmVarDecl 0x5580616e6e50 <col:114, col:126> col:126 __x 'long double'
| `-NoThrowAttr 0x5580616e6f90 <col:147>
|-FunctionDecl 0x5580616e7120 <line:798:20> col:20 implicit fdiml 'long double (long double, long double)' extern
| |-ParmVarDecl 0x5580616e71c0 <<invalid sloc>> <invalid sloc> 'long double'
| |-ParmVarDecl 0x5580616e7228 <<invalid sloc>> <invalid sloc> 'long double'
| `-NoThrowAttr 0x5580616e72a0 <col:20> Implicit
|-FunctionDecl 0x5580616e7320 prev 0x5580616e7120 <col:1, col:90> col:20 fdiml 'long double (long double, long double)' extern
| |-ParmVarDecl 0x5580616e7000 <col:27, col:39> col:39 __x 'long double'
| |-ParmVarDecl 0x5580616e7080 <col:44, col:56> col:56 __y 'long double'
| `-NoThrowAttr 0x5580616e73d0 <col:77>
|-FunctionDecl 0x5580616e7560 <col:93, col:184> col:112 __fdiml 'long double (long double, long double)' extern
| |-ParmVarDecl 0x5580616e7440 <col:121, col:133> col:133 __x 'long double'
| |-ParmVarDecl 0x5580616e74c0 <col:138, col:150> col:150 __y 'long double'
| `-NoThrowAttr 0x5580616e7610 <col:171>
|-FunctionDecl 0x5580616e77a0 <line:801:20> col:20 implicit fmaxl 'long double (long double, long double)' extern
| |-ParmVarDecl 0x5580616e7840 <<invalid sloc>> <invalid sloc> 'long double'
| |-ParmVarDecl 0x5580616e78a8 <<invalid sloc>> <invalid sloc> 'long double'
| |-NoThrowAttr 0x5580616e7920 <col:20> Implicit
| `-ConstAttr 0x5580616e7978 <col:20> Implicit
|-FunctionDecl 0x5580616e79a0 prev 0x5580616e77a0 <col:1, col:118> col:20 fmaxl 'long double (long double, long double)' extern
| |-ParmVarDecl 0x5580616e7680 <col:27, col:39> col:39 __x 'long double'
| |-ParmVarDecl 0x5580616e7700 <col:44, col:56> col:56 __y 'long double'
| |-NoThrowAttr 0x5580616e7a50 <col:77>
| `-ConstAttr 0x5580616e7aa8 <col:108>
|-FunctionDecl 0x5580616e7c08 <col:121, col:240> col:140 __fmaxl 'long double (long double, long double)' extern
| |-ParmVarDecl 0x5580616e7ae8 <col:149, col:161> col:161 __x 'long double'
| |-ParmVarDecl 0x5580616e7b68 <col:166, col:178> col:178 __y 'long double'
| |-NoThrowAttr 0x5580616e7cb8 <col:199>
| `-ConstAttr 0x5580616e7d10 <col:230>
|-FunctionDecl 0x5580616e7e70 <line:804:20> col:20 implicit fminl 'long double (long double, long double)' extern
| |-ParmVarDecl 0x5580616e7f10 <<invalid sloc>> <invalid sloc> 'long double'
| |-ParmVarDecl 0x5580616e7f78 <<invalid sloc>> <invalid sloc> 'long double'
| |-NoThrowAttr 0x5580616e7ff0 <col:20> Implicit
| `-ConstAttr 0x5580616e8048 <col:20> Implicit
|-FunctionDecl 0x5580616e8070 prev 0x5580616e7e70 <col:1, col:118> col:20 fminl 'long double (long double, long double)' extern
| |-ParmVarDecl 0x5580616e7d50 <col:27, col:39> col:39 __x 'long double'
| |-ParmVarDecl 0x5580616e7dd0 <col:44, col:56> col:56 __y 'long double'
| |-NoThrowAttr 0x5580616e8120 <col:77>
| `-ConstAttr 0x5580616e8178 <col:108>
|-FunctionDecl 0x5580616e8300 <col:121, col:240> col:140 __fminl 'long double (long double, long double)' extern
| |-ParmVarDecl 0x5580616e81b8 <col:149, col:161> col:161 __x 'long double'
| |-ParmVarDecl 0x5580616e8238 <col:166, col:178> col:178 __y 'long double'
| |-NoThrowAttr 0x5580616e83b0 <col:199>
| `-ConstAttr 0x5580616e8408 <col:230>
|-FunctionDecl 0x5580616e84e0 <line:808:1, line:809:32> line:808:12 __fpclassifyl 'int (long double)' extern
| |-ParmVarDecl 0x5580616e8448 <col:27, col:39> col:39 __value 'long double'
| |-NoThrowAttr 0x5580616e8588 <col:64>
| `-ConstAttr 0x5580616e85e0 <line:809:22>
|-FunctionDecl 0x5580616e86b8 <line:812:1, line:813:32> line:812:12 __signbitl 'int (long double)' extern
| |-ParmVarDecl 0x5580616e8620 <col:24, col:36> col:36 __value 'long double'
| |-NoThrowAttr 0x5580616e8760 <col:61>
| `-ConstAttr 0x5580616e87b8 <line:813:22>
|-FunctionDecl 0x5580616e89e8 <line:817:20> col:20 implicit fmal 'long double (long double, long double, long double)' extern
| |-ParmVarDecl 0x5580616e8a88 <<invalid sloc>> <invalid sloc> 'long double'
| |-ParmVarDecl 0x5580616e8af0 <<invalid sloc>> <invalid sloc> 'long double'
| |-ParmVarDecl 0x5580616e8b58 <<invalid sloc>> <invalid sloc> 'long double'
| |-ConstAttr 0x5580616e8bd8 <col:20> Implicit
| `-NoThrowAttr 0x5580616e8c30 <col:20> Implicit
|-FunctionDecl 0x5580616e8c58 prev 0x5580616e89e8 <col:1, col:106> col:20 fmal 'long double (long double, long double, long double)' extern
| |-ParmVarDecl 0x5580616e87f8 <col:26, col:38> col:38 __x 'long double'
| |-ParmVarDecl 0x5580616e8878 <col:43, col:55> col:55 __y 'long double'
| |-ParmVarDecl 0x5580616e88f8 <col:60, col:72> col:72 __z 'long double'
| |-ConstAttr 0x5580616e8d68 <col:20> Inherited Implicit
| `-NoThrowAttr 0x5580616e8d10 <col:93>
|-FunctionDecl 0x5580616e8f50 <col:109, col:216> col:128 __fmal 'long double (long double, long double, long double)' extern
| |-ParmVarDecl 0x5580616e8da8 <col:136, col:148> col:148 __x 'long double'
| |-ParmVarDecl 0x5580616e8e28 <col:153, col:165> col:165 __y 'long double'
| |-ParmVarDecl 0x5580616e8ea8 <col:170, col:182> col:182 __z 'long double'
| `-NoThrowAttr 0x5580616e9008 <col:203>
|-FunctionDecl 0x5580616e9198 <line:818:1, col:91> col:20 scalbl 'long double (long double, long double)' extern
| |-ParmVarDecl 0x5580616e9078 <col:28, col:40> col:40 __x 'long double'
| |-ParmVarDecl 0x5580616e90f8 <col:45, col:57> col:57 __n 'long double'
| `-NoThrowAttr 0x5580616e9248 <col:78>
|-FunctionDecl 0x5580616e9430 <col:94, col:186> col:113 __scalbl 'long double (long double, long double)' extern
| |-ParmVarDecl 0x5580616e9310 <col:123, col:135> col:135 __x 'long double'
| |-ParmVarDecl 0x5580616e9390 <col:140, col:152> col:152 __n 'long double'
| `-NoThrowAttr 0x5580616e94e0 <col:173>
|-VarDecl 0x5580616e9550 <line:819:1, col:12> col:12 signgam 'int' extern
|-EnumDecl 0x5580616e95b8 <line:820:1, line:837:3> line:820:1
| |-EnumConstantDecl 0x5580616e96c0 <line:822:5, line:824:7> line:822:5 FP_NAN 'int'
| | `-ConstantExpr 0x5580616e96a8 <line:824:7> 'int'
| |   `-IntegerLiteral 0x5580616e9688 <col:7> 'int' 0
| |-EnumConstantDecl 0x5580616e9748 <line:825:5, line:827:7> line:825:5 FP_INFINITE 'int'
| | `-ConstantExpr 0x5580616e9730 <line:827:7> 'int'
| |   `-IntegerLiteral 0x5580616e9710 <col:7> 'int' 1
| |-EnumConstantDecl 0x5580616e97d0 <line:828:5, line:830:7> line:828:5 FP_ZERO 'int'
| | `-ConstantExpr 0x5580616e97b8 <line:830:7> 'int'
| |   `-IntegerLiteral 0x5580616e9798 <col:7> 'int' 2
| |-EnumConstantDecl 0x5580616e9858 <line:831:5, line:833:7> line:831:5 FP_SUBNORMAL 'int'
| | `-ConstantExpr 0x5580616e9840 <line:833:7> 'int'
| |   `-IntegerLiteral 0x5580616e9820 <col:7> 'int' 3
| `-EnumConstantDecl 0x5580616e98e0 <line:834:5, line:836:7> line:834:5 FP_NORMAL 'int'
|   `-ConstantExpr 0x5580616e98c8 <line:836:7> 'int'
|     `-IntegerLiteral 0x5580616e98a8 <col:7> 'int' 4
|-EnumDecl 0x5580616e9930 <line:838:9, line:845:1> line:838:9
| |-EnumConstantDecl 0x5580616e9a48 <line:840:3, col:13> col:3 _IEEE_ 'int'
| | `-ConstantExpr 0x5580616e9a30 <col:12, col:13> 'int'
| |   `-UnaryOperator 0x5580616e9a18 <col:12, col:13> 'int' prefix '-'
| |     `-IntegerLiteral 0x5580616e99f8 <col:13> 'int' 1
| |-EnumConstantDecl 0x5580616e9a98 <line:841:3> col:3 _SVID_ 'int'
| |-EnumConstantDecl 0x5580616e9ae8 <line:842:3> col:3 _XOPEN_ 'int'
| |-EnumConstantDecl 0x5580616e9b38 <line:843:3> col:3 _POSIX_ 'int'
| `-EnumConstantDecl 0x5580616e9b88 <line:844:3> col:3 _ISOC_ 'int'
|-TypedefDecl 0x5580616e9c40 <line:838:1, line:845:3> col:3 referenced _LIB_VERSION_TYPE 'enum _LIB_VERSION_TYPE':'_LIB_VERSION_TYPE'
| `-ElaboratedType 0x5580616e9be0 'enum _LIB_VERSION_TYPE' sugar
|   `-EnumType 0x5580616e99d0 '_LIB_VERSION_TYPE'
|     `-Enum 0x5580616e9930 ''
|-VarDecl 0x5580616e9ce8 <line:850:1, col:26> col:26 _LIB_VERSION '_LIB_VERSION_TYPE':'_LIB_VERSION_TYPE' extern
|-RecordDecl 0x5580616e9d50 <line:851:1, line:859:3> line:851:8 struct exception definition
| |-FieldDecl 0x5580616e9e10 <line:854:5, col:9> col:9 type 'int'
| |-FieldDecl 0x5580616e9e78 <line:855:5, col:11> col:11 name 'char *'
| |-FieldDecl 0x5580616e9ee0 <line:856:5, col:12> col:12 arg1 'double'
| |-FieldDecl 0x5580616e9f48 <line:857:5, col:12> col:12 arg2 'double'
| `-FieldDecl 0x5580616e9fb0 <line:858:5, col:12> col:12 retval 'double'
|-FunctionDecl 0x5580616ea1d8 <line:864:1, col:44> col:12 matherr 'int (struct exception *)' extern
| `-ParmVarDecl 0x5580616ea0c8 <col:21, col:39> col:39 __exc 'struct exception *'
|-EnumDecl 0x5580616ea320 <line:865:1, line:883:3> line:865:1
| |-EnumConstantDecl 0x5580616ea420 <line:867:5, line:869:7> line:867:5 FE_INVALID 'int'
| | `-ConstantExpr 0x5580616ea408 <line:869:7> 'int'
| |   `-IntegerLiteral 0x5580616ea3e8 <col:7> 'int' 1
| |-EnumConstantDecl 0x5580616ea4a8 <line:870:5, col:19> col:5 __FE_DENORM 'int'
| | `-ConstantExpr 0x5580616ea490 <col:19> 'int'
| |   `-IntegerLiteral 0x5580616ea470 <col:19> 'int' 2
| |-EnumConstantDecl 0x5580616ea530 <line:871:5, line:873:7> line:871:5 FE_DIVBYZERO 'int'
| | `-ConstantExpr 0x5580616ea518 <line:873:7> 'int'
| |   `-IntegerLiteral 0x5580616ea4f8 <col:7> 'int' 4
| |-EnumConstantDecl 0x5580616ea5b8 <line:874:5, line:876:7> line:874:5 FE_OVERFLOW 'int'
| | `-ConstantExpr 0x5580616ea5a0 <line:876:7> 'int'
| |   `-IntegerLiteral 0x5580616ea580 <col:7> 'int' 8
| |-EnumConstantDecl 0x5580616ea640 <line:877:5, line:879:7> line:877:5 FE_UNDERFLOW 'int'
| | `-ConstantExpr 0x5580616ea628 <line:879:7> 'int'
| |   `-IntegerLiteral 0x5580616ea608 <col:7> 'int' 16
| `-EnumConstantDecl 0x5580616ea6c8 <line:880:5, line:882:7> line:880:5 FE_INEXACT 'int'
|   `-ConstantExpr 0x5580616ea6b0 <line:882:7> 'int'
|     `-IntegerLiteral 0x5580616ea690 <col:7> 'int' 32
|-EnumDecl 0x5580616ea718 <line:891:1, line:905:3> line:891:1
| |-EnumConstantDecl 0x5580616ea820 <line:893:5, line:895:7> line:893:5 FE_TONEAREST 'int'
| | `-ConstantExpr 0x5580616ea808 <line:895:7> 'int'
| |   `-IntegerLiteral 0x5580616ea7e8 <col:7> 'int' 0
| |-EnumConstantDecl 0x5580616ea8a8 <line:896:5, line:898:7> line:896:5 FE_DOWNWARD 'int'
| | `-ConstantExpr 0x5580616ea890 <line:898:7> 'int'
| |   `-IntegerLiteral 0x5580616ea870 <col:7> 'int' 1024
| |-EnumConstantDecl 0x5580616ea930 <line:899:5, line:901:7> line:899:5 FE_UPWARD 'int'
| | `-ConstantExpr 0x5580616ea918 <line:901:7> 'int'
| |   `-IntegerLiteral 0x5580616ea8f8 <col:7> 'int' 2048
| `-EnumConstantDecl 0x5580616ea9b8 <line:902:5, line:904:7> line:902:5 FE_TOWARDZERO 'int'
|   `-ConstantExpr 0x5580616ea9a0 <line:904:7> 'int'
|     `-IntegerLiteral 0x5580616ea980 <col:7> 'int' 3072
|-TypedefDecl 0x5580616eaa20 <line:909:1, col:28> col:28 referenced fexcept_t 'unsigned short'
| `-BuiltinType 0x558061632f20 'unsigned short'
|-RecordDecl 0x5580616eaa78 <line:916:9, line:934:3> line:916:9 struct definition
| |-FieldDecl 0x5580616eab40 <line:918:5, col:24> col:24 __control_word 'unsigned short'
| |-FieldDecl 0x5580616eaba8 <line:919:5, col:24> col:24 __glibc_reserved1 'unsigned short'
| |-FieldDecl 0x5580616eac10 <line:920:5, col:24> col:24 __status_word 'unsigned short'
| |-FieldDecl 0x5580616eac78 <line:921:5, col:24> col:24 __glibc_reserved2 'unsigned short'
| |-FieldDecl 0x5580616eace0 <line:922:5, col:24> col:24 __tags 'unsigned short'
| |-FieldDecl 0x5580616ead48 <line:923:5, col:24> col:24 __glibc_reserved3 'unsigned short'
| |-FieldDecl 0x5580616eadb0 <line:924:5, col:18> col:18 __eip 'unsigned int'
| |-FieldDecl 0x5580616eae18 <line:925:5, col:24> col:24 __cs_selector 'unsigned short'
| |-FieldDecl 0x5580616eaeb8 <line:926:5, col:27> col:18 __opcode 'unsigned int'
| | `-ConstantExpr 0x5580616eaea0 <col:27> 'int'
| |   `-IntegerLiteral 0x5580616eae68 <col:27> 'int' 11
| |-FieldDecl 0x5580616eaf58 <line:927:5, col:36> col:18 __glibc_reserved4 'unsigned int'
| | `-ConstantExpr 0x5580616eaf40 <col:36> 'int'
| |   `-IntegerLiteral 0x5580616eaf08 <col:36> 'int' 5
| |-FieldDecl 0x5580616eafc0 <line:928:5, col:18> col:18 __data_offset 'unsigned int'
| |-FieldDecl 0x5580616eb028 <line:929:5, col:24> col:24 __data_selector 'unsigned short'
| `-FieldDecl 0x5580616eb090 <line:930:5, col:24> col:24 __glibc_reserved5 'unsigned short'
|-TypedefDecl 0x5580616eb140 <line:916:1, line:935:1> col:1 referenced fenv_t 'struct fenv_t':'fenv_t'
| `-ElaboratedType 0x5580616eb0e0 'struct fenv_t' sugar
|   `-RecordType 0x5580616eab00 'fenv_t'
|     `-Record 0x5580616eaa78 ''
|-FunctionDecl 0x5580616eb330 <line:942:1, col:71> col:12 feclearexcept 'int (int)' extern
| |-ParmVarDecl 0x5580616eb1c8 <col:27, col:31> col:31 __excepts 'int'
| `-NoThrowAttr 0x5580616eb3d8 <col:58>
|-FunctionDecl 0x5580616eb678 <line:946:1, col:93> col:12 fegetexceptflag 'int (fexcept_t *, int)' extern
| |-ParmVarDecl 0x5580616eb4d0 <col:29, col:40> col:40 __flagp 'fexcept_t *'
| |-ParmVarDecl 0x5580616eb550 <col:49, col:53> col:53 __excepts 'int'
| `-NoThrowAttr 0x5580616eb728 <col:80>
|-FunctionDecl 0x5580616eb830 <line:949:1, col:71> col:12 feraiseexcept 'int (int)' extern
| |-ParmVarDecl 0x5580616eb798 <col:27, col:31> col:31 __excepts 'int'
| `-NoThrowAttr 0x5580616eb8d8 <col:58>
|-FunctionDecl 0x5580616ebb48 <line:953:1, col:99> col:12 fesetexceptflag 'int (const fexcept_t *, int)' extern
| |-ParmVarDecl 0x5580616eb9a0 <col:29, col:46> col:46 __flagp 'const fexcept_t *'
| |-ParmVarDecl 0x5580616eba20 <col:55, col:59> col:59 __excepts 'int'
| `-NoThrowAttr 0x5580616ebbf8 <col:86>
|-FunctionDecl 0x5580616ebd00 <line:957:1, col:70> col:12 fetestexcept 'int (int)' extern
| |-ParmVarDecl 0x5580616ebc68 <col:26, col:30> col:30 __excepts 'int'
| `-NoThrowAttr 0x5580616ebda8 <col:57>
|-FunctionDecl 0x5580616ebed8 <line:963:1, col:59> col:12 fegetround 'int (void)' extern
| `-NoThrowAttr 0x5580616ebf78 <col:46>
|-FunctionDecl 0x5580616ec080 <line:966:1, col:79> col:12 fesetround 'int (int)' extern
| |-ParmVarDecl 0x5580616ebfe8 <col:24, col:28> col:28 __rounding_direction 'int'
| `-NoThrowAttr 0x5580616ec128 <col:66>
|-FunctionDecl 0x5580616ed380 <line:973:1, col:67> col:12 fegetenv 'int (fenv_t *)' extern
| |-ParmVarDecl 0x5580616ec220 <col:22, col:30> col:30 __envp 'fenv_t *'
| `-NoThrowAttr 0x5580616ed428 <col:54>
|-FunctionDecl 0x5580616ed528 <line:978:1, col:71> col:12 feholdexcept 'int (fenv_t *)' extern
| |-ParmVarDecl 0x5580616ed490 <col:26, col:34> col:34 __envp 'fenv_t *'
| `-NoThrowAttr 0x5580616ed5d0 <col:58>
|-FunctionDecl 0x5580616ed7b8 <line:982:1, col:73> col:12 fesetenv 'int (const fenv_t *)' extern
| |-ParmVarDecl 0x5580616ed6a0 <col:22, col:36> col:36 __envp 'const fenv_t *'
| `-NoThrowAttr 0x5580616ed860 <col:60>
|-FunctionDecl 0x5580616ed960 <line:987:1, col:76> col:12 feupdateenv 'int (const fenv_t *)' extern
| |-ParmVarDecl 0x5580616ed8c8 <col:25, col:39> col:39 __envp 'const fenv_t *'
| `-NoThrowAttr 0x5580616eda08 <col:63>
|-FunctionDecl 0x5580616edb40 <line:992:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x5580616eda78 <col:31> col:34 'int'
|-FunctionDecl 0x5580616edc70 <line:993:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x5580616eddb8 <line:994:1, col:88> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x5580616edd28 <col:24, col:28> col:28 used cond 'int'
| `-CompoundStmt 0x5580616ee000 <col:34, col:88>
|   |-IfStmt 0x5580616edfd8 <col:36, col:78>
|   | |-UnaryOperator 0x5580616edeb8 <col:40, col:46> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x5580616edea0 <col:41, col:46> 'int' <LValueToRValue>
|   | |   `-ParenExpr 0x5580616ede80 <col:41, col:46> 'int' lvalue
|   | |     `-DeclRefExpr 0x5580616ede60 <col:42> 'int' lvalue ParmVar 0x5580616edd28 'cond' 'int'
|   | `-CompoundStmt 0x5580616edfc0 <col:49, col:78>
|   |   `-LabelStmt 0x5580616edfa8 <col:51, col:75> 'ERROR'
|   |     `-CallExpr 0x5580616edf38 <col:58, col:75> 'void'
|   |       `-ImplicitCastExpr 0x5580616edf20 <col:58> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x5580616eded0 <col:58> 'void () __attribute__((noreturn))' Function 0x5580616edc70 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   `-ReturnStmt 0x5580616edff0 <col:80>
|-FunctionDecl 0x5580616ee078 <line:996:1, col:33> col:8 used __VERIFIER_nondet_double 'double ()'
`-FunctionDecl 0x5580616ee1b8 <line:998:1, line:1010:1> line:998:5 main 'int (void)'
  `-CompoundStmt 0x5580616ef270 <line:999:1, line:1010:1>
    |-DeclStmt 0x5580616ee3c8 <line:1000:3, col:40>
    | `-VarDecl 0x5580616ee2a8 <col:3, col:39> col:10 used d 'double' cinit
    |   `-CallExpr 0x5580616ee3a8 <col:14, col:39> 'double'
    |     `-ImplicitCastExpr 0x5580616ee390 <col:14> 'double (*)()' <FunctionToPointerDecay>
    |       `-DeclRefExpr 0x5580616ee310 <col:14> 'double ()' Function 0x5580616ee078 '__VERIFIER_nondet_double' 'double ()'
    |-CallExpr 0x5580616ee8f8 <line:1001:3, col:128> 'void'
    | |-ImplicitCastExpr 0x5580616ee8e0 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5580616ee3e0 <col:3> 'void (int)' Function 0x5580616edb40 '__VERIFIER_assume' 'void (int)'
    | `-UnaryOperator 0x5580616ee890 <col:21, col:127> 'int' prefix '!' cannot overflow
    |   `-ParenExpr 0x5580616ee870 <col:22, col:127> 'int'
    |     `-ConditionalOperator 0x5580616ee840 <col:23, col:126> 'int'
    |       |-BinaryOperator 0x5580616ee498 <col:23, col:50> 'int' '=='
    |       | |-UnaryExprOrTypeTraitExpr 0x5580616ee440 <col:23, col:32> 'unsigned long' sizeof
    |       | | `-ParenExpr 0x5580616ee420 <col:30, col:32> 'double' lvalue
    |       | |   `-DeclRefExpr 0x5580616ee400 <col:31> 'double' lvalue Var 0x5580616ee2a8 'd' 'double' non_odr_use_unevaluated
    |       | `-UnaryExprOrTypeTraitExpr 0x5580616ee478 <col:37, col:50> 'unsigned long' sizeof 'float'
    |       |-CallExpr 0x5580616ee548 <col:54, col:65> 'int'
    |       | |-ImplicitCastExpr 0x5580616ee530 <col:54> 'int (*)(float)' <FunctionToPointerDecay>
    |       | | `-DeclRefExpr 0x5580616ee4b8 <col:54> 'int (float)' Function 0x5580616be608 '__isinff' 'int (float)'
    |       | `-ImplicitCastExpr 0x5580616ee588 <col:64> 'float' <FloatingCast>
    |       |   `-ImplicitCastExpr 0x5580616ee570 <col:64> 'double' <LValueToRValue>
    |       |     `-DeclRefExpr 0x5580616ee4d8 <col:64> 'double' lvalue Var 0x5580616ee2a8 'd' 'double'
    |       `-ConditionalOperator 0x5580616ee810 <col:69, col:126> 'int'
    |         |-BinaryOperator 0x5580616ee638 <col:69, col:97> 'int' '=='
    |         | |-UnaryExprOrTypeTraitExpr 0x5580616ee5e0 <col:69, col:78> 'unsigned long' sizeof
    |         | | `-ParenExpr 0x5580616ee5c0 <col:76, col:78> 'double' lvalue
    |         | |   `-DeclRefExpr 0x5580616ee5a0 <col:77> 'double' lvalue Var 0x5580616ee2a8 'd' 'double' non_odr_use_unevaluated
    |         | `-UnaryExprOrTypeTraitExpr 0x5580616ee618 <col:83, col:97> 'unsigned long' sizeof 'double'
    |         |-CallExpr 0x5580616ee6e8 <col:101, col:111> 'int'
    |         | |-ImplicitCastExpr 0x5580616ee6d0 <col:101> 'int (*)(double)' <FunctionToPointerDecay>
    |         | | `-DeclRefExpr 0x5580616ee658 <col:101> 'int (double)' Function 0x5580616a29b8 '__isinf' 'int (double)'
    |         | `-ImplicitCastExpr 0x5580616ee710 <col:110> 'double' <LValueToRValue>
    |         |   `-DeclRefExpr 0x5580616ee678 <col:110> 'double' lvalue Var 0x5580616ee2a8 'd' 'double'
    |         `-CallExpr 0x5580616ee7b8 <col:115, col:126> 'int'
    |           |-ImplicitCastExpr 0x5580616ee7a0 <col:115> 'int (*)(long double)' <FunctionToPointerDecay>
    |           | `-DeclRefExpr 0x5580616ee728 <col:115> 'int (long double)' Function 0x5580616da348 '__isinfl' 'int (long double)'
    |           `-ImplicitCastExpr 0x5580616ee7f8 <col:125> 'long double' <FloatingCast>
    |             `-ImplicitCastExpr 0x5580616ee7e0 <col:125> 'double' <LValueToRValue>
    |               `-DeclRefExpr 0x5580616ee748 <col:125> 'double' lvalue Var 0x5580616ee2a8 'd' 'double'
    |-CallExpr 0x5580616eed58 <line:1002:3, col:128> 'void'
    | |-ImplicitCastExpr 0x5580616eed40 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5580616ee920 <col:3> 'void (int)' Function 0x5580616edb40 '__VERIFIER_assume' 'void (int)'
    | `-UnaryOperator 0x5580616eed28 <col:21, col:127> 'int' prefix '!' cannot overflow
    |   `-ParenExpr 0x5580616eed08 <col:22, col:127> 'int'
    |     `-ConditionalOperator 0x5580616eecd8 <col:23, col:126> 'int'
    |       |-BinaryOperator 0x5580616ee9d8 <col:23, col:50> 'int' '=='
    |       | |-UnaryExprOrTypeTraitExpr 0x5580616ee980 <col:23, col:32> 'unsigned long' sizeof
    |       | | `-ParenExpr 0x5580616ee960 <col:30, col:32> 'double' lvalue
    |       | |   `-DeclRefExpr 0x5580616ee940 <col:31> 'double' lvalue Var 0x5580616ee2a8 'd' 'double' non_odr_use_unevaluated
    |       | `-UnaryExprOrTypeTraitExpr 0x5580616ee9b8 <col:37, col:50> 'unsigned long' sizeof 'float'
    |       |-CallExpr 0x5580616eea50 <col:54, col:65> 'int'
    |       | |-ImplicitCastExpr 0x5580616eea38 <col:54> 'int (*)(float)' <FunctionToPointerDecay>
    |       | | `-DeclRefExpr 0x5580616ee9f8 <col:54> 'int (float)' Function 0x5580616c0588 '__isnanf' 'int (float)'
    |       | `-ImplicitCastExpr 0x5580616eea90 <col:64> 'float' <FloatingCast>
    |       |   `-ImplicitCastExpr 0x5580616eea78 <col:64> 'double' <LValueToRValue>
    |       |     `-DeclRefExpr 0x5580616eea18 <col:64> 'double' lvalue Var 0x5580616ee2a8 'd' 'double'
    |       `-ConditionalOperator 0x5580616eeca8 <col:69, col:126> 'int'
    |         |-BinaryOperator 0x5580616eeb40 <col:69, col:97> 'int' '=='
    |         | |-UnaryExprOrTypeTraitExpr 0x5580616eeae8 <col:69, col:78> 'unsigned long' sizeof
    |         | | `-ParenExpr 0x5580616eeac8 <col:76, col:78> 'double' lvalue
    |         | |   `-DeclRefExpr 0x5580616eeaa8 <col:77> 'double' lvalue Var 0x5580616ee2a8 'd' 'double' non_odr_use_unevaluated
    |         | `-UnaryExprOrTypeTraitExpr 0x5580616eeb20 <col:83, col:97> 'unsigned long' sizeof 'double'
    |         |-CallExpr 0x5580616eebb8 <col:101, col:111> 'int'
    |         | |-ImplicitCastExpr 0x5580616eeba0 <col:101> 'int (*)(double)' <FunctionToPointerDecay>
    |         | | `-DeclRefExpr 0x5580616eeb60 <col:101> 'int (double)' Function 0x5580616a5910 '__isnan' 'int (double)'
    |         | `-ImplicitCastExpr 0x5580616eebe0 <col:110> 'double' <LValueToRValue>
    |         |   `-DeclRefExpr 0x5580616eeb80 <col:110> 'double' lvalue Var 0x5580616ee2a8 'd' 'double'
    |         `-CallExpr 0x5580616eec50 <col:115, col:126> 'int'
    |           |-ImplicitCastExpr 0x5580616eec38 <col:115> 'int (*)(long double)' <FunctionToPointerDecay>
    |           | `-DeclRefExpr 0x5580616eebf8 <col:115> 'int (long double)' Function 0x5580616dc250 '__isnanl' 'int (long double)'
    |           `-ImplicitCastExpr 0x5580616eec90 <col:125> 'long double' <FloatingCast>
    |             `-ImplicitCastExpr 0x5580616eec78 <col:125> 'double' <LValueToRValue>
    |               `-DeclRefExpr 0x5580616eec18 <col:125> 'double' lvalue Var 0x5580616ee2a8 'd' 'double'
    |-CallExpr 0x5580616eef70 <line:1004:3, col:83> 'void'
    | |-ImplicitCastExpr 0x5580616eef58 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5580616eed80 <col:3> 'void (int)' Function 0x5580616edb40 '__VERIFIER_assume' 'void (int)'
    | `-BinaryOperator 0x5580616eef38 <col:21, col:82> 'int' '&&'
    |   |-BinaryOperator 0x5580616eee10 <col:21, col:25> 'int' '<'
    |   | |-ImplicitCastExpr 0x5580616eede0 <col:21> 'double' <LValueToRValue>
    |   | | `-DeclRefExpr 0x5580616eeda0 <col:21> 'double' lvalue Var 0x5580616ee2a8 'd' 'double'
    |   | `-ImplicitCastExpr 0x5580616eedf8 <col:25> 'double' <IntegralToFloating>
    |   |   `-IntegerLiteral 0x5580616eedc0 <col:25> 'long long' 9223372036854775807
    |   `-BinaryOperator 0x5580616eef18 <col:50, col:82> 'int' '>'
    |     |-ImplicitCastExpr 0x5580616eeee8 <col:50> 'double' <LValueToRValue>
    |     | `-DeclRefExpr 0x5580616eee30 <col:50> 'double' lvalue Var 0x5580616ee2a8 'd' 'double'
    |     `-ImplicitCastExpr 0x5580616eef00 <col:54, col:82> 'double' <IntegralToFloating>
    |       `-ParenExpr 0x5580616eeec8 <col:54, col:82> 'long long'
    |         `-BinaryOperator 0x5580616eeea8 <col:55, col:79> 'long long' '-'
    |           |-UnaryOperator 0x5580616eee70 <col:55, col:56> 'long long' prefix '-'
    |           | `-IntegerLiteral 0x5580616eee50 <col:56> 'long long' 9223372036854775807
    |           `-IntegerLiteral 0x5580616eee88 <col:79> 'long long' 1
    |-DeclStmt 0x5580616ef0a8 <line:1006:3, col:28>
    | `-VarDecl 0x5580616eefb0 <col:3, col:27> col:10 used d1 'double' cinit
    |   `-ImplicitCastExpr 0x5580616ef090 <col:15, col:27> 'double' <IntegralToFloating>
    |     `-CStyleCastExpr 0x5580616ef068 <col:15, col:27> 'long long' <FloatingToIntegral>
    |       `-ImplicitCastExpr 0x5580616ef050 <col:27> 'double' <LValueToRValue> part_of_explicit_cast
    |         `-DeclRefExpr 0x5580616ef018 <col:27> 'double' lvalue Var 0x5580616ee2a8 'd' 'double'
    |-CallExpr 0x5580616ef218 <line:1007:3, col:35> 'void'
    | |-ImplicitCastExpr 0x5580616ef200 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5580616ef0c0 <col:3> 'void (int)' Function 0x5580616eddb8 '__VERIFIER_assert' 'void (int)'
    | `-BinaryOperator 0x5580616ef1e0 <col:21, col:33> 'int' '=='
    |   |-CallExpr 0x5580616ef168 <col:21, col:28> 'double'
    |   | |-ImplicitCastExpr 0x5580616ef150 <col:21> 'double (*)(double)' <FunctionToPointerDecay>
    |   | | `-DeclRefExpr 0x5580616ef0e0 <col:21> 'double (double)' Function 0x5580616ac6f8 'trunc' 'double (double)'
    |   | `-ImplicitCastExpr 0x5580616ef190 <col:27> 'double' <LValueToRValue>
    |   |   `-DeclRefExpr 0x5580616ef100 <col:27> 'double' lvalue Var 0x5580616ee2a8 'd' 'double'
    |   `-ImplicitCastExpr 0x5580616ef1c8 <col:33> 'double' <LValueToRValue>
    |     `-DeclRefExpr 0x5580616ef1a8 <col:33> 'double' lvalue Var 0x5580616eefb0 'd1' 'double'
    `-ReturnStmt 0x5580616ef260 <line:1009:3, col:10>
      `-IntegerLiteral 0x5580616ef240 <col:10> 'int' 0
