TranslationUnitDecl 0x5565edefbf88 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x5565edefc848 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x5565edefc520 '__int128'
|-TypedefDecl 0x5565edefc8b8 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x5565edefc540 'unsigned __int128'
|-TypedefDecl 0x5565edefcbc0 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x5565edefc990 'struct __NSConstantString_tag'
|   `-Record 0x5565edefc910 '__NSConstantString_tag'
|-TypedefDecl 0x5565edefcc68 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x5565edefcc20 'char *'
|   `-BuiltinType 0x5565edefc020 'char'
|-TypedefDecl 0x5565edf3bb60 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x5565edefcf00 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x5565edefcd40 'struct __va_list_tag'
|     `-Record 0x5565edefccc0 '__va_list_tag'
|-FunctionDecl 0x5565edf3bca0 <pthread-wmm/mix021_pso.opt_false-unreach-call.i:1:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x5565edf3bbd0 <col:31> col:34 'int'
|-FunctionDecl 0x5565edf3be68 <line:2:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x5565edf3bf90 <line:3:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x5565edf3c0d8 <line:4:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x5565edf3c048 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x5565edf3c308 <col:40, col:99>
|   |-IfStmt 0x5565edf3c2d8 <col:42, col:88>
|   | |-UnaryOperator 0x5565edf3c1b8 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x5565edf3c1a0 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x5565edf3c180 <col:47> 'int' lvalue ParmVar 0x5565edf3c048 'expression' 'int'
|   | `-CompoundStmt 0x5565edf3c2c0 <col:59, col:88>
|   |   `-LabelStmt 0x5565edf3c2a8 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x5565edf3c238 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x5565edf3c220 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x5565edf3c1d0 <col:68> 'void () __attribute__((noreturn))' Function 0x5565edf3bf90 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x5565edf3c2f0 <col:89>
|   `-ReturnStmt 0x5565edf3c2f8 <col:91>
|-FunctionDecl 0x5565edf3c350 <line:5:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x5565edf3c410 <line:6:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x5565edf3c790 <line:8:1, line:10:76> line:8:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5565edf3c4c8 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x5565edf3c548 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x5565edf3c5c8 <line:9:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x5565edf3c648 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x5565edf3c850 <line:10:22>
|-FunctionDecl 0x5565edf628a0 <line:11:1, line:13:76> line:11:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5565edf3c8c0 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x5565edf3c940 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x5565edf3c9c0 <line:12:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x5565edf3ca40 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x5565edf62960 <line:13:22>
|-FunctionDecl 0x5565edf62c10 <line:14:1, line:15:76> line:14:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5565edf629d0 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x5565edf62a50 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x5565edf62ad0 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x5565edf62cc8 <line:15:22>
|-TypedefDecl 0x5565edf62d38 <line:17:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x5565edefc0e0 'unsigned char'
|-TypedefDecl 0x5565edf62da8 <line:18:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x5565edefc100 'unsigned short'
|-TypedefDecl 0x5565edf62e18 <line:19:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x5565edefc120 'unsigned int'
|-TypedefDecl 0x5565edf62e88 <line:20:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x5565edefc140 'unsigned long'
|-TypedefDecl 0x5565edf62ef8 <line:21:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x5565edefc040 'signed char'
|-TypedefDecl 0x5565edf62f68 <line:22:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x5565edefc0e0 'unsigned char'
|-TypedefDecl 0x5565edf62fd8 <line:23:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x5565edefc060 'short'
|-TypedefDecl 0x5565edf63048 <line:24:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x5565edefc100 'unsigned short'
|-TypedefDecl 0x5565edf630b8 <line:25:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x5565edefc080 'int'
|-TypedefDecl 0x5565edf63128 <line:26:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x5565edefc120 'unsigned int'
|-TypedefDecl 0x5565edf63198 <line:27:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x5565edefc0a0 'long'
|-TypedefDecl 0x5565edf63208 <line:28:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x5565edefc140 'unsigned long'
|-TypedefDecl 0x5565edf63278 <line:29:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x5565edefc0a0 'long'
|-TypedefDecl 0x5565edf632e8 <line:30:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x5565edefc140 'unsigned long'
|-TypedefDecl 0x5565edf63358 <line:31:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x5565edefc140 'unsigned long'
|-TypedefDecl 0x5565edf633c8 <line:32:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x5565edefc120 'unsigned int'
|-TypedefDecl 0x5565edf63438 <line:33:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x5565edefc120 'unsigned int'
|-TypedefDecl 0x5565edf634a8 <line:34:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x5565edefc140 'unsigned long'
|-TypedefDecl 0x5565edf63518 <line:35:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x5565edefc140 'unsigned long'
|-TypedefDecl 0x5565edf63588 <line:36:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x5565edefc120 'unsigned int'
|-TypedefDecl 0x5565edf635f8 <line:37:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x5565edefc140 'unsigned long'
|-TypedefDecl 0x5565edf63668 <line:38:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x5565edefc0a0 'long'
|-TypedefDecl 0x5565edf636d8 <line:39:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x5565edefc0a0 'long'
|-TypedefDecl 0x5565edf63748 <line:40:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x5565edefc080 'int'
|-RecordDecl 0x5565edf637a0 <line:41:9, col:32> col:9 struct definition
| `-FieldDecl 0x5565edf63918 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x5565edf639d0 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x5565edf63970 'struct __fsid_t' sugar
|   `-RecordType 0x5565edf63820 '__fsid_t'
|     `-Record 0x5565edf637a0 ''
|-TypedefDecl 0x5565edf63a58 <line:42:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x5565edefc0a0 'long'
|-TypedefDecl 0x5565edf63ac8 <line:43:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x5565edefc140 'unsigned long'
|-TypedefDecl 0x5565edf63b38 <line:44:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x5565edefc140 'unsigned long'
|-TypedefDecl 0x5565edf63ba8 <line:45:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x5565edefc120 'unsigned int'
|-TypedefDecl 0x5565edf63c18 <line:46:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x5565edefc0a0 'long'
|-TypedefDecl 0x5565edf63c88 <line:47:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x5565edefc120 'unsigned int'
|-TypedefDecl 0x5565edf63cf8 <line:48:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x5565edefc0a0 'long'
|-TypedefDecl 0x5565edf63d68 <line:49:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x5565edefc080 'int'
|-TypedefDecl 0x5565edf63dd8 <line:50:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x5565edefc080 'int'
|-TypedefDecl 0x5565edf63e48 <line:51:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x5565edefc080 'int'
|-TypedefDecl 0x5565edf63eb8 <line:52:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x5565edefc7a0 'void *'
|   `-BuiltinType 0x5565edefbfe0 'void'
|-TypedefDecl 0x5565edf63f28 <line:53:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x5565edefc0a0 'long'
|-TypedefDecl 0x5565edf63f98 <line:54:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x5565edefc0a0 'long'
|-TypedefDecl 0x5565edf64008 <line:55:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x5565edefc0a0 'long'
|-TypedefDecl 0x5565edf64078 <line:56:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x5565edefc140 'unsigned long'
|-TypedefDecl 0x5565edf640e8 <line:57:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x5565edefc140 'unsigned long'
|-TypedefDecl 0x5565edf64158 <line:58:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x5565edefc140 'unsigned long'
|-TypedefDecl 0x5565edf641c8 <line:59:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x5565edefc140 'unsigned long'
|-TypedefDecl 0x5565edf64238 <line:60:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x5565edefc0a0 'long'
|-TypedefDecl 0x5565edf642a8 <line:61:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x5565edefc0a0 'long'
|-TypedefDecl 0x5565edf64318 <line:62:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x5565edefc0a0 'long'
|-TypedefDecl 0x5565edf64388 <line:63:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x5565edefc140 'unsigned long'
|-TypedefDecl 0x5565edf64418 <line:64:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x5565edf643e0 '__off64_t' sugar
|   |-Typedef 0x5565edf636d8 '__off64_t'
|   `-BuiltinType 0x5565edefc0a0 'long'
|-TypedefDecl 0x5565edf64510 <line:65:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x5565edf644d0 '__quad_t *'
|   `-TypedefType 0x5565edf64470 '__quad_t' sugar
|     |-Typedef 0x5565edf63278 '__quad_t'
|     `-BuiltinType 0x5565edefc0a0 'long'
|-TypedefDecl 0x5565edf64580 <line:66:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x5565edefcc20 'char *'
|   `-BuiltinType 0x5565edefc020 'char'
|-TypedefDecl 0x5565edf645f0 <line:67:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x5565edefc0a0 'long'
|-TypedefDecl 0x5565edf64660 <line:68:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x5565edefc120 'unsigned int'
|-FunctionDecl 0x5565edf647a8 <line:69:1, line:73:1> line:70:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x5565edf646d0 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x5565edf64ae8 <line:71:1, line:73:1>
|   `-ReturnStmt 0x5565edf64ad8 <line:72:3, col:34>
|     `-CallExpr 0x5565edf64a98 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x5565edf64a80 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x5565edf64a10 <col:10> '<builtin fn type>' Function 0x5565edf64880 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x5565edf64ac0 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x5565edf64a30 <col:29> 'unsigned int' lvalue ParmVar 0x5565edf646d0 '__bsx' 'unsigned int'
|-FunctionDecl 0x5565edf64880 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x5565edf64920 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x5565edf64990 <col:10> Implicit
| `-ConstAttr 0x5565edf649e8 <col:10> Implicit
|-FunctionDecl 0x5565edf64c40 <line:74:1, line:78:1> line:75:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x5565edf64b38 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x5565edf64f58 <line:76:1, line:78:1>
|   `-ReturnStmt 0x5565edf64f48 <line:77:3, col:34>
|     `-CallExpr 0x5565edf64f08 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x5565edf64ef0 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x5565edf64e78 <col:10> '<builtin fn type>' Function 0x5565edf64ce8 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x5565edf64f30 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x5565edf64e98 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x5565edf64b38 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x5565edf64ce8 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x5565edf64d88 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x5565edf64df8 <col:10> Implicit
| `-ConstAttr 0x5565edf64e50 <col:10> Implicit
|-TypedefDecl 0x5565edf64f88 <line:79:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x5565edefc140 'unsigned long'
|-TypedefDecl 0x5565edf65018 <line:81:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x5565edf64fe0 '__time_t' sugar
|   |-Typedef 0x5565edf63c18 '__time_t'
|   `-BuiltinType 0x5565edefc0a0 'long'
|-RecordDecl 0x5565edf65070 <line:84:1, line:88:3> line:84:8 struct timespec definition
| |-FieldDecl 0x5565edf65128 <line:86:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x5565edf651b8 <line:87:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x5565edf65248 <line:89:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x5565edf65210 '__pid_t' sugar
|   |-Typedef 0x5565edf63748 '__pid_t'
|   `-BuiltinType 0x5565edefc080 'int'
|-RecordDecl 0x5565edf652a0 <line:90:1, line:93:3> line:90:8 struct sched_param definition
| `-FieldDecl 0x5565edf65360 <line:92:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x5565edf653b0 <line:96:1, line:99:3> line:96:8 struct __sched_param definition
| `-FieldDecl 0x5565edf65470 <line:98:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x5565edf654d8 <line:100:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x5565edefc140 'unsigned long'
|-RecordDecl 0x5565edf65530 <line:101:9, line:104:1> line:101:9 struct definition
| `-FieldDecl 0x5565edf657c0 <line:103:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x5565edf678b0 <line:101:1, line:104:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x5565edf65810 'struct cpu_set_t' sugar
|   `-RecordType 0x5565edf655b0 'cpu_set_t'
|     `-Record 0x5565edf65530 ''
|-FunctionDecl 0x5565edf67b88 <line:106:1, line:107:42> line:106:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x5565edf67958 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x5565edf67a60 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x5565edf67c38 <line:107:19>
|-FunctionDecl 0x5565edf67e10 <line:108:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x5565edf67ca0 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x5565edf67eb8 <col:69>
|-FunctionDecl 0x5565edf68030 <line:109:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x5565edf67f20 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x5565edf680d8 <col:64>
|-FunctionDecl 0x5565edf68398 <line:112:1, line:113:45> line:112:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x5565edf68140 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5565edf68278 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x5565edf68448 <line:113:22>
|-FunctionDecl 0x5565edf686c8 <line:114:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x5565edf684b0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5565edf685a8 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x5565edf68778 <col:88>
|-FunctionDecl 0x5565edf68a98 <line:115:1, line:116:85> line:115:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x5565edf687e0 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5565edf688c0 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x5565edf68950 <line:116:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x5565edf68b50 <col:62>
|-FunctionDecl 0x5565edf68cc8 <line:117:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x5565edf68bb8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x5565edf68d70 <col:63>
|-FunctionDecl 0x5565edf68e98 <line:118:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x5565edf68f38 <col:47>
|-FunctionDecl 0x5565edf69040 <line:119:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x5565edf68fa8 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x5565edf690e8 <col:69>
|-FunctionDecl 0x5565edf691f0 <line:120:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x5565edf69158 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x5565edf69298 <col:69>
|-FunctionDecl 0x5565edf69558 <line:121:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x5565edf69300 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5565edf69438 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x5565edf69608 <col:88>
|-TypedefDecl 0x5565edf69698 <line:125:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x5565edf69660 '__clock_t' sugar
|   |-Typedef 0x5565edf63a58 '__clock_t'
|   `-BuiltinType 0x5565edefc0a0 'long'
|-TypedefDecl 0x5565edf69728 <line:128:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x5565edf696f0 '__clockid_t' sugar
|   |-Typedef 0x5565edf63e48 '__clockid_t'
|   `-BuiltinType 0x5565edefc080 'int'
|-TypedefDecl 0x5565edf697b8 <line:129:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x5565edf69780 '__timer_t' sugar
|   |-Typedef 0x5565edf63eb8 '__timer_t'
|   `-PointerType 0x5565edefc7a0 'void *'
|     `-BuiltinType 0x5565edefbfe0 'void'
|-RecordDecl 0x5565edf69810 <line:131:1, line:144:1> line:131:8 struct tm definition
| |-FieldDecl 0x5565edf698e8 <line:133:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x5565edf69950 <line:134:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x5565edf699b8 <line:135:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x5565edf69a20 <line:136:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x5565edf69a88 <line:137:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x5565edf69af0 <line:138:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x5565edf69b58 <line:139:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x5565edf69bc0 <line:140:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x5565edf69c28 <line:141:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x5565edf69c90 <line:142:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x5565edf69cf8 <line:143:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x5565edf69d48 <line:147:1, line:151:3> line:147:8 struct itimerspec definition
| |-FieldDecl 0x5565edf69e18 <line:149:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x5565edf69e88 <line:150:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x5565edf69f30 <line:152:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x5565edf6a100 <line:154:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x5565edf6a1a0 <col:45>
|-FunctionDecl 0x5565edf6a380 <line:155:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x5565edf6a270 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x5565edf6a428 <col:54>
|-FunctionDecl 0x5565edf6a628 <line:156:1, line:157:73> line:156:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x5565edf6a490 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x5565edf6a508 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x5565edf6a6d8 <line:157:22>
| `-ConstAttr 0x5565edf6a730 <col:63>
|-FunctionDecl 0x5565edf6b560 <line:158:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x5565edf6a828 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x5565edf6b608 <col:56>
|-FunctionDecl 0x5565edf6b9b0 <line:159:1, line:161:77> line:159:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x5565edf6b678 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x5565edf6b6f0 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x5565edf6b770 <line:160:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x5565edf6b868 <line:161:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x5565edf6ba70 <col:54>
|-RecordDecl 0x5565edf6bac8 <line:163:9, line:170:1> line:163:16 struct __locale_struct definition
| |-RecordDecl 0x5565edf6bb78 parent 0x5565edefbf88 <line:165:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x5565edf6bdd8 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x5565edf6be78 <line:166:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x5565edf6bee0 <line:167:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x5565edf6bf48 <line:168:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x5565edf6c038 <line:169:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x5565edf6c158 <line:163:1, line:170:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x5565edf6c100 'struct __locale_struct *'
|   `-ElaboratedType 0x5565edf6c090 'struct __locale_struct' sugar
|     `-RecordType 0x5565edf6bb50 'struct __locale_struct'
|       `-Record 0x5565edf6bac8 '__locale_struct'
|-TypedefDecl 0x5565edf6c208 <line:171:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x5565edf6c1d0 '__locale_t' sugar
|   |-Typedef 0x5565edf6c158 '__locale_t'
|   `-PointerType 0x5565edf6c100 'struct __locale_struct *'
|     `-ElaboratedType 0x5565edf6c090 'struct __locale_struct' sugar
|       `-RecordType 0x5565edf6bb50 'struct __locale_struct'
|         `-Record 0x5565edf6bac8 '__locale_struct'
|-FunctionDecl 0x5565edf6c610 <line:172:1, line:175:63> line:172:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x5565edf6c278 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x5565edf6c2f0 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x5565edf6c370 <line:173:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x5565edf6c400 <line:174:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x5565edf6c478 <line:175:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x5565edf6c6d8 <col:40>
|-FunctionDecl 0x5565edf6c8c8 <line:177:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x5565edf6c7a0 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x5565edf6c970 <col:66>
|-FunctionDecl 0x5565edf6ca80 <line:178:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x5565edf6c9d8 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x5565edf6cb28 <col:69>
|-FunctionDecl 0x5565edf6cd58 <line:180:1, line:181:75> line:180:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x5565edf6cb90 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x5565edf6cc20 <line:181:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x5565edf6ce08 <col:52>
|-FunctionDecl 0x5565edf6cfb0 <line:182:1, line:183:78> line:182:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x5565edf6ce70 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x5565edf6cf00 <line:183:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x5565edf6d060 <col:55>
|-FunctionDecl 0x5565edf6d1f8 <line:185:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x5565edf6d0e0 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x5565edf6d2a0 <col:62>
|-FunctionDecl 0x5565edf6d418 <line:186:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x5565edf6d308 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x5565edf6d4c0 <col:60>
|-FunctionDecl 0x5565edf6d718 <line:188:1, line:189:67> line:188:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x5565edf6d578 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x5565edf6d5f8 <line:189:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x5565edf6d7c8 <col:44>
|-FunctionDecl 0x5565edf6d9d8 <line:190:1, line:191:72> line:190:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x5565edf6d830 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x5565edf6d8b0 <line:191:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x5565edf6da88 <col:49>
|-VarDecl 0x5565edf6db88 <line:192:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x5565edf6dc08 <line:193:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x5565edf6dc88 <line:194:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x5565edf6dd50 <line:195:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x5565edf6de80 <line:196:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x5565edf6df20 <col:42>
|-VarDecl 0x5565edf6df90 <line:197:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x5565edf6e010 <line:198:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x5565edf6e198 <line:199:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x5565edf6e088 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x5565edf6e240 <col:57>
|-FunctionDecl 0x5565edf6e350 <line:200:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x5565edf6e2c0 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x5565edf6e3f8 <col:56>
|-FunctionDecl 0x5565edf6f540 <line:201:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x5565edf6e478 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x5565edf6f5e8 <col:59>
|-FunctionDecl 0x5565edf6f6f0 <line:202:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x5565edf6f658 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x5565edf6f798 <col:48>
| `-ConstAttr 0x5565edf6f7f0 <col:89>
|-FunctionDecl 0x5565edf6fa58 <line:203:1, line:204:37> line:203:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x5565edf6f8a8 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x5565edf6f938 <line:204:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x5565edf6fcb8 <line:205:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x5565edf6fb48 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5565edf6fbd8 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x5565edf6fd68 <col:88>
|-FunctionDecl 0x5565edf6ff00 <line:206:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x5565edf6fdd0 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5565edf6fe60 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x5565edf6ffb0 <col:88>
|-FunctionDecl 0x5565edf701c8 <line:207:1, line:208:45> line:207:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x5565edf70018 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5565edf700a8 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x5565edf70278 <line:208:22>
|-FunctionDecl 0x5565edf705e8 <line:209:1, line:211:30> line:209:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x5565edf702e0 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5565edf70360 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x5565edf703f0 <line:210:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x5565edf70480 <line:211:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x5565edf708e8 <line:212:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x5565edf706e8 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x5565edf707c0 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x5565edf70998 <col:85>
|-FunctionDecl 0x5565edf70d88 <line:213:1, line:215:75> line:213:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x5565edf70a00 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5565edf70b38 <line:214:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x5565edf70c40 <line:215:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x5565edf70e40 <col:52>
|-FunctionDecl 0x5565edf70fb8 <line:216:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x5565edf70ea8 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x5565edf71060 <col:61>
|-FunctionDecl 0x5565edf71560 <line:217:1, line:219:85> line:217:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x5565edf710c8 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x5565edf71148 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x5565edf71278 <line:218:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x5565edf71368 <line:219:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x5565edf71620 <col:62>
|-FunctionDecl 0x5565edf71838 <line:220:1, line:221:45> line:220:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x5565edf71688 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x5565edf71718 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x5565edf718e8 <line:221:22>
|-FunctionDecl 0x5565edf719e8 <line:222:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x5565edf71950 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x5565edf71a90 <col:65>
|-TypedefDecl 0x5565edf71b00 <line:224:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x5565edefc140 'unsigned long'
|-RecordDecl 0x5565edf71b58 <line:225:1, line:229:1> line:225:7 union pthread_attr_t definition
| |-FieldDecl 0x5565edf71ca0 <line:227:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x5565edf71d08 <line:228:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5565edf71db8 <line:230:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x5565edf71d60 'union pthread_attr_t' sugar
|   `-RecordType 0x5565edf71be0 'union pthread_attr_t'
|     `-Record 0x5565edf71b58 'pthread_attr_t'
|-RecordDecl 0x5565edf71e10 <line:231:9, line:235:1> line:231:16 struct __pthread_internal_list definition
| |-FieldDecl 0x5565edf71f88 <line:233:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x5565edf72000 <line:234:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x5565edf720b0 <line:231:1, line:235:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x5565edf72050 'struct __pthread_internal_list' sugar
|   `-RecordType 0x5565edf71e90 'struct __pthread_internal_list'
|     `-Record 0x5565edf71e10 '__pthread_internal_list'
|-RecordDecl 0x5565edf72120 <line:236:9, line:250:1> line:236:9 union definition
| |-RecordDecl 0x5565edf721c8 parent 0x5565edefbf88 <line:238:3, line:247:3> line:238:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x5565edf722a0 <line:240:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x5565edf72308 <line:241:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x5565edf72370 <line:242:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x5565edf723d8 <line:243:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x5565edf72440 <line:244:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x5565edf724a8 <line:245:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x5565edf76580 <line:246:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x5565edf76630 <line:238:3, line:247:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x5565edf76720 <line:248:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x5565edf76788 <line:249:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5565edf76910 <line:236:1, line:250:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x5565edf768b0 'union pthread_mutex_t' sugar
|   `-RecordType 0x5565edf721a0 'pthread_mutex_t'
|     `-Record 0x5565edf72120 ''
|-RecordDecl 0x5565edf76980 <line:251:9, line:255:1> line:251:9 union definition
| |-FieldDecl 0x5565edf76ac0 <line:253:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x5565edf76b28 <line:254:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x5565edf76be0 <line:251:1, line:255:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x5565edf76b80 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x5565edf76a00 'pthread_mutexattr_t'
|     `-Record 0x5565edf76980 ''
|-RecordDecl 0x5565edf76c50 <line:256:9, line:271:1> line:256:9 union definition
| |-RecordDecl 0x5565edf76cf8 <line:258:3, line:268:3> line:258:3 struct definition
| | |-FieldDecl 0x5565edf76dc0 <line:260:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x5565edf76e28 <line:261:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x5565edf76e90 <line:262:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x5565edf76ef8 <line:263:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x5565edf76f60 <line:264:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x5565edf76fc8 <line:265:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x5565edf77030 <line:266:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x5565edf77098 <line:267:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x5565edf77150 <line:258:3, line:268:5> col:5 __data 'struct (anonymous struct at pthread-wmm/mix021_pso.opt_false-unreach-call.i:258:3)':'struct pthread_cond_t::(anonymous at pthread-wmm/mix021_pso.opt_false-unreach-call.i:258:3)'
| |-FieldDecl 0x5565edf77240 <line:269:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x5565edf772a8 <line:270:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x5565edf773e0 <line:256:1, line:271:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x5565edf77380 'union pthread_cond_t' sugar
|   `-RecordType 0x5565edf76cd0 'pthread_cond_t'
|     `-Record 0x5565edf76c50 ''
|-RecordDecl 0x5565edf77450 <line:272:9, line:276:1> line:272:9 union definition
| |-FieldDecl 0x5565edf77590 <line:274:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x5565edf775f8 <line:275:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x5565edf776b0 <line:272:1, line:276:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x5565edf77650 'union pthread_condattr_t' sugar
|   `-RecordType 0x5565edf774d0 'pthread_condattr_t'
|     `-Record 0x5565edf77450 ''
|-TypedefDecl 0x5565edf77738 <line:277:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x5565edefc120 'unsigned int'
|-TypedefDecl 0x5565edf777a8 <line:278:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x5565edefc080 'int'
|-RecordDecl 0x5565edf77800 <line:279:9, line:297:1> line:279:9 union definition
| |-RecordDecl 0x5565edf778a8 <line:281:3, line:294:3> line:281:3 struct definition
| | |-FieldDecl 0x5565edf77970 <line:283:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x5565edf779d8 <line:284:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x5565edf77a40 <line:285:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x5565edf77aa8 <line:286:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x5565edf77b10 <line:287:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x5565edf77b78 <line:288:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x5565edf77be0 <line:289:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x5565edf77c48 <line:290:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x5565edf77cb0 <line:291:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x5565edf77d18 <line:292:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x5565edf77d80 <line:293:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x5565edf77e30 <line:281:3, line:294:5> col:5 __data 'struct (anonymous struct at pthread-wmm/mix021_pso.opt_false-unreach-call.i:281:3)':'struct pthread_rwlock_t::(anonymous at pthread-wmm/mix021_pso.opt_false-unreach-call.i:281:3)'
| |-FieldDecl 0x5565edf77ed8 <line:295:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x5565edf77f40 <line:296:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5565edf78090 <line:279:1, line:297:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x5565edf78030 'union pthread_rwlock_t' sugar
|   `-RecordType 0x5565edf77880 'pthread_rwlock_t'
|     `-Record 0x5565edf77800 ''
|-RecordDecl 0x5565edf78100 <line:298:9, line:302:1> line:298:9 union definition
| |-FieldDecl 0x5565edf78240 <line:300:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x5565edf782a8 <line:301:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5565edf78360 <line:298:1, line:302:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x5565edf78300 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x5565edf78180 'pthread_rwlockattr_t'
|     `-Record 0x5565edf78100 ''
|-TypedefDecl 0x5565edf783e8 <line:303:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x5565edefc084 'volatile int' volatile
|   `-BuiltinType 0x5565edefc080 'int'
|-RecordDecl 0x5565edf78440 <line:304:9, line:308:1> line:304:9 union definition
| |-FieldDecl 0x5565edf7a5b0 <line:306:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x5565edf7a618 <line:307:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5565edf7a6d0 <line:304:1, line:308:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x5565edf7a670 'union pthread_barrier_t' sugar
|   `-RecordType 0x5565edf784c0 'pthread_barrier_t'
|     `-Record 0x5565edf78440 ''
|-RecordDecl 0x5565edf7a740 <line:309:9, line:313:1> line:309:9 union definition
| |-FieldDecl 0x5565edf7a840 <line:311:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x5565edf7a8a8 <line:312:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x5565edf7a960 <line:309:1, line:313:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x5565edf7a900 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x5565edf7a7c0 'pthread_barrierattr_t'
|     `-Record 0x5565edf7a740 ''
|-TypedefDecl 0x5565edf7aa78 <line:314:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x5565edf7aa10 'long [8]' 8 
|   `-BuiltinType 0x5565edefc0a0 'long'
|-EnumDecl 0x5565edf7aad0 <line:315:1, line:319:1> line:315:1
| |-EnumConstantDecl 0x5565edf7ab98 <line:317:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x5565edf7abe8 <line:318:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x5565edf7ac38 <line:320:1, line:331:1> line:320:1
| |-EnumConstantDecl 0x5565edf7ad08 <line:322:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x5565edf7ad58 <line:323:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x5565edf7ada8 <line:324:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x5565edf7adf8 <line:325:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x5565edf7ae80 <line:327:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x5565edf7ae68 <col:26> 'int'
| |   `-DeclRefExpr 0x5565edf7ae48 <col:26> 'int' EnumConstant 0x5565edf7ad08 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x5565edf7af08 <line:328:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x5565edf7aef0 <col:29> 'int'
| |   `-DeclRefExpr 0x5565edf7aed0 <col:29> 'int' EnumConstant 0x5565edf7ad58 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x5565edf7af90 <line:329:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x5565edf7af78 <col:30> 'int'
| |   `-DeclRefExpr 0x5565edf7af58 <col:30> 'int' EnumConstant 0x5565edf7ada8 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x5565edf7b018 <line:330:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x5565edf7b000 <col:27> 'int'
|     `-DeclRefExpr 0x5565edf7afe0 <col:27> 'int' EnumConstant 0x5565edf7ae80 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x5565edf7b068 <line:332:1, line:338:1> line:332:1
| |-EnumConstantDecl 0x5565edf7b138 <line:334:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x5565edf7b1c0 <line:335:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x5565edf7b1a8 <col:30> 'int'
| |   `-DeclRefExpr 0x5565edf7b188 <col:30> 'int' EnumConstant 0x5565edf7b138 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x5565edf7b210 <line:336:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x5565edf7b298 <line:337:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x5565edf7b280 <col:29> 'int'
|     `-DeclRefExpr 0x5565edf7b260 <col:29> 'int' EnumConstant 0x5565edf7b210 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x5565edf7b2e8 <line:339:1, line:344:1> line:339:1
| |-EnumConstantDecl 0x5565edf7b3b8 <line:341:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x5565edf7b408 <line:342:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x5565edf7b458 <line:343:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x5565edf7b4a8 <line:345:1, line:351:1> line:345:1
| |-EnumConstantDecl 0x5565edf7b5c0 <line:347:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x5565edf7b610 <line:348:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x5565edf7b660 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x5565edf7b6e8 <line:350:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x5565edf7b6d0 <col:31> 'int'
|     `-DeclRefExpr 0x5565edf7b6b0 <col:31> 'int' EnumConstant 0x5565edf7b5c0 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x5565edf7b738 <line:352:1, line:356:1> line:352:1
| |-EnumConstantDecl 0x5565edf7b808 <line:354:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x5565edf7b858 <line:355:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x5565edf7b8a8 <line:357:1, line:361:1> line:357:1
| |-EnumConstantDecl 0x5565edf7b978 <line:359:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x5565edf7b9c8 <line:360:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x5565edf7ba18 <line:362:1, line:366:1> line:362:1
| |-EnumConstantDecl 0x5565edf7bae8 <line:364:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x5565edf7bb38 <line:365:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x5565edf7bb88 <line:367:1, line:373:1> line:367:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x5565edf7bdc8 <line:369:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x5565edf7be30 <line:370:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x5565edf7be98 <line:371:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x5565edf7bfb8 <line:372:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x5565edf7c008 <line:374:1, line:378:1> line:374:1
| |-EnumConstantDecl 0x5565edf7c0d8 <line:376:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x5565edf7c128 <line:377:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x5565edf7c178 <line:379:1, line:383:1> line:379:1
| |-EnumConstantDecl 0x5565edf7c248 <line:381:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x5565edf7c298 <line:382:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x5565edf7c8f8 <line:385:1, line:388:96> line:385:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x5565edf7c390 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x5565edf7c4a0 <line:386:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5565edf7c6e0 <line:387:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x5565edf7c760 <line:388:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x5565edf7c9b8 <col:47>
| |-NonNullAttr 0x5565edf7ca10 <col:77, col:94> 1 3
| `-CallbackAttr 0x5565edf7ca48 <line:385:12> Implicit 2 3
|-FunctionDecl 0x5565edf7cb70 <line:389:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x5565edf7caa0 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x5565edf7cdc8 <line:390:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x5565edf7cc28 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x5565edf7cca8 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x5565edf7cf98 <line:391:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x5565edf7ce88 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x5565edf7d040 <col:60>
|-FunctionDecl 0x5565edf7d190 <line:392:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x5565edf7d230 <col:54>
| `-ConstAttr 0x5565edf7d288 <col:95>
|-FunctionDecl 0x5565edf7d458 <line:393:1, line:394:70> line:393:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x5565edf7d2c0 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5565edf7d338 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x5565edf7d508 <line:394:19>
| `-ConstAttr 0x5565edf7d560 <col:60>
|-FunctionDecl 0x5565edf7df68 <line:395:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x5565edf7de30 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x5565edf7e010 <col:71>
| `-NonNullAttr 0x5565edf7e068 <col:112, col:126> 1
|-FunctionDecl 0x5565edf7e170 <line:396:1, line:397:79> line:396:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x5565edf7e0b8 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x5565edf7e218 <line:397:22>
| `-NonNullAttr 0x5565edf7e270 <col:63, col:77> 1
|-FunctionDecl 0x5565edf7e498 <line:398:1, line:400:82> line:398:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x5565edf7e2b8 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x5565edf7e338 <line:399:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x5565edf7e548 <line:400:22>
| `-NonNullAttr 0x5565edf7e5a0 <col:63, col:80> 1 2
|-FunctionDecl 0x5565edf7e7a8 <line:401:1, line:403:79> line:401:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x5565edf7e5e8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5565edf7e668 <line:402:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x5565edf7e858 <line:403:22>
| `-NonNullAttr 0x5565edf7e8b0 <col:63, col:77> 1
|-FunctionDecl 0x5565edf7eb08 <line:404:1, line:406:82> line:404:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x5565edf7e8f8 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x5565edf7e9a0 <line:405:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x5565edf7ebb8 <line:406:22>
| `-NonNullAttr 0x5565edf7ec10 <col:63, col:80> 1 2
|-FunctionDecl 0x5565edf7fe48 <line:407:1, line:409:79> line:407:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x5565edf7ec58 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5565edf7ecd0 <line:408:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x5565edf7fef8 <line:409:22>
| `-NonNullAttr 0x5565edf7ff50 <col:63, col:77> 1
|-FunctionDecl 0x5565edf80188 <line:410:1, line:412:82> line:410:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x5565edf7ff98 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5565edf80028 <line:411:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x5565edf80238 <line:412:22>
| `-NonNullAttr 0x5565edf80290 <col:63, col:80> 1 2
|-FunctionDecl 0x5565edf804c8 <line:413:1, line:415:97> line:413:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x5565edf802d8 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x5565edf80368 <line:414:12, line:415:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x5565edf80578 <col:37>
| `-NonNullAttr 0x5565edf805d0 <col:78, col:95> 1 2
|-FunctionDecl 0x5565edf807b8 <line:416:1, line:418:82> line:416:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5565edf80618 <col:41, line:417:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5565edf80698 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x5565edf80868 <line:418:22>
| `-NonNullAttr 0x5565edf808c0 <col:63, col:80> 1 2
|-FunctionDecl 0x5565edf80a48 <line:419:1, line:420:79> line:419:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x5565edf80908 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5565edf80988 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x5565edf80af8 <line:420:22>
| `-NonNullAttr 0x5565edf80b50 <col:63, col:77> 1
|-FunctionDecl 0x5565edf80cf8 <line:421:1, line:423:82> line:421:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5565edf80b98 <col:42, line:422:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5565edf80c18 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x5565edf80da8 <line:423:22>
| `-NonNullAttr 0x5565edf81e30 <col:63, col:80> 1 2
|-FunctionDecl 0x5565edf81fb8 <line:424:1, line:426:79> line:424:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x5565edf81e78 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5565edf81ef8 <line:425:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x5565edf82068 <line:426:22>
| `-NonNullAttr 0x5565edf820c0 <col:63, col:77> 1
|-FunctionDecl 0x5565edf82268 <line:427:1, line:429:82> line:427:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5565edf82108 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5565edf82188 <line:428:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x5565edf82318 <line:429:22>
| `-NonNullAttr 0x5565edf82370 <col:63, col:80> 1 2
|-FunctionDecl 0x5565edf824f8 <line:430:1, line:431:79> line:430:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x5565edf823b8 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5565edf82438 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x5565edf825a8 <line:431:22>
| `-NonNullAttr 0x5565edf82600 <col:63, col:77> 1
|-FunctionDecl 0x5565edf82828 <line:432:1, line:434:115> line:432:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x5565edf82648 <col:39, line:433:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5565edf826c8 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x5565edf828d8 <line:434:22>
| |-NonNullAttr 0x5565edf82930 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x5565edf82968 <col:100> "" ""
|-FunctionDecl 0x5565edf82b78 <line:435:1, line:437:112> line:435:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x5565edf829b8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5565edf82a38 <line:436:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x5565edf82c28 <line:437:22>
| |-NonNullAttr 0x5565edf82c80 <col:63, col:77> 1
| `-DeprecatedAttr 0x5565edf82cb8 <col:97> "" ""
|-FunctionDecl 0x5565edf82eb8 <line:438:1, line:440:82> line:438:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x5565edf82d08 <col:39, line:439:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5565edf82d80 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x5565edf82f68 <line:440:22>
| `-NonNullAttr 0x5565edf82fc0 <col:63, col:80> 1 2
|-FunctionDecl 0x5565edf83140 <line:441:1, line:443:79> line:441:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x5565edf83008 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5565edf83080 <line:442:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x5565edf831f0 <line:443:22>
| `-NonNullAttr 0x5565edf83248 <col:63, col:77> 1
|-FunctionDecl 0x5565edf83538 <line:444:1, line:447:85> line:444:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x5565edf83298 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5565edf83318 <line:445:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x5565edf83390 <line:446:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x5565edf835f0 <line:447:22>
| `-NonNullAttr 0x5565edf83648 <col:63, col:83> 1 2 3
|-FunctionDecl 0x5565edf838f8 <line:448:1, line:449:100> line:448:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x5565edf836a0 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5565edf83720 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x5565edf83798 <line:449:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x5565edf839b0 <col:43>
| `-NonNullAttr 0x5565edf83a08 <col:84, col:98> 1
|-FunctionDecl 0x5565edf83cc8 <line:450:1, line:452:79> line:450:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x5565edf83a58 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5565edf83ad8 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x5565edf83b68 <line:451:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x5565edf83d80 <line:452:22>
| `-NonNullAttr 0x5565edf83dd8 <col:63, col:77> 3
|-FunctionDecl 0x5565edf840e8 <line:453:1, line:456:82> line:453:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x5565edf83e50 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5565edf83ed0 <line:454:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x5565edf83f60 <line:455:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x5565edf841a0 <line:456:22>
| `-NonNullAttr 0x5565edf841f8 <col:63, col:80> 2 3
|-FunctionDecl 0x5565edf843e8 <line:457:1, line:458:45> line:457:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x5565edf84248 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5565edf842c8 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x5565edf84498 <line:458:22>
|-FunctionDecl 0x5565edf84868 <line:459:1, line:460:71> line:459:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x5565edf84560 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x5565edf84700 <line:460:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x5565edf84918 <col:52, col:69> 1 2
|-FunctionDecl 0x5565edf84ac0 <line:461:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x5565edf849a0 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x5565edf84a20 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x5565edf84ca8 <line:462:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x5565edf84b88 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x5565edf84c08 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x5565edf84e60 <line:463:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x5565edf84d68 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x5565edf84fa0 <line:464:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x5565edf85040 <line:465:9, line:473:1> line:465:9 struct definition
| |-RecordDecl 0x5565edf850e8 <line:467:3, line:471:3> line:467:3 struct definition
| | |-FieldDecl 0x5565edf851d8 <line:469:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x5565edf85240 <line:470:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x5565edf85410 <line:467:3, line:471:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at pthread-wmm/mix021_pso.opt_false-unreach-call.i:467:3) [1]'
| `-FieldDecl 0x5565edf85508 <line:472:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x5565edf855c0 <line:465:1, line:473:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x5565edf85560 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x5565edf850c0 '__pthread_unwind_buf_t'
| |   `-Record 0x5565edf85040 ''
| `-AlignedAttr 0x5565edf85618 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x5565edf85690 <line:474:1, line:480:1> line:474:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x5565edf857f0 <line:476:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x5565edf85858 <line:477:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x5565edf858c0 <line:478:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x5565edf85928 <line:479:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x5565edf85b30 <line:481:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x5565edf85a20 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x5565edf85c78 <line:483:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x5565edf85be8 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x5565edf85e70 <line:485:1, line:487:31> line:485:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5565edf85d30 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x5565edf85f18 <line:487:22>
|-RecordDecl 0x5565edf85f70 <line:489:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x5565edf86288 <line:490:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x5565edf860e8 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x5565edf86168 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x5565edf86338 <col:86>
| `-ReturnsTwiceAttr 0x5565edf86390 <col:12> Implicit
|-FunctionDecl 0x5565edf866b8 <line:491:1, line:493:79> line:491:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x5565edf86460 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x5565edf86570 <line:492:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x5565edf86768 <line:493:22>
| `-NonNullAttr 0x5565edf867c0 <col:63, col:77> 1
|-FunctionDecl 0x5565edf86938 <line:494:1, line:495:79> line:494:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5565edf86808 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5565edf869e0 <line:495:22>
| `-NonNullAttr 0x5565edf86a38 <col:63, col:77> 1
|-FunctionDecl 0x5565edf86b40 <line:496:1, line:497:68> line:496:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5565edf86a88 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5565edf86be8 <line:497:22>
| `-NonNullAttr 0x5565edf86c40 <col:52, col:66> 1
|-FunctionDecl 0x5565edf86d40 <line:498:1, line:499:68> line:498:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5565edf86c88 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5565edf86de8 <line:499:22>
| `-NonNullAttr 0x5565edf86e40 <col:52, col:66> 1
|-FunctionDecl 0x5565edf87088 <line:500:1, line:502:85> line:500:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x5565edf86e98 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x5565edf86f28 <line:501:9, line:502:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x5565edf87138 <col:36>
| `-NonNullAttr 0x5565edf87190 <col:66, col:83> 1 2
|-FunctionDecl 0x5565edf87290 <line:503:1, line:504:68> line:503:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5565edf871d8 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5565edf87338 <line:504:22>
| `-NonNullAttr 0x5565edf87390 <col:52, col:66> 1
|-FunctionDecl 0x5565edf87628 <line:505:1, line:508:82> line:505:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5565edf87440 <col:42, line:506:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x5565edf874c0 <line:507:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x5565edf876d8 <line:508:22>
| `-NonNullAttr 0x5565edf87730 <col:63, col:80> 1 2
|-FunctionDecl 0x5565edf879f8 <line:509:1, line:512:82> line:509:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x5565edf87778 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x5565edf877f8 <line:510:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x5565edf87878 <line:511:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x5565edf87ab0 <line:512:22>
| `-NonNullAttr 0x5565edf87b08 <col:63, col:80> 1 3
|-FunctionDecl 0x5565edf87c10 <line:513:1, line:514:79> line:513:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5565edf87b58 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5565edf87cb8 <line:514:22>
| `-NonNullAttr 0x5565edf87d10 <col:63, col:77> 1
|-FunctionDecl 0x5565edf87f38 <line:515:1, line:516:79> line:515:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x5565edf87dc0 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x5565edf87fe0 <line:516:22>
| `-NonNullAttr 0x5565edf88038 <col:63, col:77> 1
|-FunctionDecl 0x5565edf88140 <line:517:1, line:518:79> line:517:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x5565edf88088 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x5565edf881e8 <line:518:22>
| `-NonNullAttr 0x5565edf88240 <col:63, col:77> 1
|-FunctionDecl 0x5565edf88468 <line:519:1, line:522:82> line:519:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5565edf88288 <col:42, line:520:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x5565edf88308 <line:521:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x5565edf88518 <line:522:22>
| `-NonNullAttr 0x5565edf88570 <col:63, col:80> 1 2
|-FunctionDecl 0x5565edf88778 <line:523:1, line:525:79> line:523:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5565edf885b8 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5565edf88638 <line:524:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x5565edf88828 <line:525:22>
| `-NonNullAttr 0x5565edf88880 <col:63, col:77> 1
|-FunctionDecl 0x5565edf88a28 <line:526:1, line:528:82> line:526:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5565edf888c8 <col:39, line:527:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x5565edf88948 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x5565edf88ad8 <line:528:22>
| `-NonNullAttr 0x5565edf88b30 <col:63, col:80> 1 2
|-FunctionDecl 0x5565edf88cb8 <line:529:1, line:530:79> line:529:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5565edf88b78 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5565edf88bf8 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x5565edf88d68 <line:530:22>
| `-NonNullAttr 0x5565edf88dc0 <col:63, col:77> 1
|-FunctionDecl 0x5565edf89f90 <line:531:1, line:534:82> line:531:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5565edf88e08 <col:43, line:532:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x5565edf89eb0 <line:533:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x5565edf8a040 <line:534:22>
| `-NonNullAttr 0x5565edf8a098 <col:63, col:80> 1 2
|-FunctionDecl 0x5565edf8a228 <line:535:1, line:537:79> line:535:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5565edf8a0e8 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5565edf8a168 <line:536:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x5565edf8a2d8 <line:537:22>
| `-NonNullAttr 0x5565edf8a330 <col:63, col:77> 1
|-FunctionDecl 0x5565edf8a4d8 <line:538:1, line:541:82> line:538:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5565edf8a378 <col:46, line:539:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x5565edf8a3f8 <line:540:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x5565edf8a588 <line:541:22>
| `-NonNullAttr 0x5565edf8a5e0 <col:63, col:80> 1 2
|-FunctionDecl 0x5565edf8a768 <line:542:1, line:544:79> line:542:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5565edf8a628 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5565edf8a6a8 <line:543:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x5565edf8a818 <line:544:22>
| `-NonNullAttr 0x5565edf8a870 <col:63, col:77> 1
|-FunctionDecl 0x5565edf8aa58 <line:545:1, line:547:82> line:545:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x5565edf8a8b8 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x5565edf8a938 <line:546:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x5565edf8ab08 <line:547:22>
| `-NonNullAttr 0x5565edf8ab60 <col:63, col:80> 1 2
|-FunctionDecl 0x5565edf8ace8 <line:548:1, line:550:79> line:548:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5565edf8aba8 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5565edf8ac28 <line:549:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x5565edf8ad98 <line:550:22>
| `-NonNullAttr 0x5565edf8adf0 <col:63, col:77> 1
|-FunctionDecl 0x5565edf8c168 <line:551:1, line:553:86> line:551:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x5565edf8bf10 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x5565edf8c020 <line:552:5, line:553:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x5565edf8c218 <col:29>
| `-NonNullAttr 0x5565edf8c270 <col:70, col:84> 1
|-FunctionDecl 0x5565edf8c3e8 <line:554:1, line:555:79> line:554:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5565edf8c2b8 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5565edf8c490 <line:555:22>
| `-NonNullAttr 0x5565edf8c4e8 <col:63, col:77> 1
|-FunctionDecl 0x5565edf8c5f0 <line:556:1, line:557:68> line:556:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5565edf8c538 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5565edf8c698 <line:557:22>
| `-NonNullAttr 0x5565edf8c6f0 <col:52, col:66> 1
|-FunctionDecl 0x5565edf8c7f0 <line:558:1, line:559:65> line:558:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5565edf8c738 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5565edf8c898 <line:559:19>
| `-NonNullAttr 0x5565edf8c8f0 <col:49, col:63> 1
|-FunctionDecl 0x5565edf8cb28 <line:560:1, line:562:88> line:560:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x5565edf8c938 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x5565edf8c9c8 <line:561:12, line:562:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x5565edf8cbd8 <col:39>
| `-NonNullAttr 0x5565edf8cc30 <col:69, col:86> 1 2
|-FunctionDecl 0x5565edf8cd30 <line:563:1, line:564:68> line:563:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5565edf8cc78 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5565edf8cdd8 <line:564:22>
| `-NonNullAttr 0x5565edf8ce30 <col:52, col:66> 1
|-FunctionDecl 0x5565edf8cf98 <line:565:1, line:566:68> line:565:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5565edf8cee0 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5565edf8d040 <line:566:22>
| `-NonNullAttr 0x5565edf8d098 <col:52, col:66> 1
|-FunctionDecl 0x5565edf8d258 <line:567:1, line:569:88> line:567:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x5565edf8d0e8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x5565edf8d178 <line:568:12, line:569:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x5565edf8d308 <col:39>
| `-NonNullAttr 0x5565edf8d360 <col:69, col:86> 1 2
|-FunctionDecl 0x5565edf8d460 <line:570:1, line:571:68> line:570:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5565edf8d3a8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5565edf8d508 <line:571:22>
| `-NonNullAttr 0x5565edf8d560 <col:52, col:66> 1
|-FunctionDecl 0x5565edf8d748 <line:572:1, line:573:79> line:572:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x5565edf8d610 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x5565edf8d7f0 <line:573:22>
| `-NonNullAttr 0x5565edf8d848 <col:63, col:77> 1
|-FunctionDecl 0x5565edf8d950 <line:574:1, line:575:79> line:574:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x5565edf8d898 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x5565edf8d9f8 <line:575:22>
| `-NonNullAttr 0x5565edf8da50 <col:63, col:77> 1
|-FunctionDecl 0x5565edf8dc78 <line:576:1, line:579:82> line:576:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5565edf8da98 <col:43, line:577:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x5565edf8db18 <line:578:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x5565edf8dd28 <line:579:22>
| `-NonNullAttr 0x5565edf8dd80 <col:63, col:80> 1 2
|-FunctionDecl 0x5565edf8dfa8 <line:580:1, line:582:79> line:580:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x5565edf8ddc8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x5565edf8de48 <line:581:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x5565edf8e058 <line:582:22>
| `-NonNullAttr 0x5565edf8e0b0 <col:63, col:77> 1
|-FunctionDecl 0x5565edf8e258 <line:583:1, line:586:82> line:583:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5565edf8e0f8 <col:43, line:584:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x5565edf8e178 <line:585:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x5565edf8e308 <line:586:22>
| `-NonNullAttr 0x5565edf8e360 <col:63, col:80> 1 2
|-FunctionDecl 0x5565edf8e4e8 <line:587:1, line:588:93> line:587:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x5565edf8e3a8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x5565edf8e428 <line:588:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x5565edf8e598 <col:36>
| `-NonNullAttr 0x5565edf8e5f0 <col:77, col:91> 1
|-FunctionDecl 0x5565edf8e928 <line:589:1, line:591:79> line:589:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x5565edf8e6d0 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x5565edf8e7e0 <line:590:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x5565edf8e9d8 <line:591:22>
| `-NonNullAttr 0x5565edf8ea30 <col:63, col:77> 1
|-FunctionDecl 0x5565edf8eba8 <line:592:1, line:593:79> line:592:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x5565edf8ea78 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x5565edf8ec50 <line:593:22>
| `-NonNullAttr 0x5565edf8eca8 <col:63, col:77> 1
|-FunctionDecl 0x5565edf8edb0 <line:594:1, line:595:68> line:594:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x5565edf8ecf8 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x5565edf8ee58 <line:595:22>
| `-NonNullAttr 0x5565edf8eeb0 <col:52, col:66> 1
|-FunctionDecl 0x5565edf8efc8 <line:596:1, line:597:68> line:596:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x5565edf8ef10 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x5565edf8f070 <line:597:22>
| `-NonNullAttr 0x5565edf8f0c8 <col:52, col:66> 1
|-FunctionDecl 0x5565edf8f2f8 <line:598:1, line:600:41> line:598:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x5565edf8f118 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x5565edf8f190 <line:599:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x5565edf8f3a8 <line:600:22, col:39> 1 2
|-FunctionDecl 0x5565edf8f6d8 <line:601:1, line:604:44> line:601:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x5565edf8f428 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x5565edf8f4a0 <line:602:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x5565edf8f530 <line:603:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x5565edf8f790 <line:604:22, col:42> 1 2 3
|-FunctionDecl 0x5565edf8f9a8 <line:605:1, line:606:79> line:605:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x5565edf8f870 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x5565edf8fa50 <line:606:22>
| `-NonNullAttr 0x5565edf8faa8 <col:63, col:77> 1
|-FunctionDecl 0x5565edf8fbb0 <line:607:1, line:608:79> line:607:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x5565edf8faf8 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x5565edf8fc58 <line:608:22>
| `-NonNullAttr 0x5565edf8fcb0 <col:63, col:77> 1
|-FunctionDecl 0x5565edf8ff10 <line:609:1, line:612:82> line:609:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5565edf8fcf8 <col:41, line:610:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x5565edf8fd78 <line:611:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x5565edf8ffc0 <line:612:22>
| `-NonNullAttr 0x5565edf90018 <col:63, col:80> 1 2
|-FunctionDecl 0x5565edf90228 <line:613:1, line:614:94> line:613:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x5565edf90068 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x5565edf900e8 <line:614:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x5565edf902d8 <col:37>
| `-NonNullAttr 0x5565edf90330 <col:78, col:92> 1
|-FunctionDecl 0x5565edf90548 <line:615:1, line:618:82> line:615:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x5565edf90378 <col:39, line:616:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x5565edf90420 <line:617:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x5565edf905f8 <line:618:22>
| `-NonNullAttr 0x5565edf90650 <col:63, col:80> 1 2
|-FunctionDecl 0x5565edf90818 <line:619:1, line:621:79> line:619:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x5565edf90698 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x5565edf90710 <line:620:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x5565edf908c8 <line:621:22>
| `-NonNullAttr 0x5565edf90920 <col:63, col:77> 1
|-FunctionDecl 0x5565edf90bc8 <line:622:1, line:623:79> line:622:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x5565edf90a00 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x5565edf90a80 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x5565edf90c78 <line:623:22>
| `-NonNullAttr 0x5565edf90cd0 <col:63, col:77> 1
|-FunctionDecl 0x5565edf90e48 <line:624:1, line:625:79> line:624:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x5565edf90d18 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x5565edf90f20 <line:625:22>
| `-NonNullAttr 0x5565edf90f78 <col:63, col:77> 1
|-FunctionDecl 0x5565edf91080 <line:626:1, line:627:68> line:626:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x5565edf90fc8 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x5565edf91128 <line:627:22>
| `-NonNullAttr 0x5565edf91180 <col:52, col:66> 1
|-FunctionDecl 0x5565edf91280 <line:628:1, line:629:68> line:628:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x5565edf911c8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x5565edf91328 <line:629:22>
| `-NonNullAttr 0x5565edf91380 <col:52, col:66> 1
|-FunctionDecl 0x5565edf91480 <line:630:1, line:631:68> line:630:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x5565edf913c8 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x5565edf91528 <line:631:22>
| `-NonNullAttr 0x5565edf91580 <col:52, col:66> 1
|-FunctionDecl 0x5565edf91958 <line:632:1, line:635:79> line:632:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x5565edf91660 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x5565edf91770 <line:633:6, line:634:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x5565edf917f0 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x5565edf91a10 <line:635:22>
| `-NonNullAttr 0x5565edf91a68 <col:63, col:77> 1
|-FunctionDecl 0x5565edf91be8 <line:636:1, line:637:79> line:636:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x5565edf91ab8 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x5565edf91c90 <line:637:22>
| `-NonNullAttr 0x5565edf91ce8 <col:63, col:77> 1
|-FunctionDecl 0x5565edf91df0 <line:638:1, line:639:68> line:638:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x5565edf91d38 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x5565edf91e98 <line:639:22>
| `-NonNullAttr 0x5565edf91ef0 <col:52, col:66> 1
|-FunctionDecl 0x5565edf920e8 <line:640:1, line:641:79> line:640:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x5565edf91fb0 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x5565edf92190 <line:641:22>
| `-NonNullAttr 0x5565edf921e8 <col:63, col:77> 1
|-FunctionDecl 0x5565edf922f0 <line:642:1, line:643:79> line:642:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x5565edf92238 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x5565edf92398 <line:643:22>
| `-NonNullAttr 0x5565edf923f0 <col:63, col:77> 1
|-FunctionDecl 0x5565edf92618 <line:644:1, line:647:82> line:644:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5565edf92438 <col:44, line:645:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x5565edf924b8 <line:646:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x5565edf926c8 <line:647:22>
| `-NonNullAttr 0x5565edf92720 <col:63, col:80> 1 2
|-FunctionDecl 0x5565edf92928 <line:648:1, line:650:79> line:648:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x5565edf92768 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x5565edf927e8 <line:649:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x5565edf929d8 <line:650:22>
| `-NonNullAttr 0x5565edf92a30 <col:63, col:77> 1
|-FunctionDecl 0x5565edf92d78 <line:651:1, line:653:79> line:651:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x5565edf92b10 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x5565edf92c30 <line:652:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x5565edf92e28 <line:653:22>
| `-NonNullAttr 0x5565edf92e80 <col:63, col:77> 1
|-FunctionDecl 0x5565edf92fe8 <line:654:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x5565edf92ec8 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x5565edf93090 <col:69>
|-FunctionDecl 0x5565edf93208 <line:655:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x5565edf930f8 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x5565edf932b0 <col:72>
|-FunctionDecl 0x5565edf934e8 <line:656:1, line:657:67> line:656:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x5565edf93318 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x5565edf933c8 <line:657:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x5565edf93598 <col:44>
|-FunctionDecl 0x5565edf937b8 <line:658:1, line:660:79> line:658:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x5565edf93600 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5565edf93678 <line:659:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x5565edf93868 <line:660:22>
| `-NonNullAttr 0x5565edf938c0 <col:63, col:77> 2
|-FunctionDecl 0x5565edf93d08 <line:661:1, line:663:70> line:661:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x5565edf939a0 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x5565edf93ab0 <line:662:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x5565edf93bc0 <line:663:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x5565edf93dc0 <col:47>
|-FunctionDecl 0x5565edf94f60 <line:665:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x5565edf93e30 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x5565edf950b8 <line:666:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x5565edf95020 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x5565edf95210 <line:667:1, col:20> col:8 used P2 'void *(void *)'
| `-ParmVarDecl 0x5565edf95178 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x5565edf95368 <line:668:1, col:20> col:8 used P3 'void *(void *)'
| `-ParmVarDecl 0x5565edf952d0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x5565edf95430 <line:669:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x5565edf954f0 <line:670:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x5565edf955b0 <line:671:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x5565edf95668 <line:672:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x5565edf956e8 prev 0x5565edf95668 <line:673:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x5565edf95750 <col:24> 'int' 0
|-VarDecl 0x5565edf95788 <line:674:1, col:5> col:5 used __unbuffered_p2_EAX 'int'
|-VarDecl 0x5565edf95808 prev 0x5565edf95788 <line:675:1, col:27> col:5 used __unbuffered_p2_EAX 'int' cinit
| `-IntegerLiteral 0x5565edf95870 <col:27> 'int' 0
|-VarDecl 0x5565edf958a8 <line:676:1, col:5> col:5 used __unbuffered_p3_EAX 'int'
|-VarDecl 0x5565edf95928 prev 0x5565edf958a8 <line:677:1, col:27> col:5 used __unbuffered_p3_EAX 'int' cinit
| `-IntegerLiteral 0x5565edf95990 <col:27> 'int' 0
|-VarDecl 0x5565edf959c8 <line:678:1, col:5> col:5 used __unbuffered_p3_EBX 'int'
|-VarDecl 0x5565edf95a48 prev 0x5565edf959c8 <line:679:1, col:27> col:5 used __unbuffered_p3_EBX 'int' cinit
| `-IntegerLiteral 0x5565edf95ab0 <col:27> 'int' 0
|-VarDecl 0x5565edf95ae8 <line:680:1, col:5> col:5 used a 'int'
|-VarDecl 0x5565edf95b68 prev 0x5565edf95ae8 <line:681:1, col:9> col:5 used a 'int' cinit
| `-IntegerLiteral 0x5565edf95bd0 <col:9> 'int' 0
|-VarDecl 0x5565edf95c00 <line:682:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x5565edf95c78 <line:683:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x5565edf95cf8 <line:684:1, col:5> col:5 used x 'int'
|-VarDecl 0x5565edf95d78 prev 0x5565edf95cf8 <line:685:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x5565edf95de0 <col:9> 'int' 0
|-VarDecl 0x5565edf95e18 <line:686:1, col:5> col:5 used y 'int'
|-VarDecl 0x5565edf95e98 prev 0x5565edf95e18 <line:687:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x5565edf95f00 <col:9> 'int' 0
|-VarDecl 0x5565edf95f70 <line:688:1, col:5> col:5 used z 'int'
|-VarDecl 0x5565edf95ff0 prev 0x5565edf95f70 <line:689:1, col:9> col:5 used z 'int' cinit
| `-IntegerLiteral 0x5565edf96058 <col:9> 'int' 0
|-VarDecl 0x5565edf96088 <line:690:1, col:7> col:7 used z$flush_delayed '_Bool'
|-VarDecl 0x5565edf96108 <line:691:1, col:5> col:5 used z$mem_tmp 'int'
|-VarDecl 0x5565edf96180 <line:692:1, col:7> col:7 used z$r_buff0_thd0 '_Bool'
|-VarDecl 0x5565edf961f8 <line:693:1, col:7> col:7 used z$r_buff0_thd1 '_Bool'
|-VarDecl 0x5565edf96270 <line:694:1, col:7> col:7 used z$r_buff0_thd2 '_Bool'
|-VarDecl 0x5565edf962e8 <line:695:1, col:7> col:7 used z$r_buff0_thd3 '_Bool'
|-VarDecl 0x5565edf96360 <line:696:1, col:7> col:7 used z$r_buff0_thd4 '_Bool'
|-VarDecl 0x5565edf963d8 <line:697:1, col:7> col:7 used z$r_buff1_thd0 '_Bool'
|-VarDecl 0x5565edf96450 <line:698:1, col:7> col:7 used z$r_buff1_thd1 '_Bool'
|-VarDecl 0x5565edf964c8 <line:699:1, col:7> col:7 used z$r_buff1_thd2 '_Bool'
|-VarDecl 0x5565edf96540 <line:700:1, col:7> col:7 used z$r_buff1_thd3 '_Bool'
|-VarDecl 0x5565edf965b8 <line:701:1, col:7> col:7 used z$r_buff1_thd4 '_Bool'
|-VarDecl 0x5565edf96630 <line:702:1, col:7> col:7 z$read_delayed '_Bool'
|-VarDecl 0x5565edf966b0 <line:703:1, col:6> col:6 z$read_delayed_var 'int *'
|-VarDecl 0x5565edf96730 <line:704:1, col:5> col:5 used z$w_buff0 'int'
|-VarDecl 0x5565edf967a8 <line:705:1, col:7> col:7 used z$w_buff0_used '_Bool'
|-VarDecl 0x5565edf96828 <line:706:1, col:5> col:5 used z$w_buff1 'int'
|-VarDecl 0x5565edf968a0 <line:707:1, col:7> col:7 used z$w_buff1_used '_Bool'
|-VarDecl 0x5565edf96918 <line:708:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x5565edf96990 <line:709:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x5565edf96aa8 prev 0x5565edf94f60 <line:710:1, line:724:1> line:710:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x5565edf96a10 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x5565edf97078 <line:711:1, line:724:1>
|   |-CallExpr 0x5565edf96bb8 <line:712:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5565edf96ba0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5565edf96b50 <col:3> 'void ()' Function 0x5565edf3c350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5565edf96c18 <line:713:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x5565edf96bd8 <col:3> 'int' lvalue Var 0x5565edf95b68 'a' 'int'
|   | `-IntegerLiteral 0x5565edf96bf8 <col:7> 'int' 1
|   |-CallExpr 0x5565edf96c70 <line:714:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5565edf96c58 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5565edf96c38 <col:3> 'void ()' Function 0x5565edf3c410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5565edf96cc8 <line:715:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5565edf96cb0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5565edf96c90 <col:3> 'void ()' Function 0x5565edf3c350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5565edf96d28 <line:716:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x5565edf96ce8 <col:3> 'int' lvalue Var 0x5565edf95d78 'x' 'int'
|   | `-IntegerLiteral 0x5565edf96d08 <col:7> 'int' 1
|   |-CallExpr 0x5565edf96d80 <line:717:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5565edf96d68 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5565edf96d48 <col:3> 'void ()' Function 0x5565edf3c410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5565edf96dd8 <line:718:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5565edf96dc0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5565edf96da0 <col:3> 'void ()' Function 0x5565edf3c350 '__VERIFIER_atomic_begin' 'void ()'
|   |-CallExpr 0x5565edf96e30 <line:719:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5565edf96e18 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5565edf96df8 <col:3> 'void ()' Function 0x5565edf3c410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5565edf96e88 <line:720:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5565edf96e70 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5565edf96e50 <col:3> 'void ()' Function 0x5565edf3c350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5565edf96f40 <line:721:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x5565edf96ea8 <col:3> 'int' lvalue Var 0x5565edf956e8 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x5565edf96f20 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x5565edf96f08 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5565edf96ec8 <col:22> 'int' lvalue Var 0x5565edf956e8 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x5565edf96ee8 <col:41> 'int' 1
|   |-CallExpr 0x5565edf96fb8 <line:722:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5565edf96fa0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5565edf96f80 <col:3> 'void ()' Function 0x5565edf3c410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x5565edf97068 <line:723:3, col:36>
|     `-CallExpr 0x5565edf97048 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x5565edf97030 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x5565edf96fd8 <col:10> 'void *(void)' Function 0x5565edf3be68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x5565edf97198 prev 0x5565edf950b8 <line:725:1, line:739:1> line:725:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x5565edf97100 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x5565edf976e0 <line:726:1, line:739:1>
|   |-CallExpr 0x5565edf97278 <line:727:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5565edf97260 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5565edf97240 <col:3> 'void ()' Function 0x5565edf3c350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5565edf972d8 <line:728:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x5565edf97298 <col:3> 'int' lvalue Var 0x5565edf95d78 'x' 'int'
|   | `-IntegerLiteral 0x5565edf972b8 <col:7> 'int' 2
|   |-CallExpr 0x5565edf97330 <line:729:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5565edf97318 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5565edf972f8 <col:3> 'void ()' Function 0x5565edf3c410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5565edf97388 <line:730:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5565edf97370 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5565edf97350 <col:3> 'void ()' Function 0x5565edf3c350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5565edf973e8 <line:731:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x5565edf973a8 <col:3> 'int' lvalue Var 0x5565edf95e98 'y' 'int'
|   | `-IntegerLiteral 0x5565edf973c8 <col:7> 'int' 1
|   |-CallExpr 0x5565edf97440 <line:732:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5565edf97428 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5565edf97408 <col:3> 'void ()' Function 0x5565edf3c410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5565edf97498 <line:733:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5565edf97480 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5565edf97460 <col:3> 'void ()' Function 0x5565edf3c350 '__VERIFIER_atomic_begin' 'void ()'
|   |-CallExpr 0x5565edf974f0 <line:734:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5565edf974d8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5565edf974b8 <col:3> 'void ()' Function 0x5565edf3c410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5565edf97548 <line:735:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5565edf97530 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5565edf97510 <col:3> 'void ()' Function 0x5565edf3c350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5565edf97600 <line:736:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x5565edf97568 <col:3> 'int' lvalue Var 0x5565edf956e8 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x5565edf975e0 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x5565edf975c8 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5565edf97588 <col:22> 'int' lvalue Var 0x5565edf956e8 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x5565edf975a8 <col:41> 'int' 1
|   |-CallExpr 0x5565edf97658 <line:737:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5565edf97640 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5565edf97620 <col:3> 'void ()' Function 0x5565edf3c410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x5565edf976d0 <line:738:3, col:36>
|     `-CallExpr 0x5565edf976b0 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x5565edf97698 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x5565edf97678 <col:10> 'void *(void)' Function 0x5565edf3be68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x5565edf97800 prev 0x5565edf95210 <line:740:1, line:767:1> line:740:8 used P2 'void *(void *)'
| |-ParmVarDecl 0x5565edf97768 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x5565edf9a720 <line:741:1, line:767:1>
|   |-CallExpr 0x5565edf978e0 <line:742:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5565edf978c8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5565edf978a8 <col:3> 'void ()' Function 0x5565edf3c350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5565edf97940 <line:743:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x5565edf97900 <col:3> 'int' lvalue Var 0x5565edf95e98 'y' 'int'
|   | `-IntegerLiteral 0x5565edf97920 <col:7> 'int' 2
|   |-CallExpr 0x5565edf97998 <line:744:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5565edf97980 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5565edf97960 <col:3> 'void ()' Function 0x5565edf3c410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5565edf979f0 <line:745:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5565edf979d8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5565edf979b8 <col:3> 'void ()' Function 0x5565edf3c350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5565edf97aa0 <line:746:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x5565edf97a10 <col:3> '_Bool' lvalue Var 0x5565edf96918 'weak$$choice0' '_Bool'
|   | `-ImplicitCastExpr 0x5565edf97a88 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x5565edf97a68 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x5565edf97a50 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x5565edf97a30 <col:19> 'void *(void)' Function 0x5565edf3be68 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x5565edf97b50 <line:747:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x5565edf97ac0 <col:3> '_Bool' lvalue Var 0x5565edf96990 'weak$$choice2' '_Bool'
|   | `-ImplicitCastExpr 0x5565edf97b38 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x5565edf97b18 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x5565edf97b00 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x5565edf97ae0 <col:19> 'void *(void)' Function 0x5565edf3be68 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x5565edf97bc8 <line:748:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x5565edf97b70 <col:3> '_Bool' lvalue Var 0x5565edf96088 'z$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x5565edf97bb0 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5565edf97b90 <col:21> '_Bool' lvalue Var 0x5565edf96990 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x5565edf97c40 <line:749:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x5565edf97be8 <col:3> 'int' lvalue Var 0x5565edf96108 'z$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x5565edf97c28 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5565edf97c08 <col:15> 'int' lvalue Var 0x5565edf95ff0 'z' 'int'
|   |-BinaryOperator 0x5565edf98098 <line:750:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x5565edf97c60 <col:3> 'int' lvalue Var 0x5565edf95ff0 'z' 'int'
|   | `-ConditionalOperator 0x5565edf98068 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x5565edf97e70 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x5565edf97d90 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x5565edf97cb8 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x5565edf97ca0 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x5565edf97c80 <col:8> '_Bool' lvalue Var 0x5565edf967a8 'z$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x5565edf97d70 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x5565edf97d08 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x5565edf97cf0 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x5565edf97cd0 <col:27> '_Bool' lvalue Var 0x5565edf962e8 'z$r_buff0_thd3' '_Bool'
|   |   | |   `-UnaryOperator 0x5565edf97d58 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x5565edf97d40 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x5565edf97d20 <col:46> '_Bool' lvalue Var 0x5565edf968a0 'z$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x5565edf97e50 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x5565edf97de8 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x5565edf97dd0 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x5565edf97db0 <col:65> '_Bool' lvalue Var 0x5565edf962e8 'z$r_buff0_thd3' '_Bool'
|   |   |   `-UnaryOperator 0x5565edf97e38 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x5565edf97e20 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x5565edf97e00 <col:84> '_Bool' lvalue Var 0x5565edf96540 'z$r_buff1_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x5565edf98050 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5565edf97e90 <col:101> 'int' lvalue Var 0x5565edf95ff0 'z' 'int'
|   |   `-ParenExpr 0x5565edf98030 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x5565edf98000 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x5565edf97f50 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x5565edf97f08 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x5565edf97ef0 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x5565edf97eb0 <col:106> '_Bool' lvalue Var 0x5565edf967a8 'z$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x5565edf97f38 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x5565edf97f20 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x5565edf97ed0 <col:124> '_Bool' lvalue Var 0x5565edf962e8 'z$r_buff0_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x5565edf97fd0 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5565edf97f90 <col:141> 'int' lvalue Var 0x5565edf96730 'z$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x5565edf97fe8 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x5565edf97fb0 <col:153> 'int' lvalue Var 0x5565edf96828 'z$w_buff1' 'int'
|   |-BinaryOperator 0x5565edf985a8 <line:751:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x5565edf980b8 <col:3> 'int' lvalue Var 0x5565edf96730 'z$w_buff0' 'int'
|   | `-ConditionalOperator 0x5565edf98578 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x5565edf98548 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x5565edf98530 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x5565edf980d8 <col:15> '_Bool' lvalue Var 0x5565edf96990 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x5565edf98560 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5565edf980f8 <col:31> 'int' lvalue Var 0x5565edf96730 'z$w_buff0' 'int'
|   |   `-ParenExpr 0x5565edf98510 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x5565edf984e0 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x5565edf98308 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x5565edf98228 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x5565edf98150 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x5565edf98138 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x5565edf98118 <col:45> '_Bool' lvalue Var 0x5565edf967a8 'z$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x5565edf98208 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x5565edf981a0 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x5565edf98188 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x5565edf98168 <col:64> '_Bool' lvalue Var 0x5565edf962e8 'z$r_buff0_thd3' '_Bool'
|   |       | |   `-UnaryOperator 0x5565edf981f0 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x5565edf981d8 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x5565edf981b8 <col:83> '_Bool' lvalue Var 0x5565edf968a0 'z$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x5565edf982e8 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x5565edf98280 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x5565edf98268 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x5565edf98248 <col:102> '_Bool' lvalue Var 0x5565edf962e8 'z$r_buff0_thd3' '_Bool'
|   |       |   `-UnaryOperator 0x5565edf982d0 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x5565edf982b8 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x5565edf98298 <col:121> '_Bool' lvalue Var 0x5565edf96540 'z$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x5565edf984c8 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5565edf98328 <col:138> 'int' lvalue Var 0x5565edf96730 'z$w_buff0' 'int'
|   |       `-ParenExpr 0x5565edf984a8 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x5565edf98478 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x5565edf983e8 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x5565edf983a0 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x5565edf98388 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x5565edf98348 <col:151> '_Bool' lvalue Var 0x5565edf967a8 'z$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x5565edf983d0 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x5565edf983b8 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x5565edf98368 <col:169> '_Bool' lvalue Var 0x5565edf962e8 'z$r_buff0_thd3' '_Bool'
|   |           |-ImplicitCastExpr 0x5565edf98448 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x5565edf98408 <col:186> 'int' lvalue Var 0x5565edf96730 'z$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x5565edf98460 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x5565edf98428 <col:198> 'int' lvalue Var 0x5565edf96730 'z$w_buff0' 'int'
|   |-BinaryOperator 0x5565edf98ab8 <line:752:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x5565edf985c8 <col:3> 'int' lvalue Var 0x5565edf96828 'z$w_buff1' 'int'
|   | `-ConditionalOperator 0x5565edf98a88 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x5565edf98a58 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x5565edf98a40 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x5565edf985e8 <col:15> '_Bool' lvalue Var 0x5565edf96990 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x5565edf98a70 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5565edf98608 <col:31> 'int' lvalue Var 0x5565edf96828 'z$w_buff1' 'int'
|   |   `-ParenExpr 0x5565edf98a20 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x5565edf989f0 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x5565edf98818 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x5565edf98738 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x5565edf98660 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x5565edf98648 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x5565edf98628 <col:45> '_Bool' lvalue Var 0x5565edf967a8 'z$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x5565edf98718 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x5565edf986b0 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x5565edf98698 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x5565edf98678 <col:64> '_Bool' lvalue Var 0x5565edf962e8 'z$r_buff0_thd3' '_Bool'
|   |       | |   `-UnaryOperator 0x5565edf98700 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x5565edf986e8 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x5565edf986c8 <col:83> '_Bool' lvalue Var 0x5565edf968a0 'z$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x5565edf987f8 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x5565edf98790 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x5565edf98778 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x5565edf98758 <col:102> '_Bool' lvalue Var 0x5565edf962e8 'z$r_buff0_thd3' '_Bool'
|   |       |   `-UnaryOperator 0x5565edf987e0 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x5565edf987c8 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x5565edf987a8 <col:121> '_Bool' lvalue Var 0x5565edf96540 'z$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x5565edf989d8 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5565edf98838 <col:138> 'int' lvalue Var 0x5565edf96828 'z$w_buff1' 'int'
|   |       `-ParenExpr 0x5565edf989b8 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x5565edf98988 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x5565edf988f8 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x5565edf988b0 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x5565edf98898 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x5565edf98858 <col:151> '_Bool' lvalue Var 0x5565edf967a8 'z$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x5565edf988e0 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x5565edf988c8 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x5565edf98878 <col:169> '_Bool' lvalue Var 0x5565edf962e8 'z$r_buff0_thd3' '_Bool'
|   |           |-ImplicitCastExpr 0x5565edf98958 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x5565edf98918 <col:186> 'int' lvalue Var 0x5565edf96828 'z$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x5565edf98970 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x5565edf98938 <col:198> 'int' lvalue Var 0x5565edf96828 'z$w_buff1' 'int'
|   |-BinaryOperator 0x5565edf99098 <line:753:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x5565edf98ad8 <col:3> '_Bool' lvalue Var 0x5565edf967a8 'z$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x5565edf99080 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5565edf99050 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x5565edf99008 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5565edf98ff0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5565edf98af8 <col:20> '_Bool' lvalue Var 0x5565edf96990 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5565edf99038 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5565edf99020 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5565edf98b18 <col:36> '_Bool' lvalue Var 0x5565edf967a8 'z$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x5565edf98fd0 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x5565edf98fa0 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x5565edf98d28 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5565edf98c48 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5565edf98b70 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5565edf98b58 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5565edf98b38 <col:55> '_Bool' lvalue Var 0x5565edf967a8 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5565edf98c28 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5565edf98bc0 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5565edf98ba8 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5565edf98b88 <col:74> '_Bool' lvalue Var 0x5565edf962e8 'z$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x5565edf98c10 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5565edf98bf8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5565edf98bd8 <col:93> '_Bool' lvalue Var 0x5565edf968a0 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5565edf98d08 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5565edf98ca0 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5565edf98c88 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5565edf98c68 <col:112> '_Bool' lvalue Var 0x5565edf962e8 'z$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x5565edf98cf0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5565edf98cd8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5565edf98cb8 <col:131> '_Bool' lvalue Var 0x5565edf96540 'z$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x5565edf98f50 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5565edf98f38 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5565edf98d48 <col:148> '_Bool' lvalue Var 0x5565edf967a8 'z$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x5565edf98f18 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x5565edf98ee8 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x5565edf98e08 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5565edf98dc0 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5565edf98da8 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5565edf98d68 <col:166> '_Bool' lvalue Var 0x5565edf967a8 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5565edf98df0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5565edf98dd8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5565edf98d88 <col:184> '_Bool' lvalue Var 0x5565edf962e8 'z$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x5565edf98ea0 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5565edf98e58 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5565edf98e28 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5565edf98ed0 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x5565edf98eb8 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x5565edf98e80 <col:212> '_Bool' lvalue Var 0x5565edf967a8 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5565edf99660 <line:754:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x5565edf990b8 <col:3> '_Bool' lvalue Var 0x5565edf968a0 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5565edf99648 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5565edf99618 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x5565edf995d0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5565edf995b8 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5565edf990d8 <col:20> '_Bool' lvalue Var 0x5565edf96990 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5565edf99600 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5565edf995e8 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5565edf990f8 <col:36> '_Bool' lvalue Var 0x5565edf968a0 'z$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x5565edf99598 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x5565edf99568 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x5565edf99308 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5565edf99228 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5565edf99150 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5565edf99138 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5565edf99118 <col:55> '_Bool' lvalue Var 0x5565edf967a8 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5565edf99208 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5565edf991a0 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5565edf99188 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5565edf99168 <col:74> '_Bool' lvalue Var 0x5565edf962e8 'z$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x5565edf991f0 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5565edf991d8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5565edf991b8 <col:93> '_Bool' lvalue Var 0x5565edf968a0 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5565edf992e8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5565edf99280 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5565edf99268 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5565edf99248 <col:112> '_Bool' lvalue Var 0x5565edf962e8 'z$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x5565edf992d0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5565edf992b8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5565edf99298 <col:131> '_Bool' lvalue Var 0x5565edf96540 'z$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x5565edf99550 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5565edf99538 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5565edf99328 <col:148> '_Bool' lvalue Var 0x5565edf968a0 'z$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x5565edf99518 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x5565edf994e8 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x5565edf993e8 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5565edf993a0 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5565edf99388 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5565edf99348 <col:166> '_Bool' lvalue Var 0x5565edf967a8 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5565edf993d0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5565edf993b8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5565edf99368 <col:184> '_Bool' lvalue Var 0x5565edf962e8 'z$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x5565edf994b8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5565edf99438 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5565edf99408 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5565edf994d0 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x5565edf99490 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x5565edf99460 <col:219> 'int' 0
|   |-BinaryOperator 0x5565edf99c08 <line:755:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x5565edf99680 <col:3> '_Bool' lvalue Var 0x5565edf962e8 'z$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x5565edf99bf0 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5565edf99bc0 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x5565edf99b78 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5565edf99b60 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5565edf996a0 <col:20> '_Bool' lvalue Var 0x5565edf96990 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5565edf99ba8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5565edf99b90 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5565edf996c0 <col:36> '_Bool' lvalue Var 0x5565edf962e8 'z$r_buff0_thd3' '_Bool'
|   |     `-ParenExpr 0x5565edf99b40 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x5565edf99b10 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x5565edf998d0 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5565edf997f0 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5565edf99718 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5565edf99700 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5565edf996e0 <col:55> '_Bool' lvalue Var 0x5565edf967a8 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5565edf997d0 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5565edf99768 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5565edf99750 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5565edf99730 <col:74> '_Bool' lvalue Var 0x5565edf962e8 'z$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x5565edf997b8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5565edf997a0 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5565edf99780 <col:93> '_Bool' lvalue Var 0x5565edf968a0 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5565edf998b0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5565edf99848 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5565edf99830 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5565edf99810 <col:112> '_Bool' lvalue Var 0x5565edf962e8 'z$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x5565edf99898 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5565edf99880 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5565edf99860 <col:131> '_Bool' lvalue Var 0x5565edf96540 'z$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x5565edf99af8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5565edf99ae0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5565edf998f0 <col:148> '_Bool' lvalue Var 0x5565edf962e8 'z$r_buff0_thd3' '_Bool'
|   |         `-ParenExpr 0x5565edf99ac0 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x5565edf99a90 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x5565edf999b0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5565edf99968 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5565edf99950 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5565edf99910 <col:166> '_Bool' lvalue Var 0x5565edf967a8 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5565edf99998 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5565edf99980 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5565edf99930 <col:184> '_Bool' lvalue Var 0x5565edf962e8 'z$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x5565edf99a48 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5565edf99a00 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5565edf999d0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5565edf99a78 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x5565edf99a60 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x5565edf99a28 <col:212> '_Bool' lvalue Var 0x5565edf962e8 'z$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x5565edf9a1e8 <line:756:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x5565edf99c28 <col:3> '_Bool' lvalue Var 0x5565edf96540 'z$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x5565edf9a1d0 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5565edf9a1a0 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x5565edf9a158 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5565edf9a140 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5565edf99c48 <col:20> '_Bool' lvalue Var 0x5565edf96990 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5565edf9a188 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5565edf9a170 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5565edf99c68 <col:36> '_Bool' lvalue Var 0x5565edf96540 'z$r_buff1_thd3' '_Bool'
|   |     `-ParenExpr 0x5565edf9a120 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x5565edf9a0f0 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x5565edf99e78 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5565edf99d98 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5565edf99cc0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5565edf99ca8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5565edf99c88 <col:55> '_Bool' lvalue Var 0x5565edf967a8 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5565edf99d78 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5565edf99d10 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5565edf99cf8 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5565edf99cd8 <col:74> '_Bool' lvalue Var 0x5565edf962e8 'z$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x5565edf99d60 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5565edf99d48 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5565edf99d28 <col:93> '_Bool' lvalue Var 0x5565edf968a0 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5565edf99e58 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5565edf99df0 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5565edf99dd8 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5565edf99db8 <col:112> '_Bool' lvalue Var 0x5565edf962e8 'z$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x5565edf99e40 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5565edf99e28 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5565edf99e08 <col:131> '_Bool' lvalue Var 0x5565edf96540 'z$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x5565edf9a0d8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5565edf9a0c0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5565edf99e98 <col:148> '_Bool' lvalue Var 0x5565edf96540 'z$r_buff1_thd3' '_Bool'
|   |         `-ParenExpr 0x5565edf9a0a0 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x5565edf9a070 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x5565edf99f58 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5565edf99f10 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5565edf99ef8 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5565edf99eb8 <col:166> '_Bool' lvalue Var 0x5565edf967a8 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5565edf99f40 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5565edf99f28 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5565edf99ed8 <col:184> '_Bool' lvalue Var 0x5565edf962e8 'z$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x5565edf9a040 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5565edf99fc0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5565edf99f78 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5565edf9a058 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x5565edf9a018 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x5565edf99fe8 <col:219> 'int' 0
|   |-BinaryOperator 0x5565edf9a260 <line:757:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x5565edf9a208 <col:3> 'int' lvalue Var 0x5565edf95808 '__unbuffered_p2_EAX' 'int'
|   | `-ImplicitCastExpr 0x5565edf9a248 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5565edf9a228 <col:25> 'int' lvalue Var 0x5565edf95ff0 'z' 'int'
|   |-BinaryOperator 0x5565edf9a390 <line:758:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x5565edf9a280 <col:3> 'int' lvalue Var 0x5565edf95ff0 'z' 'int'
|   | `-ConditionalOperator 0x5565edf9a360 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x5565edf9a318 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x5565edf9a300 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x5565edf9a2a0 <col:7> '_Bool' lvalue Var 0x5565edf96088 'z$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x5565edf9a330 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5565edf9a2c0 <col:25> 'int' lvalue Var 0x5565edf96108 'z$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x5565edf9a348 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x5565edf9a2e0 <col:37> 'int' lvalue Var 0x5565edf95ff0 'z' 'int'
|   |-BinaryOperator 0x5565edf9a428 <line:759:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x5565edf9a3b0 <col:3> '_Bool' lvalue Var 0x5565edf96088 'z$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x5565edf9a400 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x5565edf9a3d0 <col:28> 'int' 0
|   |-CallExpr 0x5565edf9a480 <line:760:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5565edf9a468 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5565edf9a448 <col:3> 'void ()' Function 0x5565edf3c410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5565edf9a4d8 <line:761:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5565edf9a4c0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5565edf9a4a0 <col:3> 'void ()' Function 0x5565edf3c350 '__VERIFIER_atomic_begin' 'void ()'
|   |-CallExpr 0x5565edf9a530 <line:762:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5565edf9a518 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5565edf9a4f8 <col:3> 'void ()' Function 0x5565edf3c410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5565edf9a588 <line:763:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5565edf9a570 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5565edf9a550 <col:3> 'void ()' Function 0x5565edf3c350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5565edf9a640 <line:764:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x5565edf9a5a8 <col:3> 'int' lvalue Var 0x5565edf956e8 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x5565edf9a620 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x5565edf9a608 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5565edf9a5c8 <col:22> 'int' lvalue Var 0x5565edf956e8 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x5565edf9a5e8 <col:41> 'int' 1
|   |-CallExpr 0x5565edf9a698 <line:765:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5565edf9a680 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5565edf9a660 <col:3> 'void ()' Function 0x5565edf3c410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x5565edf9a710 <line:766:3, col:36>
|     `-CallExpr 0x5565edf9a6f0 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x5565edf9a6d8 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x5565edf9a6b8 <col:10> 'void *(void)' Function 0x5565edf3be68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x5565edf9a8a8 prev 0x5565edf95368 <line:768:1, line:813:1> line:768:8 used P3 'void *(void *)'
| |-ParmVarDecl 0x5565edf9a810 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x5565edf9ebb8 <line:769:1, line:813:1>
|   |-CallExpr 0x5565edf9a988 <line:770:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5565edf9a970 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5565edf9a950 <col:3> 'void ()' Function 0x5565edf3c350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5565edf9aa00 <line:771:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x5565edf9a9a8 <col:3> 'int' lvalue Var 0x5565edf96828 'z$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x5565edf9a9e8 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5565edf9a9c8 <col:15> 'int' lvalue Var 0x5565edf96730 'z$w_buff0' 'int'
|   |-BinaryOperator 0x5565edf9aa60 <line:772:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x5565edf9aa20 <col:3> 'int' lvalue Var 0x5565edf96730 'z$w_buff0' 'int'
|   | `-IntegerLiteral 0x5565edf9aa40 <col:15> 'int' 1
|   |-BinaryOperator 0x5565edf9aad8 <line:773:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5565edf9aa80 <col:3> '_Bool' lvalue Var 0x5565edf968a0 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5565edf9aac0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5565edf9aaa0 <col:20> '_Bool' lvalue Var 0x5565edf967a8 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5565edf9ab70 <line:774:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x5565edf9aaf8 <col:3> '_Bool' lvalue Var 0x5565edf967a8 'z$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x5565edf9ab48 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x5565edf9ab18 <col:27> 'int' 1
|   |-CallExpr 0x5565edf9acf8 <line:775:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x5565edf9ace0 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x5565edf9ab90 <col:3> 'void (int)' Function 0x5565edf3c0d8 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x5565edf9ac90 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x5565edf9ac70 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x5565edf9ac50 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x5565edf9ac08 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x5565edf9abf0 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x5565edf9abb0 <col:23> '_Bool' lvalue Var 0x5565edf968a0 'z$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x5565edf9ac38 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x5565edf9ac20 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x5565edf9abd0 <col:41> '_Bool' lvalue Var 0x5565edf967a8 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5565edf9ad78 <line:776:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5565edf9ad20 <col:3> '_Bool' lvalue Var 0x5565edf963d8 'z$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x5565edf9ad60 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5565edf9ad40 <col:20> '_Bool' lvalue Var 0x5565edf96180 'z$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x5565edf9adf0 <line:777:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5565edf9ad98 <col:3> '_Bool' lvalue Var 0x5565edf96450 'z$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x5565edf9add8 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5565edf9adb8 <col:20> '_Bool' lvalue Var 0x5565edf961f8 'z$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x5565edf9ae68 <line:778:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5565edf9ae10 <col:3> '_Bool' lvalue Var 0x5565edf964c8 'z$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x5565edf9ae50 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5565edf9ae30 <col:20> '_Bool' lvalue Var 0x5565edf96270 'z$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x5565edf9aee0 <line:779:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5565edf9ae88 <col:3> '_Bool' lvalue Var 0x5565edf96540 'z$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x5565edf9aec8 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5565edf9aea8 <col:20> '_Bool' lvalue Var 0x5565edf962e8 'z$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x5565edf9af58 <line:780:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5565edf9af00 <col:3> '_Bool' lvalue Var 0x5565edf965b8 'z$r_buff1_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x5565edf9af40 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5565edf9af20 <col:20> '_Bool' lvalue Var 0x5565edf96360 'z$r_buff0_thd4' '_Bool'
|   |-BinaryOperator 0x5565edf9b018 <line:781:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x5565edf9af78 <col:3> '_Bool' lvalue Var 0x5565edf96360 'z$r_buff0_thd4' '_Bool'
|   | `-CStyleCastExpr 0x5565edf9aff0 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x5565edf9afc0 <col:27> 'int' 1
|   |-CallExpr 0x5565edf9b070 <line:782:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5565edf9b058 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5565edf9b038 <col:3> 'void ()' Function 0x5565edf3c410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5565edf9b0c8 <line:783:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5565edf9b0b0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5565edf9b090 <col:3> 'void ()' Function 0x5565edf3c350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5565edf9b178 <line:784:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x5565edf9b0e8 <col:3> '_Bool' lvalue Var 0x5565edf96918 'weak$$choice0' '_Bool'
|   | `-ImplicitCastExpr 0x5565edf9b160 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x5565edf9b140 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x5565edf9b128 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x5565edf9b108 <col:19> 'void *(void)' Function 0x5565edf3be68 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x5565edf9b228 <line:785:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x5565edf9b198 <col:3> '_Bool' lvalue Var 0x5565edf96990 'weak$$choice2' '_Bool'
|   | `-ImplicitCastExpr 0x5565edf9b210 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x5565edf9b1f0 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x5565edf9b1d8 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x5565edf9b1b8 <col:19> 'void *(void)' Function 0x5565edf3be68 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x5565edf9b2a0 <line:786:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x5565edf9b248 <col:3> '_Bool' lvalue Var 0x5565edf96088 'z$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x5565edf9b288 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5565edf9b268 <col:21> '_Bool' lvalue Var 0x5565edf96990 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x5565edf9b318 <line:787:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x5565edf9b2c0 <col:3> 'int' lvalue Var 0x5565edf96108 'z$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x5565edf9b300 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5565edf9b2e0 <col:15> 'int' lvalue Var 0x5565edf95ff0 'z' 'int'
|   |-BinaryOperator 0x5565edf9b750 <line:788:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x5565edf9b338 <col:3> 'int' lvalue Var 0x5565edf95ff0 'z' 'int'
|   | `-ConditionalOperator 0x5565edf9b720 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x5565edf9b548 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x5565edf9b468 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x5565edf9b390 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x5565edf9b378 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x5565edf9b358 <col:8> '_Bool' lvalue Var 0x5565edf967a8 'z$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x5565edf9b448 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x5565edf9b3e0 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x5565edf9b3c8 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x5565edf9b3a8 <col:27> '_Bool' lvalue Var 0x5565edf96360 'z$r_buff0_thd4' '_Bool'
|   |   | |   `-UnaryOperator 0x5565edf9b430 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x5565edf9b418 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x5565edf9b3f8 <col:46> '_Bool' lvalue Var 0x5565edf968a0 'z$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x5565edf9b528 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x5565edf9b4c0 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x5565edf9b4a8 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x5565edf9b488 <col:65> '_Bool' lvalue Var 0x5565edf96360 'z$r_buff0_thd4' '_Bool'
|   |   |   `-UnaryOperator 0x5565edf9b510 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x5565edf9b4f8 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x5565edf9b4d8 <col:84> '_Bool' lvalue Var 0x5565edf965b8 'z$r_buff1_thd4' '_Bool'
|   |   |-ImplicitCastExpr 0x5565edf9b708 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5565edf9b568 <col:101> 'int' lvalue Var 0x5565edf95ff0 'z' 'int'
|   |   `-ParenExpr 0x5565edf9b6e8 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x5565edf9b6b8 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x5565edf9b628 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x5565edf9b5e0 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x5565edf9b5c8 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x5565edf9b588 <col:106> '_Bool' lvalue Var 0x5565edf967a8 'z$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x5565edf9b610 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x5565edf9b5f8 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x5565edf9b5a8 <col:124> '_Bool' lvalue Var 0x5565edf96360 'z$r_buff0_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x5565edf9b688 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5565edf9b648 <col:141> 'int' lvalue Var 0x5565edf96730 'z$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x5565edf9b6a0 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x5565edf9b668 <col:153> 'int' lvalue Var 0x5565edf96828 'z$w_buff1' 'int'
|   |-BinaryOperator 0x5565edf9bc60 <line:789:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x5565edf9b770 <col:3> 'int' lvalue Var 0x5565edf96730 'z$w_buff0' 'int'
|   | `-ConditionalOperator 0x5565edf9bc30 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x5565edf9bc00 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x5565edf9bbe8 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x5565edf9b790 <col:15> '_Bool' lvalue Var 0x5565edf96990 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x5565edf9bc18 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5565edf9b7b0 <col:31> 'int' lvalue Var 0x5565edf96730 'z$w_buff0' 'int'
|   |   `-ParenExpr 0x5565edf9bbc8 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x5565edf9bb98 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x5565edf9b9c0 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x5565edf9b8e0 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x5565edf9b808 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x5565edf9b7f0 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x5565edf9b7d0 <col:45> '_Bool' lvalue Var 0x5565edf967a8 'z$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x5565edf9b8c0 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x5565edf9b858 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x5565edf9b840 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x5565edf9b820 <col:64> '_Bool' lvalue Var 0x5565edf96360 'z$r_buff0_thd4' '_Bool'
|   |       | |   `-UnaryOperator 0x5565edf9b8a8 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x5565edf9b890 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x5565edf9b870 <col:83> '_Bool' lvalue Var 0x5565edf968a0 'z$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x5565edf9b9a0 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x5565edf9b938 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x5565edf9b920 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x5565edf9b900 <col:102> '_Bool' lvalue Var 0x5565edf96360 'z$r_buff0_thd4' '_Bool'
|   |       |   `-UnaryOperator 0x5565edf9b988 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x5565edf9b970 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x5565edf9b950 <col:121> '_Bool' lvalue Var 0x5565edf965b8 'z$r_buff1_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x5565edf9bb80 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5565edf9b9e0 <col:138> 'int' lvalue Var 0x5565edf96730 'z$w_buff0' 'int'
|   |       `-ParenExpr 0x5565edf9bb60 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x5565edf9bb30 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x5565edf9baa0 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x5565edf9ba58 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x5565edf9ba40 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x5565edf9ba00 <col:151> '_Bool' lvalue Var 0x5565edf967a8 'z$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x5565edf9ba88 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x5565edf9ba70 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x5565edf9ba20 <col:169> '_Bool' lvalue Var 0x5565edf96360 'z$r_buff0_thd4' '_Bool'
|   |           |-ImplicitCastExpr 0x5565edf9bb00 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x5565edf9bac0 <col:186> 'int' lvalue Var 0x5565edf96730 'z$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x5565edf9bb18 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x5565edf9bae0 <col:198> 'int' lvalue Var 0x5565edf96730 'z$w_buff0' 'int'
|   |-BinaryOperator 0x5565edf9c190 <line:790:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x5565edf9bc80 <col:3> 'int' lvalue Var 0x5565edf96828 'z$w_buff1' 'int'
|   | `-ConditionalOperator 0x5565edf9c160 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x5565edf9c130 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x5565edf9c118 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x5565edf9bca0 <col:15> '_Bool' lvalue Var 0x5565edf96990 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x5565edf9c148 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5565edf9bcc0 <col:31> 'int' lvalue Var 0x5565edf96828 'z$w_buff1' 'int'
|   |   `-ParenExpr 0x5565edf9c0f8 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x5565edf9c0c8 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x5565edf9bed0 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x5565edf9bdf0 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x5565edf9bd18 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x5565edf9bd00 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x5565edf9bce0 <col:45> '_Bool' lvalue Var 0x5565edf967a8 'z$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x5565edf9bdd0 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x5565edf9bd68 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x5565edf9bd50 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x5565edf9bd30 <col:64> '_Bool' lvalue Var 0x5565edf96360 'z$r_buff0_thd4' '_Bool'
|   |       | |   `-UnaryOperator 0x5565edf9bdb8 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x5565edf9bda0 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x5565edf9bd80 <col:83> '_Bool' lvalue Var 0x5565edf968a0 'z$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x5565edf9beb0 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x5565edf9be48 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x5565edf9be30 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x5565edf9be10 <col:102> '_Bool' lvalue Var 0x5565edf96360 'z$r_buff0_thd4' '_Bool'
|   |       |   `-UnaryOperator 0x5565edf9be98 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x5565edf9be80 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x5565edf9be60 <col:121> '_Bool' lvalue Var 0x5565edf965b8 'z$r_buff1_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x5565edf9c0b0 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5565edf9bef0 <col:138> 'int' lvalue Var 0x5565edf96828 'z$w_buff1' 'int'
|   |       `-ParenExpr 0x5565edf9c090 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x5565edf9c060 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x5565edf9bfd0 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x5565edf9bf68 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x5565edf9bf50 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x5565edf9bf10 <col:151> '_Bool' lvalue Var 0x5565edf967a8 'z$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x5565edf9bf98 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x5565edf9bf80 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x5565edf9bf30 <col:169> '_Bool' lvalue Var 0x5565edf96360 'z$r_buff0_thd4' '_Bool'
|   |           |-ImplicitCastExpr 0x5565edf9c030 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x5565edf9bff0 <col:186> 'int' lvalue Var 0x5565edf96828 'z$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x5565edf9c048 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x5565edf9c010 <col:198> 'int' lvalue Var 0x5565edf96828 'z$w_buff1' 'int'
|   |-BinaryOperator 0x5565edf9c738 <line:791:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x5565edf9c1b0 <col:3> '_Bool' lvalue Var 0x5565edf967a8 'z$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x5565edf9c720 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5565edf9c6f0 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x5565edf9c6a8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5565edf9c690 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5565edf9c1d0 <col:20> '_Bool' lvalue Var 0x5565edf96990 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5565edf9c6d8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5565edf9c6c0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5565edf9c1f0 <col:36> '_Bool' lvalue Var 0x5565edf967a8 'z$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x5565edf9c670 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x5565edf9c640 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x5565edf9c400 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5565edf9c320 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5565edf9c248 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5565edf9c230 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5565edf9c210 <col:55> '_Bool' lvalue Var 0x5565edf967a8 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5565edf9c300 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5565edf9c298 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5565edf9c280 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5565edf9c260 <col:74> '_Bool' lvalue Var 0x5565edf96360 'z$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x5565edf9c2e8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5565edf9c2d0 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5565edf9c2b0 <col:93> '_Bool' lvalue Var 0x5565edf968a0 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5565edf9c3e0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5565edf9c378 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5565edf9c360 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5565edf9c340 <col:112> '_Bool' lvalue Var 0x5565edf96360 'z$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x5565edf9c3c8 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5565edf9c3b0 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5565edf9c390 <col:131> '_Bool' lvalue Var 0x5565edf965b8 'z$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x5565edf9c628 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5565edf9c610 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5565edf9c420 <col:148> '_Bool' lvalue Var 0x5565edf967a8 'z$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x5565edf9c5f0 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x5565edf9c5c0 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x5565edf9c4e0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5565edf9c498 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5565edf9c480 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5565edf9c440 <col:166> '_Bool' lvalue Var 0x5565edf967a8 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5565edf9c4c8 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5565edf9c4b0 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5565edf9c460 <col:184> '_Bool' lvalue Var 0x5565edf96360 'z$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x5565edf9c578 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5565edf9c530 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5565edf9c500 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5565edf9c5a8 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x5565edf9c590 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x5565edf9c558 <col:212> '_Bool' lvalue Var 0x5565edf967a8 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5565edf9cd00 <line:792:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x5565edf9c758 <col:3> '_Bool' lvalue Var 0x5565edf968a0 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5565edf9cce8 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5565edf9ccb8 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x5565edf9cc70 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5565edf9cc58 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5565edf9c778 <col:20> '_Bool' lvalue Var 0x5565edf96990 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5565edf9cca0 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5565edf9cc88 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5565edf9c798 <col:36> '_Bool' lvalue Var 0x5565edf968a0 'z$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x5565edf9cc38 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x5565edf9cc08 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x5565edf9c9a8 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5565edf9c8c8 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5565edf9c7f0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5565edf9c7d8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5565edf9c7b8 <col:55> '_Bool' lvalue Var 0x5565edf967a8 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5565edf9c8a8 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5565edf9c840 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5565edf9c828 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5565edf9c808 <col:74> '_Bool' lvalue Var 0x5565edf96360 'z$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x5565edf9c890 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5565edf9c878 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5565edf9c858 <col:93> '_Bool' lvalue Var 0x5565edf968a0 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5565edf9c988 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5565edf9c920 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5565edf9c908 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5565edf9c8e8 <col:112> '_Bool' lvalue Var 0x5565edf96360 'z$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x5565edf9c970 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5565edf9c958 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5565edf9c938 <col:131> '_Bool' lvalue Var 0x5565edf965b8 'z$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x5565edf9cbf0 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5565edf9cbd8 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5565edf9c9c8 <col:148> '_Bool' lvalue Var 0x5565edf968a0 'z$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x5565edf9cbb8 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x5565edf9cb88 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x5565edf9ca88 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5565edf9ca40 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5565edf9ca28 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5565edf9c9e8 <col:166> '_Bool' lvalue Var 0x5565edf967a8 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5565edf9ca70 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5565edf9ca58 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5565edf9ca08 <col:184> '_Bool' lvalue Var 0x5565edf96360 'z$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x5565edf9cb58 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5565edf9cad8 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5565edf9caa8 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5565edf9cb70 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x5565edf9cb30 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x5565edf9cb00 <col:219> 'int' 0
|   |-BinaryOperator 0x5565edf9d2b8 <line:793:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x5565edf9cd20 <col:3> '_Bool' lvalue Var 0x5565edf96360 'z$r_buff0_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x5565edf9d2a0 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5565edf9d270 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x5565edf9d228 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5565edf9d210 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5565edf9cd40 <col:20> '_Bool' lvalue Var 0x5565edf96990 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5565edf9d258 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5565edf9d240 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5565edf9cd60 <col:36> '_Bool' lvalue Var 0x5565edf96360 'z$r_buff0_thd4' '_Bool'
|   |     `-ParenExpr 0x5565edf9d1f0 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x5565edf9d1c0 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x5565edf9cf70 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5565edf9ce90 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5565edf9cdb8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5565edf9cda0 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5565edf9cd80 <col:55> '_Bool' lvalue Var 0x5565edf967a8 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5565edf9ce70 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5565edf9ce08 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5565edf9cdf0 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5565edf9cdd0 <col:74> '_Bool' lvalue Var 0x5565edf96360 'z$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x5565edf9ce58 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5565edf9ce40 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5565edf9ce20 <col:93> '_Bool' lvalue Var 0x5565edf968a0 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5565edf9cf50 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5565edf9cee8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5565edf9ced0 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5565edf9ceb0 <col:112> '_Bool' lvalue Var 0x5565edf96360 'z$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x5565edf9cf38 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5565edf9cf20 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5565edf9cf00 <col:131> '_Bool' lvalue Var 0x5565edf965b8 'z$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x5565edf9d1a8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5565edf9d190 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5565edf9cf90 <col:148> '_Bool' lvalue Var 0x5565edf96360 'z$r_buff0_thd4' '_Bool'
|   |         `-ParenExpr 0x5565edf9d170 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x5565edf9d140 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x5565edf9d060 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5565edf9d018 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5565edf9d000 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5565edf9cfb0 <col:166> '_Bool' lvalue Var 0x5565edf967a8 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5565edf9d048 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5565edf9d030 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5565edf9cfe0 <col:184> '_Bool' lvalue Var 0x5565edf96360 'z$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x5565edf9d0f8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5565edf9d0b0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5565edf9d080 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5565edf9d128 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x5565edf9d110 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x5565edf9d0d8 <col:212> '_Bool' lvalue Var 0x5565edf96360 'z$r_buff0_thd4' '_Bool'
|   |-BinaryOperator 0x5565edf9d880 <line:794:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x5565edf9d2d8 <col:3> '_Bool' lvalue Var 0x5565edf965b8 'z$r_buff1_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x5565edf9d868 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5565edf9d838 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x5565edf9d7f0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5565edf9d7d8 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5565edf9d2f8 <col:20> '_Bool' lvalue Var 0x5565edf96990 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5565edf9d820 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5565edf9d808 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5565edf9d318 <col:36> '_Bool' lvalue Var 0x5565edf965b8 'z$r_buff1_thd4' '_Bool'
|   |     `-ParenExpr 0x5565edf9d7b8 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x5565edf9d788 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x5565edf9d528 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5565edf9d448 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5565edf9d370 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5565edf9d358 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5565edf9d338 <col:55> '_Bool' lvalue Var 0x5565edf967a8 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5565edf9d428 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5565edf9d3c0 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5565edf9d3a8 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5565edf9d388 <col:74> '_Bool' lvalue Var 0x5565edf96360 'z$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x5565edf9d410 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5565edf9d3f8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5565edf9d3d8 <col:93> '_Bool' lvalue Var 0x5565edf968a0 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5565edf9d508 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5565edf9d4a0 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5565edf9d488 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5565edf9d468 <col:112> '_Bool' lvalue Var 0x5565edf96360 'z$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x5565edf9d4f0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5565edf9d4d8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5565edf9d4b8 <col:131> '_Bool' lvalue Var 0x5565edf965b8 'z$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x5565edf9d770 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5565edf9d758 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5565edf9d548 <col:148> '_Bool' lvalue Var 0x5565edf965b8 'z$r_buff1_thd4' '_Bool'
|   |         `-ParenExpr 0x5565edf9d738 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x5565edf9d708 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x5565edf9d608 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5565edf9d5c0 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5565edf9d5a8 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5565edf9d568 <col:166> '_Bool' lvalue Var 0x5565edf967a8 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5565edf9d5f0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5565edf9d5d8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5565edf9d588 <col:184> '_Bool' lvalue Var 0x5565edf96360 'z$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x5565edf9d6d8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5565edf9d658 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5565edf9d628 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5565edf9d6f0 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x5565edf9d6b0 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x5565edf9d680 <col:219> 'int' 0
|   |-BinaryOperator 0x5565edf9d8f8 <line:795:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x5565edf9d8a0 <col:3> 'int' lvalue Var 0x5565edf95928 '__unbuffered_p3_EAX' 'int'
|   | `-ImplicitCastExpr 0x5565edf9d8e0 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5565edf9d8c0 <col:25> 'int' lvalue Var 0x5565edf95ff0 'z' 'int'
|   |-BinaryOperator 0x5565edf9da28 <line:796:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x5565edf9d918 <col:3> 'int' lvalue Var 0x5565edf95ff0 'z' 'int'
|   | `-ConditionalOperator 0x5565edf9d9f8 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x5565edf9d9b0 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x5565edf9d998 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x5565edf9d938 <col:7> '_Bool' lvalue Var 0x5565edf96088 'z$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x5565edf9d9c8 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5565edf9d958 <col:25> 'int' lvalue Var 0x5565edf96108 'z$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x5565edf9d9e0 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x5565edf9d978 <col:37> 'int' lvalue Var 0x5565edf95ff0 'z' 'int'
|   |-BinaryOperator 0x5565edf9dac0 <line:797:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x5565edf9da48 <col:3> '_Bool' lvalue Var 0x5565edf96088 'z$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x5565edf9da98 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x5565edf9da68 <col:28> 'int' 0
|   |-CallExpr 0x5565edf9db18 <line:798:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5565edf9db00 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5565edf9dae0 <col:3> 'void ()' Function 0x5565edf3c410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5565edf9db70 <line:799:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5565edf9db58 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5565edf9db38 <col:3> 'void ()' Function 0x5565edf3c350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5565edf9dbe8 <line:800:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x5565edf9db90 <col:3> 'int' lvalue Var 0x5565edf95a48 '__unbuffered_p3_EBX' 'int'
|   | `-ImplicitCastExpr 0x5565edf9dbd0 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5565edf9dbb0 <col:25> 'int' lvalue Var 0x5565edf95b68 'a' 'int'
|   |-CallExpr 0x5565edf9dc40 <line:801:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5565edf9dc28 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5565edf9dc08 <col:3> 'void ()' Function 0x5565edf3c410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5565edf9dc98 <line:802:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5565edf9dc80 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5565edf9dc60 <col:3> 'void ()' Function 0x5565edf3c350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5565edf9df80 <line:803:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x5565edf9dcb8 <col:3> 'int' lvalue Var 0x5565edf95ff0 'z' 'int'
|   | `-ConditionalOperator 0x5565edf9df50 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x5565edf9dd78 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x5565edf9dd30 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x5565edf9dd18 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x5565edf9dcd8 <col:7> '_Bool' lvalue Var 0x5565edf967a8 'z$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x5565edf9dd60 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x5565edf9dd48 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x5565edf9dcf8 <col:25> '_Bool' lvalue Var 0x5565edf96360 'z$r_buff0_thd4' '_Bool'
|   |   |-ImplicitCastExpr 0x5565edf9df38 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5565edf9dd98 <col:42> 'int' lvalue Var 0x5565edf96730 'z$w_buff0' 'int'
|   |   `-ParenExpr 0x5565edf9df18 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x5565edf9dee8 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x5565edf9de58 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x5565edf9de10 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x5565edf9ddf8 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x5565edf9ddb8 <col:55> '_Bool' lvalue Var 0x5565edf968a0 'z$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x5565edf9de40 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x5565edf9de28 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x5565edf9ddd8 <col:73> '_Bool' lvalue Var 0x5565edf965b8 'z$r_buff1_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x5565edf9deb8 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5565edf9de78 <col:90> 'int' lvalue Var 0x5565edf96828 'z$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x5565edf9ded0 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x5565edf9de98 <col:102> 'int' lvalue Var 0x5565edf95ff0 'z' 'int'
|   |-BinaryOperator 0x5565edf9e198 <line:804:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5565edf9dfa0 <col:3> '_Bool' lvalue Var 0x5565edf967a8 'z$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x5565edf9e180 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5565edf9e150 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5565edf9e070 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5565edf9e028 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5565edf9e010 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5565edf9dfc0 <col:20> '_Bool' lvalue Var 0x5565edf967a8 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5565edf9e058 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5565edf9e040 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5565edf9dff0 <col:38> '_Bool' lvalue Var 0x5565edf96360 'z$r_buff0_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x5565edf9e108 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5565edf9e0c0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5565edf9e090 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5565edf9e138 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5565edf9e120 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5565edf9e0e8 <col:66> '_Bool' lvalue Var 0x5565edf967a8 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5565edf9e480 <line:805:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5565edf9e1b8 <col:3> '_Bool' lvalue Var 0x5565edf968a0 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5565edf9e468 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5565edf9e438 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5565edf9e358 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5565edf9e278 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5565edf9e230 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5565edf9e218 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5565edf9e1d8 <col:20> '_Bool' lvalue Var 0x5565edf967a8 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5565edf9e260 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5565edf9e248 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5565edf9e1f8 <col:38> '_Bool' lvalue Var 0x5565edf96360 'z$r_buff0_thd4' '_Bool'
|   |     | `-BinaryOperator 0x5565edf9e338 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5565edf9e2f0 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5565edf9e2d8 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5565edf9e298 <col:56> '_Bool' lvalue Var 0x5565edf968a0 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5565edf9e320 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5565edf9e308 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5565edf9e2b8 <col:74> '_Bool' lvalue Var 0x5565edf965b8 'z$r_buff1_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x5565edf9e3f0 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5565edf9e3a8 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5565edf9e378 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5565edf9e420 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5565edf9e408 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5565edf9e3d0 <col:102> '_Bool' lvalue Var 0x5565edf968a0 'z$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x5565edf9e688 <line:806:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5565edf9e4a0 <col:3> '_Bool' lvalue Var 0x5565edf96360 'z$r_buff0_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x5565edf9e670 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5565edf9e640 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5565edf9e560 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5565edf9e518 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5565edf9e500 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5565edf9e4c0 <col:20> '_Bool' lvalue Var 0x5565edf967a8 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5565edf9e548 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5565edf9e530 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5565edf9e4e0 <col:38> '_Bool' lvalue Var 0x5565edf96360 'z$r_buff0_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x5565edf9e5f8 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5565edf9e5b0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5565edf9e580 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5565edf9e628 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5565edf9e610 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5565edf9e5d8 <col:66> '_Bool' lvalue Var 0x5565edf96360 'z$r_buff0_thd4' '_Bool'
|   |-BinaryOperator 0x5565edf9e970 <line:807:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5565edf9e6a8 <col:3> '_Bool' lvalue Var 0x5565edf965b8 'z$r_buff1_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x5565edf9e958 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5565edf9e928 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5565edf9e848 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5565edf9e768 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5565edf9e720 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5565edf9e708 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5565edf9e6c8 <col:20> '_Bool' lvalue Var 0x5565edf967a8 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5565edf9e750 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5565edf9e738 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5565edf9e6e8 <col:38> '_Bool' lvalue Var 0x5565edf96360 'z$r_buff0_thd4' '_Bool'
|   |     | `-BinaryOperator 0x5565edf9e828 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5565edf9e7e0 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5565edf9e7c8 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5565edf9e788 <col:56> '_Bool' lvalue Var 0x5565edf968a0 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5565edf9e810 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5565edf9e7f8 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5565edf9e7a8 <col:74> '_Bool' lvalue Var 0x5565edf965b8 'z$r_buff1_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x5565edf9e8e0 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5565edf9e898 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5565edf9e868 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5565edf9e910 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5565edf9e8f8 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5565edf9e8c0 <col:102> '_Bool' lvalue Var 0x5565edf965b8 'z$r_buff1_thd4' '_Bool'
|   |-CallExpr 0x5565edf9e9c8 <line:808:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5565edf9e9b0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5565edf9e990 <col:3> 'void ()' Function 0x5565edf3c410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5565edf9ea20 <line:809:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5565edf9ea08 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5565edf9e9e8 <col:3> 'void ()' Function 0x5565edf3c350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5565edf9ead8 <line:810:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x5565edf9ea40 <col:3> 'int' lvalue Var 0x5565edf956e8 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x5565edf9eab8 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x5565edf9eaa0 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5565edf9ea60 <col:22> 'int' lvalue Var 0x5565edf956e8 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x5565edf9ea80 <col:41> 'int' 1
|   |-CallExpr 0x5565edf9eb30 <line:811:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5565edf9eb18 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5565edf9eaf8 <col:3> 'void ()' Function 0x5565edf3c410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x5565edf9eba8 <line:812:3, col:36>
|     `-CallExpr 0x5565edf9eb88 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x5565edf9eb70 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x5565edf9eb50 <col:10> 'void *(void)' Function 0x5565edf3be68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x5565edf9ed40 prev 0x5565edf95430 <line:814:1, line:816:1> line:814:6 fence 'void ()'
| `-CompoundStmt 0x5565edf9ede0 <line:815:1, line:816:1>
|-FunctionDecl 0x5565edf9ee10 prev 0x5565edf954f0 <line:817:1, line:819:1> line:817:6 isync 'void ()'
| `-CompoundStmt 0x5565edf9eeb0 <line:818:1, line:819:1>
|-FunctionDecl 0x5565edf9eee0 prev 0x5565edf955b0 <line:820:1, line:822:1> line:820:6 lwfence 'void ()'
| `-CompoundStmt 0x5565edf9ef80 <line:821:1, line:822:1>
`-FunctionDecl 0x5565edf9f000 <line:823:1, line:849:1> line:823:5 main 'int ()'
  `-CompoundStmt 0x5565edfa1020 <line:824:1, line:849:1>
    |-DeclStmt 0x5565edf9f118 <line:825:3, col:17>
    | `-VarDecl 0x5565edf9f0b0 <col:3, col:13> col:13 used t567 'pthread_t':'unsigned long'
    |-CallExpr 0x5565edf9f328 <line:826:3, col:53> 'int'
    | |-ImplicitCastExpr 0x5565edf9f310 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5565edf9f130 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x5565edf7c8f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x5565edf9f170 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x5565edf9f150 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x5565edf9f0b0 't567' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x5565edf9f368 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x5565edf9f1e8 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x5565edf9f1c0 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x5565edf9f188 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x5565edf9f380 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5565edf9f208 <col:38> 'void *(void *)' Function 0x5565edf96aa8 'P0' 'void *(void *)'
    | `-ParenExpr 0x5565edf9f288 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x5565edf9f260 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x5565edf9f228 <col:51> 'int' 0
    |-DeclStmt 0x5565edf9f410 <line:827:3, col:17>
    | `-VarDecl 0x5565edf9f3a8 <col:3, col:13> col:13 used t568 'pthread_t':'unsigned long'
    |-CallExpr 0x5565edf9f5b8 <line:828:3, col:53> 'int'
    | |-ImplicitCastExpr 0x5565edf9f5a0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5565edf9f428 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x5565edf7c8f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x5565edf9f468 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x5565edf9f448 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x5565edf9f3a8 't568' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x5565edf9f5f8 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x5565edf9f4e0 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x5565edf9f4b8 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x5565edf9f480 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x5565edf9f610 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5565edf9f500 <col:38> 'void *(void *)' Function 0x5565edf97198 'P1' 'void *(void *)'
    | `-ParenExpr 0x5565edf9f580 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x5565edf9f558 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x5565edf9f520 <col:51> 'int' 0
    |-DeclStmt 0x5565edf9f6a0 <line:829:3, col:17>
    | `-VarDecl 0x5565edf9f638 <col:3, col:13> col:13 used t569 'pthread_t':'unsigned long'
    |-CallExpr 0x5565edf9f848 <line:830:3, col:53> 'int'
    | |-ImplicitCastExpr 0x5565edf9f830 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5565edf9f6b8 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x5565edf7c8f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x5565edf9f6f8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x5565edf9f6d8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x5565edf9f638 't569' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x5565edf9f888 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x5565edf9f770 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x5565edf9f748 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x5565edf9f710 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x5565edf9f8a0 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5565edf9f790 <col:38> 'void *(void *)' Function 0x5565edf97800 'P2' 'void *(void *)'
    | `-ParenExpr 0x5565edf9f810 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x5565edf9f7e8 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x5565edf9f7b0 <col:51> 'int' 0
    |-DeclStmt 0x5565edf9f930 <line:831:3, col:17>
    | `-VarDecl 0x5565edf9f8c8 <col:3, col:13> col:13 used t570 'pthread_t':'unsigned long'
    |-CallExpr 0x5565edf9fad8 <line:832:3, col:53> 'int'
    | |-ImplicitCastExpr 0x5565edf9fac0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5565edf9f948 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x5565edf7c8f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x5565edf9f988 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x5565edf9f968 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x5565edf9f8c8 't570' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x5565edf9fb18 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x5565edf9fa00 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x5565edf9f9d8 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x5565edf9f9a0 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x5565edf9fb30 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5565edf9fa20 <col:38> 'void *(void *)' Function 0x5565edf9a8a8 'P3' 'void *(void *)'
    | `-ParenExpr 0x5565edf9faa0 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x5565edf9fa78 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x5565edf9fa40 <col:51> 'int' 0
    |-CallExpr 0x5565edf9fb80 <line:833:3, col:27> 'void'
    | `-ImplicitCastExpr 0x5565edf9fb68 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5565edf9fb48 <col:3> 'void ()' Function 0x5565edf3c350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x5565edf9fc50 <line:834:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x5565edf9fba0 <col:3> '_Bool' lvalue Var 0x5565edf95c00 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x5565edf9fc38 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x5565edf9fc18 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x5565edf9fc00 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x5565edf9fbc0 <col:21> 'int' lvalue Var 0x5565edf956e8 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x5565edf9fbe0 <col:41> 'int' 4
    |-CallExpr 0x5565edf9fca8 <line:835:3, col:25> 'void'
    | `-ImplicitCastExpr 0x5565edf9fc90 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5565edf9fc70 <col:3> 'void ()' Function 0x5565edf3c410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x5565edf9fd20 <line:836:3, col:36> 'void'
    | |-ImplicitCastExpr 0x5565edf9fd08 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5565edf9fcc8 <col:3> 'void (int)' Function 0x5565edf3bca0 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x5565edf9fd60 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x5565edf9fd48 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x5565edf9fce8 <col:21> '_Bool' lvalue Var 0x5565edf95c00 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x5565edf9fdb0 <line:837:3, col:27> 'void'
    | `-ImplicitCastExpr 0x5565edf9fd98 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5565edf9fd78 <col:3> 'void ()' Function 0x5565edf3c350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x5565edfa00a8 <line:838:3, col:103> 'int' '='
    | |-DeclRefExpr 0x5565edf9fdd0 <col:3> 'int' lvalue Var 0x5565edf95ff0 'z' 'int'
    | `-ConditionalOperator 0x5565edfa0078 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x5565edf9fe90 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x5565edf9fe48 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x5565edf9fe30 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x5565edf9fdf0 <col:7> '_Bool' lvalue Var 0x5565edf967a8 'z$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x5565edf9fe78 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x5565edf9fe60 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x5565edf9fe10 <col:25> '_Bool' lvalue Var 0x5565edf96180 'z$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x5565edfa0060 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x5565edf9feb0 <col:42> 'int' lvalue Var 0x5565edf96730 'z$w_buff0' 'int'
    |   `-ParenExpr 0x5565edfa0040 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x5565edfa0010 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x5565edf9ff70 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x5565edf9ff28 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x5565edf9ff10 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x5565edf9fed0 <col:55> '_Bool' lvalue Var 0x5565edf968a0 'z$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x5565edf9ff58 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x5565edf9ff40 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x5565edf9fef0 <col:73> '_Bool' lvalue Var 0x5565edf963d8 'z$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x5565edf9ffd0 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x5565edf9ff90 <col:90> 'int' lvalue Var 0x5565edf96828 'z$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x5565edf9ffe8 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x5565edf9ffb0 <col:102> 'int' lvalue Var 0x5565edf95ff0 'z' 'int'
    |-BinaryOperator 0x5565edfa02b0 <line:839:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x5565edfa00c8 <col:3> '_Bool' lvalue Var 0x5565edf967a8 'z$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x5565edfa0298 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5565edfa0268 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x5565edfa0188 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x5565edfa0140 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x5565edfa0128 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x5565edfa00e8 <col:20> '_Bool' lvalue Var 0x5565edf967a8 'z$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x5565edfa0170 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x5565edfa0158 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x5565edfa0108 <col:38> '_Bool' lvalue Var 0x5565edf96180 'z$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x5565edfa0220 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x5565edfa01d8 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x5565edfa01a8 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x5565edfa0250 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x5565edfa0238 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x5565edfa0200 <col:66> '_Bool' lvalue Var 0x5565edf967a8 'z$w_buff0_used' '_Bool'
    |-BinaryOperator 0x5565edfa0598 <line:840:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x5565edfa02d0 <col:3> '_Bool' lvalue Var 0x5565edf968a0 'z$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x5565edfa0580 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5565edfa0550 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x5565edfa0470 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x5565edfa0390 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x5565edfa0348 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x5565edfa0330 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x5565edfa02f0 <col:20> '_Bool' lvalue Var 0x5565edf967a8 'z$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x5565edfa0378 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x5565edfa0360 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x5565edfa0310 <col:38> '_Bool' lvalue Var 0x5565edf96180 'z$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x5565edfa0450 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x5565edfa0408 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x5565edfa03f0 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x5565edfa03b0 <col:56> '_Bool' lvalue Var 0x5565edf968a0 'z$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x5565edfa0438 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x5565edfa0420 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x5565edfa03d0 <col:74> '_Bool' lvalue Var 0x5565edf963d8 'z$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x5565edfa0508 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x5565edfa04c0 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x5565edfa0490 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x5565edfa0538 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x5565edfa0520 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x5565edfa04e8 <col:102> '_Bool' lvalue Var 0x5565edf968a0 'z$w_buff1_used' '_Bool'
    |-BinaryOperator 0x5565edfa07a0 <line:841:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x5565edfa05b8 <col:3> '_Bool' lvalue Var 0x5565edf96180 'z$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x5565edfa0788 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5565edfa0758 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x5565edfa0678 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x5565edfa0630 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x5565edfa0618 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x5565edfa05d8 <col:20> '_Bool' lvalue Var 0x5565edf967a8 'z$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x5565edfa0660 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x5565edfa0648 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x5565edfa05f8 <col:38> '_Bool' lvalue Var 0x5565edf96180 'z$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x5565edfa0710 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x5565edfa06c8 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x5565edfa0698 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x5565edfa0740 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x5565edfa0728 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x5565edfa06f0 <col:66> '_Bool' lvalue Var 0x5565edf96180 'z$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x5565edfa0a88 <line:842:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x5565edfa07c0 <col:3> '_Bool' lvalue Var 0x5565edf963d8 'z$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x5565edfa0a70 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5565edfa0a40 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x5565edfa0960 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x5565edfa0880 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x5565edfa0838 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x5565edfa0820 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x5565edfa07e0 <col:20> '_Bool' lvalue Var 0x5565edf967a8 'z$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x5565edfa0868 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x5565edfa0850 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x5565edfa0800 <col:38> '_Bool' lvalue Var 0x5565edf96180 'z$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x5565edfa0940 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x5565edfa08f8 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x5565edfa08e0 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x5565edfa08a0 <col:56> '_Bool' lvalue Var 0x5565edf968a0 'z$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x5565edfa0928 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x5565edfa0910 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x5565edfa08c0 <col:74> '_Bool' lvalue Var 0x5565edf963d8 'z$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x5565edfa09f8 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x5565edfa09b0 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x5565edfa0980 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x5565edfa0a28 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x5565edfa0a10 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x5565edfa09d8 <col:102> '_Bool' lvalue Var 0x5565edf963d8 'z$r_buff1_thd0' '_Bool'
    |-CallExpr 0x5565edfa0ae0 <line:843:3, col:25> 'void'
    | `-ImplicitCastExpr 0x5565edfa0ac8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5565edfa0aa8 <col:3> 'void ()' Function 0x5565edf3c410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x5565edfa0b38 <line:844:3, col:27> 'void'
    | `-ImplicitCastExpr 0x5565edfa0b20 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5565edfa0b00 <col:3> 'void ()' Function 0x5565edf3c350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x5565edfa0ea0 <line:845:3, col:123> '_Bool' '='
    | |-DeclRefExpr 0x5565edfa0b58 <col:3> '_Bool' lvalue Var 0x5565edf95c78 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x5565edfa0e88 <col:21, col:123> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x5565edfa0e70 <col:21, col:123> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x5565edfa0e50 <col:22, col:123> 'int'
    |       `-BinaryOperator 0x5565edfa0e30 <col:23, col:122> 'int' '&&'
    |         |-BinaryOperator 0x5565edfa0d98 <col:23, col:94> 'int' '&&'
    |         | |-BinaryOperator 0x5565edfa0d00 <col:23, col:66> 'int' '&&'
    |         | | |-BinaryOperator 0x5565edfa0c68 <col:23, col:38> 'int' '&&'
    |         | | | |-BinaryOperator 0x5565edfa0bd0 <col:23, col:28> 'int' '=='
    |         | | | | |-ImplicitCastExpr 0x5565edfa0bb8 <col:23> 'int' <LValueToRValue>
    |         | | | | | `-DeclRefExpr 0x5565edfa0b78 <col:23> 'int' lvalue Var 0x5565edf95d78 'x' 'int'
    |         | | | | `-IntegerLiteral 0x5565edfa0b98 <col:28> 'int' 2
    |         | | | `-BinaryOperator 0x5565edfa0c48 <col:33, col:38> 'int' '=='
    |         | | |   |-ImplicitCastExpr 0x5565edfa0c30 <col:33> 'int' <LValueToRValue>
    |         | | |   | `-DeclRefExpr 0x5565edfa0bf0 <col:33> 'int' lvalue Var 0x5565edf95e98 'y' 'int'
    |         | | |   `-IntegerLiteral 0x5565edfa0c10 <col:38> 'int' 2
    |         | | `-BinaryOperator 0x5565edfa0ce0 <col:43, col:66> 'int' '=='
    |         | |   |-ImplicitCastExpr 0x5565edfa0cc8 <col:43> 'int' <LValueToRValue>
    |         | |   | `-DeclRefExpr 0x5565edfa0c88 <col:43> 'int' lvalue Var 0x5565edf95808 '__unbuffered_p2_EAX' 'int'
    |         | |   `-IntegerLiteral 0x5565edfa0ca8 <col:66> 'int' 0
    |         | `-BinaryOperator 0x5565edfa0d78 <col:71, col:94> 'int' '=='
    |         |   |-ImplicitCastExpr 0x5565edfa0d60 <col:71> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x5565edfa0d20 <col:71> 'int' lvalue Var 0x5565edf95928 '__unbuffered_p3_EAX' 'int'
    |         |   `-IntegerLiteral 0x5565edfa0d40 <col:94> 'int' 1
    |         `-BinaryOperator 0x5565edfa0e10 <col:99, col:122> 'int' '=='
    |           |-ImplicitCastExpr 0x5565edfa0df8 <col:99> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x5565edfa0db8 <col:99> 'int' lvalue Var 0x5565edf95a48 '__unbuffered_p3_EBX' 'int'
    |           `-IntegerLiteral 0x5565edfa0dd8 <col:122> 'int' 0
    |-CallExpr 0x5565edfa0ef8 <line:846:3, col:25> 'void'
    | `-ImplicitCastExpr 0x5565edfa0ee0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5565edfa0ec0 <col:3> 'void ()' Function 0x5565edf3c410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x5565edfa0f70 <line:847:3, col:36> 'void'
    | |-ImplicitCastExpr 0x5565edfa0f58 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5565edfa0f18 <col:3> 'void (int)' Function 0x5565edf3c0d8 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x5565edfa0fb0 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x5565edfa0f98 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x5565edfa0f38 <col:21> '_Bool' lvalue Var 0x5565edf95c78 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x5565edfa0fe8 <line:848:3, col:10>
      `-IntegerLiteral 0x5565edfa0fc8 <col:10> 'int' 0
