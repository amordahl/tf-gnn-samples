TranslationUnitDecl 0x5559054e0f88 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x5559054e1848 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x5559054e1520 '__int128'
|-TypedefDecl 0x5559054e18b8 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x5559054e1540 'unsigned __int128'
|-TypedefDecl 0x5559054e1bc0 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x5559054e1990 'struct __NSConstantString_tag'
|   `-Record 0x5559054e1910 '__NSConstantString_tag'
|-TypedefDecl 0x5559054e1c68 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x5559054e1c20 'char *'
|   `-BuiltinType 0x5559054e1020 'char'
|-TypedefDecl 0x555905520b60 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x5559054e1f00 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x5559054e1d40 'struct __va_list_tag'
|     `-Record 0x5559054e1cc0 '__va_list_tag'
|-FunctionDecl 0x555905520ca0 <pthread-wmm/safe021_power.oepc_false-unreach-call.i:1:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x555905520bd0 <col:31> col:34 'int'
|-FunctionDecl 0x555905520e68 <line:2:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x555905520f90 <line:3:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x5559055210d8 <line:4:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x555905521048 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x555905521308 <col:40, col:99>
|   |-IfStmt 0x5559055212d8 <col:42, col:88>
|   | |-UnaryOperator 0x5559055211b8 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x5559055211a0 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x555905521180 <col:47> 'int' lvalue ParmVar 0x555905521048 'expression' 'int'
|   | `-CompoundStmt 0x5559055212c0 <col:59, col:88>
|   |   `-LabelStmt 0x5559055212a8 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x555905521238 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x555905521220 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x5559055211d0 <col:68> 'void () __attribute__((noreturn))' Function 0x555905520f90 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x5559055212f0 <col:89>
|   `-ReturnStmt 0x5559055212f8 <col:91>
|-FunctionDecl 0x555905521350 <line:5:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x555905521410 <line:6:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x555905521790 <line:8:1, line:10:76> line:8:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5559055214c8 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x555905521548 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x5559055215c8 <line:9:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x555905521648 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x555905521850 <line:10:22>
|-FunctionDecl 0x5559055478a0 <line:11:1, line:13:76> line:11:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5559055218c0 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x555905521940 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x5559055219c0 <line:12:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x555905521a40 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x555905547960 <line:13:22>
|-FunctionDecl 0x555905547c10 <line:14:1, line:15:76> line:14:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5559055479d0 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x555905547a50 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x555905547ad0 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x555905547cc8 <line:15:22>
|-TypedefDecl 0x555905547d38 <line:17:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x5559054e10e0 'unsigned char'
|-TypedefDecl 0x555905547da8 <line:18:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x5559054e1100 'unsigned short'
|-TypedefDecl 0x555905547e18 <line:19:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x5559054e1120 'unsigned int'
|-TypedefDecl 0x555905547e88 <line:20:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x5559054e1140 'unsigned long'
|-TypedefDecl 0x555905547ef8 <line:21:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x5559054e1040 'signed char'
|-TypedefDecl 0x555905547f68 <line:22:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x5559054e10e0 'unsigned char'
|-TypedefDecl 0x555905547fd8 <line:23:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x5559054e1060 'short'
|-TypedefDecl 0x555905548048 <line:24:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x5559054e1100 'unsigned short'
|-TypedefDecl 0x5559055480b8 <line:25:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x5559054e1080 'int'
|-TypedefDecl 0x555905548128 <line:26:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x5559054e1120 'unsigned int'
|-TypedefDecl 0x555905548198 <line:27:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x5559054e10a0 'long'
|-TypedefDecl 0x555905548208 <line:28:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x5559054e1140 'unsigned long'
|-TypedefDecl 0x555905548278 <line:29:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x5559054e10a0 'long'
|-TypedefDecl 0x5559055482e8 <line:30:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x5559054e1140 'unsigned long'
|-TypedefDecl 0x555905548358 <line:31:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x5559054e1140 'unsigned long'
|-TypedefDecl 0x5559055483c8 <line:32:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x5559054e1120 'unsigned int'
|-TypedefDecl 0x555905548438 <line:33:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x5559054e1120 'unsigned int'
|-TypedefDecl 0x5559055484a8 <line:34:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x5559054e1140 'unsigned long'
|-TypedefDecl 0x555905548518 <line:35:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x5559054e1140 'unsigned long'
|-TypedefDecl 0x555905548588 <line:36:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x5559054e1120 'unsigned int'
|-TypedefDecl 0x5559055485f8 <line:37:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x5559054e1140 'unsigned long'
|-TypedefDecl 0x555905548668 <line:38:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x5559054e10a0 'long'
|-TypedefDecl 0x5559055486d8 <line:39:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x5559054e10a0 'long'
|-TypedefDecl 0x555905548748 <line:40:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x5559054e1080 'int'
|-RecordDecl 0x5559055487a0 <line:41:9, col:32> col:9 struct definition
| `-FieldDecl 0x555905548918 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x5559055489d0 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x555905548970 'struct __fsid_t' sugar
|   `-RecordType 0x555905548820 '__fsid_t'
|     `-Record 0x5559055487a0 ''
|-TypedefDecl 0x555905548a58 <line:42:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x5559054e10a0 'long'
|-TypedefDecl 0x555905548ac8 <line:43:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x5559054e1140 'unsigned long'
|-TypedefDecl 0x555905548b38 <line:44:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x5559054e1140 'unsigned long'
|-TypedefDecl 0x555905548ba8 <line:45:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x5559054e1120 'unsigned int'
|-TypedefDecl 0x555905548c18 <line:46:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x5559054e10a0 'long'
|-TypedefDecl 0x555905548c88 <line:47:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x5559054e1120 'unsigned int'
|-TypedefDecl 0x555905548cf8 <line:48:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x5559054e10a0 'long'
|-TypedefDecl 0x555905548d68 <line:49:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x5559054e1080 'int'
|-TypedefDecl 0x555905548dd8 <line:50:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x5559054e1080 'int'
|-TypedefDecl 0x555905548e48 <line:51:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x5559054e1080 'int'
|-TypedefDecl 0x555905548eb8 <line:52:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x5559054e17a0 'void *'
|   `-BuiltinType 0x5559054e0fe0 'void'
|-TypedefDecl 0x555905548f28 <line:53:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x5559054e10a0 'long'
|-TypedefDecl 0x555905548f98 <line:54:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x5559054e10a0 'long'
|-TypedefDecl 0x555905549008 <line:55:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x5559054e10a0 'long'
|-TypedefDecl 0x555905549078 <line:56:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x5559054e1140 'unsigned long'
|-TypedefDecl 0x5559055490e8 <line:57:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x5559054e1140 'unsigned long'
|-TypedefDecl 0x555905549158 <line:58:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x5559054e1140 'unsigned long'
|-TypedefDecl 0x5559055491c8 <line:59:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x5559054e1140 'unsigned long'
|-TypedefDecl 0x555905549238 <line:60:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x5559054e10a0 'long'
|-TypedefDecl 0x5559055492a8 <line:61:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x5559054e10a0 'long'
|-TypedefDecl 0x555905549318 <line:62:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x5559054e10a0 'long'
|-TypedefDecl 0x555905549388 <line:63:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x5559054e1140 'unsigned long'
|-TypedefDecl 0x555905549418 <line:64:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x5559055493e0 '__off64_t' sugar
|   |-Typedef 0x5559055486d8 '__off64_t'
|   `-BuiltinType 0x5559054e10a0 'long'
|-TypedefDecl 0x555905549510 <line:65:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x5559055494d0 '__quad_t *'
|   `-TypedefType 0x555905549470 '__quad_t' sugar
|     |-Typedef 0x555905548278 '__quad_t'
|     `-BuiltinType 0x5559054e10a0 'long'
|-TypedefDecl 0x555905549580 <line:66:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x5559054e1c20 'char *'
|   `-BuiltinType 0x5559054e1020 'char'
|-TypedefDecl 0x5559055495f0 <line:67:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x5559054e10a0 'long'
|-TypedefDecl 0x555905549660 <line:68:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x5559054e1120 'unsigned int'
|-FunctionDecl 0x5559055497a8 <line:69:1, line:73:1> line:70:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x5559055496d0 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x555905549ae8 <line:71:1, line:73:1>
|   `-ReturnStmt 0x555905549ad8 <line:72:3, col:34>
|     `-CallExpr 0x555905549a98 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x555905549a80 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x555905549a10 <col:10> '<builtin fn type>' Function 0x555905549880 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x555905549ac0 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x555905549a30 <col:29> 'unsigned int' lvalue ParmVar 0x5559055496d0 '__bsx' 'unsigned int'
|-FunctionDecl 0x555905549880 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x555905549920 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x555905549990 <col:10> Implicit
| `-ConstAttr 0x5559055499e8 <col:10> Implicit
|-FunctionDecl 0x555905549c40 <line:74:1, line:78:1> line:75:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x555905549b38 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x555905549f58 <line:76:1, line:78:1>
|   `-ReturnStmt 0x555905549f48 <line:77:3, col:34>
|     `-CallExpr 0x555905549f08 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x555905549ef0 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x555905549e78 <col:10> '<builtin fn type>' Function 0x555905549ce8 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x555905549f30 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x555905549e98 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x555905549b38 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x555905549ce8 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x555905549d88 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x555905549df8 <col:10> Implicit
| `-ConstAttr 0x555905549e50 <col:10> Implicit
|-TypedefDecl 0x555905549f88 <line:79:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x5559054e1140 'unsigned long'
|-TypedefDecl 0x55590554a018 <line:81:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x555905549fe0 '__time_t' sugar
|   |-Typedef 0x555905548c18 '__time_t'
|   `-BuiltinType 0x5559054e10a0 'long'
|-RecordDecl 0x55590554a070 <line:84:1, line:88:3> line:84:8 struct timespec definition
| |-FieldDecl 0x55590554a128 <line:86:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x55590554a1b8 <line:87:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x55590554a248 <line:89:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x55590554a210 '__pid_t' sugar
|   |-Typedef 0x555905548748 '__pid_t'
|   `-BuiltinType 0x5559054e1080 'int'
|-RecordDecl 0x55590554a2a0 <line:90:1, line:93:3> line:90:8 struct sched_param definition
| `-FieldDecl 0x55590554a360 <line:92:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x55590554a3b0 <line:96:1, line:99:3> line:96:8 struct __sched_param definition
| `-FieldDecl 0x55590554a470 <line:98:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x55590554a4d8 <line:100:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x5559054e1140 'unsigned long'
|-RecordDecl 0x55590554a530 <line:101:9, line:104:1> line:101:9 struct definition
| `-FieldDecl 0x55590554a7c0 <line:103:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x55590554c8b0 <line:101:1, line:104:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x55590554a810 'struct cpu_set_t' sugar
|   `-RecordType 0x55590554a5b0 'cpu_set_t'
|     `-Record 0x55590554a530 ''
|-FunctionDecl 0x55590554cb88 <line:106:1, line:107:42> line:106:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x55590554c958 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x55590554ca60 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x55590554cc38 <line:107:19>
|-FunctionDecl 0x55590554ce10 <line:108:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x55590554cca0 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x55590554ceb8 <col:69>
|-FunctionDecl 0x55590554d030 <line:109:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x55590554cf20 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x55590554d0d8 <col:64>
|-FunctionDecl 0x55590554d398 <line:112:1, line:113:45> line:112:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x55590554d140 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55590554d278 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x55590554d448 <line:113:22>
|-FunctionDecl 0x55590554d6c8 <line:114:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x55590554d4b0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55590554d5a8 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x55590554d778 <col:88>
|-FunctionDecl 0x55590554da98 <line:115:1, line:116:85> line:115:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x55590554d7e0 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55590554d8c0 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x55590554d950 <line:116:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x55590554db50 <col:62>
|-FunctionDecl 0x55590554dcc8 <line:117:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x55590554dbb8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x55590554dd70 <col:63>
|-FunctionDecl 0x55590554de98 <line:118:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x55590554df38 <col:47>
|-FunctionDecl 0x55590554e040 <line:119:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x55590554dfa8 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x55590554e0e8 <col:69>
|-FunctionDecl 0x55590554e1f0 <line:120:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x55590554e158 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x55590554e298 <col:69>
|-FunctionDecl 0x55590554e558 <line:121:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x55590554e300 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x55590554e438 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x55590554e608 <col:88>
|-TypedefDecl 0x55590554e698 <line:125:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x55590554e660 '__clock_t' sugar
|   |-Typedef 0x555905548a58 '__clock_t'
|   `-BuiltinType 0x5559054e10a0 'long'
|-TypedefDecl 0x55590554e728 <line:128:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x55590554e6f0 '__clockid_t' sugar
|   |-Typedef 0x555905548e48 '__clockid_t'
|   `-BuiltinType 0x5559054e1080 'int'
|-TypedefDecl 0x55590554e7b8 <line:129:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x55590554e780 '__timer_t' sugar
|   |-Typedef 0x555905548eb8 '__timer_t'
|   `-PointerType 0x5559054e17a0 'void *'
|     `-BuiltinType 0x5559054e0fe0 'void'
|-RecordDecl 0x55590554e810 <line:131:1, line:144:1> line:131:8 struct tm definition
| |-FieldDecl 0x55590554e8e8 <line:133:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x55590554e950 <line:134:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x55590554e9b8 <line:135:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x55590554ea20 <line:136:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x55590554ea88 <line:137:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x55590554eaf0 <line:138:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x55590554eb58 <line:139:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x55590554ebc0 <line:140:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x55590554ec28 <line:141:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x55590554ec90 <line:142:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x55590554ecf8 <line:143:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x55590554ed48 <line:147:1, line:151:3> line:147:8 struct itimerspec definition
| |-FieldDecl 0x55590554ee18 <line:149:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x55590554ee88 <line:150:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x55590554ef30 <line:152:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x55590554f100 <line:154:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x55590554f1a0 <col:45>
|-FunctionDecl 0x55590554f380 <line:155:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x55590554f270 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x55590554f428 <col:54>
|-FunctionDecl 0x55590554f628 <line:156:1, line:157:73> line:156:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x55590554f490 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x55590554f508 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x55590554f6d8 <line:157:22>
| `-ConstAttr 0x55590554f730 <col:63>
|-FunctionDecl 0x555905550560 <line:158:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x55590554f828 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x555905550608 <col:56>
|-FunctionDecl 0x5559055509b0 <line:159:1, line:161:77> line:159:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x555905550678 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x5559055506f0 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x555905550770 <line:160:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x555905550868 <line:161:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x555905550a70 <col:54>
|-RecordDecl 0x555905550ac8 <line:163:9, line:170:1> line:163:16 struct __locale_struct definition
| |-RecordDecl 0x555905550b78 parent 0x5559054e0f88 <line:165:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x555905550dd8 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x555905550e78 <line:166:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x555905550ee0 <line:167:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x555905550f48 <line:168:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x555905551038 <line:169:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x555905551158 <line:163:1, line:170:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x555905551100 'struct __locale_struct *'
|   `-ElaboratedType 0x555905551090 'struct __locale_struct' sugar
|     `-RecordType 0x555905550b50 'struct __locale_struct'
|       `-Record 0x555905550ac8 '__locale_struct'
|-TypedefDecl 0x555905551208 <line:171:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x5559055511d0 '__locale_t' sugar
|   |-Typedef 0x555905551158 '__locale_t'
|   `-PointerType 0x555905551100 'struct __locale_struct *'
|     `-ElaboratedType 0x555905551090 'struct __locale_struct' sugar
|       `-RecordType 0x555905550b50 'struct __locale_struct'
|         `-Record 0x555905550ac8 '__locale_struct'
|-FunctionDecl 0x555905551610 <line:172:1, line:175:63> line:172:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x555905551278 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x5559055512f0 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x555905551370 <line:173:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x555905551400 <line:174:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x555905551478 <line:175:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x5559055516d8 <col:40>
|-FunctionDecl 0x5559055518c8 <line:177:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x5559055517a0 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x555905551970 <col:66>
|-FunctionDecl 0x555905551a80 <line:178:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x5559055519d8 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x555905551b28 <col:69>
|-FunctionDecl 0x555905551d58 <line:180:1, line:181:75> line:180:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x555905551b90 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x555905551c20 <line:181:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x555905551e08 <col:52>
|-FunctionDecl 0x555905551fb0 <line:182:1, line:183:78> line:182:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x555905551e70 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x555905551f00 <line:183:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x555905552060 <col:55>
|-FunctionDecl 0x5559055521f8 <line:185:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x5559055520e0 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x5559055522a0 <col:62>
|-FunctionDecl 0x555905552418 <line:186:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x555905552308 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x5559055524c0 <col:60>
|-FunctionDecl 0x555905552718 <line:188:1, line:189:67> line:188:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x555905552578 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x5559055525f8 <line:189:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x5559055527c8 <col:44>
|-FunctionDecl 0x5559055529d8 <line:190:1, line:191:72> line:190:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x555905552830 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x5559055528b0 <line:191:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x555905552a88 <col:49>
|-VarDecl 0x555905552b88 <line:192:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x555905552c08 <line:193:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x555905552c88 <line:194:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x555905552d50 <line:195:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x555905552e80 <line:196:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x555905552f20 <col:42>
|-VarDecl 0x555905552f90 <line:197:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x555905553010 <line:198:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x555905553198 <line:199:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x555905553088 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x555905553240 <col:57>
|-FunctionDecl 0x555905553350 <line:200:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x5559055532c0 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x5559055533f8 <col:56>
|-FunctionDecl 0x555905554540 <line:201:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x555905553478 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x5559055545e8 <col:59>
|-FunctionDecl 0x5559055546f0 <line:202:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x555905554658 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x555905554798 <col:48>
| `-ConstAttr 0x5559055547f0 <col:89>
|-FunctionDecl 0x555905554a58 <line:203:1, line:204:37> line:203:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x5559055548a8 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x555905554938 <line:204:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x555905554cb8 <line:205:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x555905554b48 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x555905554bd8 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x555905554d68 <col:88>
|-FunctionDecl 0x555905554f00 <line:206:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x555905554dd0 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x555905554e60 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x555905554fb0 <col:88>
|-FunctionDecl 0x5559055551c8 <line:207:1, line:208:45> line:207:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x555905555018 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5559055550a8 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x555905555278 <line:208:22>
|-FunctionDecl 0x5559055555e8 <line:209:1, line:211:30> line:209:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x5559055552e0 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x555905555360 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x5559055553f0 <line:210:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x555905555480 <line:211:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x5559055558e8 <line:212:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x5559055556e8 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x5559055557c0 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x555905555998 <col:85>
|-FunctionDecl 0x555905555d88 <line:213:1, line:215:75> line:213:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x555905555a00 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x555905555b38 <line:214:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x555905555c40 <line:215:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x555905555e40 <col:52>
|-FunctionDecl 0x555905555fb8 <line:216:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x555905555ea8 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x555905556060 <col:61>
|-FunctionDecl 0x555905556560 <line:217:1, line:219:85> line:217:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x5559055560c8 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x555905556148 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x555905556278 <line:218:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x555905556368 <line:219:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x555905556620 <col:62>
|-FunctionDecl 0x555905556838 <line:220:1, line:221:45> line:220:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x555905556688 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x555905556718 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x5559055568e8 <line:221:22>
|-FunctionDecl 0x5559055569e8 <line:222:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x555905556950 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x555905556a90 <col:65>
|-TypedefDecl 0x555905556b00 <line:224:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x5559054e1140 'unsigned long'
|-RecordDecl 0x555905556b58 <line:225:1, line:229:1> line:225:7 union pthread_attr_t definition
| |-FieldDecl 0x555905556ca0 <line:227:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x555905556d08 <line:228:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x555905556db8 <line:230:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x555905556d60 'union pthread_attr_t' sugar
|   `-RecordType 0x555905556be0 'union pthread_attr_t'
|     `-Record 0x555905556b58 'pthread_attr_t'
|-RecordDecl 0x555905556e10 <line:231:9, line:235:1> line:231:16 struct __pthread_internal_list definition
| |-FieldDecl 0x555905556f88 <line:233:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x555905557000 <line:234:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x5559055570b0 <line:231:1, line:235:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x555905557050 'struct __pthread_internal_list' sugar
|   `-RecordType 0x555905556e90 'struct __pthread_internal_list'
|     `-Record 0x555905556e10 '__pthread_internal_list'
|-RecordDecl 0x555905557120 <line:236:9, line:250:1> line:236:9 union definition
| |-RecordDecl 0x5559055571c8 parent 0x5559054e0f88 <line:238:3, line:247:3> line:238:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x5559055572a0 <line:240:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x555905557308 <line:241:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x555905557370 <line:242:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x5559055573d8 <line:243:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x555905557440 <line:244:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x5559055574a8 <line:245:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x55590555b580 <line:246:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x55590555b630 <line:238:3, line:247:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x55590555b720 <line:248:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x55590555b788 <line:249:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55590555b910 <line:236:1, line:250:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x55590555b8b0 'union pthread_mutex_t' sugar
|   `-RecordType 0x5559055571a0 'pthread_mutex_t'
|     `-Record 0x555905557120 ''
|-RecordDecl 0x55590555b980 <line:251:9, line:255:1> line:251:9 union definition
| |-FieldDecl 0x55590555bac0 <line:253:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x55590555bb28 <line:254:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x55590555bbe0 <line:251:1, line:255:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x55590555bb80 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x55590555ba00 'pthread_mutexattr_t'
|     `-Record 0x55590555b980 ''
|-RecordDecl 0x55590555bc50 <line:256:9, line:271:1> line:256:9 union definition
| |-RecordDecl 0x55590555bcf8 <line:258:3, line:268:3> line:258:3 struct definition
| | |-FieldDecl 0x55590555bdc0 <line:260:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x55590555be28 <line:261:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x55590555be90 <line:262:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x55590555bef8 <line:263:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x55590555bf60 <line:264:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x55590555bfc8 <line:265:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x55590555c030 <line:266:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x55590555c098 <line:267:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x55590555c150 <line:258:3, line:268:5> col:5 __data 'struct (anonymous struct at pthread-wmm/safe021_power.oepc_false-unreach-call.i:258:3)':'struct pthread_cond_t::(anonymous at pthread-wmm/safe021_power.oepc_false-unreach-call.i:258:3)'
| |-FieldDecl 0x55590555c240 <line:269:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x55590555c2a8 <line:270:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x55590555c3e0 <line:256:1, line:271:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x55590555c380 'union pthread_cond_t' sugar
|   `-RecordType 0x55590555bcd0 'pthread_cond_t'
|     `-Record 0x55590555bc50 ''
|-RecordDecl 0x55590555c450 <line:272:9, line:276:1> line:272:9 union definition
| |-FieldDecl 0x55590555c590 <line:274:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x55590555c5f8 <line:275:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x55590555c6b0 <line:272:1, line:276:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x55590555c650 'union pthread_condattr_t' sugar
|   `-RecordType 0x55590555c4d0 'pthread_condattr_t'
|     `-Record 0x55590555c450 ''
|-TypedefDecl 0x55590555c738 <line:277:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x5559054e1120 'unsigned int'
|-TypedefDecl 0x55590555c7a8 <line:278:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x5559054e1080 'int'
|-RecordDecl 0x55590555c800 <line:279:9, line:297:1> line:279:9 union definition
| |-RecordDecl 0x55590555c8a8 <line:281:3, line:294:3> line:281:3 struct definition
| | |-FieldDecl 0x55590555c970 <line:283:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x55590555c9d8 <line:284:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x55590555ca40 <line:285:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x55590555caa8 <line:286:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x55590555cb10 <line:287:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x55590555cb78 <line:288:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x55590555cbe0 <line:289:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x55590555cc48 <line:290:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x55590555ccb0 <line:291:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x55590555cd18 <line:292:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x55590555cd80 <line:293:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x55590555ce30 <line:281:3, line:294:5> col:5 __data 'struct (anonymous struct at pthread-wmm/safe021_power.oepc_false-unreach-call.i:281:3)':'struct pthread_rwlock_t::(anonymous at pthread-wmm/safe021_power.oepc_false-unreach-call.i:281:3)'
| |-FieldDecl 0x55590555ced8 <line:295:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x55590555cf40 <line:296:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55590555d090 <line:279:1, line:297:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x55590555d030 'union pthread_rwlock_t' sugar
|   `-RecordType 0x55590555c880 'pthread_rwlock_t'
|     `-Record 0x55590555c800 ''
|-RecordDecl 0x55590555d100 <line:298:9, line:302:1> line:298:9 union definition
| |-FieldDecl 0x55590555d240 <line:300:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x55590555d2a8 <line:301:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55590555d360 <line:298:1, line:302:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x55590555d300 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x55590555d180 'pthread_rwlockattr_t'
|     `-Record 0x55590555d100 ''
|-TypedefDecl 0x55590555d3e8 <line:303:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x5559054e1084 'volatile int' volatile
|   `-BuiltinType 0x5559054e1080 'int'
|-RecordDecl 0x55590555d440 <line:304:9, line:308:1> line:304:9 union definition
| |-FieldDecl 0x55590555f5b0 <line:306:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x55590555f618 <line:307:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x55590555f6d0 <line:304:1, line:308:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x55590555f670 'union pthread_barrier_t' sugar
|   `-RecordType 0x55590555d4c0 'pthread_barrier_t'
|     `-Record 0x55590555d440 ''
|-RecordDecl 0x55590555f740 <line:309:9, line:313:1> line:309:9 union definition
| |-FieldDecl 0x55590555f840 <line:311:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x55590555f8a8 <line:312:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x55590555f960 <line:309:1, line:313:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x55590555f900 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x55590555f7c0 'pthread_barrierattr_t'
|     `-Record 0x55590555f740 ''
|-TypedefDecl 0x55590555fa78 <line:314:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x55590555fa10 'long [8]' 8 
|   `-BuiltinType 0x5559054e10a0 'long'
|-EnumDecl 0x55590555fad0 <line:315:1, line:319:1> line:315:1
| |-EnumConstantDecl 0x55590555fb98 <line:317:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x55590555fbe8 <line:318:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x55590555fc38 <line:320:1, line:331:1> line:320:1
| |-EnumConstantDecl 0x55590555fd08 <line:322:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x55590555fd58 <line:323:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x55590555fda8 <line:324:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x55590555fdf8 <line:325:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x55590555fe80 <line:327:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x55590555fe68 <col:26> 'int'
| |   `-DeclRefExpr 0x55590555fe48 <col:26> 'int' EnumConstant 0x55590555fd08 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x55590555ff08 <line:328:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x55590555fef0 <col:29> 'int'
| |   `-DeclRefExpr 0x55590555fed0 <col:29> 'int' EnumConstant 0x55590555fd58 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x55590555ff90 <line:329:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x55590555ff78 <col:30> 'int'
| |   `-DeclRefExpr 0x55590555ff58 <col:30> 'int' EnumConstant 0x55590555fda8 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x555905560018 <line:330:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x555905560000 <col:27> 'int'
|     `-DeclRefExpr 0x55590555ffe0 <col:27> 'int' EnumConstant 0x55590555fe80 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x555905560068 <line:332:1, line:338:1> line:332:1
| |-EnumConstantDecl 0x555905560138 <line:334:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x5559055601c0 <line:335:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x5559055601a8 <col:30> 'int'
| |   `-DeclRefExpr 0x555905560188 <col:30> 'int' EnumConstant 0x555905560138 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x555905560210 <line:336:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x555905560298 <line:337:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x555905560280 <col:29> 'int'
|     `-DeclRefExpr 0x555905560260 <col:29> 'int' EnumConstant 0x555905560210 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x5559055602e8 <line:339:1, line:344:1> line:339:1
| |-EnumConstantDecl 0x5559055603b8 <line:341:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x555905560408 <line:342:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x555905560458 <line:343:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x5559055604a8 <line:345:1, line:351:1> line:345:1
| |-EnumConstantDecl 0x5559055605c0 <line:347:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x555905560610 <line:348:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x555905560660 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x5559055606e8 <line:350:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x5559055606d0 <col:31> 'int'
|     `-DeclRefExpr 0x5559055606b0 <col:31> 'int' EnumConstant 0x5559055605c0 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x555905560738 <line:352:1, line:356:1> line:352:1
| |-EnumConstantDecl 0x555905560808 <line:354:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x555905560858 <line:355:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x5559055608a8 <line:357:1, line:361:1> line:357:1
| |-EnumConstantDecl 0x555905560978 <line:359:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x5559055609c8 <line:360:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x555905560a18 <line:362:1, line:366:1> line:362:1
| |-EnumConstantDecl 0x555905560ae8 <line:364:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x555905560b38 <line:365:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x555905560b88 <line:367:1, line:373:1> line:367:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x555905560dc8 <line:369:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x555905560e30 <line:370:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x555905560e98 <line:371:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x555905560fb8 <line:372:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x555905561008 <line:374:1, line:378:1> line:374:1
| |-EnumConstantDecl 0x5559055610d8 <line:376:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x555905561128 <line:377:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x555905561178 <line:379:1, line:383:1> line:379:1
| |-EnumConstantDecl 0x555905561248 <line:381:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x555905561298 <line:382:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x5559055618f8 <line:385:1, line:388:96> line:385:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x555905561390 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x5559055614a0 <line:386:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5559055616e0 <line:387:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x555905561760 <line:388:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x5559055619b8 <col:47>
| |-NonNullAttr 0x555905561a10 <col:77, col:94> 1 3
| `-CallbackAttr 0x555905561a48 <line:385:12> Implicit 2 3
|-FunctionDecl 0x555905561b70 <line:389:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x555905561aa0 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x555905561dc8 <line:390:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x555905561c28 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x555905561ca8 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x555905561f98 <line:391:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x555905561e88 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x555905562040 <col:60>
|-FunctionDecl 0x555905562190 <line:392:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x555905562230 <col:54>
| `-ConstAttr 0x555905562288 <col:95>
|-FunctionDecl 0x555905562458 <line:393:1, line:394:70> line:393:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x5559055622c0 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x555905562338 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x555905562508 <line:394:19>
| `-ConstAttr 0x555905562560 <col:60>
|-FunctionDecl 0x555905562f68 <line:395:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x555905562e30 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x555905563010 <col:71>
| `-NonNullAttr 0x555905563068 <col:112, col:126> 1
|-FunctionDecl 0x555905563170 <line:396:1, line:397:79> line:396:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x5559055630b8 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x555905563218 <line:397:22>
| `-NonNullAttr 0x555905563270 <col:63, col:77> 1
|-FunctionDecl 0x555905563498 <line:398:1, line:400:82> line:398:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x5559055632b8 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x555905563338 <line:399:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x555905563548 <line:400:22>
| `-NonNullAttr 0x5559055635a0 <col:63, col:80> 1 2
|-FunctionDecl 0x5559055637a8 <line:401:1, line:403:79> line:401:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x5559055635e8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x555905563668 <line:402:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x555905563858 <line:403:22>
| `-NonNullAttr 0x5559055638b0 <col:63, col:77> 1
|-FunctionDecl 0x555905563b08 <line:404:1, line:406:82> line:404:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x5559055638f8 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x5559055639a0 <line:405:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x555905563bb8 <line:406:22>
| `-NonNullAttr 0x555905563c10 <col:63, col:80> 1 2
|-FunctionDecl 0x555905564e48 <line:407:1, line:409:79> line:407:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x555905563c58 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x555905563cd0 <line:408:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x555905564ef8 <line:409:22>
| `-NonNullAttr 0x555905564f50 <col:63, col:77> 1
|-FunctionDecl 0x555905565188 <line:410:1, line:412:82> line:410:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x555905564f98 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x555905565028 <line:411:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x555905565238 <line:412:22>
| `-NonNullAttr 0x555905565290 <col:63, col:80> 1 2
|-FunctionDecl 0x5559055654c8 <line:413:1, line:415:97> line:413:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x5559055652d8 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x555905565368 <line:414:12, line:415:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x555905565578 <col:37>
| `-NonNullAttr 0x5559055655d0 <col:78, col:95> 1 2
|-FunctionDecl 0x5559055657b8 <line:416:1, line:418:82> line:416:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x555905565618 <col:41, line:417:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x555905565698 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x555905565868 <line:418:22>
| `-NonNullAttr 0x5559055658c0 <col:63, col:80> 1 2
|-FunctionDecl 0x555905565a48 <line:419:1, line:420:79> line:419:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x555905565908 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x555905565988 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x555905565af8 <line:420:22>
| `-NonNullAttr 0x555905565b50 <col:63, col:77> 1
|-FunctionDecl 0x555905565cf8 <line:421:1, line:423:82> line:421:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x555905565b98 <col:42, line:422:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x555905565c18 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x555905565da8 <line:423:22>
| `-NonNullAttr 0x555905566e30 <col:63, col:80> 1 2
|-FunctionDecl 0x555905566fb8 <line:424:1, line:426:79> line:424:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x555905566e78 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x555905566ef8 <line:425:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x555905567068 <line:426:22>
| `-NonNullAttr 0x5559055670c0 <col:63, col:77> 1
|-FunctionDecl 0x555905567268 <line:427:1, line:429:82> line:427:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x555905567108 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x555905567188 <line:428:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x555905567318 <line:429:22>
| `-NonNullAttr 0x555905567370 <col:63, col:80> 1 2
|-FunctionDecl 0x5559055674f8 <line:430:1, line:431:79> line:430:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x5559055673b8 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x555905567438 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x5559055675a8 <line:431:22>
| `-NonNullAttr 0x555905567600 <col:63, col:77> 1
|-FunctionDecl 0x555905567828 <line:432:1, line:434:115> line:432:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x555905567648 <col:39, line:433:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5559055676c8 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x5559055678d8 <line:434:22>
| |-NonNullAttr 0x555905567930 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x555905567968 <col:100> "" ""
|-FunctionDecl 0x555905567b78 <line:435:1, line:437:112> line:435:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x5559055679b8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x555905567a38 <line:436:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x555905567c28 <line:437:22>
| |-NonNullAttr 0x555905567c80 <col:63, col:77> 1
| `-DeprecatedAttr 0x555905567cb8 <col:97> "" ""
|-FunctionDecl 0x555905567eb8 <line:438:1, line:440:82> line:438:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x555905567d08 <col:39, line:439:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x555905567d80 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x555905567f68 <line:440:22>
| `-NonNullAttr 0x555905567fc0 <col:63, col:80> 1 2
|-FunctionDecl 0x555905568140 <line:441:1, line:443:79> line:441:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x555905568008 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x555905568080 <line:442:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x5559055681f0 <line:443:22>
| `-NonNullAttr 0x555905568248 <col:63, col:77> 1
|-FunctionDecl 0x555905568538 <line:444:1, line:447:85> line:444:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x555905568298 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x555905568318 <line:445:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x555905568390 <line:446:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x5559055685f0 <line:447:22>
| `-NonNullAttr 0x555905568648 <col:63, col:83> 1 2 3
|-FunctionDecl 0x5559055688f8 <line:448:1, line:449:100> line:448:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x5559055686a0 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x555905568720 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x555905568798 <line:449:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x5559055689b0 <col:43>
| `-NonNullAttr 0x555905568a08 <col:84, col:98> 1
|-FunctionDecl 0x555905568cc8 <line:450:1, line:452:79> line:450:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x555905568a58 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x555905568ad8 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x555905568b68 <line:451:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x555905568d80 <line:452:22>
| `-NonNullAttr 0x555905568dd8 <col:63, col:77> 3
|-FunctionDecl 0x5559055690e8 <line:453:1, line:456:82> line:453:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x555905568e50 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x555905568ed0 <line:454:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x555905568f60 <line:455:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x5559055691a0 <line:456:22>
| `-NonNullAttr 0x5559055691f8 <col:63, col:80> 2 3
|-FunctionDecl 0x5559055693e8 <line:457:1, line:458:45> line:457:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x555905569248 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5559055692c8 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x555905569498 <line:458:22>
|-FunctionDecl 0x555905569868 <line:459:1, line:460:71> line:459:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x555905569560 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x555905569700 <line:460:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x555905569918 <col:52, col:69> 1 2
|-FunctionDecl 0x555905569ac0 <line:461:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x5559055699a0 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x555905569a20 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x555905569ca8 <line:462:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x555905569b88 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x555905569c08 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x555905569e60 <line:463:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x555905569d68 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x555905569fa0 <line:464:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x55590556a040 <line:465:9, line:473:1> line:465:9 struct definition
| |-RecordDecl 0x55590556a0e8 <line:467:3, line:471:3> line:467:3 struct definition
| | |-FieldDecl 0x55590556a1d8 <line:469:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x55590556a240 <line:470:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x55590556a410 <line:467:3, line:471:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at pthread-wmm/safe021_power.oepc_false-unreach-call.i:467:3) [1]'
| `-FieldDecl 0x55590556a508 <line:472:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x55590556a5c0 <line:465:1, line:473:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x55590556a560 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x55590556a0c0 '__pthread_unwind_buf_t'
| |   `-Record 0x55590556a040 ''
| `-AlignedAttr 0x55590556a618 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x55590556a690 <line:474:1, line:480:1> line:474:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x55590556a7f0 <line:476:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x55590556a858 <line:477:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x55590556a8c0 <line:478:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x55590556a928 <line:479:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x55590556ab30 <line:481:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x55590556aa20 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x55590556ac78 <line:483:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x55590556abe8 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x55590556ae70 <line:485:1, line:487:31> line:485:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x55590556ad30 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x55590556af18 <line:487:22>
|-RecordDecl 0x55590556af70 <line:489:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x55590556b288 <line:490:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x55590556b0e8 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x55590556b168 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x55590556b338 <col:86>
| `-ReturnsTwiceAttr 0x55590556b390 <col:12> Implicit
|-FunctionDecl 0x55590556b6b8 <line:491:1, line:493:79> line:491:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x55590556b460 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x55590556b570 <line:492:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x55590556b768 <line:493:22>
| `-NonNullAttr 0x55590556b7c0 <col:63, col:77> 1
|-FunctionDecl 0x55590556b938 <line:494:1, line:495:79> line:494:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55590556b808 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55590556b9e0 <line:495:22>
| `-NonNullAttr 0x55590556ba38 <col:63, col:77> 1
|-FunctionDecl 0x55590556bb40 <line:496:1, line:497:68> line:496:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55590556ba88 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55590556bbe8 <line:497:22>
| `-NonNullAttr 0x55590556bc40 <col:52, col:66> 1
|-FunctionDecl 0x55590556bd40 <line:498:1, line:499:68> line:498:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55590556bc88 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55590556bde8 <line:499:22>
| `-NonNullAttr 0x55590556be40 <col:52, col:66> 1
|-FunctionDecl 0x55590556c088 <line:500:1, line:502:85> line:500:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x55590556be98 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55590556bf28 <line:501:9, line:502:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x55590556c138 <col:36>
| `-NonNullAttr 0x55590556c190 <col:66, col:83> 1 2
|-FunctionDecl 0x55590556c290 <line:503:1, line:504:68> line:503:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55590556c1d8 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55590556c338 <line:504:22>
| `-NonNullAttr 0x55590556c390 <col:52, col:66> 1
|-FunctionDecl 0x55590556c628 <line:505:1, line:508:82> line:505:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55590556c440 <col:42, line:506:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55590556c4c0 <line:507:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x55590556c6d8 <line:508:22>
| `-NonNullAttr 0x55590556c730 <col:63, col:80> 1 2
|-FunctionDecl 0x55590556c9f8 <line:509:1, line:512:82> line:509:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x55590556c778 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x55590556c7f8 <line:510:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x55590556c878 <line:511:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x55590556cab0 <line:512:22>
| `-NonNullAttr 0x55590556cb08 <col:63, col:80> 1 3
|-FunctionDecl 0x55590556cc10 <line:513:1, line:514:79> line:513:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x55590556cb58 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x55590556ccb8 <line:514:22>
| `-NonNullAttr 0x55590556cd10 <col:63, col:77> 1
|-FunctionDecl 0x55590556cf38 <line:515:1, line:516:79> line:515:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x55590556cdc0 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x55590556cfe0 <line:516:22>
| `-NonNullAttr 0x55590556d038 <col:63, col:77> 1
|-FunctionDecl 0x55590556d140 <line:517:1, line:518:79> line:517:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x55590556d088 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x55590556d1e8 <line:518:22>
| `-NonNullAttr 0x55590556d240 <col:63, col:77> 1
|-FunctionDecl 0x55590556d468 <line:519:1, line:522:82> line:519:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55590556d288 <col:42, line:520:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55590556d308 <line:521:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x55590556d518 <line:522:22>
| `-NonNullAttr 0x55590556d570 <col:63, col:80> 1 2
|-FunctionDecl 0x55590556d778 <line:523:1, line:525:79> line:523:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55590556d5b8 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55590556d638 <line:524:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x55590556d828 <line:525:22>
| `-NonNullAttr 0x55590556d880 <col:63, col:77> 1
|-FunctionDecl 0x55590556da28 <line:526:1, line:528:82> line:526:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55590556d8c8 <col:39, line:527:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55590556d948 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x55590556dad8 <line:528:22>
| `-NonNullAttr 0x55590556db30 <col:63, col:80> 1 2
|-FunctionDecl 0x55590556dcb8 <line:529:1, line:530:79> line:529:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55590556db78 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55590556dbf8 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x55590556dd68 <line:530:22>
| `-NonNullAttr 0x55590556ddc0 <col:63, col:77> 1
|-FunctionDecl 0x55590556ef90 <line:531:1, line:534:82> line:531:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55590556de08 <col:43, line:532:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55590556eeb0 <line:533:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x55590556f040 <line:534:22>
| `-NonNullAttr 0x55590556f098 <col:63, col:80> 1 2
|-FunctionDecl 0x55590556f228 <line:535:1, line:537:79> line:535:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55590556f0e8 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55590556f168 <line:536:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x55590556f2d8 <line:537:22>
| `-NonNullAttr 0x55590556f330 <col:63, col:77> 1
|-FunctionDecl 0x55590556f4d8 <line:538:1, line:541:82> line:538:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x55590556f378 <col:46, line:539:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x55590556f3f8 <line:540:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x55590556f588 <line:541:22>
| `-NonNullAttr 0x55590556f5e0 <col:63, col:80> 1 2
|-FunctionDecl 0x55590556f768 <line:542:1, line:544:79> line:542:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55590556f628 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55590556f6a8 <line:543:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x55590556f818 <line:544:22>
| `-NonNullAttr 0x55590556f870 <col:63, col:77> 1
|-FunctionDecl 0x55590556fa58 <line:545:1, line:547:82> line:545:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x55590556f8b8 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x55590556f938 <line:546:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x55590556fb08 <line:547:22>
| `-NonNullAttr 0x55590556fb60 <col:63, col:80> 1 2
|-FunctionDecl 0x55590556fce8 <line:548:1, line:550:79> line:548:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x55590556fba8 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x55590556fc28 <line:549:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x55590556fd98 <line:550:22>
| `-NonNullAttr 0x55590556fdf0 <col:63, col:77> 1
|-FunctionDecl 0x555905571168 <line:551:1, line:553:86> line:551:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x555905570f10 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x555905571020 <line:552:5, line:553:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x555905571218 <col:29>
| `-NonNullAttr 0x555905571270 <col:70, col:84> 1
|-FunctionDecl 0x5559055713e8 <line:554:1, line:555:79> line:554:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5559055712b8 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x555905571490 <line:555:22>
| `-NonNullAttr 0x5559055714e8 <col:63, col:77> 1
|-FunctionDecl 0x5559055715f0 <line:556:1, line:557:68> line:556:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x555905571538 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x555905571698 <line:557:22>
| `-NonNullAttr 0x5559055716f0 <col:52, col:66> 1
|-FunctionDecl 0x5559055717f0 <line:558:1, line:559:65> line:558:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x555905571738 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x555905571898 <line:559:19>
| `-NonNullAttr 0x5559055718f0 <col:49, col:63> 1
|-FunctionDecl 0x555905571b28 <line:560:1, line:562:88> line:560:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x555905571938 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x5559055719c8 <line:561:12, line:562:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x555905571bd8 <col:39>
| `-NonNullAttr 0x555905571c30 <col:69, col:86> 1 2
|-FunctionDecl 0x555905571d30 <line:563:1, line:564:68> line:563:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x555905571c78 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x555905571dd8 <line:564:22>
| `-NonNullAttr 0x555905571e30 <col:52, col:66> 1
|-FunctionDecl 0x555905571f98 <line:565:1, line:566:68> line:565:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x555905571ee0 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x555905572040 <line:566:22>
| `-NonNullAttr 0x555905572098 <col:52, col:66> 1
|-FunctionDecl 0x555905572258 <line:567:1, line:569:88> line:567:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x5559055720e8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x555905572178 <line:568:12, line:569:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x555905572308 <col:39>
| `-NonNullAttr 0x555905572360 <col:69, col:86> 1 2
|-FunctionDecl 0x555905572460 <line:570:1, line:571:68> line:570:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5559055723a8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x555905572508 <line:571:22>
| `-NonNullAttr 0x555905572560 <col:52, col:66> 1
|-FunctionDecl 0x555905572748 <line:572:1, line:573:79> line:572:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x555905572610 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x5559055727f0 <line:573:22>
| `-NonNullAttr 0x555905572848 <col:63, col:77> 1
|-FunctionDecl 0x555905572950 <line:574:1, line:575:79> line:574:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x555905572898 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x5559055729f8 <line:575:22>
| `-NonNullAttr 0x555905572a50 <col:63, col:77> 1
|-FunctionDecl 0x555905572c78 <line:576:1, line:579:82> line:576:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x555905572a98 <col:43, line:577:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x555905572b18 <line:578:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x555905572d28 <line:579:22>
| `-NonNullAttr 0x555905572d80 <col:63, col:80> 1 2
|-FunctionDecl 0x555905572fa8 <line:580:1, line:582:79> line:580:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x555905572dc8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x555905572e48 <line:581:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x555905573058 <line:582:22>
| `-NonNullAttr 0x5559055730b0 <col:63, col:77> 1
|-FunctionDecl 0x555905573258 <line:583:1, line:586:82> line:583:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5559055730f8 <col:43, line:584:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x555905573178 <line:585:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x555905573308 <line:586:22>
| `-NonNullAttr 0x555905573360 <col:63, col:80> 1 2
|-FunctionDecl 0x5559055734e8 <line:587:1, line:588:93> line:587:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x5559055733a8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x555905573428 <line:588:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x555905573598 <col:36>
| `-NonNullAttr 0x5559055735f0 <col:77, col:91> 1
|-FunctionDecl 0x555905573928 <line:589:1, line:591:79> line:589:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x5559055736d0 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x5559055737e0 <line:590:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x5559055739d8 <line:591:22>
| `-NonNullAttr 0x555905573a30 <col:63, col:77> 1
|-FunctionDecl 0x555905573ba8 <line:592:1, line:593:79> line:592:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x555905573a78 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x555905573c50 <line:593:22>
| `-NonNullAttr 0x555905573ca8 <col:63, col:77> 1
|-FunctionDecl 0x555905573db0 <line:594:1, line:595:68> line:594:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x555905573cf8 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x555905573e58 <line:595:22>
| `-NonNullAttr 0x555905573eb0 <col:52, col:66> 1
|-FunctionDecl 0x555905573fc8 <line:596:1, line:597:68> line:596:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x555905573f10 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x555905574070 <line:597:22>
| `-NonNullAttr 0x5559055740c8 <col:52, col:66> 1
|-FunctionDecl 0x5559055742f8 <line:598:1, line:600:41> line:598:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x555905574118 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x555905574190 <line:599:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x5559055743a8 <line:600:22, col:39> 1 2
|-FunctionDecl 0x5559055746d8 <line:601:1, line:604:44> line:601:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x555905574428 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x5559055744a0 <line:602:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x555905574530 <line:603:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x555905574790 <line:604:22, col:42> 1 2 3
|-FunctionDecl 0x5559055749a8 <line:605:1, line:606:79> line:605:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x555905574870 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x555905574a50 <line:606:22>
| `-NonNullAttr 0x555905574aa8 <col:63, col:77> 1
|-FunctionDecl 0x555905574bb0 <line:607:1, line:608:79> line:607:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x555905574af8 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x555905574c58 <line:608:22>
| `-NonNullAttr 0x555905574cb0 <col:63, col:77> 1
|-FunctionDecl 0x555905574f10 <line:609:1, line:612:82> line:609:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x555905574cf8 <col:41, line:610:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x555905574d78 <line:611:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x555905574fc0 <line:612:22>
| `-NonNullAttr 0x555905575018 <col:63, col:80> 1 2
|-FunctionDecl 0x555905575228 <line:613:1, line:614:94> line:613:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x555905575068 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x5559055750e8 <line:614:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x5559055752d8 <col:37>
| `-NonNullAttr 0x555905575330 <col:78, col:92> 1
|-FunctionDecl 0x555905575548 <line:615:1, line:618:82> line:615:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x555905575378 <col:39, line:616:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x555905575420 <line:617:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x5559055755f8 <line:618:22>
| `-NonNullAttr 0x555905575650 <col:63, col:80> 1 2
|-FunctionDecl 0x555905575818 <line:619:1, line:621:79> line:619:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x555905575698 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x555905575710 <line:620:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x5559055758c8 <line:621:22>
| `-NonNullAttr 0x555905575920 <col:63, col:77> 1
|-FunctionDecl 0x555905575bc8 <line:622:1, line:623:79> line:622:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x555905575a00 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x555905575a80 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x555905575c78 <line:623:22>
| `-NonNullAttr 0x555905575cd0 <col:63, col:77> 1
|-FunctionDecl 0x555905575e48 <line:624:1, line:625:79> line:624:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x555905575d18 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x555905575f20 <line:625:22>
| `-NonNullAttr 0x555905575f78 <col:63, col:77> 1
|-FunctionDecl 0x555905576080 <line:626:1, line:627:68> line:626:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x555905575fc8 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x555905576128 <line:627:22>
| `-NonNullAttr 0x555905576180 <col:52, col:66> 1
|-FunctionDecl 0x555905576280 <line:628:1, line:629:68> line:628:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x5559055761c8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x555905576328 <line:629:22>
| `-NonNullAttr 0x555905576380 <col:52, col:66> 1
|-FunctionDecl 0x555905576480 <line:630:1, line:631:68> line:630:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x5559055763c8 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x555905576528 <line:631:22>
| `-NonNullAttr 0x555905576580 <col:52, col:66> 1
|-FunctionDecl 0x555905576958 <line:632:1, line:635:79> line:632:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x555905576660 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x555905576770 <line:633:6, line:634:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x5559055767f0 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x555905576a10 <line:635:22>
| `-NonNullAttr 0x555905576a68 <col:63, col:77> 1
|-FunctionDecl 0x555905576be8 <line:636:1, line:637:79> line:636:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x555905576ab8 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x555905576c90 <line:637:22>
| `-NonNullAttr 0x555905576ce8 <col:63, col:77> 1
|-FunctionDecl 0x555905576df0 <line:638:1, line:639:68> line:638:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x555905576d38 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x555905576e98 <line:639:22>
| `-NonNullAttr 0x555905576ef0 <col:52, col:66> 1
|-FunctionDecl 0x5559055770e8 <line:640:1, line:641:79> line:640:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x555905576fb0 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x555905577190 <line:641:22>
| `-NonNullAttr 0x5559055771e8 <col:63, col:77> 1
|-FunctionDecl 0x5559055772f0 <line:642:1, line:643:79> line:642:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x555905577238 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x555905577398 <line:643:22>
| `-NonNullAttr 0x5559055773f0 <col:63, col:77> 1
|-FunctionDecl 0x555905577618 <line:644:1, line:647:82> line:644:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x555905577438 <col:44, line:645:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x5559055774b8 <line:646:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x5559055776c8 <line:647:22>
| `-NonNullAttr 0x555905577720 <col:63, col:80> 1 2
|-FunctionDecl 0x555905577928 <line:648:1, line:650:79> line:648:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x555905577768 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x5559055777e8 <line:649:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x5559055779d8 <line:650:22>
| `-NonNullAttr 0x555905577a30 <col:63, col:77> 1
|-FunctionDecl 0x555905577d78 <line:651:1, line:653:79> line:651:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x555905577b10 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x555905577c30 <line:652:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x555905577e28 <line:653:22>
| `-NonNullAttr 0x555905577e80 <col:63, col:77> 1
|-FunctionDecl 0x555905577fe8 <line:654:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x555905577ec8 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x555905578090 <col:69>
|-FunctionDecl 0x555905578208 <line:655:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x5559055780f8 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x5559055782b0 <col:72>
|-FunctionDecl 0x5559055784e8 <line:656:1, line:657:67> line:656:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x555905578318 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x5559055783c8 <line:657:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x555905578598 <col:44>
|-FunctionDecl 0x5559055787b8 <line:658:1, line:660:79> line:658:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x555905578600 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x555905578678 <line:659:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x555905578868 <line:660:22>
| `-NonNullAttr 0x5559055788c0 <col:63, col:77> 2
|-FunctionDecl 0x555905578d08 <line:661:1, line:663:70> line:661:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x5559055789a0 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x555905578ab0 <line:662:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x555905578bc0 <line:663:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x555905578dc0 <col:47>
|-FunctionDecl 0x555905579f60 <line:665:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x555905578e30 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x55590557a0b8 <line:666:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x55590557a020 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x55590557a210 <line:667:1, col:20> col:8 used P2 'void *(void *)'
| `-ParmVarDecl 0x55590557a178 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x55590557a2d8 <line:668:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x55590557a398 <line:669:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x55590557a458 <line:670:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x55590557a510 <line:671:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x55590557a590 prev 0x55590557a510 <line:672:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x55590557a5f8 <col:24> 'int' 0
|-VarDecl 0x55590557a630 <line:673:1, col:5> col:5 used __unbuffered_p2_EAX 'int'
|-VarDecl 0x55590557a6b0 prev 0x55590557a630 <line:674:1, col:27> col:5 used __unbuffered_p2_EAX 'int' cinit
| `-IntegerLiteral 0x55590557a718 <col:27> 'int' 0
|-VarDecl 0x55590557a750 <line:675:1, col:5> col:5 used __unbuffered_p2_EBX 'int'
|-VarDecl 0x55590557a7d0 prev 0x55590557a750 <line:676:1, col:27> col:5 used __unbuffered_p2_EBX 'int' cinit
| `-IntegerLiteral 0x55590557a838 <col:27> 'int' 0
|-VarDecl 0x55590557a868 <line:677:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x55590557a8e0 <line:678:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x55590557a960 <line:679:1, col:5> col:5 used x 'int'
|-VarDecl 0x55590557a9e0 prev 0x55590557a960 <line:680:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x55590557aa48 <col:9> 'int' 0
|-VarDecl 0x55590557aa80 <line:681:1, col:5> col:5 used y 'int'
|-VarDecl 0x55590557ab00 prev 0x55590557aa80 <line:682:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x55590557ab68 <col:9> 'int' 0
|-VarDecl 0x55590557aba0 <line:683:1, col:5> col:5 used z 'int'
|-VarDecl 0x55590557ac20 prev 0x55590557aba0 <line:684:1, col:9> col:5 used z 'int' cinit
| `-IntegerLiteral 0x55590557ac88 <col:9> 'int' 0
|-VarDecl 0x55590557acb8 <line:685:1, col:7> col:7 used z$flush_delayed '_Bool'
|-VarDecl 0x55590557ad38 <line:686:1, col:5> col:5 used z$mem_tmp 'int'
|-VarDecl 0x55590557adb0 <line:687:1, col:7> col:7 used z$r_buff0_thd0 '_Bool'
|-VarDecl 0x55590557ae28 <line:688:1, col:7> col:7 used z$r_buff0_thd1 '_Bool'
|-VarDecl 0x55590557aea0 <line:689:1, col:7> col:7 used z$r_buff0_thd2 '_Bool'
|-VarDecl 0x55590557af70 <line:690:1, col:7> col:7 used z$r_buff0_thd3 '_Bool'
|-VarDecl 0x55590557afe8 <line:691:1, col:7> col:7 used z$r_buff1_thd0 '_Bool'
|-VarDecl 0x55590557b060 <line:692:1, col:7> col:7 used z$r_buff1_thd1 '_Bool'
|-VarDecl 0x55590557b0d8 <line:693:1, col:7> col:7 used z$r_buff1_thd2 '_Bool'
|-VarDecl 0x55590557b150 <line:694:1, col:7> col:7 used z$r_buff1_thd3 '_Bool'
|-VarDecl 0x55590557b1c8 <line:695:1, col:7> col:7 z$read_delayed '_Bool'
|-VarDecl 0x55590557b248 <line:696:1, col:6> col:6 z$read_delayed_var 'int *'
|-VarDecl 0x55590557b2c8 <line:697:1, col:5> col:5 used z$w_buff0 'int'
|-VarDecl 0x55590557b340 <line:698:1, col:7> col:7 used z$w_buff0_used '_Bool'
|-VarDecl 0x55590557b3c0 <line:699:1, col:5> col:5 used z$w_buff1 'int'
|-VarDecl 0x55590557b438 <line:700:1, col:7> col:7 used z$w_buff1_used '_Bool'
|-VarDecl 0x55590557b4b0 <line:701:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x55590557b528 <line:702:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x55590557b640 prev 0x555905579f60 <line:703:1, line:731:1> line:703:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x55590557b5a8 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x55590557ce68 <line:704:1, line:731:1>
|   |-CallExpr 0x55590557b758 <line:705:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55590557b740 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55590557b6e8 <col:3> 'void ()' Function 0x555905521350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55590557b7d0 <line:706:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x55590557b778 <col:3> 'int' lvalue Var 0x55590557b3c0 'z$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x55590557b7b8 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55590557b798 <col:15> 'int' lvalue Var 0x55590557b2c8 'z$w_buff0' 'int'
|   |-BinaryOperator 0x55590557b830 <line:707:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x55590557b7f0 <col:3> 'int' lvalue Var 0x55590557b2c8 'z$w_buff0' 'int'
|   | `-IntegerLiteral 0x55590557b810 <col:15> 'int' 1
|   |-BinaryOperator 0x55590557b8a8 <line:708:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55590557b850 <col:3> '_Bool' lvalue Var 0x55590557b438 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55590557b890 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55590557b870 <col:20> '_Bool' lvalue Var 0x55590557b340 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55590557b940 <line:709:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x55590557b8c8 <col:3> '_Bool' lvalue Var 0x55590557b340 'z$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x55590557b918 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x55590557b8e8 <col:27> 'int' 1
|   |-CallExpr 0x55590557bac8 <line:710:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x55590557bab0 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x55590557b960 <col:3> 'void (int)' Function 0x5559055210d8 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x55590557ba60 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x55590557ba40 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x55590557ba20 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x55590557b9d8 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x55590557b9c0 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x55590557b980 <col:23> '_Bool' lvalue Var 0x55590557b438 'z$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x55590557ba08 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x55590557b9f0 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x55590557b9a0 <col:41> '_Bool' lvalue Var 0x55590557b340 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55590557bb48 <line:711:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55590557baf0 <col:3> '_Bool' lvalue Var 0x55590557afe8 'z$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x55590557bb30 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55590557bb10 <col:20> '_Bool' lvalue Var 0x55590557adb0 'z$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x55590557bbc0 <line:712:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55590557bb68 <col:3> '_Bool' lvalue Var 0x55590557b060 'z$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x55590557bba8 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55590557bb88 <col:20> '_Bool' lvalue Var 0x55590557ae28 'z$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x55590557bc38 <line:713:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55590557bbe0 <col:3> '_Bool' lvalue Var 0x55590557b0d8 'z$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x55590557bc20 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55590557bc00 <col:20> '_Bool' lvalue Var 0x55590557aea0 'z$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x55590557bcb0 <line:714:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x55590557bc58 <col:3> '_Bool' lvalue Var 0x55590557b150 'z$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x55590557bc98 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55590557bc78 <col:20> '_Bool' lvalue Var 0x55590557af70 'z$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x55590557bd48 <line:715:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x55590557bcd0 <col:3> '_Bool' lvalue Var 0x55590557ae28 'z$r_buff0_thd1' '_Bool'
|   | `-CStyleCastExpr 0x55590557bd20 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x55590557bcf0 <col:27> 'int' 1
|   |-CallExpr 0x55590557bda0 <line:716:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55590557bd88 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55590557bd68 <col:3> 'void ()' Function 0x555905521410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55590557bdf8 <line:717:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55590557bde0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55590557bdc0 <col:3> 'void ()' Function 0x555905521350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55590557be58 <line:718:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x55590557be18 <col:3> 'int' lvalue Var 0x55590557a9e0 'x' 'int'
|   | `-IntegerLiteral 0x55590557be38 <col:7> 'int' 1
|   |-CallExpr 0x55590557beb0 <line:719:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55590557be98 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55590557be78 <col:3> 'void ()' Function 0x555905521410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55590557bf08 <line:720:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55590557bef0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55590557bed0 <col:3> 'void ()' Function 0x555905521350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55590557c208 <line:721:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x55590557bf28 <col:3> 'int' lvalue Var 0x55590557ac20 'z' 'int'
|   | `-ConditionalOperator 0x55590557c1d8 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x55590557c000 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x55590557bfb8 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x55590557bfa0 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x55590557bf48 <col:7> '_Bool' lvalue Var 0x55590557b340 'z$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x55590557bfe8 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x55590557bfd0 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x55590557bf80 <col:25> '_Bool' lvalue Var 0x55590557ae28 'z$r_buff0_thd1' '_Bool'
|   |   |-ImplicitCastExpr 0x55590557c1c0 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55590557c020 <col:42> 'int' lvalue Var 0x55590557b2c8 'z$w_buff0' 'int'
|   |   `-ParenExpr 0x55590557c1a0 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x55590557c170 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x55590557c0e0 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55590557c098 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55590557c080 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55590557c040 <col:55> '_Bool' lvalue Var 0x55590557b438 'z$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55590557c0c8 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55590557c0b0 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55590557c060 <col:73> '_Bool' lvalue Var 0x55590557b060 'z$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x55590557c140 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55590557c100 <col:90> 'int' lvalue Var 0x55590557b3c0 'z$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x55590557c158 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55590557c120 <col:102> 'int' lvalue Var 0x55590557ac20 'z' 'int'
|   |-BinaryOperator 0x55590557c410 <line:722:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55590557c228 <col:3> '_Bool' lvalue Var 0x55590557b340 'z$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55590557c3f8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55590557c3c8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55590557c2e8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55590557c2a0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55590557c288 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55590557c248 <col:20> '_Bool' lvalue Var 0x55590557b340 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55590557c2d0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55590557c2b8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55590557c268 <col:38> '_Bool' lvalue Var 0x55590557ae28 'z$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x55590557c380 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55590557c338 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55590557c308 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55590557c3b0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55590557c398 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55590557c360 <col:66> '_Bool' lvalue Var 0x55590557b340 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55590557c6f8 <line:723:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55590557c430 <col:3> '_Bool' lvalue Var 0x55590557b438 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55590557c6e0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55590557c6b0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55590557c5d0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55590557c4f0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55590557c4a8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55590557c490 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55590557c450 <col:20> '_Bool' lvalue Var 0x55590557b340 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55590557c4d8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55590557c4c0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55590557c470 <col:38> '_Bool' lvalue Var 0x55590557ae28 'z$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x55590557c5b0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55590557c568 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55590557c550 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55590557c510 <col:56> '_Bool' lvalue Var 0x55590557b438 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55590557c598 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55590557c580 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55590557c530 <col:74> '_Bool' lvalue Var 0x55590557b060 'z$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x55590557c668 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55590557c620 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55590557c5f0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55590557c698 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55590557c680 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55590557c648 <col:102> '_Bool' lvalue Var 0x55590557b438 'z$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x55590557c900 <line:724:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55590557c718 <col:3> '_Bool' lvalue Var 0x55590557ae28 'z$r_buff0_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x55590557c8e8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55590557c8b8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55590557c7d8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55590557c790 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55590557c778 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55590557c738 <col:20> '_Bool' lvalue Var 0x55590557b340 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55590557c7c0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55590557c7a8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55590557c758 <col:38> '_Bool' lvalue Var 0x55590557ae28 'z$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x55590557c870 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55590557c828 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55590557c7f8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55590557c8a0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55590557c888 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55590557c850 <col:66> '_Bool' lvalue Var 0x55590557ae28 'z$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x55590557cbe8 <line:725:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55590557c920 <col:3> '_Bool' lvalue Var 0x55590557b060 'z$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x55590557cbd0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55590557cba0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55590557cac0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55590557c9e0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55590557c998 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55590557c980 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55590557c940 <col:20> '_Bool' lvalue Var 0x55590557b340 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55590557c9c8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55590557c9b0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55590557c960 <col:38> '_Bool' lvalue Var 0x55590557ae28 'z$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x55590557caa0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55590557ca58 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55590557ca40 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55590557ca00 <col:56> '_Bool' lvalue Var 0x55590557b438 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55590557ca88 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55590557ca70 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55590557ca20 <col:74> '_Bool' lvalue Var 0x55590557b060 'z$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x55590557cb58 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55590557cb10 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55590557cae0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55590557cb88 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55590557cb70 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55590557cb38 <col:102> '_Bool' lvalue Var 0x55590557b060 'z$r_buff1_thd1' '_Bool'
|   |-CallExpr 0x55590557cc40 <line:726:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55590557cc28 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55590557cc08 <col:3> 'void ()' Function 0x555905521410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55590557cc98 <line:727:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55590557cc80 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55590557cc60 <col:3> 'void ()' Function 0x555905521350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55590557cd50 <line:728:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x55590557ccb8 <col:3> 'int' lvalue Var 0x55590557a590 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x55590557cd30 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x55590557cd18 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55590557ccd8 <col:22> 'int' lvalue Var 0x55590557a590 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x55590557ccf8 <col:41> 'int' 1
|   |-CallExpr 0x55590557cda8 <line:729:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55590557cd90 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55590557cd70 <col:3> 'void ()' Function 0x555905521410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x55590557ce58 <line:730:3, col:36>
|     `-CallExpr 0x55590557ce38 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x55590557ce20 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x55590557cdc8 <col:10> 'void *(void)' Function 0x555905520e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x55590557d028 prev 0x55590557a0b8 <line:732:1, line:751:1> line:732:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x55590557cf90 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x55590557e248 <line:733:1, line:751:1>
|   |-CallExpr 0x55590557d108 <line:734:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55590557d0f0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55590557d0d0 <col:3> 'void ()' Function 0x555905521350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55590557d168 <line:735:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x55590557d128 <col:3> 'int' lvalue Var 0x55590557a9e0 'x' 'int'
|   | `-IntegerLiteral 0x55590557d148 <col:7> 'int' 2
|   |-CallExpr 0x55590557d1c0 <line:736:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55590557d1a8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55590557d188 <col:3> 'void ()' Function 0x555905521410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55590557d218 <line:737:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55590557d200 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55590557d1e0 <col:3> 'void ()' Function 0x555905521350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55590557d278 <line:738:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x55590557d238 <col:3> 'int' lvalue Var 0x55590557ab00 'y' 'int'
|   | `-IntegerLiteral 0x55590557d258 <col:7> 'int' 1
|   |-CallExpr 0x55590557d2d0 <line:739:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55590557d2b8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55590557d298 <col:3> 'void ()' Function 0x555905521410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55590557d328 <line:740:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55590557d310 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55590557d2f0 <col:3> 'void ()' Function 0x555905521350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55590557d610 <line:741:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x55590557d348 <col:3> 'int' lvalue Var 0x55590557ac20 'z' 'int'
|   | `-ConditionalOperator 0x55590557d5e0 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x55590557d408 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x55590557d3c0 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x55590557d3a8 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x55590557d368 <col:7> '_Bool' lvalue Var 0x55590557b340 'z$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x55590557d3f0 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x55590557d3d8 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x55590557d388 <col:25> '_Bool' lvalue Var 0x55590557aea0 'z$r_buff0_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x55590557d5c8 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55590557d428 <col:42> 'int' lvalue Var 0x55590557b2c8 'z$w_buff0' 'int'
|   |   `-ParenExpr 0x55590557d5a8 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x55590557d578 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x55590557d4e8 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55590557d4a0 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55590557d488 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55590557d448 <col:55> '_Bool' lvalue Var 0x55590557b438 'z$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55590557d4d0 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55590557d4b8 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55590557d468 <col:73> '_Bool' lvalue Var 0x55590557b0d8 'z$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x55590557d548 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55590557d508 <col:90> 'int' lvalue Var 0x55590557b3c0 'z$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x55590557d560 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55590557d528 <col:102> 'int' lvalue Var 0x55590557ac20 'z' 'int'
|   |-BinaryOperator 0x55590557d818 <line:742:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55590557d630 <col:3> '_Bool' lvalue Var 0x55590557b340 'z$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55590557d800 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55590557d7d0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55590557d6f0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55590557d6a8 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55590557d690 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55590557d650 <col:20> '_Bool' lvalue Var 0x55590557b340 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55590557d6d8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55590557d6c0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55590557d670 <col:38> '_Bool' lvalue Var 0x55590557aea0 'z$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x55590557d788 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55590557d740 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55590557d710 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55590557d7b8 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55590557d7a0 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55590557d768 <col:66> '_Bool' lvalue Var 0x55590557b340 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x55590557db00 <line:743:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55590557d838 <col:3> '_Bool' lvalue Var 0x55590557b438 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x55590557dae8 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55590557dab8 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55590557d9d8 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55590557d8f8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55590557d8b0 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55590557d898 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55590557d858 <col:20> '_Bool' lvalue Var 0x55590557b340 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55590557d8e0 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55590557d8c8 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55590557d878 <col:38> '_Bool' lvalue Var 0x55590557aea0 'z$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x55590557d9b8 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55590557d970 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55590557d958 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55590557d918 <col:56> '_Bool' lvalue Var 0x55590557b438 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55590557d9a0 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55590557d988 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55590557d938 <col:74> '_Bool' lvalue Var 0x55590557b0d8 'z$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x55590557da70 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55590557da28 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55590557d9f8 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55590557daa0 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55590557da88 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55590557da50 <col:102> '_Bool' lvalue Var 0x55590557b438 'z$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x55590557dd08 <line:744:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x55590557db20 <col:3> '_Bool' lvalue Var 0x55590557aea0 'z$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x55590557dcf0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55590557dcc0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x55590557dbe0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x55590557db98 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x55590557db80 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x55590557db40 <col:20> '_Bool' lvalue Var 0x55590557b340 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x55590557dbc8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x55590557dbb0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x55590557db60 <col:38> '_Bool' lvalue Var 0x55590557aea0 'z$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x55590557dc78 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55590557dc30 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55590557dc00 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x55590557dca8 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55590557dc90 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55590557dc58 <col:66> '_Bool' lvalue Var 0x55590557aea0 'z$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x55590557e000 <line:745:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x55590557dd28 <col:3> '_Bool' lvalue Var 0x55590557b0d8 'z$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x55590557dfe8 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55590557dfb8 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x55590557dec8 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x55590557dde8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x55590557dda0 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x55590557dd88 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x55590557dd48 <col:20> '_Bool' lvalue Var 0x55590557b340 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x55590557ddd0 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x55590557ddb8 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x55590557dd68 <col:38> '_Bool' lvalue Var 0x55590557aea0 'z$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x55590557dea8 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x55590557de60 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x55590557de48 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x55590557de08 <col:56> '_Bool' lvalue Var 0x55590557b438 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x55590557de90 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x55590557de78 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x55590557de28 <col:74> '_Bool' lvalue Var 0x55590557b0d8 'z$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x55590557df60 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x55590557df18 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x55590557dee8 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x55590557dfa0 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x55590557df78 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x55590557df40 <col:102> '_Bool' lvalue Var 0x55590557b0d8 'z$r_buff1_thd2' '_Bool'
|   |-CallExpr 0x55590557e058 <line:746:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55590557e040 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55590557e020 <col:3> 'void ()' Function 0x555905521410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55590557e0b0 <line:747:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55590557e098 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55590557e078 <col:3> 'void ()' Function 0x555905521350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55590557e168 <line:748:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x55590557e0d0 <col:3> 'int' lvalue Var 0x55590557a590 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x55590557e148 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x55590557e130 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55590557e0f0 <col:22> 'int' lvalue Var 0x55590557a590 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x55590557e110 <col:41> 'int' 1
|   |-CallExpr 0x55590557e1c0 <line:749:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55590557e1a8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55590557e188 <col:3> 'void ()' Function 0x555905521410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x55590557e238 <line:750:3, col:36>
|     `-CallExpr 0x55590557e218 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x55590557e200 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x55590557e1e0 <col:10> 'void *(void)' Function 0x555905520e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x55590557e390 prev 0x55590557a210 <line:752:1, line:784:1> line:752:8 used P2 'void *(void *)'
| |-ParmVarDecl 0x55590557e2f8 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x555905581fe0 <line:753:1, line:784:1>
|   |-CallExpr 0x55590557e470 <line:754:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55590557e458 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55590557e438 <col:3> 'void ()' Function 0x555905521350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55590557e4e8 <line:755:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x55590557e490 <col:3> 'int' lvalue Var 0x55590557a6b0 '__unbuffered_p2_EAX' 'int'
|   | `-ImplicitCastExpr 0x55590557e4d0 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55590557e4b0 <col:25> 'int' lvalue Var 0x55590557ab00 'y' 'int'
|   |-CallExpr 0x55590557e540 <line:756:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x55590557e528 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55590557e508 <col:3> 'void ()' Function 0x555905521410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x55590557e598 <line:757:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x55590557e580 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55590557e560 <col:3> 'void ()' Function 0x555905521350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x55590557e648 <line:758:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x55590557e5b8 <col:3> '_Bool' lvalue Var 0x55590557b4b0 'weak$$choice0' '_Bool'
|   | `-ImplicitCastExpr 0x55590557e630 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x55590557e610 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x55590557e5f8 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x55590557e5d8 <col:19> 'void *(void)' Function 0x555905520e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x55590557e6f8 <line:759:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x55590557e668 <col:3> '_Bool' lvalue Var 0x55590557b528 'weak$$choice2' '_Bool'
|   | `-ImplicitCastExpr 0x55590557e6e0 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x55590557e6c0 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x55590557e6a8 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x55590557e688 <col:19> 'void *(void)' Function 0x555905520e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x55590557e770 <line:760:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x55590557e718 <col:3> '_Bool' lvalue Var 0x55590557acb8 'z$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x55590557e758 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x55590557e738 <col:21> '_Bool' lvalue Var 0x55590557b528 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x55590557e7e8 <line:761:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x55590557e790 <col:3> 'int' lvalue Var 0x55590557ad38 'z$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x55590557e7d0 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55590557e7b0 <col:15> 'int' lvalue Var 0x55590557ac20 'z' 'int'
|   |-BinaryOperator 0x55590557ec20 <line:762:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x55590557e808 <col:3> 'int' lvalue Var 0x55590557ac20 'z' 'int'
|   | `-ConditionalOperator 0x55590557ebf0 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x55590557ea18 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x55590557e938 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x55590557e860 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x55590557e848 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x55590557e828 <col:8> '_Bool' lvalue Var 0x55590557b340 'z$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x55590557e918 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x55590557e8b0 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x55590557e898 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x55590557e878 <col:27> '_Bool' lvalue Var 0x55590557af70 'z$r_buff0_thd3' '_Bool'
|   |   | |   `-UnaryOperator 0x55590557e900 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x55590557e8e8 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x55590557e8c8 <col:46> '_Bool' lvalue Var 0x55590557b438 'z$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x55590557e9f8 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x55590557e990 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x55590557e978 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x55590557e958 <col:65> '_Bool' lvalue Var 0x55590557af70 'z$r_buff0_thd3' '_Bool'
|   |   |   `-UnaryOperator 0x55590557e9e0 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x55590557e9c8 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x55590557e9a8 <col:84> '_Bool' lvalue Var 0x55590557b150 'z$r_buff1_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x55590557ebd8 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55590557ea38 <col:101> 'int' lvalue Var 0x55590557ac20 'z' 'int'
|   |   `-ParenExpr 0x55590557ebb8 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x55590557eb88 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x55590557eaf8 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x55590557eab0 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x55590557ea98 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x55590557ea58 <col:106> '_Bool' lvalue Var 0x55590557b340 'z$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x55590557eae0 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x55590557eac8 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x55590557ea78 <col:124> '_Bool' lvalue Var 0x55590557af70 'z$r_buff0_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x55590557eb58 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55590557eb18 <col:141> 'int' lvalue Var 0x55590557b2c8 'z$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x55590557eb70 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x55590557eb38 <col:153> 'int' lvalue Var 0x55590557b3c0 'z$w_buff1' 'int'
|   |-BinaryOperator 0x55590557f150 <line:763:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x55590557ec40 <col:3> 'int' lvalue Var 0x55590557b2c8 'z$w_buff0' 'int'
|   | `-ConditionalOperator 0x55590557f120 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x55590557f0f0 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55590557f0d8 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55590557ec60 <col:15> '_Bool' lvalue Var 0x55590557b528 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x55590557f108 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55590557ec80 <col:31> 'int' lvalue Var 0x55590557b2c8 'z$w_buff0' 'int'
|   |   `-ParenExpr 0x55590557f0b8 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x55590557f088 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x55590557ee90 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x55590557edb0 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x55590557ecd8 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x55590557ecc0 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x55590557eca0 <col:45> '_Bool' lvalue Var 0x55590557b340 'z$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x55590557ed90 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x55590557ed28 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x55590557ed10 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x55590557ecf0 <col:64> '_Bool' lvalue Var 0x55590557af70 'z$r_buff0_thd3' '_Bool'
|   |       | |   `-UnaryOperator 0x55590557ed78 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x55590557ed60 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x55590557ed40 <col:83> '_Bool' lvalue Var 0x55590557b438 'z$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x55590557ee70 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x55590557ee08 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x55590557edf0 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x55590557edd0 <col:102> '_Bool' lvalue Var 0x55590557af70 'z$r_buff0_thd3' '_Bool'
|   |       |   `-UnaryOperator 0x55590557ee58 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x55590557ee40 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x55590557ee20 <col:121> '_Bool' lvalue Var 0x55590557b150 'z$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x55590557f070 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55590557eeb0 <col:138> 'int' lvalue Var 0x55590557b2c8 'z$w_buff0' 'int'
|   |       `-ParenExpr 0x55590557f050 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x55590557f020 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x55590557ef70 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x55590557ef28 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x55590557ef10 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x55590557eed0 <col:151> '_Bool' lvalue Var 0x55590557b340 'z$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x55590557ef58 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x55590557ef40 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x55590557eef0 <col:169> '_Bool' lvalue Var 0x55590557af70 'z$r_buff0_thd3' '_Bool'
|   |           |-ImplicitCastExpr 0x55590557eff0 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x55590557efb0 <col:186> 'int' lvalue Var 0x55590557b2c8 'z$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x55590557f008 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x55590557efd0 <col:198> 'int' lvalue Var 0x55590557b2c8 'z$w_buff0' 'int'
|   |-BinaryOperator 0x55590557f660 <line:764:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x55590557f170 <col:3> 'int' lvalue Var 0x55590557b3c0 'z$w_buff1' 'int'
|   | `-ConditionalOperator 0x55590557f630 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x55590557f600 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x55590557f5e8 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x55590557f190 <col:15> '_Bool' lvalue Var 0x55590557b528 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x55590557f618 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55590557f1b0 <col:31> 'int' lvalue Var 0x55590557b3c0 'z$w_buff1' 'int'
|   |   `-ParenExpr 0x55590557f5c8 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x55590557f598 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x55590557f3c0 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x55590557f2e0 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x55590557f208 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x55590557f1f0 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x55590557f1d0 <col:45> '_Bool' lvalue Var 0x55590557b340 'z$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x55590557f2c0 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x55590557f258 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x55590557f240 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x55590557f220 <col:64> '_Bool' lvalue Var 0x55590557af70 'z$r_buff0_thd3' '_Bool'
|   |       | |   `-UnaryOperator 0x55590557f2a8 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x55590557f290 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x55590557f270 <col:83> '_Bool' lvalue Var 0x55590557b438 'z$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x55590557f3a0 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x55590557f338 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x55590557f320 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x55590557f300 <col:102> '_Bool' lvalue Var 0x55590557af70 'z$r_buff0_thd3' '_Bool'
|   |       |   `-UnaryOperator 0x55590557f388 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x55590557f370 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x55590557f350 <col:121> '_Bool' lvalue Var 0x55590557b150 'z$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x55590557f580 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x55590557f3e0 <col:138> 'int' lvalue Var 0x55590557b3c0 'z$w_buff1' 'int'
|   |       `-ParenExpr 0x55590557f560 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x55590557f530 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x55590557f4a0 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x55590557f458 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x55590557f440 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x55590557f400 <col:151> '_Bool' lvalue Var 0x55590557b340 'z$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x55590557f488 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x55590557f470 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x55590557f420 <col:169> '_Bool' lvalue Var 0x55590557af70 'z$r_buff0_thd3' '_Bool'
|   |           |-ImplicitCastExpr 0x55590557f500 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x55590557f4c0 <col:186> 'int' lvalue Var 0x55590557b3c0 'z$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x55590557f518 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x55590557f4e0 <col:198> 'int' lvalue Var 0x55590557b3c0 'z$w_buff1' 'int'
|   |-BinaryOperator 0x55590557fc08 <line:765:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x55590557f680 <col:3> '_Bool' lvalue Var 0x55590557b340 'z$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x55590557fbf0 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x55590557fbc0 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x55590557fb78 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55590557fb60 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55590557f6a0 <col:20> '_Bool' lvalue Var 0x55590557b528 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x55590557fba8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x55590557fb90 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55590557f6c0 <col:36> '_Bool' lvalue Var 0x55590557b340 'z$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x55590557fb40 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x55590557fb10 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x55590557f8d0 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55590557f7f0 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55590557f718 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55590557f700 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55590557f6e0 <col:55> '_Bool' lvalue Var 0x55590557b340 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55590557f7d0 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55590557f768 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55590557f750 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55590557f730 <col:74> '_Bool' lvalue Var 0x55590557af70 'z$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x55590557f7b8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55590557f7a0 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55590557f780 <col:93> '_Bool' lvalue Var 0x55590557b438 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55590557f8b0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55590557f848 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55590557f830 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55590557f810 <col:112> '_Bool' lvalue Var 0x55590557af70 'z$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x55590557f898 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55590557f880 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55590557f860 <col:131> '_Bool' lvalue Var 0x55590557b150 'z$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x55590557faf8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x55590557fae0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55590557f8f0 <col:148> '_Bool' lvalue Var 0x55590557b340 'z$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x55590557fac0 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x55590557fa90 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x55590557f9b0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55590557f968 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55590557f950 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55590557f910 <col:166> '_Bool' lvalue Var 0x55590557b340 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55590557f998 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55590557f980 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55590557f930 <col:184> '_Bool' lvalue Var 0x55590557af70 'z$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x55590557fa48 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55590557fa00 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55590557f9d0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x55590557fa78 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x55590557fa60 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x55590557fa28 <col:212> '_Bool' lvalue Var 0x55590557b340 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5559055801e8 <line:766:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x55590557fc28 <col:3> '_Bool' lvalue Var 0x55590557b438 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5559055801d0 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5559055801a0 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x555905580158 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x555905580140 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55590557fc48 <col:20> '_Bool' lvalue Var 0x55590557b528 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x555905580188 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x555905580170 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x55590557fc68 <col:36> '_Bool' lvalue Var 0x55590557b438 'z$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x555905580120 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x5559055800f0 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x55590557fe78 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x55590557fd98 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x55590557fcc0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x55590557fca8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x55590557fc88 <col:55> '_Bool' lvalue Var 0x55590557b340 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x55590557fd78 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x55590557fd10 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x55590557fcf8 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x55590557fcd8 <col:74> '_Bool' lvalue Var 0x55590557af70 'z$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x55590557fd60 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x55590557fd48 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x55590557fd28 <col:93> '_Bool' lvalue Var 0x55590557b438 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x55590557fe58 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x55590557fdf0 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x55590557fdd8 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x55590557fdb8 <col:112> '_Bool' lvalue Var 0x55590557af70 'z$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x55590557fe40 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x55590557fe28 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x55590557fe08 <col:131> '_Bool' lvalue Var 0x55590557b150 'z$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x5559055800d8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5559055800c0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x55590557fe98 <col:148> '_Bool' lvalue Var 0x55590557b438 'z$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x5559055800a0 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x555905580070 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x55590557ff58 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x55590557ff10 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x55590557fef8 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x55590557feb8 <col:166> '_Bool' lvalue Var 0x55590557b340 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x55590557ff40 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x55590557ff28 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x55590557fed8 <col:184> '_Bool' lvalue Var 0x55590557af70 'z$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x555905580040 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x55590557ffc0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x55590557ff78 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x555905580058 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x555905580018 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x55590557ffe8 <col:219> 'int' 0
|   |-BinaryOperator 0x555905580790 <line:767:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x555905580208 <col:3> '_Bool' lvalue Var 0x55590557af70 'z$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x555905580778 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x555905580748 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x555905580700 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5559055806e8 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x555905580228 <col:20> '_Bool' lvalue Var 0x55590557b528 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x555905580730 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x555905580718 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x555905580248 <col:36> '_Bool' lvalue Var 0x55590557af70 'z$r_buff0_thd3' '_Bool'
|   |     `-ParenExpr 0x5559055806c8 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x555905580698 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x555905580458 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x555905580378 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5559055802a0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x555905580288 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x555905580268 <col:55> '_Bool' lvalue Var 0x55590557b340 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x555905580358 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5559055802f0 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5559055802d8 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5559055802b8 <col:74> '_Bool' lvalue Var 0x55590557af70 'z$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x555905580340 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x555905580328 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x555905580308 <col:93> '_Bool' lvalue Var 0x55590557b438 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x555905580438 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5559055803d0 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5559055803b8 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x555905580398 <col:112> '_Bool' lvalue Var 0x55590557af70 'z$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x555905580420 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x555905580408 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5559055803e8 <col:131> '_Bool' lvalue Var 0x55590557b150 'z$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x555905580680 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x555905580668 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x555905580478 <col:148> '_Bool' lvalue Var 0x55590557af70 'z$r_buff0_thd3' '_Bool'
|   |         `-ParenExpr 0x555905580648 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x555905580618 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x555905580538 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5559055804f0 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5559055804d8 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x555905580498 <col:166> '_Bool' lvalue Var 0x55590557b340 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x555905580520 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x555905580508 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5559055804b8 <col:184> '_Bool' lvalue Var 0x55590557af70 'z$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x5559055805d0 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x555905580588 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x555905580558 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x555905580600 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x5559055805e8 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x5559055805b0 <col:212> '_Bool' lvalue Var 0x55590557af70 'z$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x555905580d58 <line:768:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x5559055807b0 <col:3> '_Bool' lvalue Var 0x55590557b150 'z$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x555905580d40 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x555905580d10 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x555905580cc8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x555905580cb0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5559055807d0 <col:20> '_Bool' lvalue Var 0x55590557b528 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x555905580cf8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x555905580ce0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5559055807f0 <col:36> '_Bool' lvalue Var 0x55590557b150 'z$r_buff1_thd3' '_Bool'
|   |     `-ParenExpr 0x555905580c90 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x555905580c60 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x555905580a00 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x555905580920 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x555905580848 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x555905580830 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x555905580810 <col:55> '_Bool' lvalue Var 0x55590557b340 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x555905580900 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x555905580898 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x555905580880 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x555905580860 <col:74> '_Bool' lvalue Var 0x55590557af70 'z$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x5559055808e8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5559055808d0 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5559055808b0 <col:93> '_Bool' lvalue Var 0x55590557b438 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5559055809e0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x555905580978 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x555905580960 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x555905580940 <col:112> '_Bool' lvalue Var 0x55590557af70 'z$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x5559055809c8 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5559055809b0 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x555905580990 <col:131> '_Bool' lvalue Var 0x55590557b150 'z$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x555905580c48 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x555905580c30 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x555905580a20 <col:148> '_Bool' lvalue Var 0x55590557b150 'z$r_buff1_thd3' '_Bool'
|   |         `-ParenExpr 0x555905580c10 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x555905580be0 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x555905580ae0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x555905580a98 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x555905580a80 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x555905580a40 <col:166> '_Bool' lvalue Var 0x55590557b340 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x555905580ac8 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x555905580ab0 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x555905580a60 <col:184> '_Bool' lvalue Var 0x55590557af70 'z$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x555905580bb0 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x555905580b30 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x555905580b00 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x555905580bc8 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x555905580b88 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x555905580b58 <col:219> 'int' 0
|   |-BinaryOperator 0x555905580dd0 <line:769:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x555905580d78 <col:3> 'int' lvalue Var 0x55590557a7d0 '__unbuffered_p2_EBX' 'int'
|   | `-ImplicitCastExpr 0x555905580db8 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x555905580d98 <col:25> 'int' lvalue Var 0x55590557ac20 'z' 'int'
|   |-BinaryOperator 0x555905580f00 <line:770:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x555905580df0 <col:3> 'int' lvalue Var 0x55590557ac20 'z' 'int'
|   | `-ConditionalOperator 0x555905580ed0 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x555905580e88 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x555905580e70 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x555905580e10 <col:7> '_Bool' lvalue Var 0x55590557acb8 'z$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x555905580ea0 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x555905580e30 <col:25> 'int' lvalue Var 0x55590557ad38 'z$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x555905580eb8 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x555905580e50 <col:37> 'int' lvalue Var 0x55590557ac20 'z' 'int'
|   |-BinaryOperator 0x555905580f98 <line:771:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x555905580f20 <col:3> '_Bool' lvalue Var 0x55590557acb8 'z$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x555905580f70 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x555905580f40 <col:28> 'int' 0
|   |-CallExpr 0x555905581008 <line:772:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x555905580ff0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x555905580fd0 <col:3> 'void ()' Function 0x555905521410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x555905581060 <line:773:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x555905581048 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x555905581028 <col:3> 'void ()' Function 0x555905521350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x555905581348 <line:774:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x555905581080 <col:3> 'int' lvalue Var 0x55590557ac20 'z' 'int'
|   | `-ConditionalOperator 0x555905581318 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x555905581140 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x5559055810f8 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x5559055810e0 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x5559055810a0 <col:7> '_Bool' lvalue Var 0x55590557b340 'z$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x555905581128 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x555905581110 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x5559055810c0 <col:25> '_Bool' lvalue Var 0x55590557af70 'z$r_buff0_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x555905581300 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x555905581160 <col:42> 'int' lvalue Var 0x55590557b2c8 'z$w_buff0' 'int'
|   |   `-ParenExpr 0x5559055812e0 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x5559055812b0 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x555905581220 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x5559055811d8 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x5559055811c0 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x555905581180 <col:55> '_Bool' lvalue Var 0x55590557b438 'z$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x555905581208 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x5559055811f0 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x5559055811a0 <col:73> '_Bool' lvalue Var 0x55590557b150 'z$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x555905581280 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x555905581240 <col:90> 'int' lvalue Var 0x55590557b3c0 'z$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x555905581298 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x555905581260 <col:102> 'int' lvalue Var 0x55590557ac20 'z' 'int'
|   |-BinaryOperator 0x555905581550 <line:775:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x555905581368 <col:3> '_Bool' lvalue Var 0x55590557b340 'z$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x555905581538 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x555905581508 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x555905581428 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5559055813e0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5559055813c8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x555905581388 <col:20> '_Bool' lvalue Var 0x55590557b340 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x555905581410 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5559055813f8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5559055813a8 <col:38> '_Bool' lvalue Var 0x55590557af70 'z$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x5559055814c0 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x555905581478 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x555905581448 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5559055814f0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5559055814d8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5559055814a0 <col:66> '_Bool' lvalue Var 0x55590557b340 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x555905581838 <line:776:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x555905581570 <col:3> '_Bool' lvalue Var 0x55590557b438 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x555905581820 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5559055817f0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x555905581710 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x555905581630 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5559055815e8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5559055815d0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x555905581590 <col:20> '_Bool' lvalue Var 0x55590557b340 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x555905581618 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x555905581600 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5559055815b0 <col:38> '_Bool' lvalue Var 0x55590557af70 'z$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x5559055816f0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5559055816a8 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x555905581690 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x555905581650 <col:56> '_Bool' lvalue Var 0x55590557b438 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5559055816d8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5559055816c0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x555905581670 <col:74> '_Bool' lvalue Var 0x55590557b150 'z$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x5559055817a8 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x555905581760 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x555905581730 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5559055817d8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5559055817c0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x555905581788 <col:102> '_Bool' lvalue Var 0x55590557b438 'z$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x555905581a40 <line:777:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x555905581858 <col:3> '_Bool' lvalue Var 0x55590557af70 'z$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x555905581a28 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5559055819f8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x555905581918 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5559055818d0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5559055818b8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x555905581878 <col:20> '_Bool' lvalue Var 0x55590557b340 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x555905581900 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5559055818e8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x555905581898 <col:38> '_Bool' lvalue Var 0x55590557af70 'z$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x5559055819b0 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x555905581968 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x555905581938 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5559055819e0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5559055819c8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x555905581990 <col:66> '_Bool' lvalue Var 0x55590557af70 'z$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x555905581d28 <line:778:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x555905581a60 <col:3> '_Bool' lvalue Var 0x55590557b150 'z$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x555905581d10 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x555905581ce0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x555905581c00 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x555905581b20 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x555905581ad8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x555905581ac0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x555905581a80 <col:20> '_Bool' lvalue Var 0x55590557b340 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x555905581b08 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x555905581af0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x555905581aa0 <col:38> '_Bool' lvalue Var 0x55590557af70 'z$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x555905581be0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x555905581b98 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x555905581b80 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x555905581b40 <col:56> '_Bool' lvalue Var 0x55590557b438 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x555905581bc8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x555905581bb0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x555905581b60 <col:74> '_Bool' lvalue Var 0x55590557b150 'z$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x555905581c98 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x555905581c50 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x555905581c20 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x555905581cc8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x555905581cb0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x555905581c78 <col:102> '_Bool' lvalue Var 0x55590557b150 'z$r_buff1_thd3' '_Bool'
|   |-CallExpr 0x555905581d80 <line:779:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x555905581d68 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x555905581d48 <col:3> 'void ()' Function 0x555905521410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x555905581dd8 <line:780:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x555905581dc0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x555905581da0 <col:3> 'void ()' Function 0x555905521350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x555905581e90 <line:781:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x555905581df8 <col:3> 'int' lvalue Var 0x55590557a590 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x555905581e70 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x555905581e58 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x555905581e18 <col:22> 'int' lvalue Var 0x55590557a590 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x555905581e38 <col:41> 'int' 1
|   |-CallExpr 0x555905581ee8 <line:782:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x555905581ed0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x555905581eb0 <col:3> 'void ()' Function 0x555905521410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x555905581f60 <line:783:3, col:36>
|     `-CallExpr 0x555905581f40 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x555905581f28 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x555905581f08 <col:10> 'void *(void)' Function 0x555905520e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x555905582100 prev 0x55590557a2d8 <line:785:1, line:787:1> line:785:6 fence 'void ()'
| `-CompoundStmt 0x5559055821a0 <line:786:1, line:787:1>
|-FunctionDecl 0x5559055821d0 prev 0x55590557a398 <line:788:1, line:790:1> line:788:6 isync 'void ()'
| `-CompoundStmt 0x555905582270 <line:789:1, line:790:1>
|-FunctionDecl 0x5559055822a0 prev 0x55590557a458 <line:791:1, line:793:1> line:791:6 lwfence 'void ()'
| `-CompoundStmt 0x555905582340 <line:792:1, line:793:1>
`-FunctionDecl 0x5559055823a8 <line:794:1, line:818:1> line:794:5 main 'int ()'
  `-CompoundStmt 0x555905584000 <line:795:1, line:818:1>
    |-DeclStmt 0x5559055824c0 <line:796:3, col:18>
    | `-VarDecl 0x555905582458 <col:3, col:13> col:13 used t2283 'pthread_t':'unsigned long'
    |-CallExpr 0x5559055826c8 <line:797:3, col:54> 'int'
    | |-ImplicitCastExpr 0x5559055826b0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5559055824d8 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x5559055618f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x555905582518 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x5559055824f8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x555905582458 't2283' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x555905582708 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x555905582590 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x555905582568 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x555905582530 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x555905582720 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5559055825b0 <col:39> 'void *(void *)' Function 0x55590557b640 'P0' 'void *(void *)'
    | `-ParenExpr 0x555905582630 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x555905582608 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x5559055825d0 <col:52> 'int' 0
    |-DeclStmt 0x5559055827b0 <line:798:3, col:18>
    | `-VarDecl 0x555905582748 <col:3, col:13> col:13 used t2284 'pthread_t':'unsigned long'
    |-CallExpr 0x555905582958 <line:799:3, col:54> 'int'
    | |-ImplicitCastExpr 0x555905582940 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5559055827c8 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x5559055618f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x555905582808 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x5559055827e8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x555905582748 't2284' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x555905582998 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x555905582880 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x555905582858 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x555905582820 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x5559055829b0 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5559055828a0 <col:39> 'void *(void *)' Function 0x55590557d028 'P1' 'void *(void *)'
    | `-ParenExpr 0x555905582920 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x5559055828f8 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x5559055828c0 <col:52> 'int' 0
    |-DeclStmt 0x555905582a40 <line:800:3, col:18>
    | `-VarDecl 0x5559055829d8 <col:3, col:13> col:13 used t2285 'pthread_t':'unsigned long'
    |-CallExpr 0x555905582be8 <line:801:3, col:54> 'int'
    | |-ImplicitCastExpr 0x555905582bd0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x555905582a58 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x5559055618f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x555905582a98 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x555905582a78 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x5559055829d8 't2285' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x555905582c28 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x555905582b10 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x555905582ae8 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x555905582ab0 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x555905582c40 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x555905582b30 <col:39> 'void *(void *)' Function 0x55590557e390 'P2' 'void *(void *)'
    | `-ParenExpr 0x555905582bb0 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x555905582b88 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x555905582b50 <col:52> 'int' 0
    |-CallExpr 0x555905582c90 <line:802:3, col:27> 'void'
    | `-ImplicitCastExpr 0x555905582c78 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x555905582c58 <col:3> 'void ()' Function 0x555905521350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x555905582d60 <line:803:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x555905582cb0 <col:3> '_Bool' lvalue Var 0x55590557a868 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x555905582d48 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x555905582d28 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x555905582d10 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x555905582cd0 <col:21> 'int' lvalue Var 0x55590557a590 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x555905582cf0 <col:41> 'int' 3
    |-CallExpr 0x555905582db8 <line:804:3, col:25> 'void'
    | `-ImplicitCastExpr 0x555905582da0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x555905582d80 <col:3> 'void ()' Function 0x555905521410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x555905582e30 <line:805:3, col:36> 'void'
    | |-ImplicitCastExpr 0x555905582e18 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x555905582dd8 <col:3> 'void (int)' Function 0x555905520ca0 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x555905582e70 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x555905582e58 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x555905582df8 <col:21> '_Bool' lvalue Var 0x55590557a868 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x555905582ec0 <line:806:3, col:27> 'void'
    | `-ImplicitCastExpr 0x555905582ea8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x555905582e88 <col:3> 'void ()' Function 0x555905521350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x5559055831b8 <line:807:3, col:103> 'int' '='
    | |-DeclRefExpr 0x555905582ee0 <col:3> 'int' lvalue Var 0x55590557ac20 'z' 'int'
    | `-ConditionalOperator 0x555905583188 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x555905582fa0 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x555905582f58 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x555905582f40 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x555905582f00 <col:7> '_Bool' lvalue Var 0x55590557b340 'z$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x555905582f88 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x555905582f70 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x555905582f20 <col:25> '_Bool' lvalue Var 0x55590557adb0 'z$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x555905583170 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x555905582fc0 <col:42> 'int' lvalue Var 0x55590557b2c8 'z$w_buff0' 'int'
    |   `-ParenExpr 0x555905583150 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x555905583120 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x555905583090 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x555905583048 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x555905583030 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x555905582ff0 <col:55> '_Bool' lvalue Var 0x55590557b438 'z$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x555905583078 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x555905583060 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x555905583010 <col:73> '_Bool' lvalue Var 0x55590557afe8 'z$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x5559055830f0 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x5559055830b0 <col:90> 'int' lvalue Var 0x55590557b3c0 'z$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x555905583108 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x5559055830d0 <col:102> 'int' lvalue Var 0x55590557ac20 'z' 'int'
    |-BinaryOperator 0x5559055833c0 <line:808:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x5559055831d8 <col:3> '_Bool' lvalue Var 0x55590557b340 'z$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x5559055833a8 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x555905583378 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x555905583298 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x555905583250 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x555905583238 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x5559055831f8 <col:20> '_Bool' lvalue Var 0x55590557b340 'z$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x555905583280 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x555905583268 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x555905583218 <col:38> '_Bool' lvalue Var 0x55590557adb0 'z$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x555905583330 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x5559055832e8 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x5559055832b8 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x555905583360 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x555905583348 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x555905583310 <col:66> '_Bool' lvalue Var 0x55590557b340 'z$w_buff0_used' '_Bool'
    |-BinaryOperator 0x5559055836a8 <line:809:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x5559055833e0 <col:3> '_Bool' lvalue Var 0x55590557b438 'z$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x555905583690 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x555905583660 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x555905583580 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x5559055834a0 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x555905583458 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x555905583440 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x555905583400 <col:20> '_Bool' lvalue Var 0x55590557b340 'z$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x555905583488 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x555905583470 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x555905583420 <col:38> '_Bool' lvalue Var 0x55590557adb0 'z$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x555905583560 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x555905583518 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x555905583500 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x5559055834c0 <col:56> '_Bool' lvalue Var 0x55590557b438 'z$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x555905583548 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x555905583530 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x5559055834e0 <col:74> '_Bool' lvalue Var 0x55590557afe8 'z$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x555905583618 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x5559055835d0 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x5559055835a0 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x555905583648 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x555905583630 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x5559055835f8 <col:102> '_Bool' lvalue Var 0x55590557b438 'z$w_buff1_used' '_Bool'
    |-BinaryOperator 0x5559055838b0 <line:810:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x5559055836c8 <col:3> '_Bool' lvalue Var 0x55590557adb0 'z$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x555905583898 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x555905583868 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x555905583788 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x555905583740 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x555905583728 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x5559055836e8 <col:20> '_Bool' lvalue Var 0x55590557b340 'z$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x555905583770 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x555905583758 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x555905583708 <col:38> '_Bool' lvalue Var 0x55590557adb0 'z$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x555905583820 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x5559055837d8 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x5559055837a8 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x555905583850 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x555905583838 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x555905583800 <col:66> '_Bool' lvalue Var 0x55590557adb0 'z$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x555905583b98 <line:811:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x5559055838d0 <col:3> '_Bool' lvalue Var 0x55590557afe8 'z$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x555905583b80 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x555905583b50 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x555905583a70 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x555905583990 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x555905583948 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x555905583930 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x5559055838f0 <col:20> '_Bool' lvalue Var 0x55590557b340 'z$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x555905583978 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x555905583960 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x555905583910 <col:38> '_Bool' lvalue Var 0x55590557adb0 'z$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x555905583a50 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x555905583a08 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x5559055839f0 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x5559055839b0 <col:56> '_Bool' lvalue Var 0x55590557b438 'z$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x555905583a38 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x555905583a20 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x5559055839d0 <col:74> '_Bool' lvalue Var 0x55590557afe8 'z$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x555905583b08 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x555905583ac0 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x555905583a90 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x555905583b38 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x555905583b20 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x555905583ae8 <col:102> '_Bool' lvalue Var 0x55590557afe8 'z$r_buff1_thd0' '_Bool'
    |-CallExpr 0x555905583bf0 <line:812:3, col:25> 'void'
    | `-ImplicitCastExpr 0x555905583bd8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x555905583bb8 <col:3> 'void ()' Function 0x555905521410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x555905583c48 <line:813:3, col:27> 'void'
    | `-ImplicitCastExpr 0x555905583c30 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x555905583c10 <col:3> 'void ()' Function 0x555905521350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x555905583e80 <line:814:3, col:85> '_Bool' '='
    | |-DeclRefExpr 0x555905583c68 <col:3> '_Bool' lvalue Var 0x55590557a8e0 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x555905583e68 <col:21, col:85> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x555905583e50 <col:21, col:85> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x555905583e30 <col:22, col:85> 'int'
    |       `-BinaryOperator 0x555905583e10 <col:23, col:84> 'int' '&&'
    |         |-BinaryOperator 0x555905583d78 <col:23, col:56> 'int' '&&'
    |         | |-BinaryOperator 0x555905583ce0 <col:23, col:28> 'int' '=='
    |         | | |-ImplicitCastExpr 0x555905583cc8 <col:23> 'int' <LValueToRValue>
    |         | | | `-DeclRefExpr 0x555905583c88 <col:23> 'int' lvalue Var 0x55590557a9e0 'x' 'int'
    |         | | `-IntegerLiteral 0x555905583ca8 <col:28> 'int' 2
    |         | `-BinaryOperator 0x555905583d58 <col:33, col:56> 'int' '=='
    |         |   |-ImplicitCastExpr 0x555905583d40 <col:33> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x555905583d00 <col:33> 'int' lvalue Var 0x55590557a6b0 '__unbuffered_p2_EAX' 'int'
    |         |   `-IntegerLiteral 0x555905583d20 <col:56> 'int' 1
    |         `-BinaryOperator 0x555905583df0 <col:61, col:84> 'int' '=='
    |           |-ImplicitCastExpr 0x555905583dd8 <col:61> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x555905583d98 <col:61> 'int' lvalue Var 0x55590557a7d0 '__unbuffered_p2_EBX' 'int'
    |           `-IntegerLiteral 0x555905583db8 <col:84> 'int' 0
    |-CallExpr 0x555905583ed8 <line:815:3, col:25> 'void'
    | `-ImplicitCastExpr 0x555905583ec0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x555905583ea0 <col:3> 'void ()' Function 0x555905521410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x555905583f50 <line:816:3, col:36> 'void'
    | |-ImplicitCastExpr 0x555905583f38 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x555905583ef8 <col:3> 'void (int)' Function 0x5559055210d8 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x555905583f90 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x555905583f78 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x555905583f18 <col:21> '_Bool' lvalue Var 0x55590557a8e0 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x555905583fc8 <line:817:3, col:10>
      `-IntegerLiteral 0x555905583fa8 <col:10> 'int' 0
