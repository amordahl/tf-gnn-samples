TranslationUnitDecl 0x561273398f88 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x561273399848 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x561273399520 '__int128'
|-TypedefDecl 0x5612733998b8 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x561273399540 'unsigned __int128'
|-TypedefDecl 0x561273399bc0 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x561273399990 'struct __NSConstantString_tag'
|   `-Record 0x561273399910 '__NSConstantString_tag'
|-TypedefDecl 0x561273399c68 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x561273399c20 'char *'
|   `-BuiltinType 0x561273399020 'char'
|-TypedefDecl 0x5612733d8b60 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x561273399f00 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x561273399d40 'struct __va_list_tag'
|     `-Record 0x561273399cc0 '__va_list_tag'
|-FunctionDecl 0x5612733d8ca0 <pthread-wmm/mix039_rmo.oepc_false-unreach-call.i:1:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x5612733d8bd0 <col:31> col:34 'int'
|-FunctionDecl 0x5612733d8e68 <line:2:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x5612733d8f90 <line:3:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x5612733d90d8 <line:4:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x5612733d9048 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x5612733d9308 <col:40, col:99>
|   |-IfStmt 0x5612733d92d8 <col:42, col:88>
|   | |-UnaryOperator 0x5612733d91b8 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x5612733d91a0 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x5612733d9180 <col:47> 'int' lvalue ParmVar 0x5612733d9048 'expression' 'int'
|   | `-CompoundStmt 0x5612733d92c0 <col:59, col:88>
|   |   `-LabelStmt 0x5612733d92a8 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x5612733d9238 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x5612733d9220 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x5612733d91d0 <col:68> 'void () __attribute__((noreturn))' Function 0x5612733d8f90 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x5612733d92f0 <col:89>
|   `-ReturnStmt 0x5612733d92f8 <col:91>
|-FunctionDecl 0x5612733d9350 <line:5:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x5612733d9410 <line:6:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x5612733d9790 <line:8:1, line:10:76> line:8:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5612733d94c8 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x5612733d9548 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x5612733d95c8 <line:9:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x5612733d9648 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x5612733d9850 <line:10:22>
|-FunctionDecl 0x5612733ff8a0 <line:11:1, line:13:76> line:11:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5612733d98c0 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x5612733d9940 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x5612733d99c0 <line:12:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x5612733d9a40 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x5612733ff960 <line:13:22>
|-FunctionDecl 0x5612733ffc10 <line:14:1, line:15:76> line:14:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5612733ff9d0 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x5612733ffa50 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x5612733ffad0 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x5612733ffcc8 <line:15:22>
|-TypedefDecl 0x5612733ffd38 <line:17:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x5612733990e0 'unsigned char'
|-TypedefDecl 0x5612733ffda8 <line:18:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x561273399100 'unsigned short'
|-TypedefDecl 0x5612733ffe18 <line:19:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x561273399120 'unsigned int'
|-TypedefDecl 0x5612733ffe88 <line:20:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x561273399140 'unsigned long'
|-TypedefDecl 0x5612733ffef8 <line:21:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x561273399040 'signed char'
|-TypedefDecl 0x5612733fff68 <line:22:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x5612733990e0 'unsigned char'
|-TypedefDecl 0x5612733fffd8 <line:23:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x561273399060 'short'
|-TypedefDecl 0x561273400048 <line:24:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x561273399100 'unsigned short'
|-TypedefDecl 0x5612734000b8 <line:25:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x561273399080 'int'
|-TypedefDecl 0x561273400128 <line:26:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x561273399120 'unsigned int'
|-TypedefDecl 0x561273400198 <line:27:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x5612733990a0 'long'
|-TypedefDecl 0x561273400208 <line:28:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x561273399140 'unsigned long'
|-TypedefDecl 0x561273400278 <line:29:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x5612733990a0 'long'
|-TypedefDecl 0x5612734002e8 <line:30:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x561273399140 'unsigned long'
|-TypedefDecl 0x561273400358 <line:31:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x561273399140 'unsigned long'
|-TypedefDecl 0x5612734003c8 <line:32:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x561273399120 'unsigned int'
|-TypedefDecl 0x561273400438 <line:33:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x561273399120 'unsigned int'
|-TypedefDecl 0x5612734004a8 <line:34:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x561273399140 'unsigned long'
|-TypedefDecl 0x561273400518 <line:35:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x561273399140 'unsigned long'
|-TypedefDecl 0x561273400588 <line:36:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x561273399120 'unsigned int'
|-TypedefDecl 0x5612734005f8 <line:37:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x561273399140 'unsigned long'
|-TypedefDecl 0x561273400668 <line:38:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x5612733990a0 'long'
|-TypedefDecl 0x5612734006d8 <line:39:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x5612733990a0 'long'
|-TypedefDecl 0x561273400748 <line:40:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x561273399080 'int'
|-RecordDecl 0x5612734007a0 <line:41:9, col:32> col:9 struct definition
| `-FieldDecl 0x561273400918 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x5612734009d0 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x561273400970 'struct __fsid_t' sugar
|   `-RecordType 0x561273400820 '__fsid_t'
|     `-Record 0x5612734007a0 ''
|-TypedefDecl 0x561273400a58 <line:42:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x5612733990a0 'long'
|-TypedefDecl 0x561273400ac8 <line:43:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x561273399140 'unsigned long'
|-TypedefDecl 0x561273400b38 <line:44:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x561273399140 'unsigned long'
|-TypedefDecl 0x561273400ba8 <line:45:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x561273399120 'unsigned int'
|-TypedefDecl 0x561273400c18 <line:46:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x5612733990a0 'long'
|-TypedefDecl 0x561273400c88 <line:47:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x561273399120 'unsigned int'
|-TypedefDecl 0x561273400cf8 <line:48:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x5612733990a0 'long'
|-TypedefDecl 0x561273400d68 <line:49:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x561273399080 'int'
|-TypedefDecl 0x561273400dd8 <line:50:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x561273399080 'int'
|-TypedefDecl 0x561273400e48 <line:51:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x561273399080 'int'
|-TypedefDecl 0x561273400eb8 <line:52:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x5612733997a0 'void *'
|   `-BuiltinType 0x561273398fe0 'void'
|-TypedefDecl 0x561273400f28 <line:53:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x5612733990a0 'long'
|-TypedefDecl 0x561273400f98 <line:54:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x5612733990a0 'long'
|-TypedefDecl 0x561273401008 <line:55:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x5612733990a0 'long'
|-TypedefDecl 0x561273401078 <line:56:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x561273399140 'unsigned long'
|-TypedefDecl 0x5612734010e8 <line:57:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x561273399140 'unsigned long'
|-TypedefDecl 0x561273401158 <line:58:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x561273399140 'unsigned long'
|-TypedefDecl 0x5612734011c8 <line:59:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x561273399140 'unsigned long'
|-TypedefDecl 0x561273401238 <line:60:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x5612733990a0 'long'
|-TypedefDecl 0x5612734012a8 <line:61:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x5612733990a0 'long'
|-TypedefDecl 0x561273401318 <line:62:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x5612733990a0 'long'
|-TypedefDecl 0x561273401388 <line:63:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x561273399140 'unsigned long'
|-TypedefDecl 0x561273401418 <line:64:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x5612734013e0 '__off64_t' sugar
|   |-Typedef 0x5612734006d8 '__off64_t'
|   `-BuiltinType 0x5612733990a0 'long'
|-TypedefDecl 0x561273401510 <line:65:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x5612734014d0 '__quad_t *'
|   `-TypedefType 0x561273401470 '__quad_t' sugar
|     |-Typedef 0x561273400278 '__quad_t'
|     `-BuiltinType 0x5612733990a0 'long'
|-TypedefDecl 0x561273401580 <line:66:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x561273399c20 'char *'
|   `-BuiltinType 0x561273399020 'char'
|-TypedefDecl 0x5612734015f0 <line:67:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x5612733990a0 'long'
|-TypedefDecl 0x561273401660 <line:68:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x561273399120 'unsigned int'
|-FunctionDecl 0x5612734017a8 <line:69:1, line:73:1> line:70:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x5612734016d0 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x561273401ae8 <line:71:1, line:73:1>
|   `-ReturnStmt 0x561273401ad8 <line:72:3, col:34>
|     `-CallExpr 0x561273401a98 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x561273401a80 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x561273401a10 <col:10> '<builtin fn type>' Function 0x561273401880 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x561273401ac0 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x561273401a30 <col:29> 'unsigned int' lvalue ParmVar 0x5612734016d0 '__bsx' 'unsigned int'
|-FunctionDecl 0x561273401880 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x561273401920 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x561273401990 <col:10> Implicit
| `-ConstAttr 0x5612734019e8 <col:10> Implicit
|-FunctionDecl 0x561273401c40 <line:74:1, line:78:1> line:75:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x561273401b38 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x561273401f58 <line:76:1, line:78:1>
|   `-ReturnStmt 0x561273401f48 <line:77:3, col:34>
|     `-CallExpr 0x561273401f08 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x561273401ef0 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x561273401e78 <col:10> '<builtin fn type>' Function 0x561273401ce8 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x561273401f30 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x561273401e98 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x561273401b38 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x561273401ce8 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x561273401d88 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x561273401df8 <col:10> Implicit
| `-ConstAttr 0x561273401e50 <col:10> Implicit
|-TypedefDecl 0x561273401f88 <line:79:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x561273399140 'unsigned long'
|-TypedefDecl 0x561273402018 <line:81:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x561273401fe0 '__time_t' sugar
|   |-Typedef 0x561273400c18 '__time_t'
|   `-BuiltinType 0x5612733990a0 'long'
|-RecordDecl 0x561273402070 <line:84:1, line:88:3> line:84:8 struct timespec definition
| |-FieldDecl 0x561273402128 <line:86:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x5612734021b8 <line:87:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x561273402248 <line:89:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x561273402210 '__pid_t' sugar
|   |-Typedef 0x561273400748 '__pid_t'
|   `-BuiltinType 0x561273399080 'int'
|-RecordDecl 0x5612734022a0 <line:90:1, line:93:3> line:90:8 struct sched_param definition
| `-FieldDecl 0x561273402360 <line:92:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x5612734023b0 <line:96:1, line:99:3> line:96:8 struct __sched_param definition
| `-FieldDecl 0x561273402470 <line:98:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x5612734024d8 <line:100:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x561273399140 'unsigned long'
|-RecordDecl 0x561273402530 <line:101:9, line:104:1> line:101:9 struct definition
| `-FieldDecl 0x5612734027c0 <line:103:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x5612734048b0 <line:101:1, line:104:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x561273402810 'struct cpu_set_t' sugar
|   `-RecordType 0x5612734025b0 'cpu_set_t'
|     `-Record 0x561273402530 ''
|-FunctionDecl 0x561273404b88 <line:106:1, line:107:42> line:106:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x561273404958 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x561273404a60 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x561273404c38 <line:107:19>
|-FunctionDecl 0x561273404e10 <line:108:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x561273404ca0 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x561273404eb8 <col:69>
|-FunctionDecl 0x561273405030 <line:109:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x561273404f20 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x5612734050d8 <col:64>
|-FunctionDecl 0x561273405398 <line:112:1, line:113:45> line:112:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x561273405140 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x561273405278 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x561273405448 <line:113:22>
|-FunctionDecl 0x5612734056c8 <line:114:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x5612734054b0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5612734055a8 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x561273405778 <col:88>
|-FunctionDecl 0x561273405a98 <line:115:1, line:116:85> line:115:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x5612734057e0 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5612734058c0 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x561273405950 <line:116:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x561273405b50 <col:62>
|-FunctionDecl 0x561273405cc8 <line:117:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x561273405bb8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x561273405d70 <col:63>
|-FunctionDecl 0x561273405e98 <line:118:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x561273405f38 <col:47>
|-FunctionDecl 0x561273406040 <line:119:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x561273405fa8 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x5612734060e8 <col:69>
|-FunctionDecl 0x5612734061f0 <line:120:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x561273406158 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x561273406298 <col:69>
|-FunctionDecl 0x561273406558 <line:121:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x561273406300 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x561273406438 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x561273406608 <col:88>
|-TypedefDecl 0x561273406698 <line:125:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x561273406660 '__clock_t' sugar
|   |-Typedef 0x561273400a58 '__clock_t'
|   `-BuiltinType 0x5612733990a0 'long'
|-TypedefDecl 0x561273406728 <line:128:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x5612734066f0 '__clockid_t' sugar
|   |-Typedef 0x561273400e48 '__clockid_t'
|   `-BuiltinType 0x561273399080 'int'
|-TypedefDecl 0x5612734067b8 <line:129:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x561273406780 '__timer_t' sugar
|   |-Typedef 0x561273400eb8 '__timer_t'
|   `-PointerType 0x5612733997a0 'void *'
|     `-BuiltinType 0x561273398fe0 'void'
|-RecordDecl 0x561273406810 <line:131:1, line:144:1> line:131:8 struct tm definition
| |-FieldDecl 0x5612734068e8 <line:133:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x561273406950 <line:134:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x5612734069b8 <line:135:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x561273406a20 <line:136:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x561273406a88 <line:137:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x561273406af0 <line:138:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x561273406b58 <line:139:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x561273406bc0 <line:140:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x561273406c28 <line:141:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x561273406c90 <line:142:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x561273406cf8 <line:143:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x561273406d48 <line:147:1, line:151:3> line:147:8 struct itimerspec definition
| |-FieldDecl 0x561273406e18 <line:149:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x561273406e88 <line:150:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x561273406f30 <line:152:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x561273407100 <line:154:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x5612734071a0 <col:45>
|-FunctionDecl 0x561273407380 <line:155:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x561273407270 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x561273407428 <col:54>
|-FunctionDecl 0x561273407628 <line:156:1, line:157:73> line:156:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x561273407490 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x561273407508 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x5612734076d8 <line:157:22>
| `-ConstAttr 0x561273407730 <col:63>
|-FunctionDecl 0x561273408560 <line:158:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x561273407828 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x561273408608 <col:56>
|-FunctionDecl 0x5612734089b0 <line:159:1, line:161:77> line:159:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x561273408678 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x5612734086f0 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x561273408770 <line:160:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x561273408868 <line:161:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x561273408a70 <col:54>
|-RecordDecl 0x561273408ac8 <line:163:9, line:170:1> line:163:16 struct __locale_struct definition
| |-RecordDecl 0x561273408b78 parent 0x561273398f88 <line:165:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x561273408dd8 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x561273408e78 <line:166:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x561273408ee0 <line:167:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x561273408f48 <line:168:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x561273409038 <line:169:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x561273409158 <line:163:1, line:170:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x561273409100 'struct __locale_struct *'
|   `-ElaboratedType 0x561273409090 'struct __locale_struct' sugar
|     `-RecordType 0x561273408b50 'struct __locale_struct'
|       `-Record 0x561273408ac8 '__locale_struct'
|-TypedefDecl 0x561273409208 <line:171:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x5612734091d0 '__locale_t' sugar
|   |-Typedef 0x561273409158 '__locale_t'
|   `-PointerType 0x561273409100 'struct __locale_struct *'
|     `-ElaboratedType 0x561273409090 'struct __locale_struct' sugar
|       `-RecordType 0x561273408b50 'struct __locale_struct'
|         `-Record 0x561273408ac8 '__locale_struct'
|-FunctionDecl 0x561273409610 <line:172:1, line:175:63> line:172:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x561273409278 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x5612734092f0 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x561273409370 <line:173:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x561273409400 <line:174:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x561273409478 <line:175:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x5612734096d8 <col:40>
|-FunctionDecl 0x5612734098c8 <line:177:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x5612734097a0 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x561273409970 <col:66>
|-FunctionDecl 0x561273409a80 <line:178:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x5612734099d8 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x561273409b28 <col:69>
|-FunctionDecl 0x561273409d58 <line:180:1, line:181:75> line:180:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x561273409b90 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x561273409c20 <line:181:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x561273409e08 <col:52>
|-FunctionDecl 0x561273409fb0 <line:182:1, line:183:78> line:182:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x561273409e70 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x561273409f00 <line:183:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x56127340a060 <col:55>
|-FunctionDecl 0x56127340a1f8 <line:185:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x56127340a0e0 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x56127340a2a0 <col:62>
|-FunctionDecl 0x56127340a418 <line:186:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x56127340a308 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x56127340a4c0 <col:60>
|-FunctionDecl 0x56127340a718 <line:188:1, line:189:67> line:188:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x56127340a578 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x56127340a5f8 <line:189:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x56127340a7c8 <col:44>
|-FunctionDecl 0x56127340a9d8 <line:190:1, line:191:72> line:190:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x56127340a830 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x56127340a8b0 <line:191:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x56127340aa88 <col:49>
|-VarDecl 0x56127340ab88 <line:192:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x56127340ac08 <line:193:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x56127340ac88 <line:194:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x56127340ad50 <line:195:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x56127340ae80 <line:196:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x56127340af20 <col:42>
|-VarDecl 0x56127340af90 <line:197:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x56127340b010 <line:198:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x56127340b198 <line:199:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x56127340b088 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x56127340b240 <col:57>
|-FunctionDecl 0x56127340b350 <line:200:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x56127340b2c0 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x56127340b3f8 <col:56>
|-FunctionDecl 0x56127340c540 <line:201:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x56127340b478 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x56127340c5e8 <col:59>
|-FunctionDecl 0x56127340c6f0 <line:202:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x56127340c658 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x56127340c798 <col:48>
| `-ConstAttr 0x56127340c7f0 <col:89>
|-FunctionDecl 0x56127340ca58 <line:203:1, line:204:37> line:203:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x56127340c8a8 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x56127340c938 <line:204:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x56127340ccb8 <line:205:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x56127340cb48 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x56127340cbd8 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x56127340cd68 <col:88>
|-FunctionDecl 0x56127340cf00 <line:206:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x56127340cdd0 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x56127340ce60 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x56127340cfb0 <col:88>
|-FunctionDecl 0x56127340d1c8 <line:207:1, line:208:45> line:207:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x56127340d018 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x56127340d0a8 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x56127340d278 <line:208:22>
|-FunctionDecl 0x56127340d5e8 <line:209:1, line:211:30> line:209:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x56127340d2e0 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x56127340d360 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x56127340d3f0 <line:210:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x56127340d480 <line:211:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x56127340d8e8 <line:212:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x56127340d6e8 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x56127340d7c0 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x56127340d998 <col:85>
|-FunctionDecl 0x56127340dd88 <line:213:1, line:215:75> line:213:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x56127340da00 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x56127340db38 <line:214:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x56127340dc40 <line:215:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x56127340de40 <col:52>
|-FunctionDecl 0x56127340dfb8 <line:216:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x56127340dea8 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x56127340e060 <col:61>
|-FunctionDecl 0x56127340e560 <line:217:1, line:219:85> line:217:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x56127340e0c8 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x56127340e148 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x56127340e278 <line:218:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x56127340e368 <line:219:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x56127340e620 <col:62>
|-FunctionDecl 0x56127340e838 <line:220:1, line:221:45> line:220:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x56127340e688 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x56127340e718 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x56127340e8e8 <line:221:22>
|-FunctionDecl 0x56127340e9e8 <line:222:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x56127340e950 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x56127340ea90 <col:65>
|-TypedefDecl 0x56127340eb00 <line:224:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x561273399140 'unsigned long'
|-RecordDecl 0x56127340eb58 <line:225:1, line:229:1> line:225:7 union pthread_attr_t definition
| |-FieldDecl 0x56127340eca0 <line:227:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x56127340ed08 <line:228:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x56127340edb8 <line:230:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x56127340ed60 'union pthread_attr_t' sugar
|   `-RecordType 0x56127340ebe0 'union pthread_attr_t'
|     `-Record 0x56127340eb58 'pthread_attr_t'
|-RecordDecl 0x56127340ee10 <line:231:9, line:235:1> line:231:16 struct __pthread_internal_list definition
| |-FieldDecl 0x56127340ef88 <line:233:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x56127340f000 <line:234:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x56127340f0b0 <line:231:1, line:235:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x56127340f050 'struct __pthread_internal_list' sugar
|   `-RecordType 0x56127340ee90 'struct __pthread_internal_list'
|     `-Record 0x56127340ee10 '__pthread_internal_list'
|-RecordDecl 0x56127340f120 <line:236:9, line:250:1> line:236:9 union definition
| |-RecordDecl 0x56127340f1c8 parent 0x561273398f88 <line:238:3, line:247:3> line:238:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x56127340f2a0 <line:240:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x56127340f308 <line:241:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x56127340f370 <line:242:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x56127340f3d8 <line:243:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x56127340f440 <line:244:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x56127340f4a8 <line:245:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x561273413580 <line:246:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x561273413630 <line:238:3, line:247:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x561273413720 <line:248:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x561273413788 <line:249:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x561273413910 <line:236:1, line:250:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x5612734138b0 'union pthread_mutex_t' sugar
|   `-RecordType 0x56127340f1a0 'pthread_mutex_t'
|     `-Record 0x56127340f120 ''
|-RecordDecl 0x561273413980 <line:251:9, line:255:1> line:251:9 union definition
| |-FieldDecl 0x561273413ac0 <line:253:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x561273413b28 <line:254:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x561273413be0 <line:251:1, line:255:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x561273413b80 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x561273413a00 'pthread_mutexattr_t'
|     `-Record 0x561273413980 ''
|-RecordDecl 0x561273413c50 <line:256:9, line:271:1> line:256:9 union definition
| |-RecordDecl 0x561273413cf8 <line:258:3, line:268:3> line:258:3 struct definition
| | |-FieldDecl 0x561273413dc0 <line:260:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x561273413e28 <line:261:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x561273413e90 <line:262:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x561273413ef8 <line:263:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x561273413f60 <line:264:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x561273413fc8 <line:265:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x561273414030 <line:266:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x561273414098 <line:267:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x561273414150 <line:258:3, line:268:5> col:5 __data 'struct (anonymous struct at pthread-wmm/mix039_rmo.oepc_false-unreach-call.i:258:3)':'struct pthread_cond_t::(anonymous at pthread-wmm/mix039_rmo.oepc_false-unreach-call.i:258:3)'
| |-FieldDecl 0x561273414240 <line:269:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x5612734142a8 <line:270:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x5612734143e0 <line:256:1, line:271:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x561273414380 'union pthread_cond_t' sugar
|   `-RecordType 0x561273413cd0 'pthread_cond_t'
|     `-Record 0x561273413c50 ''
|-RecordDecl 0x561273414450 <line:272:9, line:276:1> line:272:9 union definition
| |-FieldDecl 0x561273414590 <line:274:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x5612734145f8 <line:275:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x5612734146b0 <line:272:1, line:276:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x561273414650 'union pthread_condattr_t' sugar
|   `-RecordType 0x5612734144d0 'pthread_condattr_t'
|     `-Record 0x561273414450 ''
|-TypedefDecl 0x561273414738 <line:277:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x561273399120 'unsigned int'
|-TypedefDecl 0x5612734147a8 <line:278:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x561273399080 'int'
|-RecordDecl 0x561273414800 <line:279:9, line:297:1> line:279:9 union definition
| |-RecordDecl 0x5612734148a8 <line:281:3, line:294:3> line:281:3 struct definition
| | |-FieldDecl 0x561273414970 <line:283:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x5612734149d8 <line:284:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x561273414a40 <line:285:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x561273414aa8 <line:286:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x561273414b10 <line:287:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x561273414b78 <line:288:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x561273414be0 <line:289:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x561273414c48 <line:290:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x561273414cb0 <line:291:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x561273414d18 <line:292:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x561273414d80 <line:293:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x561273414e30 <line:281:3, line:294:5> col:5 __data 'struct (anonymous struct at pthread-wmm/mix039_rmo.oepc_false-unreach-call.i:281:3)':'struct pthread_rwlock_t::(anonymous at pthread-wmm/mix039_rmo.oepc_false-unreach-call.i:281:3)'
| |-FieldDecl 0x561273414ed8 <line:295:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x561273414f40 <line:296:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x561273415090 <line:279:1, line:297:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x561273415030 'union pthread_rwlock_t' sugar
|   `-RecordType 0x561273414880 'pthread_rwlock_t'
|     `-Record 0x561273414800 ''
|-RecordDecl 0x561273415100 <line:298:9, line:302:1> line:298:9 union definition
| |-FieldDecl 0x561273415240 <line:300:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x5612734152a8 <line:301:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x561273415360 <line:298:1, line:302:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x561273415300 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x561273415180 'pthread_rwlockattr_t'
|     `-Record 0x561273415100 ''
|-TypedefDecl 0x5612734153e8 <line:303:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x561273399084 'volatile int' volatile
|   `-BuiltinType 0x561273399080 'int'
|-RecordDecl 0x561273415440 <line:304:9, line:308:1> line:304:9 union definition
| |-FieldDecl 0x5612734175b0 <line:306:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x561273417618 <line:307:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5612734176d0 <line:304:1, line:308:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x561273417670 'union pthread_barrier_t' sugar
|   `-RecordType 0x5612734154c0 'pthread_barrier_t'
|     `-Record 0x561273415440 ''
|-RecordDecl 0x561273417740 <line:309:9, line:313:1> line:309:9 union definition
| |-FieldDecl 0x561273417840 <line:311:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x5612734178a8 <line:312:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x561273417960 <line:309:1, line:313:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x561273417900 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x5612734177c0 'pthread_barrierattr_t'
|     `-Record 0x561273417740 ''
|-TypedefDecl 0x561273417a78 <line:314:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x561273417a10 'long [8]' 8 
|   `-BuiltinType 0x5612733990a0 'long'
|-EnumDecl 0x561273417ad0 <line:315:1, line:319:1> line:315:1
| |-EnumConstantDecl 0x561273417b98 <line:317:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x561273417be8 <line:318:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x561273417c38 <line:320:1, line:331:1> line:320:1
| |-EnumConstantDecl 0x561273417d08 <line:322:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x561273417d58 <line:323:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x561273417da8 <line:324:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x561273417df8 <line:325:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x561273417e80 <line:327:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x561273417e68 <col:26> 'int'
| |   `-DeclRefExpr 0x561273417e48 <col:26> 'int' EnumConstant 0x561273417d08 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x561273417f08 <line:328:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x561273417ef0 <col:29> 'int'
| |   `-DeclRefExpr 0x561273417ed0 <col:29> 'int' EnumConstant 0x561273417d58 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x561273417f90 <line:329:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x561273417f78 <col:30> 'int'
| |   `-DeclRefExpr 0x561273417f58 <col:30> 'int' EnumConstant 0x561273417da8 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x561273418018 <line:330:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x561273418000 <col:27> 'int'
|     `-DeclRefExpr 0x561273417fe0 <col:27> 'int' EnumConstant 0x561273417e80 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x561273418068 <line:332:1, line:338:1> line:332:1
| |-EnumConstantDecl 0x561273418138 <line:334:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x5612734181c0 <line:335:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x5612734181a8 <col:30> 'int'
| |   `-DeclRefExpr 0x561273418188 <col:30> 'int' EnumConstant 0x561273418138 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x561273418210 <line:336:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x561273418298 <line:337:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x561273418280 <col:29> 'int'
|     `-DeclRefExpr 0x561273418260 <col:29> 'int' EnumConstant 0x561273418210 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x5612734182e8 <line:339:1, line:344:1> line:339:1
| |-EnumConstantDecl 0x5612734183b8 <line:341:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x561273418408 <line:342:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x561273418458 <line:343:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x5612734184a8 <line:345:1, line:351:1> line:345:1
| |-EnumConstantDecl 0x5612734185c0 <line:347:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x561273418610 <line:348:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x561273418660 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x5612734186e8 <line:350:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x5612734186d0 <col:31> 'int'
|     `-DeclRefExpr 0x5612734186b0 <col:31> 'int' EnumConstant 0x5612734185c0 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x561273418738 <line:352:1, line:356:1> line:352:1
| |-EnumConstantDecl 0x561273418808 <line:354:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x561273418858 <line:355:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x5612734188a8 <line:357:1, line:361:1> line:357:1
| |-EnumConstantDecl 0x561273418978 <line:359:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x5612734189c8 <line:360:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x561273418a18 <line:362:1, line:366:1> line:362:1
| |-EnumConstantDecl 0x561273418ae8 <line:364:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x561273418b38 <line:365:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x561273418b88 <line:367:1, line:373:1> line:367:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x561273418dc8 <line:369:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x561273418e30 <line:370:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x561273418e98 <line:371:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x561273418fb8 <line:372:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x561273419008 <line:374:1, line:378:1> line:374:1
| |-EnumConstantDecl 0x5612734190d8 <line:376:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x561273419128 <line:377:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x561273419178 <line:379:1, line:383:1> line:379:1
| |-EnumConstantDecl 0x561273419248 <line:381:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x561273419298 <line:382:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x5612734198f8 <line:385:1, line:388:96> line:385:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x561273419390 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x5612734194a0 <line:386:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5612734196e0 <line:387:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x561273419760 <line:388:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x5612734199b8 <col:47>
| |-NonNullAttr 0x561273419a10 <col:77, col:94> 1 3
| `-CallbackAttr 0x561273419a48 <line:385:12> Implicit 2 3
|-FunctionDecl 0x561273419b70 <line:389:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x561273419aa0 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x561273419dc8 <line:390:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x561273419c28 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x561273419ca8 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x561273419f98 <line:391:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x561273419e88 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x56127341a040 <col:60>
|-FunctionDecl 0x56127341a190 <line:392:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x56127341a230 <col:54>
| `-ConstAttr 0x56127341a288 <col:95>
|-FunctionDecl 0x56127341a458 <line:393:1, line:394:70> line:393:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x56127341a2c0 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x56127341a338 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x56127341a508 <line:394:19>
| `-ConstAttr 0x56127341a560 <col:60>
|-FunctionDecl 0x56127341af68 <line:395:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x56127341ae30 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x56127341b010 <col:71>
| `-NonNullAttr 0x56127341b068 <col:112, col:126> 1
|-FunctionDecl 0x56127341b170 <line:396:1, line:397:79> line:396:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x56127341b0b8 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x56127341b218 <line:397:22>
| `-NonNullAttr 0x56127341b270 <col:63, col:77> 1
|-FunctionDecl 0x56127341b498 <line:398:1, line:400:82> line:398:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x56127341b2b8 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x56127341b338 <line:399:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x56127341b548 <line:400:22>
| `-NonNullAttr 0x56127341b5a0 <col:63, col:80> 1 2
|-FunctionDecl 0x56127341b7a8 <line:401:1, line:403:79> line:401:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x56127341b5e8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x56127341b668 <line:402:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x56127341b858 <line:403:22>
| `-NonNullAttr 0x56127341b8b0 <col:63, col:77> 1
|-FunctionDecl 0x56127341bb08 <line:404:1, line:406:82> line:404:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x56127341b8f8 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x56127341b9a0 <line:405:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x56127341bbb8 <line:406:22>
| `-NonNullAttr 0x56127341bc10 <col:63, col:80> 1 2
|-FunctionDecl 0x56127341ce48 <line:407:1, line:409:79> line:407:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x56127341bc58 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x56127341bcd0 <line:408:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x56127341cef8 <line:409:22>
| `-NonNullAttr 0x56127341cf50 <col:63, col:77> 1
|-FunctionDecl 0x56127341d188 <line:410:1, line:412:82> line:410:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x56127341cf98 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x56127341d028 <line:411:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x56127341d238 <line:412:22>
| `-NonNullAttr 0x56127341d290 <col:63, col:80> 1 2
|-FunctionDecl 0x56127341d4c8 <line:413:1, line:415:97> line:413:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x56127341d2d8 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x56127341d368 <line:414:12, line:415:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x56127341d578 <col:37>
| `-NonNullAttr 0x56127341d5d0 <col:78, col:95> 1 2
|-FunctionDecl 0x56127341d7b8 <line:416:1, line:418:82> line:416:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56127341d618 <col:41, line:417:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x56127341d698 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x56127341d868 <line:418:22>
| `-NonNullAttr 0x56127341d8c0 <col:63, col:80> 1 2
|-FunctionDecl 0x56127341da48 <line:419:1, line:420:79> line:419:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x56127341d908 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x56127341d988 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x56127341daf8 <line:420:22>
| `-NonNullAttr 0x56127341db50 <col:63, col:77> 1
|-FunctionDecl 0x56127341dcf8 <line:421:1, line:423:82> line:421:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56127341db98 <col:42, line:422:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x56127341dc18 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x56127341dda8 <line:423:22>
| `-NonNullAttr 0x56127341ee30 <col:63, col:80> 1 2
|-FunctionDecl 0x56127341efb8 <line:424:1, line:426:79> line:424:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x56127341ee78 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x56127341eef8 <line:425:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x56127341f068 <line:426:22>
| `-NonNullAttr 0x56127341f0c0 <col:63, col:77> 1
|-FunctionDecl 0x56127341f268 <line:427:1, line:429:82> line:427:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56127341f108 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x56127341f188 <line:428:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x56127341f318 <line:429:22>
| `-NonNullAttr 0x56127341f370 <col:63, col:80> 1 2
|-FunctionDecl 0x56127341f4f8 <line:430:1, line:431:79> line:430:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x56127341f3b8 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x56127341f438 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x56127341f5a8 <line:431:22>
| `-NonNullAttr 0x56127341f600 <col:63, col:77> 1
|-FunctionDecl 0x56127341f828 <line:432:1, line:434:115> line:432:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x56127341f648 <col:39, line:433:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x56127341f6c8 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x56127341f8d8 <line:434:22>
| |-NonNullAttr 0x56127341f930 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x56127341f968 <col:100> "" ""
|-FunctionDecl 0x56127341fb78 <line:435:1, line:437:112> line:435:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x56127341f9b8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x56127341fa38 <line:436:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x56127341fc28 <line:437:22>
| |-NonNullAttr 0x56127341fc80 <col:63, col:77> 1
| `-DeprecatedAttr 0x56127341fcb8 <col:97> "" ""
|-FunctionDecl 0x56127341feb8 <line:438:1, line:440:82> line:438:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x56127341fd08 <col:39, line:439:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x56127341fd80 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x56127341ff68 <line:440:22>
| `-NonNullAttr 0x56127341ffc0 <col:63, col:80> 1 2
|-FunctionDecl 0x561273420140 <line:441:1, line:443:79> line:441:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x561273420008 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x561273420080 <line:442:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x5612734201f0 <line:443:22>
| `-NonNullAttr 0x561273420248 <col:63, col:77> 1
|-FunctionDecl 0x561273420538 <line:444:1, line:447:85> line:444:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x561273420298 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x561273420318 <line:445:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x561273420390 <line:446:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x5612734205f0 <line:447:22>
| `-NonNullAttr 0x561273420648 <col:63, col:83> 1 2 3
|-FunctionDecl 0x5612734208f8 <line:448:1, line:449:100> line:448:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x5612734206a0 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x561273420720 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x561273420798 <line:449:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x5612734209b0 <col:43>
| `-NonNullAttr 0x561273420a08 <col:84, col:98> 1
|-FunctionDecl 0x561273420cc8 <line:450:1, line:452:79> line:450:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x561273420a58 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x561273420ad8 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x561273420b68 <line:451:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x561273420d80 <line:452:22>
| `-NonNullAttr 0x561273420dd8 <col:63, col:77> 3
|-FunctionDecl 0x5612734210e8 <line:453:1, line:456:82> line:453:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x561273420e50 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x561273420ed0 <line:454:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x561273420f60 <line:455:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x5612734211a0 <line:456:22>
| `-NonNullAttr 0x5612734211f8 <col:63, col:80> 2 3
|-FunctionDecl 0x5612734213e8 <line:457:1, line:458:45> line:457:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x561273421248 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5612734212c8 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x561273421498 <line:458:22>
|-FunctionDecl 0x561273421868 <line:459:1, line:460:71> line:459:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x561273421560 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x561273421700 <line:460:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x561273421918 <col:52, col:69> 1 2
|-FunctionDecl 0x561273421ac0 <line:461:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x5612734219a0 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x561273421a20 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x561273421ca8 <line:462:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x561273421b88 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x561273421c08 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x561273421e60 <line:463:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x561273421d68 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x561273421fa0 <line:464:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x561273422040 <line:465:9, line:473:1> line:465:9 struct definition
| |-RecordDecl 0x5612734220e8 <line:467:3, line:471:3> line:467:3 struct definition
| | |-FieldDecl 0x5612734221d8 <line:469:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x561273422240 <line:470:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x561273422410 <line:467:3, line:471:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at pthread-wmm/mix039_rmo.oepc_false-unreach-call.i:467:3) [1]'
| `-FieldDecl 0x561273422508 <line:472:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x5612734225c0 <line:465:1, line:473:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x561273422560 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x5612734220c0 '__pthread_unwind_buf_t'
| |   `-Record 0x561273422040 ''
| `-AlignedAttr 0x561273422618 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x561273422690 <line:474:1, line:480:1> line:474:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x5612734227f0 <line:476:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x561273422858 <line:477:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x5612734228c0 <line:478:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x561273422928 <line:479:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x561273422b30 <line:481:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x561273422a20 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x561273422c78 <line:483:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x561273422be8 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x561273422e70 <line:485:1, line:487:31> line:485:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x561273422d30 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x561273422f18 <line:487:22>
|-RecordDecl 0x561273422f70 <line:489:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x561273423288 <line:490:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x5612734230e8 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x561273423168 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x561273423338 <col:86>
| `-ReturnsTwiceAttr 0x561273423390 <col:12> Implicit
|-FunctionDecl 0x5612734236b8 <line:491:1, line:493:79> line:491:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x561273423460 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x561273423570 <line:492:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x561273423768 <line:493:22>
| `-NonNullAttr 0x5612734237c0 <col:63, col:77> 1
|-FunctionDecl 0x561273423938 <line:494:1, line:495:79> line:494:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x561273423808 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5612734239e0 <line:495:22>
| `-NonNullAttr 0x561273423a38 <col:63, col:77> 1
|-FunctionDecl 0x561273423b40 <line:496:1, line:497:68> line:496:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x561273423a88 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x561273423be8 <line:497:22>
| `-NonNullAttr 0x561273423c40 <col:52, col:66> 1
|-FunctionDecl 0x561273423d40 <line:498:1, line:499:68> line:498:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x561273423c88 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x561273423de8 <line:499:22>
| `-NonNullAttr 0x561273423e40 <col:52, col:66> 1
|-FunctionDecl 0x561273424088 <line:500:1, line:502:85> line:500:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x561273423e98 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x561273423f28 <line:501:9, line:502:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x561273424138 <col:36>
| `-NonNullAttr 0x561273424190 <col:66, col:83> 1 2
|-FunctionDecl 0x561273424290 <line:503:1, line:504:68> line:503:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5612734241d8 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x561273424338 <line:504:22>
| `-NonNullAttr 0x561273424390 <col:52, col:66> 1
|-FunctionDecl 0x561273424628 <line:505:1, line:508:82> line:505:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x561273424440 <col:42, line:506:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x5612734244c0 <line:507:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x5612734246d8 <line:508:22>
| `-NonNullAttr 0x561273424730 <col:63, col:80> 1 2
|-FunctionDecl 0x5612734249f8 <line:509:1, line:512:82> line:509:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x561273424778 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x5612734247f8 <line:510:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x561273424878 <line:511:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x561273424ab0 <line:512:22>
| `-NonNullAttr 0x561273424b08 <col:63, col:80> 1 3
|-FunctionDecl 0x561273424c10 <line:513:1, line:514:79> line:513:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x561273424b58 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x561273424cb8 <line:514:22>
| `-NonNullAttr 0x561273424d10 <col:63, col:77> 1
|-FunctionDecl 0x561273424f38 <line:515:1, line:516:79> line:515:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x561273424dc0 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x561273424fe0 <line:516:22>
| `-NonNullAttr 0x561273425038 <col:63, col:77> 1
|-FunctionDecl 0x561273425140 <line:517:1, line:518:79> line:517:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x561273425088 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x5612734251e8 <line:518:22>
| `-NonNullAttr 0x561273425240 <col:63, col:77> 1
|-FunctionDecl 0x561273425468 <line:519:1, line:522:82> line:519:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x561273425288 <col:42, line:520:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x561273425308 <line:521:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x561273425518 <line:522:22>
| `-NonNullAttr 0x561273425570 <col:63, col:80> 1 2
|-FunctionDecl 0x561273425778 <line:523:1, line:525:79> line:523:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5612734255b8 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x561273425638 <line:524:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x561273425828 <line:525:22>
| `-NonNullAttr 0x561273425880 <col:63, col:77> 1
|-FunctionDecl 0x561273425a28 <line:526:1, line:528:82> line:526:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5612734258c8 <col:39, line:527:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x561273425948 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x561273425ad8 <line:528:22>
| `-NonNullAttr 0x561273425b30 <col:63, col:80> 1 2
|-FunctionDecl 0x561273425cb8 <line:529:1, line:530:79> line:529:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x561273425b78 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x561273425bf8 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x561273425d68 <line:530:22>
| `-NonNullAttr 0x561273425dc0 <col:63, col:77> 1
|-FunctionDecl 0x561273426f90 <line:531:1, line:534:82> line:531:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x561273425e08 <col:43, line:532:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x561273426eb0 <line:533:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x561273427040 <line:534:22>
| `-NonNullAttr 0x561273427098 <col:63, col:80> 1 2
|-FunctionDecl 0x561273427228 <line:535:1, line:537:79> line:535:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5612734270e8 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x561273427168 <line:536:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x5612734272d8 <line:537:22>
| `-NonNullAttr 0x561273427330 <col:63, col:77> 1
|-FunctionDecl 0x5612734274d8 <line:538:1, line:541:82> line:538:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x561273427378 <col:46, line:539:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x5612734273f8 <line:540:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x561273427588 <line:541:22>
| `-NonNullAttr 0x5612734275e0 <col:63, col:80> 1 2
|-FunctionDecl 0x561273427768 <line:542:1, line:544:79> line:542:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x561273427628 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5612734276a8 <line:543:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x561273427818 <line:544:22>
| `-NonNullAttr 0x561273427870 <col:63, col:77> 1
|-FunctionDecl 0x561273427a58 <line:545:1, line:547:82> line:545:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x5612734278b8 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x561273427938 <line:546:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x561273427b08 <line:547:22>
| `-NonNullAttr 0x561273427b60 <col:63, col:80> 1 2
|-FunctionDecl 0x561273427ce8 <line:548:1, line:550:79> line:548:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x561273427ba8 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x561273427c28 <line:549:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x561273427d98 <line:550:22>
| `-NonNullAttr 0x561273427df0 <col:63, col:77> 1
|-FunctionDecl 0x561273429168 <line:551:1, line:553:86> line:551:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x561273428f10 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x561273429020 <line:552:5, line:553:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x561273429218 <col:29>
| `-NonNullAttr 0x561273429270 <col:70, col:84> 1
|-FunctionDecl 0x5612734293e8 <line:554:1, line:555:79> line:554:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5612734292b8 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x561273429490 <line:555:22>
| `-NonNullAttr 0x5612734294e8 <col:63, col:77> 1
|-FunctionDecl 0x5612734295f0 <line:556:1, line:557:68> line:556:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x561273429538 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x561273429698 <line:557:22>
| `-NonNullAttr 0x5612734296f0 <col:52, col:66> 1
|-FunctionDecl 0x5612734297f0 <line:558:1, line:559:65> line:558:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x561273429738 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x561273429898 <line:559:19>
| `-NonNullAttr 0x5612734298f0 <col:49, col:63> 1
|-FunctionDecl 0x561273429b28 <line:560:1, line:562:88> line:560:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x561273429938 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x5612734299c8 <line:561:12, line:562:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x561273429bd8 <col:39>
| `-NonNullAttr 0x561273429c30 <col:69, col:86> 1 2
|-FunctionDecl 0x561273429d30 <line:563:1, line:564:68> line:563:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x561273429c78 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x561273429dd8 <line:564:22>
| `-NonNullAttr 0x561273429e30 <col:52, col:66> 1
|-FunctionDecl 0x561273429f98 <line:565:1, line:566:68> line:565:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x561273429ee0 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x56127342a040 <line:566:22>
| `-NonNullAttr 0x56127342a098 <col:52, col:66> 1
|-FunctionDecl 0x56127342a258 <line:567:1, line:569:88> line:567:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x56127342a0e8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x56127342a178 <line:568:12, line:569:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x56127342a308 <col:39>
| `-NonNullAttr 0x56127342a360 <col:69, col:86> 1 2
|-FunctionDecl 0x56127342a460 <line:570:1, line:571:68> line:570:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x56127342a3a8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x56127342a508 <line:571:22>
| `-NonNullAttr 0x56127342a560 <col:52, col:66> 1
|-FunctionDecl 0x56127342a748 <line:572:1, line:573:79> line:572:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x56127342a610 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x56127342a7f0 <line:573:22>
| `-NonNullAttr 0x56127342a848 <col:63, col:77> 1
|-FunctionDecl 0x56127342a950 <line:574:1, line:575:79> line:574:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x56127342a898 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x56127342a9f8 <line:575:22>
| `-NonNullAttr 0x56127342aa50 <col:63, col:77> 1
|-FunctionDecl 0x56127342ac78 <line:576:1, line:579:82> line:576:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56127342aa98 <col:43, line:577:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x56127342ab18 <line:578:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x56127342ad28 <line:579:22>
| `-NonNullAttr 0x56127342ad80 <col:63, col:80> 1 2
|-FunctionDecl 0x56127342afa8 <line:580:1, line:582:79> line:580:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x56127342adc8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x56127342ae48 <line:581:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x56127342b058 <line:582:22>
| `-NonNullAttr 0x56127342b0b0 <col:63, col:77> 1
|-FunctionDecl 0x56127342b258 <line:583:1, line:586:82> line:583:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56127342b0f8 <col:43, line:584:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x56127342b178 <line:585:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x56127342b308 <line:586:22>
| `-NonNullAttr 0x56127342b360 <col:63, col:80> 1 2
|-FunctionDecl 0x56127342b4e8 <line:587:1, line:588:93> line:587:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x56127342b3a8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x56127342b428 <line:588:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x56127342b598 <col:36>
| `-NonNullAttr 0x56127342b5f0 <col:77, col:91> 1
|-FunctionDecl 0x56127342b928 <line:589:1, line:591:79> line:589:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x56127342b6d0 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x56127342b7e0 <line:590:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x56127342b9d8 <line:591:22>
| `-NonNullAttr 0x56127342ba30 <col:63, col:77> 1
|-FunctionDecl 0x56127342bba8 <line:592:1, line:593:79> line:592:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x56127342ba78 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x56127342bc50 <line:593:22>
| `-NonNullAttr 0x56127342bca8 <col:63, col:77> 1
|-FunctionDecl 0x56127342bdb0 <line:594:1, line:595:68> line:594:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x56127342bcf8 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x56127342be58 <line:595:22>
| `-NonNullAttr 0x56127342beb0 <col:52, col:66> 1
|-FunctionDecl 0x56127342bfc8 <line:596:1, line:597:68> line:596:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x56127342bf10 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x56127342c070 <line:597:22>
| `-NonNullAttr 0x56127342c0c8 <col:52, col:66> 1
|-FunctionDecl 0x56127342c2f8 <line:598:1, line:600:41> line:598:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x56127342c118 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x56127342c190 <line:599:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x56127342c3a8 <line:600:22, col:39> 1 2
|-FunctionDecl 0x56127342c6d8 <line:601:1, line:604:44> line:601:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x56127342c428 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x56127342c4a0 <line:602:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x56127342c530 <line:603:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x56127342c790 <line:604:22, col:42> 1 2 3
|-FunctionDecl 0x56127342c9a8 <line:605:1, line:606:79> line:605:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x56127342c870 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x56127342ca50 <line:606:22>
| `-NonNullAttr 0x56127342caa8 <col:63, col:77> 1
|-FunctionDecl 0x56127342cbb0 <line:607:1, line:608:79> line:607:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x56127342caf8 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x56127342cc58 <line:608:22>
| `-NonNullAttr 0x56127342ccb0 <col:63, col:77> 1
|-FunctionDecl 0x56127342cf10 <line:609:1, line:612:82> line:609:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56127342ccf8 <col:41, line:610:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x56127342cd78 <line:611:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x56127342cfc0 <line:612:22>
| `-NonNullAttr 0x56127342d018 <col:63, col:80> 1 2
|-FunctionDecl 0x56127342d228 <line:613:1, line:614:94> line:613:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x56127342d068 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x56127342d0e8 <line:614:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x56127342d2d8 <col:37>
| `-NonNullAttr 0x56127342d330 <col:78, col:92> 1
|-FunctionDecl 0x56127342d548 <line:615:1, line:618:82> line:615:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x56127342d378 <col:39, line:616:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x56127342d420 <line:617:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x56127342d5f8 <line:618:22>
| `-NonNullAttr 0x56127342d650 <col:63, col:80> 1 2
|-FunctionDecl 0x56127342d818 <line:619:1, line:621:79> line:619:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x56127342d698 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x56127342d710 <line:620:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x56127342d8c8 <line:621:22>
| `-NonNullAttr 0x56127342d920 <col:63, col:77> 1
|-FunctionDecl 0x56127342dbc8 <line:622:1, line:623:79> line:622:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x56127342da00 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x56127342da80 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x56127342dc78 <line:623:22>
| `-NonNullAttr 0x56127342dcd0 <col:63, col:77> 1
|-FunctionDecl 0x56127342de48 <line:624:1, line:625:79> line:624:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x56127342dd18 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x56127342df20 <line:625:22>
| `-NonNullAttr 0x56127342df78 <col:63, col:77> 1
|-FunctionDecl 0x56127342e080 <line:626:1, line:627:68> line:626:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x56127342dfc8 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x56127342e128 <line:627:22>
| `-NonNullAttr 0x56127342e180 <col:52, col:66> 1
|-FunctionDecl 0x56127342e280 <line:628:1, line:629:68> line:628:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x56127342e1c8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x56127342e328 <line:629:22>
| `-NonNullAttr 0x56127342e380 <col:52, col:66> 1
|-FunctionDecl 0x56127342e480 <line:630:1, line:631:68> line:630:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x56127342e3c8 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x56127342e528 <line:631:22>
| `-NonNullAttr 0x56127342e580 <col:52, col:66> 1
|-FunctionDecl 0x56127342e958 <line:632:1, line:635:79> line:632:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x56127342e660 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x56127342e770 <line:633:6, line:634:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x56127342e7f0 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x56127342ea10 <line:635:22>
| `-NonNullAttr 0x56127342ea68 <col:63, col:77> 1
|-FunctionDecl 0x56127342ebe8 <line:636:1, line:637:79> line:636:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x56127342eab8 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x56127342ec90 <line:637:22>
| `-NonNullAttr 0x56127342ece8 <col:63, col:77> 1
|-FunctionDecl 0x56127342edf0 <line:638:1, line:639:68> line:638:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x56127342ed38 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x56127342ee98 <line:639:22>
| `-NonNullAttr 0x56127342eef0 <col:52, col:66> 1
|-FunctionDecl 0x56127342f0e8 <line:640:1, line:641:79> line:640:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x56127342efb0 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x56127342f190 <line:641:22>
| `-NonNullAttr 0x56127342f1e8 <col:63, col:77> 1
|-FunctionDecl 0x56127342f2f0 <line:642:1, line:643:79> line:642:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x56127342f238 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x56127342f398 <line:643:22>
| `-NonNullAttr 0x56127342f3f0 <col:63, col:77> 1
|-FunctionDecl 0x56127342f618 <line:644:1, line:647:82> line:644:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56127342f438 <col:44, line:645:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x56127342f4b8 <line:646:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x56127342f6c8 <line:647:22>
| `-NonNullAttr 0x56127342f720 <col:63, col:80> 1 2
|-FunctionDecl 0x56127342f928 <line:648:1, line:650:79> line:648:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x56127342f768 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x56127342f7e8 <line:649:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x56127342f9d8 <line:650:22>
| `-NonNullAttr 0x56127342fa30 <col:63, col:77> 1
|-FunctionDecl 0x56127342fd78 <line:651:1, line:653:79> line:651:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x56127342fb10 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x56127342fc30 <line:652:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x56127342fe28 <line:653:22>
| `-NonNullAttr 0x56127342fe80 <col:63, col:77> 1
|-FunctionDecl 0x56127342ffe8 <line:654:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x56127342fec8 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x561273430090 <col:69>
|-FunctionDecl 0x561273430208 <line:655:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x5612734300f8 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x5612734302b0 <col:72>
|-FunctionDecl 0x5612734304e8 <line:656:1, line:657:67> line:656:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x561273430318 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x5612734303c8 <line:657:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x561273430598 <col:44>
|-FunctionDecl 0x5612734307b8 <line:658:1, line:660:79> line:658:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x561273430600 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x561273430678 <line:659:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x561273430868 <line:660:22>
| `-NonNullAttr 0x5612734308c0 <col:63, col:77> 2
|-FunctionDecl 0x561273430d08 <line:661:1, line:663:70> line:661:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x5612734309a0 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x561273430ab0 <line:662:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x561273430bc0 <line:663:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x561273430dc0 <col:47>
|-FunctionDecl 0x561273431f60 <line:665:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x561273430e30 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x5612734320b8 <line:666:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x561273432020 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x561273432210 <line:667:1, col:20> col:8 used P2 'void *(void *)'
| `-ParmVarDecl 0x561273432178 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x561273432368 <line:668:1, col:20> col:8 used P3 'void *(void *)'
| `-ParmVarDecl 0x5612734322d0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x561273432430 <line:669:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x5612734324f0 <line:670:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x5612734325b0 <line:671:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x561273432668 <line:672:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x5612734326e8 prev 0x561273432668 <line:673:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x561273432750 <col:24> 'int' 0
|-VarDecl 0x561273432788 <line:674:1, col:5> col:5 used __unbuffered_p0_EAX 'int'
|-VarDecl 0x561273432808 prev 0x561273432788 <line:675:1, col:27> col:5 used __unbuffered_p0_EAX 'int' cinit
| `-IntegerLiteral 0x561273432870 <col:27> 'int' 0
|-VarDecl 0x5612734328a8 <line:676:1, col:5> col:5 used __unbuffered_p2_EAX 'int'
|-VarDecl 0x561273432928 prev 0x5612734328a8 <line:677:1, col:27> col:5 used __unbuffered_p2_EAX 'int' cinit
| `-IntegerLiteral 0x561273432990 <col:27> 'int' 0
|-VarDecl 0x5612734329c8 <line:678:1, col:5> col:5 used __unbuffered_p3_EAX 'int'
|-VarDecl 0x561273432a48 prev 0x5612734329c8 <line:679:1, col:27> col:5 used __unbuffered_p3_EAX 'int' cinit
| `-IntegerLiteral 0x561273432ab0 <col:27> 'int' 0
|-VarDecl 0x561273432ae8 <line:680:1, col:5> col:5 used __unbuffered_p3_EBX 'int'
|-VarDecl 0x561273432b68 prev 0x561273432ae8 <line:681:1, col:27> col:5 used __unbuffered_p3_EBX 'int' cinit
| `-IntegerLiteral 0x561273432bd0 <col:27> 'int' 0
|-VarDecl 0x561273432c08 <line:682:1, col:5> col:5 used a 'int'
|-VarDecl 0x561273432c88 prev 0x561273432c08 <line:683:1, col:9> col:5 used a 'int' cinit
| `-IntegerLiteral 0x561273432cf0 <col:9> 'int' 0
|-VarDecl 0x561273432d28 <line:684:1, col:5> col:5 used b 'int'
|-VarDecl 0x561273432da8 prev 0x561273432d28 <line:685:1, col:9> col:5 used b 'int' cinit
| `-IntegerLiteral 0x561273432e10 <col:9> 'int' 0
|-VarDecl 0x561273432e40 <line:686:1, col:7> col:7 used b$flush_delayed '_Bool'
|-VarDecl 0x561273432ec0 <line:687:1, col:5> col:5 used b$mem_tmp 'int'
|-VarDecl 0x561273432f70 <line:688:1, col:7> col:7 used b$r_buff0_thd0 '_Bool'
|-VarDecl 0x561273432fe8 <line:689:1, col:7> col:7 used b$r_buff0_thd1 '_Bool'
|-VarDecl 0x561273433060 <line:690:1, col:7> col:7 used b$r_buff0_thd2 '_Bool'
|-VarDecl 0x5612734330d8 <line:691:1, col:7> col:7 used b$r_buff0_thd3 '_Bool'
|-VarDecl 0x561273433150 <line:692:1, col:7> col:7 used b$r_buff0_thd4 '_Bool'
|-VarDecl 0x5612734331c8 <line:693:1, col:7> col:7 used b$r_buff1_thd0 '_Bool'
|-VarDecl 0x561273433240 <line:694:1, col:7> col:7 used b$r_buff1_thd1 '_Bool'
|-VarDecl 0x5612734332b8 <line:695:1, col:7> col:7 used b$r_buff1_thd2 '_Bool'
|-VarDecl 0x561273433330 <line:696:1, col:7> col:7 used b$r_buff1_thd3 '_Bool'
|-VarDecl 0x5612734333a8 <line:697:1, col:7> col:7 used b$r_buff1_thd4 '_Bool'
|-VarDecl 0x561273433420 <line:698:1, col:7> col:7 b$read_delayed '_Bool'
|-VarDecl 0x5612734334a0 <line:699:1, col:6> col:6 b$read_delayed_var 'int *'
|-VarDecl 0x561273433520 <line:700:1, col:5> col:5 used b$w_buff0 'int'
|-VarDecl 0x561273433598 <line:701:1, col:7> col:7 used b$w_buff0_used '_Bool'
|-VarDecl 0x561273433618 <line:702:1, col:5> col:5 used b$w_buff1 'int'
|-VarDecl 0x561273433690 <line:703:1, col:7> col:7 used b$w_buff1_used '_Bool'
|-VarDecl 0x561273433708 <line:704:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x561273433780 <line:705:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x561273433800 <line:706:1, col:5> col:5 used x 'int'
|-VarDecl 0x561273433880 prev 0x561273433800 <line:707:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x5612734338e8 <col:9> 'int' 0
|-VarDecl 0x561273433920 <line:708:1, col:5> col:5 used y 'int'
|-VarDecl 0x5612734339a0 prev 0x561273433920 <line:709:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x561273433a08 <col:9> 'int' 0
|-VarDecl 0x561273433a40 <line:710:1, col:5> col:5 used z 'int'
|-VarDecl 0x561273433ac0 prev 0x561273433a40 <line:711:1, col:9> col:5 used z 'int' cinit
| `-IntegerLiteral 0x561273433b28 <col:9> 'int' 0
|-VarDecl 0x561273433b58 <line:712:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x561273433bd0 <line:713:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x561273433ce8 prev 0x561273431f60 <line:714:1, line:743:1> line:714:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x561273433c50 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x5612734355a8 <line:715:1, line:743:1>
|   |-CallExpr 0x561273433df8 <line:716:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x561273433de0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561273433d90 <col:3> 'void ()' Function 0x5612733d9350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x561273433e70 <line:717:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x561273433e18 <col:3> 'int' lvalue Var 0x561273433618 'b$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x561273433e58 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x561273433e38 <col:15> 'int' lvalue Var 0x561273433520 'b$w_buff0' 'int'
|   |-BinaryOperator 0x561273433ed0 <line:718:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x561273433e90 <col:3> 'int' lvalue Var 0x561273433520 'b$w_buff0' 'int'
|   | `-IntegerLiteral 0x561273433eb0 <col:15> 'int' 1
|   |-BinaryOperator 0x561273433f48 <line:719:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x561273433ef0 <col:3> '_Bool' lvalue Var 0x561273433690 'b$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x561273433f30 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x561273433f10 <col:20> '_Bool' lvalue Var 0x561273433598 'b$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x561273433ff8 <line:720:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x561273433f80 <col:3> '_Bool' lvalue Var 0x561273433598 'b$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x561273433fd0 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x561273433fa0 <col:27> 'int' 1
|   |-CallExpr 0x561273434178 <line:721:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x561273434160 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x561273434018 <col:3> 'void (int)' Function 0x5612733d90d8 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x561273434118 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x5612734340f8 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x5612734340d8 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x561273434090 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x561273434078 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x561273434038 <col:23> '_Bool' lvalue Var 0x561273433690 'b$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x5612734340c0 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x5612734340a8 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x561273434058 <col:41> '_Bool' lvalue Var 0x561273433598 'b$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5612734341f8 <line:722:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5612734341a0 <col:3> '_Bool' lvalue Var 0x5612734331c8 'b$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x5612734341e0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5612734341c0 <col:20> '_Bool' lvalue Var 0x561273432f70 'b$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x561273434270 <line:723:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x561273434218 <col:3> '_Bool' lvalue Var 0x561273433240 'b$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x561273434258 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x561273434238 <col:20> '_Bool' lvalue Var 0x561273432fe8 'b$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x5612734342e8 <line:724:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x561273434290 <col:3> '_Bool' lvalue Var 0x5612734332b8 'b$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x5612734342d0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5612734342b0 <col:20> '_Bool' lvalue Var 0x561273433060 'b$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x561273434360 <line:725:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x561273434308 <col:3> '_Bool' lvalue Var 0x561273433330 'b$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x561273434348 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x561273434328 <col:20> '_Bool' lvalue Var 0x5612734330d8 'b$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x5612734343d8 <line:726:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x561273434380 <col:3> '_Bool' lvalue Var 0x5612734333a8 'b$r_buff1_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x5612734343c0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5612734343a0 <col:20> '_Bool' lvalue Var 0x561273433150 'b$r_buff0_thd4' '_Bool'
|   |-BinaryOperator 0x561273434470 <line:727:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x5612734343f8 <col:3> '_Bool' lvalue Var 0x561273432fe8 'b$r_buff0_thd1' '_Bool'
|   | `-CStyleCastExpr 0x561273434448 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x561273434418 <col:27> 'int' 1
|   |-CallExpr 0x5612734344c8 <line:728:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5612734344b0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561273434490 <col:3> 'void ()' Function 0x5612733d9410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x561273434520 <line:729:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x561273434508 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5612734344e8 <col:3> 'void ()' Function 0x5612733d9350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x561273434598 <line:730:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x561273434540 <col:3> 'int' lvalue Var 0x561273432808 '__unbuffered_p0_EAX' 'int'
|   | `-ImplicitCastExpr 0x561273434580 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x561273434560 <col:25> 'int' lvalue Var 0x561273433880 'x' 'int'
|   |-CallExpr 0x5612734345f0 <line:731:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5612734345d8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5612734345b8 <col:3> 'void ()' Function 0x5612733d9410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x561273434648 <line:732:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x561273434630 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561273434610 <col:3> 'void ()' Function 0x5612733d9350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x561273434930 <line:733:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x561273434668 <col:3> 'int' lvalue Var 0x561273432da8 'b' 'int'
|   | `-ConditionalOperator 0x561273434900 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x561273434728 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x5612734346e0 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x5612734346c8 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x561273434688 <col:7> '_Bool' lvalue Var 0x561273433598 'b$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x561273434710 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x5612734346f8 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x5612734346a8 <col:25> '_Bool' lvalue Var 0x561273432fe8 'b$r_buff0_thd1' '_Bool'
|   |   |-ImplicitCastExpr 0x5612734348e8 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x561273434748 <col:42> 'int' lvalue Var 0x561273433520 'b$w_buff0' 'int'
|   |   `-ParenExpr 0x5612734348c8 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x561273434898 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x561273434808 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x5612734347c0 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x5612734347a8 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x561273434768 <col:55> '_Bool' lvalue Var 0x561273433690 'b$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x5612734347f0 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x5612734347d8 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x561273434788 <col:73> '_Bool' lvalue Var 0x561273433240 'b$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x561273434868 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x561273434828 <col:90> 'int' lvalue Var 0x561273433618 'b$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x561273434880 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x561273434848 <col:102> 'int' lvalue Var 0x561273432da8 'b' 'int'
|   |-BinaryOperator 0x561273434b38 <line:734:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x561273434950 <col:3> '_Bool' lvalue Var 0x561273433598 'b$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x561273434b20 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x561273434af0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x561273434a10 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5612734349c8 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5612734349b0 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x561273434970 <col:20> '_Bool' lvalue Var 0x561273433598 'b$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5612734349f8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5612734349e0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x561273434990 <col:38> '_Bool' lvalue Var 0x561273432fe8 'b$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x561273434aa8 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x561273434a60 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x561273434a30 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x561273434ad8 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x561273434ac0 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x561273434a88 <col:66> '_Bool' lvalue Var 0x561273433598 'b$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x561273434e20 <line:735:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x561273434b58 <col:3> '_Bool' lvalue Var 0x561273433690 'b$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x561273434e08 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x561273434dd8 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x561273434cf8 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x561273434c18 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x561273434bd0 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x561273434bb8 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x561273434b78 <col:20> '_Bool' lvalue Var 0x561273433598 'b$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x561273434c00 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x561273434be8 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x561273434b98 <col:38> '_Bool' lvalue Var 0x561273432fe8 'b$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x561273434cd8 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x561273434c90 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x561273434c78 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x561273434c38 <col:56> '_Bool' lvalue Var 0x561273433690 'b$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x561273434cc0 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x561273434ca8 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x561273434c58 <col:74> '_Bool' lvalue Var 0x561273433240 'b$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x561273434d90 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x561273434d48 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x561273434d18 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x561273434dc0 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x561273434da8 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x561273434d70 <col:102> '_Bool' lvalue Var 0x561273433690 'b$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x561273435040 <line:736:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x561273434e40 <col:3> '_Bool' lvalue Var 0x561273432fe8 'b$r_buff0_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x561273435028 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x561273434ff8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x561273434f00 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x561273434eb8 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x561273434ea0 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x561273434e60 <col:20> '_Bool' lvalue Var 0x561273433598 'b$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x561273434ee8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x561273434ed0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x561273434e80 <col:38> '_Bool' lvalue Var 0x561273432fe8 'b$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x561273434fb0 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x561273434f50 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x561273434f20 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x561273434fe0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x561273434fc8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x561273434f90 <col:66> '_Bool' lvalue Var 0x561273432fe8 'b$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x561273435328 <line:737:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x561273435060 <col:3> '_Bool' lvalue Var 0x561273433240 'b$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x561273435310 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5612734352e0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x561273435200 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x561273435120 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5612734350d8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5612734350c0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x561273435080 <col:20> '_Bool' lvalue Var 0x561273433598 'b$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x561273435108 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5612734350f0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5612734350a0 <col:38> '_Bool' lvalue Var 0x561273432fe8 'b$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x5612734351e0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x561273435198 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x561273435180 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x561273435140 <col:56> '_Bool' lvalue Var 0x561273433690 'b$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5612734351c8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5612734351b0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x561273435160 <col:74> '_Bool' lvalue Var 0x561273433240 'b$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x561273435298 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x561273435250 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x561273435220 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5612734352c8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5612734352b0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x561273435278 <col:102> '_Bool' lvalue Var 0x561273433240 'b$r_buff1_thd1' '_Bool'
|   |-CallExpr 0x561273435380 <line:738:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x561273435368 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561273435348 <col:3> 'void ()' Function 0x5612733d9410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5612734353d8 <line:739:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5612734353c0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5612734353a0 <col:3> 'void ()' Function 0x5612733d9350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x561273435490 <line:740:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x5612734353f8 <col:3> 'int' lvalue Var 0x5612734326e8 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x561273435470 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x561273435458 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x561273435418 <col:22> 'int' lvalue Var 0x5612734326e8 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x561273435438 <col:41> 'int' 1
|   |-CallExpr 0x5612734354e8 <line:741:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5612734354d0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5612734354b0 <col:3> 'void ()' Function 0x5612733d9410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x561273435598 <line:742:3, col:36>
|     `-CallExpr 0x561273435578 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x561273435560 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x561273435508 <col:10> 'void *(void)' Function 0x5612733d8e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x561273435740 prev 0x5612734320b8 <line:744:1, line:763:1> line:744:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x5612734356a8 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x561273436960 <line:745:1, line:763:1>
|   |-CallExpr 0x561273435820 <line:746:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x561273435808 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5612734357e8 <col:3> 'void ()' Function 0x5612733d9350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x561273435880 <line:747:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x561273435840 <col:3> 'int' lvalue Var 0x561273433880 'x' 'int'
|   | `-IntegerLiteral 0x561273435860 <col:7> 'int' 1
|   |-CallExpr 0x5612734358d8 <line:748:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5612734358c0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5612734358a0 <col:3> 'void ()' Function 0x5612733d9410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x561273435930 <line:749:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x561273435918 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5612734358f8 <col:3> 'void ()' Function 0x5612733d9350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x561273435990 <line:750:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x561273435950 <col:3> 'int' lvalue Var 0x5612734339a0 'y' 'int'
|   | `-IntegerLiteral 0x561273435970 <col:7> 'int' 1
|   |-CallExpr 0x5612734359e8 <line:751:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5612734359d0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5612734359b0 <col:3> 'void ()' Function 0x5612733d9410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x561273435a40 <line:752:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x561273435a28 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561273435a08 <col:3> 'void ()' Function 0x5612733d9350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x561273435d28 <line:753:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x561273435a60 <col:3> 'int' lvalue Var 0x561273432da8 'b' 'int'
|   | `-ConditionalOperator 0x561273435cf8 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x561273435b20 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x561273435ad8 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x561273435ac0 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x561273435a80 <col:7> '_Bool' lvalue Var 0x561273433598 'b$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x561273435b08 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x561273435af0 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x561273435aa0 <col:25> '_Bool' lvalue Var 0x561273433060 'b$r_buff0_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x561273435ce0 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x561273435b40 <col:42> 'int' lvalue Var 0x561273433520 'b$w_buff0' 'int'
|   |   `-ParenExpr 0x561273435cc0 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x561273435c90 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x561273435c00 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x561273435bb8 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x561273435ba0 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x561273435b60 <col:55> '_Bool' lvalue Var 0x561273433690 'b$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x561273435be8 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x561273435bd0 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x561273435b80 <col:73> '_Bool' lvalue Var 0x5612734332b8 'b$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x561273435c60 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x561273435c20 <col:90> 'int' lvalue Var 0x561273433618 'b$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x561273435c78 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x561273435c40 <col:102> 'int' lvalue Var 0x561273432da8 'b' 'int'
|   |-BinaryOperator 0x561273435f30 <line:754:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x561273435d48 <col:3> '_Bool' lvalue Var 0x561273433598 'b$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x561273435f18 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x561273435ee8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x561273435e08 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x561273435dc0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x561273435da8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x561273435d68 <col:20> '_Bool' lvalue Var 0x561273433598 'b$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x561273435df0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x561273435dd8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x561273435d88 <col:38> '_Bool' lvalue Var 0x561273433060 'b$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x561273435ea0 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x561273435e58 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x561273435e28 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x561273435ed0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x561273435eb8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x561273435e80 <col:66> '_Bool' lvalue Var 0x561273433598 'b$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x561273436228 <line:755:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x561273435f50 <col:3> '_Bool' lvalue Var 0x561273433690 'b$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x561273436210 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5612734361e0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x561273436100 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x561273436020 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x561273435fd8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x561273435fc0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x561273435f70 <col:20> '_Bool' lvalue Var 0x561273433598 'b$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x561273436008 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x561273435ff0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x561273435fa0 <col:38> '_Bool' lvalue Var 0x561273433060 'b$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x5612734360e0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x561273436098 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x561273436080 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x561273436040 <col:56> '_Bool' lvalue Var 0x561273433690 'b$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5612734360c8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5612734360b0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x561273436060 <col:74> '_Bool' lvalue Var 0x5612734332b8 'b$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x561273436198 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x561273436150 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x561273436120 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5612734361c8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5612734361b0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x561273436178 <col:102> '_Bool' lvalue Var 0x561273433690 'b$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x561273436430 <line:756:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x561273436248 <col:3> '_Bool' lvalue Var 0x561273433060 'b$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x561273436418 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5612734363e8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x561273436308 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5612734362c0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5612734362a8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x561273436268 <col:20> '_Bool' lvalue Var 0x561273433598 'b$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5612734362f0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5612734362d8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x561273436288 <col:38> '_Bool' lvalue Var 0x561273433060 'b$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x5612734363a0 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x561273436358 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x561273436328 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5612734363d0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5612734363b8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x561273436380 <col:66> '_Bool' lvalue Var 0x561273433060 'b$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x561273436718 <line:757:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x561273436450 <col:3> '_Bool' lvalue Var 0x5612734332b8 'b$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x561273436700 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5612734366d0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5612734365f0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x561273436510 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5612734364c8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5612734364b0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x561273436470 <col:20> '_Bool' lvalue Var 0x561273433598 'b$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5612734364f8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5612734364e0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x561273436490 <col:38> '_Bool' lvalue Var 0x561273433060 'b$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x5612734365d0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x561273436588 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x561273436570 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x561273436530 <col:56> '_Bool' lvalue Var 0x561273433690 'b$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5612734365b8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5612734365a0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x561273436550 <col:74> '_Bool' lvalue Var 0x5612734332b8 'b$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x561273436688 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x561273436640 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x561273436610 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5612734366b8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5612734366a0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x561273436668 <col:102> '_Bool' lvalue Var 0x5612734332b8 'b$r_buff1_thd2' '_Bool'
|   |-CallExpr 0x561273436770 <line:758:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x561273436758 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561273436738 <col:3> 'void ()' Function 0x5612733d9410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5612734367c8 <line:759:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5612734367b0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561273436790 <col:3> 'void ()' Function 0x5612733d9350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x561273436880 <line:760:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x5612734367e8 <col:3> 'int' lvalue Var 0x5612734326e8 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x561273436860 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x561273436848 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x561273436808 <col:22> 'int' lvalue Var 0x5612734326e8 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x561273436828 <col:41> 'int' 1
|   |-CallExpr 0x5612734368d8 <line:761:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5612734368c0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5612734368a0 <col:3> 'void ()' Function 0x5612733d9410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x561273436950 <line:762:3, col:36>
|     `-CallExpr 0x561273436930 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x561273436918 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x5612734368f8 <col:10> 'void *(void)' Function 0x5612733d8e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x561273436aa8 prev 0x561273432210 <line:764:1, line:783:1> line:764:8 used P2 'void *(void *)'
| |-ParmVarDecl 0x561273436a10 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x561273437ce0 <line:765:1, line:783:1>
|   |-CallExpr 0x561273436b88 <line:766:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x561273436b70 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561273436b50 <col:3> 'void ()' Function 0x5612733d9350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x561273436be8 <line:767:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x561273436ba8 <col:3> 'int' lvalue Var 0x5612734339a0 'y' 'int'
|   | `-IntegerLiteral 0x561273436bc8 <col:7> 'int' 2
|   |-CallExpr 0x561273436c40 <line:768:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x561273436c28 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561273436c08 <col:3> 'void ()' Function 0x5612733d9410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x561273436c98 <line:769:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x561273436c80 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561273436c60 <col:3> 'void ()' Function 0x5612733d9350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x561273436d10 <line:770:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x561273436cb8 <col:3> 'int' lvalue Var 0x561273432928 '__unbuffered_p2_EAX' 'int'
|   | `-ImplicitCastExpr 0x561273436cf8 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x561273436cd8 <col:25> 'int' lvalue Var 0x561273433ac0 'z' 'int'
|   |-CallExpr 0x561273436d68 <line:771:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x561273436d50 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561273436d30 <col:3> 'void ()' Function 0x5612733d9410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x561273436dc0 <line:772:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x561273436da8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561273436d88 <col:3> 'void ()' Function 0x5612733d9350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5612734370b8 <line:773:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x561273436de0 <col:3> 'int' lvalue Var 0x561273432da8 'b' 'int'
|   | `-ConditionalOperator 0x561273437088 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x561273436ea0 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x561273436e58 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x561273436e40 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x561273436e00 <col:7> '_Bool' lvalue Var 0x561273433598 'b$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x561273436e88 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x561273436e70 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x561273436e20 <col:25> '_Bool' lvalue Var 0x5612734330d8 'b$r_buff0_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x561273437070 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x561273436ec0 <col:42> 'int' lvalue Var 0x561273433520 'b$w_buff0' 'int'
|   |   `-ParenExpr 0x561273437050 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x561273437020 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x561273436f80 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x561273436f38 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x561273436f20 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x561273436ee0 <col:55> '_Bool' lvalue Var 0x561273433690 'b$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x561273436f68 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x561273436f50 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x561273436f00 <col:73> '_Bool' lvalue Var 0x561273433330 'b$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x561273436ff0 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x561273436fb0 <col:90> 'int' lvalue Var 0x561273433618 'b$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x561273437008 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x561273436fd0 <col:102> 'int' lvalue Var 0x561273432da8 'b' 'int'
|   |-BinaryOperator 0x5612734372c0 <line:774:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5612734370d8 <col:3> '_Bool' lvalue Var 0x561273433598 'b$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x5612734372a8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x561273437278 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x561273437198 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x561273437150 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x561273437138 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5612734370f8 <col:20> '_Bool' lvalue Var 0x561273433598 'b$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x561273437180 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x561273437168 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x561273437118 <col:38> '_Bool' lvalue Var 0x5612734330d8 'b$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x561273437230 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5612734371e8 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5612734371b8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x561273437260 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x561273437248 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x561273437210 <col:66> '_Bool' lvalue Var 0x561273433598 'b$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5612734375a8 <line:775:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5612734372e0 <col:3> '_Bool' lvalue Var 0x561273433690 'b$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x561273437590 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x561273437560 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x561273437480 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5612734373a0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x561273437358 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x561273437340 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x561273437300 <col:20> '_Bool' lvalue Var 0x561273433598 'b$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x561273437388 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x561273437370 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x561273437320 <col:38> '_Bool' lvalue Var 0x5612734330d8 'b$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x561273437460 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x561273437418 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x561273437400 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5612734373c0 <col:56> '_Bool' lvalue Var 0x561273433690 'b$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x561273437448 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x561273437430 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5612734373e0 <col:74> '_Bool' lvalue Var 0x561273433330 'b$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x561273437518 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5612734374d0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5612734374a0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x561273437548 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x561273437530 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5612734374f8 <col:102> '_Bool' lvalue Var 0x561273433690 'b$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x5612734377b0 <line:776:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5612734375c8 <col:3> '_Bool' lvalue Var 0x5612734330d8 'b$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x561273437798 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x561273437768 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x561273437688 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x561273437640 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x561273437628 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5612734375e8 <col:20> '_Bool' lvalue Var 0x561273433598 'b$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x561273437670 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x561273437658 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x561273437608 <col:38> '_Bool' lvalue Var 0x5612734330d8 'b$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x561273437720 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5612734376d8 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5612734376a8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x561273437750 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x561273437738 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x561273437700 <col:66> '_Bool' lvalue Var 0x5612734330d8 'b$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x561273437a98 <line:777:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5612734377d0 <col:3> '_Bool' lvalue Var 0x561273433330 'b$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x561273437a80 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x561273437a50 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x561273437970 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x561273437890 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x561273437848 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x561273437830 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5612734377f0 <col:20> '_Bool' lvalue Var 0x561273433598 'b$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x561273437878 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x561273437860 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x561273437810 <col:38> '_Bool' lvalue Var 0x5612734330d8 'b$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x561273437950 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x561273437908 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5612734378f0 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5612734378b0 <col:56> '_Bool' lvalue Var 0x561273433690 'b$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x561273437938 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x561273437920 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5612734378d0 <col:74> '_Bool' lvalue Var 0x561273433330 'b$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x561273437a08 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5612734379c0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x561273437990 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x561273437a38 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x561273437a20 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5612734379e8 <col:102> '_Bool' lvalue Var 0x561273433330 'b$r_buff1_thd3' '_Bool'
|   |-CallExpr 0x561273437af0 <line:778:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x561273437ad8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561273437ab8 <col:3> 'void ()' Function 0x5612733d9410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x561273437b48 <line:779:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x561273437b30 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561273437b10 <col:3> 'void ()' Function 0x5612733d9350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x561273437c00 <line:780:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x561273437b68 <col:3> 'int' lvalue Var 0x5612734326e8 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x561273437be0 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x561273437bc8 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x561273437b88 <col:22> 'int' lvalue Var 0x5612734326e8 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x561273437ba8 <col:41> 'int' 1
|   |-CallExpr 0x561273437c58 <line:781:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x561273437c40 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561273437c20 <col:3> 'void ()' Function 0x5612733d9410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x561273437cd0 <line:782:3, col:36>
|     `-CallExpr 0x561273437cb0 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x561273437c98 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x561273437c78 <col:10> 'void *(void)' Function 0x5612733d8e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x561273437e28 prev 0x561273432368 <line:784:1, line:822:1> line:784:8 used P3 'void *(void *)'
| |-ParmVarDecl 0x561273437d90 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x56127343bc48 <line:785:1, line:822:1>
|   |-CallExpr 0x561273437f08 <line:786:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x561273437ef0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561273437ed0 <col:3> 'void ()' Function 0x5612733d9350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x561273437f68 <line:787:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x561273437f28 <col:3> 'int' lvalue Var 0x561273433ac0 'z' 'int'
|   | `-IntegerLiteral 0x561273437f48 <col:7> 'int' 1
|   |-CallExpr 0x561273437fd8 <line:788:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x561273437fc0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561273437f88 <col:3> 'void ()' Function 0x5612733d9410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x561273438030 <line:789:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x561273438018 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561273437ff8 <col:3> 'void ()' Function 0x5612733d9350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x561273438090 <line:790:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x561273438050 <col:3> 'int' lvalue Var 0x561273432c88 'a' 'int'
|   | `-IntegerLiteral 0x561273438070 <col:7> 'int' 1
|   |-CallExpr 0x5612734380e8 <line:791:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5612734380d0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5612734380b0 <col:3> 'void ()' Function 0x5612733d9410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x561273438140 <line:792:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x561273438128 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561273438108 <col:3> 'void ()' Function 0x5612733d9350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5612734381b8 <line:793:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x561273438160 <col:3> 'int' lvalue Var 0x561273432a48 '__unbuffered_p3_EAX' 'int'
|   | `-ImplicitCastExpr 0x5612734381a0 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x561273438180 <col:25> 'int' lvalue Var 0x561273432c88 'a' 'int'
|   |-CallExpr 0x561273438210 <line:794:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5612734381f8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5612734381d8 <col:3> 'void ()' Function 0x5612733d9410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x561273438268 <line:795:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x561273438250 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x561273438230 <col:3> 'void ()' Function 0x5612733d9350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x561273438318 <line:796:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x561273438288 <col:3> '_Bool' lvalue Var 0x561273433b58 'weak$$choice0' '_Bool'
|   | `-ImplicitCastExpr 0x561273438300 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x5612734382e0 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x5612734382c8 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x5612734382a8 <col:19> 'void *(void)' Function 0x5612733d8e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x5612734383c8 <line:797:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x561273438338 <col:3> '_Bool' lvalue Var 0x561273433bd0 'weak$$choice2' '_Bool'
|   | `-ImplicitCastExpr 0x5612734383b0 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x561273438390 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x561273438378 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x561273438358 <col:19> 'void *(void)' Function 0x5612733d8e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x561273438440 <line:798:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x5612734383e8 <col:3> '_Bool' lvalue Var 0x561273432e40 'b$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x561273438428 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x561273438408 <col:21> '_Bool' lvalue Var 0x561273433bd0 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x5612734384b8 <line:799:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x561273438460 <col:3> 'int' lvalue Var 0x561273432ec0 'b$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x5612734384a0 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x561273438480 <col:15> 'int' lvalue Var 0x561273432da8 'b' 'int'
|   |-BinaryOperator 0x5612734388f0 <line:800:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x5612734384d8 <col:3> 'int' lvalue Var 0x561273432da8 'b' 'int'
|   | `-ConditionalOperator 0x5612734388c0 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x5612734386e8 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x561273438608 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x561273438530 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x561273438518 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x5612734384f8 <col:8> '_Bool' lvalue Var 0x561273433598 'b$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x5612734385e8 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x561273438580 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x561273438568 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x561273438548 <col:27> '_Bool' lvalue Var 0x561273433150 'b$r_buff0_thd4' '_Bool'
|   |   | |   `-UnaryOperator 0x5612734385d0 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x5612734385b8 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x561273438598 <col:46> '_Bool' lvalue Var 0x561273433690 'b$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x5612734386c8 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x561273438660 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x561273438648 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x561273438628 <col:65> '_Bool' lvalue Var 0x561273433150 'b$r_buff0_thd4' '_Bool'
|   |   |   `-UnaryOperator 0x5612734386b0 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x561273438698 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x561273438678 <col:84> '_Bool' lvalue Var 0x5612734333a8 'b$r_buff1_thd4' '_Bool'
|   |   |-ImplicitCastExpr 0x5612734388a8 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x561273438708 <col:101> 'int' lvalue Var 0x561273432da8 'b' 'int'
|   |   `-ParenExpr 0x561273438888 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x561273438858 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x5612734387c8 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x561273438780 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x561273438768 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x561273438728 <col:106> '_Bool' lvalue Var 0x561273433598 'b$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x5612734387b0 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x561273438798 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x561273438748 <col:124> '_Bool' lvalue Var 0x561273433150 'b$r_buff0_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x561273438828 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5612734387e8 <col:141> 'int' lvalue Var 0x561273433520 'b$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x561273438840 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x561273438808 <col:153> 'int' lvalue Var 0x561273433618 'b$w_buff1' 'int'
|   |-BinaryOperator 0x561273438e00 <line:801:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x561273438910 <col:3> 'int' lvalue Var 0x561273433520 'b$w_buff0' 'int'
|   | `-ConditionalOperator 0x561273438dd0 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x561273438da0 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x561273438d88 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x561273438930 <col:15> '_Bool' lvalue Var 0x561273433bd0 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x561273438db8 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x561273438950 <col:31> 'int' lvalue Var 0x561273433520 'b$w_buff0' 'int'
|   |   `-ParenExpr 0x561273438d68 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x561273438d38 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x561273438b60 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x561273438a80 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x5612734389a8 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x561273438990 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x561273438970 <col:45> '_Bool' lvalue Var 0x561273433598 'b$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x561273438a60 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x5612734389f8 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x5612734389e0 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x5612734389c0 <col:64> '_Bool' lvalue Var 0x561273433150 'b$r_buff0_thd4' '_Bool'
|   |       | |   `-UnaryOperator 0x561273438a48 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x561273438a30 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x561273438a10 <col:83> '_Bool' lvalue Var 0x561273433690 'b$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x561273438b40 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x561273438ad8 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x561273438ac0 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x561273438aa0 <col:102> '_Bool' lvalue Var 0x561273433150 'b$r_buff0_thd4' '_Bool'
|   |       |   `-UnaryOperator 0x561273438b28 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x561273438b10 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x561273438af0 <col:121> '_Bool' lvalue Var 0x5612734333a8 'b$r_buff1_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x561273438d20 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x561273438b80 <col:138> 'int' lvalue Var 0x561273433520 'b$w_buff0' 'int'
|   |       `-ParenExpr 0x561273438d00 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x561273438cd0 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x561273438c40 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x561273438bf8 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x561273438be0 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x561273438ba0 <col:151> '_Bool' lvalue Var 0x561273433598 'b$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x561273438c28 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x561273438c10 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x561273438bc0 <col:169> '_Bool' lvalue Var 0x561273433150 'b$r_buff0_thd4' '_Bool'
|   |           |-ImplicitCastExpr 0x561273438ca0 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x561273438c60 <col:186> 'int' lvalue Var 0x561273433520 'b$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x561273438cb8 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x561273438c80 <col:198> 'int' lvalue Var 0x561273433520 'b$w_buff0' 'int'
|   |-BinaryOperator 0x561273439330 <line:802:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x561273438e20 <col:3> 'int' lvalue Var 0x561273433618 'b$w_buff1' 'int'
|   | `-ConditionalOperator 0x561273439300 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x5612734392d0 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x5612734392b8 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x561273438e40 <col:15> '_Bool' lvalue Var 0x561273433bd0 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x5612734392e8 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x561273438e60 <col:31> 'int' lvalue Var 0x561273433618 'b$w_buff1' 'int'
|   |   `-ParenExpr 0x561273439298 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x561273439268 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x561273439090 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x561273438f90 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x561273438eb8 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x561273438ea0 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x561273438e80 <col:45> '_Bool' lvalue Var 0x561273433598 'b$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x561273438f70 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x561273438f08 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x561273438ef0 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x561273438ed0 <col:64> '_Bool' lvalue Var 0x561273433150 'b$r_buff0_thd4' '_Bool'
|   |       | |   `-UnaryOperator 0x561273438f58 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x561273438f40 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x561273438f20 <col:83> '_Bool' lvalue Var 0x561273433690 'b$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x561273439070 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x561273439008 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x561273438ff0 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x561273438fd0 <col:102> '_Bool' lvalue Var 0x561273433150 'b$r_buff0_thd4' '_Bool'
|   |       |   `-UnaryOperator 0x561273439058 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x561273439040 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x561273439020 <col:121> '_Bool' lvalue Var 0x5612734333a8 'b$r_buff1_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x561273439250 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5612734390b0 <col:138> 'int' lvalue Var 0x561273433618 'b$w_buff1' 'int'
|   |       `-ParenExpr 0x561273439230 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x561273439200 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x561273439170 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x561273439128 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x561273439110 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x5612734390d0 <col:151> '_Bool' lvalue Var 0x561273433598 'b$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x561273439158 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x561273439140 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x5612734390f0 <col:169> '_Bool' lvalue Var 0x561273433150 'b$r_buff0_thd4' '_Bool'
|   |           |-ImplicitCastExpr 0x5612734391d0 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x561273439190 <col:186> 'int' lvalue Var 0x561273433618 'b$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x5612734391e8 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x5612734391b0 <col:198> 'int' lvalue Var 0x561273433618 'b$w_buff1' 'int'
|   |-BinaryOperator 0x5612734398d8 <line:803:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x561273439350 <col:3> '_Bool' lvalue Var 0x561273433598 'b$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x5612734398c0 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x561273439890 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x561273439848 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x561273439830 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x561273439370 <col:20> '_Bool' lvalue Var 0x561273433bd0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x561273439878 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x561273439860 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x561273439390 <col:36> '_Bool' lvalue Var 0x561273433598 'b$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x561273439810 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x5612734397e0 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x5612734395a0 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5612734394c0 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5612734393e8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5612734393d0 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5612734393b0 <col:55> '_Bool' lvalue Var 0x561273433598 'b$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5612734394a0 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x561273439438 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x561273439420 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x561273439400 <col:74> '_Bool' lvalue Var 0x561273433150 'b$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x561273439488 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x561273439470 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x561273439450 <col:93> '_Bool' lvalue Var 0x561273433690 'b$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x561273439580 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x561273439518 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x561273439500 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5612734394e0 <col:112> '_Bool' lvalue Var 0x561273433150 'b$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x561273439568 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x561273439550 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x561273439530 <col:131> '_Bool' lvalue Var 0x5612734333a8 'b$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x5612734397c8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5612734397b0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5612734395c0 <col:148> '_Bool' lvalue Var 0x561273433598 'b$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x561273439790 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x561273439760 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x561273439680 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x561273439638 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x561273439620 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5612734395e0 <col:166> '_Bool' lvalue Var 0x561273433598 'b$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x561273439668 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x561273439650 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x561273439600 <col:184> '_Bool' lvalue Var 0x561273433150 'b$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x561273439718 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5612734396d0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5612734396a0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x561273439748 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x561273439730 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x5612734396f8 <col:212> '_Bool' lvalue Var 0x561273433598 'b$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x561273439ea0 <line:804:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x5612734398f8 <col:3> '_Bool' lvalue Var 0x561273433690 'b$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x561273439e88 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x561273439e58 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x561273439e10 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x561273439df8 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x561273439918 <col:20> '_Bool' lvalue Var 0x561273433bd0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x561273439e40 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x561273439e28 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x561273439938 <col:36> '_Bool' lvalue Var 0x561273433690 'b$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x561273439dd8 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x561273439da8 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x561273439b48 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x561273439a68 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x561273439990 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x561273439978 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x561273439958 <col:55> '_Bool' lvalue Var 0x561273433598 'b$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x561273439a48 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5612734399e0 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5612734399c8 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5612734399a8 <col:74> '_Bool' lvalue Var 0x561273433150 'b$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x561273439a30 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x561273439a18 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5612734399f8 <col:93> '_Bool' lvalue Var 0x561273433690 'b$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x561273439b28 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x561273439ac0 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x561273439aa8 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x561273439a88 <col:112> '_Bool' lvalue Var 0x561273433150 'b$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x561273439b10 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x561273439af8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x561273439ad8 <col:131> '_Bool' lvalue Var 0x5612734333a8 'b$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x561273439d90 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x561273439d78 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x561273439b68 <col:148> '_Bool' lvalue Var 0x561273433690 'b$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x561273439d58 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x561273439d28 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x561273439c28 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x561273439be0 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x561273439bc8 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x561273439b88 <col:166> '_Bool' lvalue Var 0x561273433598 'b$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x561273439c10 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x561273439bf8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x561273439ba8 <col:184> '_Bool' lvalue Var 0x561273433150 'b$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x561273439cf8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x561273439c78 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x561273439c48 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x561273439d10 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x561273439cd0 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x561273439ca0 <col:219> 'int' 0
|   |-BinaryOperator 0x56127343a468 <line:805:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x561273439ec0 <col:3> '_Bool' lvalue Var 0x561273433150 'b$r_buff0_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x56127343a450 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56127343a420 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x56127343a3d8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x56127343a3c0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x561273439ee0 <col:20> '_Bool' lvalue Var 0x561273433bd0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x56127343a408 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x56127343a3f0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x561273439f00 <col:36> '_Bool' lvalue Var 0x561273433150 'b$r_buff0_thd4' '_Bool'
|   |     `-ParenExpr 0x56127343a3a0 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x56127343a370 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x56127343a130 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x56127343a050 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x561273439f58 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x561273439f40 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x561273439f20 <col:55> '_Bool' lvalue Var 0x561273433598 'b$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x56127343a030 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x561273439fa8 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x561273439f90 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x561273439f70 <col:74> '_Bool' lvalue Var 0x561273433150 'b$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x56127343a018 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x56127343a000 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x561273439fe0 <col:93> '_Bool' lvalue Var 0x561273433690 'b$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x56127343a110 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x56127343a0a8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x56127343a090 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x56127343a070 <col:112> '_Bool' lvalue Var 0x561273433150 'b$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x56127343a0f8 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x56127343a0e0 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x56127343a0c0 <col:131> '_Bool' lvalue Var 0x5612734333a8 'b$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x56127343a358 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x56127343a340 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x56127343a150 <col:148> '_Bool' lvalue Var 0x561273433150 'b$r_buff0_thd4' '_Bool'
|   |         `-ParenExpr 0x56127343a320 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x56127343a2f0 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x56127343a210 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x56127343a1c8 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x56127343a1b0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x56127343a170 <col:166> '_Bool' lvalue Var 0x561273433598 'b$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x56127343a1f8 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x56127343a1e0 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x56127343a190 <col:184> '_Bool' lvalue Var 0x561273433150 'b$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x56127343a2a8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x56127343a260 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x56127343a230 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x56127343a2d8 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x56127343a2c0 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x56127343a288 <col:212> '_Bool' lvalue Var 0x561273433150 'b$r_buff0_thd4' '_Bool'
|   |-BinaryOperator 0x56127343aa30 <line:806:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x56127343a488 <col:3> '_Bool' lvalue Var 0x5612734333a8 'b$r_buff1_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x56127343aa18 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56127343a9e8 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x56127343a9a0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x56127343a988 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x56127343a4a8 <col:20> '_Bool' lvalue Var 0x561273433bd0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x56127343a9d0 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x56127343a9b8 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x56127343a4c8 <col:36> '_Bool' lvalue Var 0x5612734333a8 'b$r_buff1_thd4' '_Bool'
|   |     `-ParenExpr 0x56127343a968 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x56127343a938 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x56127343a6d8 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x56127343a5f8 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x56127343a520 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x56127343a508 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x56127343a4e8 <col:55> '_Bool' lvalue Var 0x561273433598 'b$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x56127343a5d8 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x56127343a570 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x56127343a558 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x56127343a538 <col:74> '_Bool' lvalue Var 0x561273433150 'b$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x56127343a5c0 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x56127343a5a8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x56127343a588 <col:93> '_Bool' lvalue Var 0x561273433690 'b$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x56127343a6b8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x56127343a650 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x56127343a638 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x56127343a618 <col:112> '_Bool' lvalue Var 0x561273433150 'b$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x56127343a6a0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x56127343a688 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x56127343a668 <col:131> '_Bool' lvalue Var 0x5612734333a8 'b$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x56127343a920 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x56127343a908 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x56127343a6f8 <col:148> '_Bool' lvalue Var 0x5612734333a8 'b$r_buff1_thd4' '_Bool'
|   |         `-ParenExpr 0x56127343a8e8 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x56127343a8b8 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x56127343a7b8 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x56127343a770 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x56127343a758 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x56127343a718 <col:166> '_Bool' lvalue Var 0x561273433598 'b$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x56127343a7a0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x56127343a788 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x56127343a738 <col:184> '_Bool' lvalue Var 0x561273433150 'b$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x56127343a888 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x56127343a808 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x56127343a7d8 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x56127343a8a0 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x56127343a860 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x56127343a830 <col:219> 'int' 0
|   |-BinaryOperator 0x56127343aaa8 <line:807:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x56127343aa50 <col:3> 'int' lvalue Var 0x561273432b68 '__unbuffered_p3_EBX' 'int'
|   | `-ImplicitCastExpr 0x56127343aa90 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x56127343aa70 <col:25> 'int' lvalue Var 0x561273432da8 'b' 'int'
|   |-BinaryOperator 0x56127343abd8 <line:808:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x56127343aac8 <col:3> 'int' lvalue Var 0x561273432da8 'b' 'int'
|   | `-ConditionalOperator 0x56127343aba8 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x56127343ab60 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x56127343ab48 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x56127343aae8 <col:7> '_Bool' lvalue Var 0x561273432e40 'b$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x56127343ab78 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56127343ab08 <col:25> 'int' lvalue Var 0x561273432ec0 'b$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x56127343ab90 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x56127343ab28 <col:37> 'int' lvalue Var 0x561273432da8 'b' 'int'
|   |-BinaryOperator 0x56127343ac70 <line:809:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x56127343abf8 <col:3> '_Bool' lvalue Var 0x561273432e40 'b$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x56127343ac48 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x56127343ac18 <col:28> 'int' 0
|   |-CallExpr 0x56127343acc8 <line:810:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56127343acb0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56127343ac90 <col:3> 'void ()' Function 0x5612733d9410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56127343ad20 <line:811:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56127343ad08 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56127343ace8 <col:3> 'void ()' Function 0x5612733d9350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56127343b020 <line:812:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x56127343ad40 <col:3> 'int' lvalue Var 0x561273432da8 'b' 'int'
|   | `-ConditionalOperator 0x56127343aff0 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x56127343ae00 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x56127343adb8 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x56127343ada0 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x56127343ad60 <col:7> '_Bool' lvalue Var 0x561273433598 'b$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x56127343ade8 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x56127343add0 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x56127343ad80 <col:25> '_Bool' lvalue Var 0x561273433150 'b$r_buff0_thd4' '_Bool'
|   |   |-ImplicitCastExpr 0x56127343afc0 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56127343ae20 <col:42> 'int' lvalue Var 0x561273433520 'b$w_buff0' 'int'
|   |   `-ParenExpr 0x56127343afa0 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x56127343af70 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x56127343aee0 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x56127343ae98 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x56127343ae80 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x56127343ae40 <col:55> '_Bool' lvalue Var 0x561273433690 'b$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x56127343aec8 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x56127343aeb0 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x56127343ae60 <col:73> '_Bool' lvalue Var 0x5612734333a8 'b$r_buff1_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x56127343af40 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x56127343af00 <col:90> 'int' lvalue Var 0x561273433618 'b$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x56127343af58 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x56127343af20 <col:102> 'int' lvalue Var 0x561273432da8 'b' 'int'
|   |-BinaryOperator 0x56127343b228 <line:813:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x56127343b040 <col:3> '_Bool' lvalue Var 0x561273433598 'b$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x56127343b210 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56127343b1e0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x56127343b100 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x56127343b0b8 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x56127343b0a0 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x56127343b060 <col:20> '_Bool' lvalue Var 0x561273433598 'b$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x56127343b0e8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x56127343b0d0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x56127343b080 <col:38> '_Bool' lvalue Var 0x561273433150 'b$r_buff0_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x56127343b198 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x56127343b150 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x56127343b120 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x56127343b1c8 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x56127343b1b0 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x56127343b178 <col:66> '_Bool' lvalue Var 0x561273433598 'b$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x56127343b510 <line:814:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x56127343b248 <col:3> '_Bool' lvalue Var 0x561273433690 'b$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x56127343b4f8 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56127343b4c8 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x56127343b3e8 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x56127343b308 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x56127343b2c0 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x56127343b2a8 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x56127343b268 <col:20> '_Bool' lvalue Var 0x561273433598 'b$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x56127343b2f0 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x56127343b2d8 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x56127343b288 <col:38> '_Bool' lvalue Var 0x561273433150 'b$r_buff0_thd4' '_Bool'
|   |     | `-BinaryOperator 0x56127343b3c8 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x56127343b380 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x56127343b368 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x56127343b328 <col:56> '_Bool' lvalue Var 0x561273433690 'b$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x56127343b3b0 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x56127343b398 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x56127343b348 <col:74> '_Bool' lvalue Var 0x5612734333a8 'b$r_buff1_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x56127343b480 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x56127343b438 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x56127343b408 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x56127343b4b0 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x56127343b498 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x56127343b460 <col:102> '_Bool' lvalue Var 0x561273433690 'b$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x56127343b718 <line:815:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x56127343b530 <col:3> '_Bool' lvalue Var 0x561273433150 'b$r_buff0_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x56127343b700 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56127343b6d0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x56127343b5f0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x56127343b5a8 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x56127343b590 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x56127343b550 <col:20> '_Bool' lvalue Var 0x561273433598 'b$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x56127343b5d8 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x56127343b5c0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x56127343b570 <col:38> '_Bool' lvalue Var 0x561273433150 'b$r_buff0_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x56127343b688 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x56127343b640 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x56127343b610 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x56127343b6b8 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x56127343b6a0 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x56127343b668 <col:66> '_Bool' lvalue Var 0x561273433150 'b$r_buff0_thd4' '_Bool'
|   |-BinaryOperator 0x56127343ba00 <line:816:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x56127343b738 <col:3> '_Bool' lvalue Var 0x5612734333a8 'b$r_buff1_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x56127343b9e8 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56127343b9b8 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x56127343b8d8 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x56127343b7f8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x56127343b7b0 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x56127343b798 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x56127343b758 <col:20> '_Bool' lvalue Var 0x561273433598 'b$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x56127343b7e0 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x56127343b7c8 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x56127343b778 <col:38> '_Bool' lvalue Var 0x561273433150 'b$r_buff0_thd4' '_Bool'
|   |     | `-BinaryOperator 0x56127343b8b8 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x56127343b870 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x56127343b858 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x56127343b818 <col:56> '_Bool' lvalue Var 0x561273433690 'b$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x56127343b8a0 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x56127343b888 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x56127343b838 <col:74> '_Bool' lvalue Var 0x5612734333a8 'b$r_buff1_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x56127343b970 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x56127343b928 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x56127343b8f8 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x56127343b9a0 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x56127343b988 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x56127343b950 <col:102> '_Bool' lvalue Var 0x5612734333a8 'b$r_buff1_thd4' '_Bool'
|   |-CallExpr 0x56127343ba58 <line:817:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56127343ba40 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56127343ba20 <col:3> 'void ()' Function 0x5612733d9410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56127343bab0 <line:818:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56127343ba98 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56127343ba78 <col:3> 'void ()' Function 0x5612733d9350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56127343bb68 <line:819:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x56127343bad0 <col:3> 'int' lvalue Var 0x5612734326e8 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x56127343bb48 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x56127343bb30 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56127343baf0 <col:22> 'int' lvalue Var 0x5612734326e8 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x56127343bb10 <col:41> 'int' 1
|   |-CallExpr 0x56127343bbc0 <line:820:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56127343bba8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56127343bb88 <col:3> 'void ()' Function 0x5612733d9410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x56127343bc38 <line:821:3, col:36>
|     `-CallExpr 0x56127343bc18 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x56127343bc00 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x56127343bbe0 <col:10> 'void *(void)' Function 0x5612733d8e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x56127343bd98 prev 0x561273432430 <line:823:1, line:825:1> line:823:6 fence 'void ()'
| `-CompoundStmt 0x56127343be38 <line:824:1, line:825:1>
|-FunctionDecl 0x56127343be68 prev 0x5612734324f0 <line:826:1, line:828:1> line:826:6 isync 'void ()'
| `-CompoundStmt 0x56127343bf08 <line:827:1, line:828:1>
|-FunctionDecl 0x56127343bf38 prev 0x5612734325b0 <line:829:1, line:831:1> line:829:6 lwfence 'void ()'
| `-CompoundStmt 0x56127343bfd8 <line:830:1, line:831:1>
`-FunctionDecl 0x56127343c058 <line:832:1, line:858:1> line:832:5 main 'int ()'
  `-CompoundStmt 0x56127343e068 <line:833:1, line:858:1>
    |-DeclStmt 0x56127343c170 <line:834:3, col:18>
    | `-VarDecl 0x56127343c108 <col:3, col:13> col:13 used t1043 'pthread_t':'unsigned long'
    |-CallExpr 0x56127343c378 <line:835:3, col:54> 'int'
    | |-ImplicitCastExpr 0x56127343c360 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x56127343c188 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x5612734198f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x56127343c1c8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x56127343c1a8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x56127343c108 't1043' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x56127343c3b8 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x56127343c240 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x56127343c218 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x56127343c1e0 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x56127343c3d0 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x56127343c260 <col:39> 'void *(void *)' Function 0x561273433ce8 'P0' 'void *(void *)'
    | `-ParenExpr 0x56127343c2e0 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x56127343c2b8 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x56127343c280 <col:52> 'int' 0
    |-DeclStmt 0x56127343c460 <line:836:3, col:18>
    | `-VarDecl 0x56127343c3f8 <col:3, col:13> col:13 used t1044 'pthread_t':'unsigned long'
    |-CallExpr 0x56127343c608 <line:837:3, col:54> 'int'
    | |-ImplicitCastExpr 0x56127343c5f0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x56127343c478 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x5612734198f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x56127343c4b8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x56127343c498 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x56127343c3f8 't1044' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x56127343c648 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x56127343c530 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x56127343c508 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x56127343c4d0 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x56127343c660 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x56127343c550 <col:39> 'void *(void *)' Function 0x561273435740 'P1' 'void *(void *)'
    | `-ParenExpr 0x56127343c5d0 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x56127343c5a8 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x56127343c570 <col:52> 'int' 0
    |-DeclStmt 0x56127343c6f0 <line:838:3, col:18>
    | `-VarDecl 0x56127343c688 <col:3, col:13> col:13 used t1045 'pthread_t':'unsigned long'
    |-CallExpr 0x56127343c898 <line:839:3, col:54> 'int'
    | |-ImplicitCastExpr 0x56127343c880 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x56127343c708 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x5612734198f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x56127343c748 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x56127343c728 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x56127343c688 't1045' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x56127343c8d8 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x56127343c7c0 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x56127343c798 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x56127343c760 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x56127343c8f0 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x56127343c7e0 <col:39> 'void *(void *)' Function 0x561273436aa8 'P2' 'void *(void *)'
    | `-ParenExpr 0x56127343c860 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x56127343c838 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x56127343c800 <col:52> 'int' 0
    |-DeclStmt 0x56127343c980 <line:840:3, col:18>
    | `-VarDecl 0x56127343c918 <col:3, col:13> col:13 used t1046 'pthread_t':'unsigned long'
    |-CallExpr 0x56127343cb28 <line:841:3, col:54> 'int'
    | |-ImplicitCastExpr 0x56127343cb10 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x56127343c998 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x5612734198f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x56127343c9d8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x56127343c9b8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x56127343c918 't1046' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x56127343cb68 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x56127343ca50 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x56127343ca28 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x56127343c9f0 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x56127343cb80 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x56127343ca70 <col:39> 'void *(void *)' Function 0x561273437e28 'P3' 'void *(void *)'
    | `-ParenExpr 0x56127343caf0 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x56127343cac8 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x56127343ca90 <col:52> 'int' 0
    |-CallExpr 0x56127343cbd0 <line:842:3, col:27> 'void'
    | `-ImplicitCastExpr 0x56127343cbb8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x56127343cb98 <col:3> 'void ()' Function 0x5612733d9350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x56127343cca0 <line:843:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x56127343cbf0 <col:3> '_Bool' lvalue Var 0x561273433708 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x56127343cc88 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x56127343cc68 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x56127343cc50 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x56127343cc10 <col:21> 'int' lvalue Var 0x5612734326e8 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x56127343cc30 <col:41> 'int' 4
    |-CallExpr 0x56127343ccf8 <line:844:3, col:25> 'void'
    | `-ImplicitCastExpr 0x56127343cce0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x56127343ccc0 <col:3> 'void ()' Function 0x5612733d9410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x56127343cd70 <line:845:3, col:36> 'void'
    | |-ImplicitCastExpr 0x56127343cd58 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x56127343cd18 <col:3> 'void (int)' Function 0x5612733d8ca0 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x56127343cdb0 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x56127343cd98 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x56127343cd38 <col:21> '_Bool' lvalue Var 0x561273433708 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x56127343ce00 <line:846:3, col:27> 'void'
    | `-ImplicitCastExpr 0x56127343cde8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x56127343cdc8 <col:3> 'void ()' Function 0x5612733d9350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x56127343d0f8 <line:847:3, col:103> 'int' '='
    | |-DeclRefExpr 0x56127343ce20 <col:3> 'int' lvalue Var 0x561273432da8 'b' 'int'
    | `-ConditionalOperator 0x56127343d0c8 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x56127343cee0 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x56127343ce98 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x56127343ce80 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x56127343ce40 <col:7> '_Bool' lvalue Var 0x561273433598 'b$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x56127343cec8 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x56127343ceb0 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x56127343ce60 <col:25> '_Bool' lvalue Var 0x561273432f70 'b$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x56127343d0b0 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x56127343cf00 <col:42> 'int' lvalue Var 0x561273433520 'b$w_buff0' 'int'
    |   `-ParenExpr 0x56127343d090 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x56127343d060 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x56127343cfc0 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x56127343cf78 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x56127343cf60 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x56127343cf20 <col:55> '_Bool' lvalue Var 0x561273433690 'b$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x56127343cfa8 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x56127343cf90 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x56127343cf40 <col:73> '_Bool' lvalue Var 0x5612734331c8 'b$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x56127343d030 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x56127343cfe0 <col:90> 'int' lvalue Var 0x561273433618 'b$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x56127343d048 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x56127343d010 <col:102> 'int' lvalue Var 0x561273432da8 'b' 'int'
    |-BinaryOperator 0x56127343d300 <line:848:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x56127343d118 <col:3> '_Bool' lvalue Var 0x561273433598 'b$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x56127343d2e8 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x56127343d2b8 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x56127343d1d8 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x56127343d190 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x56127343d178 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x56127343d138 <col:20> '_Bool' lvalue Var 0x561273433598 'b$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x56127343d1c0 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x56127343d1a8 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x56127343d158 <col:38> '_Bool' lvalue Var 0x561273432f70 'b$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x56127343d270 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x56127343d228 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x56127343d1f8 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x56127343d2a0 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x56127343d288 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x56127343d250 <col:66> '_Bool' lvalue Var 0x561273433598 'b$w_buff0_used' '_Bool'
    |-BinaryOperator 0x56127343d5e8 <line:849:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x56127343d320 <col:3> '_Bool' lvalue Var 0x561273433690 'b$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x56127343d5d0 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x56127343d5a0 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x56127343d4c0 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x56127343d3e0 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x56127343d398 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x56127343d380 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x56127343d340 <col:20> '_Bool' lvalue Var 0x561273433598 'b$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x56127343d3c8 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x56127343d3b0 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x56127343d360 <col:38> '_Bool' lvalue Var 0x561273432f70 'b$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x56127343d4a0 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x56127343d458 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x56127343d440 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x56127343d400 <col:56> '_Bool' lvalue Var 0x561273433690 'b$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x56127343d488 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x56127343d470 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x56127343d420 <col:74> '_Bool' lvalue Var 0x5612734331c8 'b$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x56127343d558 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x56127343d510 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x56127343d4e0 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x56127343d588 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x56127343d570 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x56127343d538 <col:102> '_Bool' lvalue Var 0x561273433690 'b$w_buff1_used' '_Bool'
    |-BinaryOperator 0x56127343d7f0 <line:850:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x56127343d608 <col:3> '_Bool' lvalue Var 0x561273432f70 'b$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x56127343d7d8 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x56127343d7a8 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x56127343d6c8 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x56127343d680 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x56127343d668 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x56127343d628 <col:20> '_Bool' lvalue Var 0x561273433598 'b$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x56127343d6b0 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x56127343d698 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x56127343d648 <col:38> '_Bool' lvalue Var 0x561273432f70 'b$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x56127343d760 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x56127343d718 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x56127343d6e8 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x56127343d790 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x56127343d778 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x56127343d740 <col:66> '_Bool' lvalue Var 0x561273432f70 'b$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x56127343dad8 <line:851:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x56127343d810 <col:3> '_Bool' lvalue Var 0x5612734331c8 'b$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x56127343dac0 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x56127343da90 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x56127343d9b0 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x56127343d8d0 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x56127343d888 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x56127343d870 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x56127343d830 <col:20> '_Bool' lvalue Var 0x561273433598 'b$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x56127343d8b8 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x56127343d8a0 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x56127343d850 <col:38> '_Bool' lvalue Var 0x561273432f70 'b$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x56127343d990 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x56127343d948 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x56127343d930 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x56127343d8f0 <col:56> '_Bool' lvalue Var 0x561273433690 'b$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x56127343d978 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x56127343d960 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x56127343d910 <col:74> '_Bool' lvalue Var 0x5612734331c8 'b$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x56127343da48 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x56127343da00 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x56127343d9d0 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x56127343da78 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x56127343da60 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x56127343da28 <col:102> '_Bool' lvalue Var 0x5612734331c8 'b$r_buff1_thd0' '_Bool'
    |-CallExpr 0x56127343db30 <line:852:3, col:25> 'void'
    | `-ImplicitCastExpr 0x56127343db18 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x56127343daf8 <col:3> 'void ()' Function 0x5612733d9410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x56127343db88 <line:853:3, col:27> 'void'
    | `-ImplicitCastExpr 0x56127343db70 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x56127343db50 <col:3> 'void ()' Function 0x5612733d9350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x56127343def0 <line:854:3, col:141> '_Bool' '='
    | |-DeclRefExpr 0x56127343dba8 <col:3> '_Bool' lvalue Var 0x561273433780 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x56127343ded8 <col:21, col:141> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x56127343dec0 <col:21, col:141> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x56127343dea0 <col:22, col:141> 'int'
    |       `-BinaryOperator 0x56127343de80 <col:23, col:140> 'int' '&&'
    |         |-BinaryOperator 0x56127343dde8 <col:23, col:112> 'int' '&&'
    |         | |-BinaryOperator 0x56127343dd50 <col:23, col:84> 'int' '&&'
    |         | | |-BinaryOperator 0x56127343dcb8 <col:23, col:56> 'int' '&&'
    |         | | | |-BinaryOperator 0x56127343dc20 <col:23, col:28> 'int' '=='
    |         | | | | |-ImplicitCastExpr 0x56127343dc08 <col:23> 'int' <LValueToRValue>
    |         | | | | | `-DeclRefExpr 0x56127343dbc8 <col:23> 'int' lvalue Var 0x5612734339a0 'y' 'int'
    |         | | | | `-IntegerLiteral 0x56127343dbe8 <col:28> 'int' 2
    |         | | | `-BinaryOperator 0x56127343dc98 <col:33, col:56> 'int' '=='
    |         | | |   |-ImplicitCastExpr 0x56127343dc80 <col:33> 'int' <LValueToRValue>
    |         | | |   | `-DeclRefExpr 0x56127343dc40 <col:33> 'int' lvalue Var 0x561273432808 '__unbuffered_p0_EAX' 'int'
    |         | | |   `-IntegerLiteral 0x56127343dc60 <col:56> 'int' 0
    |         | | `-BinaryOperator 0x56127343dd30 <col:61, col:84> 'int' '=='
    |         | |   |-ImplicitCastExpr 0x56127343dd18 <col:61> 'int' <LValueToRValue>
    |         | |   | `-DeclRefExpr 0x56127343dcd8 <col:61> 'int' lvalue Var 0x561273432928 '__unbuffered_p2_EAX' 'int'
    |         | |   `-IntegerLiteral 0x56127343dcf8 <col:84> 'int' 0
    |         | `-BinaryOperator 0x56127343ddc8 <col:89, col:112> 'int' '=='
    |         |   |-ImplicitCastExpr 0x56127343ddb0 <col:89> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x56127343dd70 <col:89> 'int' lvalue Var 0x561273432a48 '__unbuffered_p3_EAX' 'int'
    |         |   `-IntegerLiteral 0x56127343dd90 <col:112> 'int' 1
    |         `-BinaryOperator 0x56127343de60 <col:117, col:140> 'int' '=='
    |           |-ImplicitCastExpr 0x56127343de48 <col:117> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x56127343de08 <col:117> 'int' lvalue Var 0x561273432b68 '__unbuffered_p3_EBX' 'int'
    |           `-IntegerLiteral 0x56127343de28 <col:140> 'int' 0
    |-CallExpr 0x56127343df48 <line:855:3, col:25> 'void'
    | `-ImplicitCastExpr 0x56127343df30 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x56127343df10 <col:3> 'void ()' Function 0x5612733d9410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x56127343dfc0 <line:856:3, col:36> 'void'
    | |-ImplicitCastExpr 0x56127343dfa8 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x56127343df68 <col:3> 'void (int)' Function 0x5612733d90d8 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x56127343e020 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x56127343dfe8 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x56127343df88 <col:21> '_Bool' lvalue Var 0x561273433780 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x56127343e058 <line:857:3, col:10>
      `-IntegerLiteral 0x56127343e038 <col:10> 'int' 0
