TranslationUnitDecl 0x564eff087f88 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x564eff088848 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x564eff088520 '__int128'
|-TypedefDecl 0x564eff0888b8 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x564eff088540 'unsigned __int128'
|-TypedefDecl 0x564eff088bc0 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x564eff088990 'struct __NSConstantString_tag'
|   `-Record 0x564eff088910 '__NSConstantString_tag'
|-TypedefDecl 0x564eff088c68 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x564eff088c20 'char *'
|   `-BuiltinType 0x564eff088020 'char'
|-TypedefDecl 0x564eff0c7b60 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x564eff088f00 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x564eff088d40 'struct __va_list_tag'
|     `-Record 0x564eff088cc0 '__va_list_tag'
|-FunctionDecl 0x564eff0c7ca0 <pthread-wmm/safe021_power.opt_false-unreach-call.i:1:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x564eff0c7bd0 <col:31> col:34 'int'
|-FunctionDecl 0x564eff0c7e68 <line:2:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x564eff0c7f90 <line:3:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x564eff0c80d8 <line:4:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x564eff0c8048 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x564eff0c8308 <col:40, col:99>
|   |-IfStmt 0x564eff0c82d8 <col:42, col:88>
|   | |-UnaryOperator 0x564eff0c81b8 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x564eff0c81a0 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x564eff0c8180 <col:47> 'int' lvalue ParmVar 0x564eff0c8048 'expression' 'int'
|   | `-CompoundStmt 0x564eff0c82c0 <col:59, col:88>
|   |   `-LabelStmt 0x564eff0c82a8 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x564eff0c8238 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x564eff0c8220 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x564eff0c81d0 <col:68> 'void () __attribute__((noreturn))' Function 0x564eff0c7f90 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x564eff0c82f0 <col:89>
|   `-ReturnStmt 0x564eff0c82f8 <col:91>
|-FunctionDecl 0x564eff0c8350 <line:5:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x564eff0c8410 <line:6:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x564eff0c8790 <line:8:1, line:10:76> line:8:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x564eff0c84c8 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x564eff0c8548 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x564eff0c85c8 <line:9:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x564eff0c8648 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x564eff0c8850 <line:10:22>
|-FunctionDecl 0x564eff0ee8a0 <line:11:1, line:13:76> line:11:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x564eff0c88c0 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x564eff0c8940 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x564eff0c89c0 <line:12:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x564eff0c8a40 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x564eff0ee960 <line:13:22>
|-FunctionDecl 0x564eff0eec10 <line:14:1, line:15:76> line:14:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x564eff0ee9d0 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x564eff0eea50 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x564eff0eead0 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x564eff0eecc8 <line:15:22>
|-TypedefDecl 0x564eff0eed38 <line:17:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x564eff0880e0 'unsigned char'
|-TypedefDecl 0x564eff0eeda8 <line:18:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x564eff088100 'unsigned short'
|-TypedefDecl 0x564eff0eee18 <line:19:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x564eff088120 'unsigned int'
|-TypedefDecl 0x564eff0eee88 <line:20:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x564eff088140 'unsigned long'
|-TypedefDecl 0x564eff0eeef8 <line:21:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x564eff088040 'signed char'
|-TypedefDecl 0x564eff0eef68 <line:22:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x564eff0880e0 'unsigned char'
|-TypedefDecl 0x564eff0eefd8 <line:23:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x564eff088060 'short'
|-TypedefDecl 0x564eff0ef048 <line:24:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x564eff088100 'unsigned short'
|-TypedefDecl 0x564eff0ef0b8 <line:25:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x564eff088080 'int'
|-TypedefDecl 0x564eff0ef128 <line:26:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x564eff088120 'unsigned int'
|-TypedefDecl 0x564eff0ef198 <line:27:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x564eff0880a0 'long'
|-TypedefDecl 0x564eff0ef208 <line:28:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x564eff088140 'unsigned long'
|-TypedefDecl 0x564eff0ef278 <line:29:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x564eff0880a0 'long'
|-TypedefDecl 0x564eff0ef2e8 <line:30:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x564eff088140 'unsigned long'
|-TypedefDecl 0x564eff0ef358 <line:31:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x564eff088140 'unsigned long'
|-TypedefDecl 0x564eff0ef3c8 <line:32:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x564eff088120 'unsigned int'
|-TypedefDecl 0x564eff0ef438 <line:33:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x564eff088120 'unsigned int'
|-TypedefDecl 0x564eff0ef4a8 <line:34:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x564eff088140 'unsigned long'
|-TypedefDecl 0x564eff0ef518 <line:35:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x564eff088140 'unsigned long'
|-TypedefDecl 0x564eff0ef588 <line:36:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x564eff088120 'unsigned int'
|-TypedefDecl 0x564eff0ef5f8 <line:37:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x564eff088140 'unsigned long'
|-TypedefDecl 0x564eff0ef668 <line:38:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x564eff0880a0 'long'
|-TypedefDecl 0x564eff0ef6d8 <line:39:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x564eff0880a0 'long'
|-TypedefDecl 0x564eff0ef748 <line:40:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x564eff088080 'int'
|-RecordDecl 0x564eff0ef7a0 <line:41:9, col:32> col:9 struct definition
| `-FieldDecl 0x564eff0ef918 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x564eff0ef9d0 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x564eff0ef970 'struct __fsid_t' sugar
|   `-RecordType 0x564eff0ef820 '__fsid_t'
|     `-Record 0x564eff0ef7a0 ''
|-TypedefDecl 0x564eff0efa58 <line:42:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x564eff0880a0 'long'
|-TypedefDecl 0x564eff0efac8 <line:43:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x564eff088140 'unsigned long'
|-TypedefDecl 0x564eff0efb38 <line:44:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x564eff088140 'unsigned long'
|-TypedefDecl 0x564eff0efba8 <line:45:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x564eff088120 'unsigned int'
|-TypedefDecl 0x564eff0efc18 <line:46:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x564eff0880a0 'long'
|-TypedefDecl 0x564eff0efc88 <line:47:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x564eff088120 'unsigned int'
|-TypedefDecl 0x564eff0efcf8 <line:48:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x564eff0880a0 'long'
|-TypedefDecl 0x564eff0efd68 <line:49:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x564eff088080 'int'
|-TypedefDecl 0x564eff0efdd8 <line:50:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x564eff088080 'int'
|-TypedefDecl 0x564eff0efe48 <line:51:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x564eff088080 'int'
|-TypedefDecl 0x564eff0efeb8 <line:52:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x564eff0887a0 'void *'
|   `-BuiltinType 0x564eff087fe0 'void'
|-TypedefDecl 0x564eff0eff28 <line:53:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x564eff0880a0 'long'
|-TypedefDecl 0x564eff0eff98 <line:54:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x564eff0880a0 'long'
|-TypedefDecl 0x564eff0f0008 <line:55:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x564eff0880a0 'long'
|-TypedefDecl 0x564eff0f0078 <line:56:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x564eff088140 'unsigned long'
|-TypedefDecl 0x564eff0f00e8 <line:57:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x564eff088140 'unsigned long'
|-TypedefDecl 0x564eff0f0158 <line:58:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x564eff088140 'unsigned long'
|-TypedefDecl 0x564eff0f01c8 <line:59:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x564eff088140 'unsigned long'
|-TypedefDecl 0x564eff0f0238 <line:60:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x564eff0880a0 'long'
|-TypedefDecl 0x564eff0f02a8 <line:61:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x564eff0880a0 'long'
|-TypedefDecl 0x564eff0f0318 <line:62:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x564eff0880a0 'long'
|-TypedefDecl 0x564eff0f0388 <line:63:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x564eff088140 'unsigned long'
|-TypedefDecl 0x564eff0f0418 <line:64:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x564eff0f03e0 '__off64_t' sugar
|   |-Typedef 0x564eff0ef6d8 '__off64_t'
|   `-BuiltinType 0x564eff0880a0 'long'
|-TypedefDecl 0x564eff0f0510 <line:65:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x564eff0f04d0 '__quad_t *'
|   `-TypedefType 0x564eff0f0470 '__quad_t' sugar
|     |-Typedef 0x564eff0ef278 '__quad_t'
|     `-BuiltinType 0x564eff0880a0 'long'
|-TypedefDecl 0x564eff0f0580 <line:66:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x564eff088c20 'char *'
|   `-BuiltinType 0x564eff088020 'char'
|-TypedefDecl 0x564eff0f05f0 <line:67:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x564eff0880a0 'long'
|-TypedefDecl 0x564eff0f0660 <line:68:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x564eff088120 'unsigned int'
|-FunctionDecl 0x564eff0f07a8 <line:69:1, line:73:1> line:70:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x564eff0f06d0 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x564eff0f0ae8 <line:71:1, line:73:1>
|   `-ReturnStmt 0x564eff0f0ad8 <line:72:3, col:34>
|     `-CallExpr 0x564eff0f0a98 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x564eff0f0a80 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x564eff0f0a10 <col:10> '<builtin fn type>' Function 0x564eff0f0880 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x564eff0f0ac0 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x564eff0f0a30 <col:29> 'unsigned int' lvalue ParmVar 0x564eff0f06d0 '__bsx' 'unsigned int'
|-FunctionDecl 0x564eff0f0880 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x564eff0f0920 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x564eff0f0990 <col:10> Implicit
| `-ConstAttr 0x564eff0f09e8 <col:10> Implicit
|-FunctionDecl 0x564eff0f0c40 <line:74:1, line:78:1> line:75:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x564eff0f0b38 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x564eff0f0f58 <line:76:1, line:78:1>
|   `-ReturnStmt 0x564eff0f0f48 <line:77:3, col:34>
|     `-CallExpr 0x564eff0f0f08 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x564eff0f0ef0 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x564eff0f0e78 <col:10> '<builtin fn type>' Function 0x564eff0f0ce8 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x564eff0f0f30 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x564eff0f0e98 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x564eff0f0b38 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x564eff0f0ce8 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x564eff0f0d88 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x564eff0f0df8 <col:10> Implicit
| `-ConstAttr 0x564eff0f0e50 <col:10> Implicit
|-TypedefDecl 0x564eff0f0f88 <line:79:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x564eff088140 'unsigned long'
|-TypedefDecl 0x564eff0f1018 <line:81:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x564eff0f0fe0 '__time_t' sugar
|   |-Typedef 0x564eff0efc18 '__time_t'
|   `-BuiltinType 0x564eff0880a0 'long'
|-RecordDecl 0x564eff0f1070 <line:84:1, line:88:3> line:84:8 struct timespec definition
| |-FieldDecl 0x564eff0f1128 <line:86:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x564eff0f11b8 <line:87:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x564eff0f1248 <line:89:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x564eff0f1210 '__pid_t' sugar
|   |-Typedef 0x564eff0ef748 '__pid_t'
|   `-BuiltinType 0x564eff088080 'int'
|-RecordDecl 0x564eff0f12a0 <line:90:1, line:93:3> line:90:8 struct sched_param definition
| `-FieldDecl 0x564eff0f1360 <line:92:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x564eff0f13b0 <line:96:1, line:99:3> line:96:8 struct __sched_param definition
| `-FieldDecl 0x564eff0f1470 <line:98:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x564eff0f14d8 <line:100:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x564eff088140 'unsigned long'
|-RecordDecl 0x564eff0f1530 <line:101:9, line:104:1> line:101:9 struct definition
| `-FieldDecl 0x564eff0f17c0 <line:103:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x564eff0f38b0 <line:101:1, line:104:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x564eff0f1810 'struct cpu_set_t' sugar
|   `-RecordType 0x564eff0f15b0 'cpu_set_t'
|     `-Record 0x564eff0f1530 ''
|-FunctionDecl 0x564eff0f3b88 <line:106:1, line:107:42> line:106:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x564eff0f3958 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x564eff0f3a60 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x564eff0f3c38 <line:107:19>
|-FunctionDecl 0x564eff0f3e10 <line:108:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x564eff0f3ca0 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x564eff0f3eb8 <col:69>
|-FunctionDecl 0x564eff0f4030 <line:109:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x564eff0f3f20 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x564eff0f40d8 <col:64>
|-FunctionDecl 0x564eff0f4398 <line:112:1, line:113:45> line:112:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x564eff0f4140 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x564eff0f4278 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x564eff0f4448 <line:113:22>
|-FunctionDecl 0x564eff0f46c8 <line:114:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x564eff0f44b0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x564eff0f45a8 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x564eff0f4778 <col:88>
|-FunctionDecl 0x564eff0f4a98 <line:115:1, line:116:85> line:115:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x564eff0f47e0 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x564eff0f48c0 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x564eff0f4950 <line:116:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x564eff0f4b50 <col:62>
|-FunctionDecl 0x564eff0f4cc8 <line:117:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x564eff0f4bb8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x564eff0f4d70 <col:63>
|-FunctionDecl 0x564eff0f4e98 <line:118:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x564eff0f4f38 <col:47>
|-FunctionDecl 0x564eff0f5040 <line:119:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x564eff0f4fa8 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x564eff0f50e8 <col:69>
|-FunctionDecl 0x564eff0f51f0 <line:120:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x564eff0f5158 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x564eff0f5298 <col:69>
|-FunctionDecl 0x564eff0f5558 <line:121:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x564eff0f5300 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x564eff0f5438 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x564eff0f5608 <col:88>
|-TypedefDecl 0x564eff0f5698 <line:125:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x564eff0f5660 '__clock_t' sugar
|   |-Typedef 0x564eff0efa58 '__clock_t'
|   `-BuiltinType 0x564eff0880a0 'long'
|-TypedefDecl 0x564eff0f5728 <line:128:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x564eff0f56f0 '__clockid_t' sugar
|   |-Typedef 0x564eff0efe48 '__clockid_t'
|   `-BuiltinType 0x564eff088080 'int'
|-TypedefDecl 0x564eff0f57b8 <line:129:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x564eff0f5780 '__timer_t' sugar
|   |-Typedef 0x564eff0efeb8 '__timer_t'
|   `-PointerType 0x564eff0887a0 'void *'
|     `-BuiltinType 0x564eff087fe0 'void'
|-RecordDecl 0x564eff0f5810 <line:131:1, line:144:1> line:131:8 struct tm definition
| |-FieldDecl 0x564eff0f58e8 <line:133:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x564eff0f5950 <line:134:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x564eff0f59b8 <line:135:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x564eff0f5a20 <line:136:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x564eff0f5a88 <line:137:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x564eff0f5af0 <line:138:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x564eff0f5b58 <line:139:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x564eff0f5bc0 <line:140:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x564eff0f5c28 <line:141:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x564eff0f5c90 <line:142:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x564eff0f5cf8 <line:143:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x564eff0f5d48 <line:147:1, line:151:3> line:147:8 struct itimerspec definition
| |-FieldDecl 0x564eff0f5e18 <line:149:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x564eff0f5e88 <line:150:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x564eff0f5f30 <line:152:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x564eff0f6100 <line:154:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x564eff0f61a0 <col:45>
|-FunctionDecl 0x564eff0f6380 <line:155:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x564eff0f6270 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x564eff0f6428 <col:54>
|-FunctionDecl 0x564eff0f6628 <line:156:1, line:157:73> line:156:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x564eff0f6490 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x564eff0f6508 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x564eff0f66d8 <line:157:22>
| `-ConstAttr 0x564eff0f6730 <col:63>
|-FunctionDecl 0x564eff0f7560 <line:158:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x564eff0f6828 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x564eff0f7608 <col:56>
|-FunctionDecl 0x564eff0f79b0 <line:159:1, line:161:77> line:159:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x564eff0f7678 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x564eff0f76f0 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x564eff0f7770 <line:160:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x564eff0f7868 <line:161:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x564eff0f7a70 <col:54>
|-RecordDecl 0x564eff0f7ac8 <line:163:9, line:170:1> line:163:16 struct __locale_struct definition
| |-RecordDecl 0x564eff0f7b78 parent 0x564eff087f88 <line:165:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x564eff0f7dd8 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x564eff0f7e78 <line:166:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x564eff0f7ee0 <line:167:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x564eff0f7f48 <line:168:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x564eff0f8038 <line:169:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x564eff0f8158 <line:163:1, line:170:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x564eff0f8100 'struct __locale_struct *'
|   `-ElaboratedType 0x564eff0f8090 'struct __locale_struct' sugar
|     `-RecordType 0x564eff0f7b50 'struct __locale_struct'
|       `-Record 0x564eff0f7ac8 '__locale_struct'
|-TypedefDecl 0x564eff0f8208 <line:171:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x564eff0f81d0 '__locale_t' sugar
|   |-Typedef 0x564eff0f8158 '__locale_t'
|   `-PointerType 0x564eff0f8100 'struct __locale_struct *'
|     `-ElaboratedType 0x564eff0f8090 'struct __locale_struct' sugar
|       `-RecordType 0x564eff0f7b50 'struct __locale_struct'
|         `-Record 0x564eff0f7ac8 '__locale_struct'
|-FunctionDecl 0x564eff0f8610 <line:172:1, line:175:63> line:172:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x564eff0f8278 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x564eff0f82f0 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x564eff0f8370 <line:173:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x564eff0f8400 <line:174:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x564eff0f8478 <line:175:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x564eff0f86d8 <col:40>
|-FunctionDecl 0x564eff0f88c8 <line:177:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x564eff0f87a0 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x564eff0f8970 <col:66>
|-FunctionDecl 0x564eff0f8a80 <line:178:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x564eff0f89d8 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x564eff0f8b28 <col:69>
|-FunctionDecl 0x564eff0f8d58 <line:180:1, line:181:75> line:180:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x564eff0f8b90 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x564eff0f8c20 <line:181:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x564eff0f8e08 <col:52>
|-FunctionDecl 0x564eff0f8fb0 <line:182:1, line:183:78> line:182:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x564eff0f8e70 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x564eff0f8f00 <line:183:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x564eff0f9060 <col:55>
|-FunctionDecl 0x564eff0f91f8 <line:185:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x564eff0f90e0 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x564eff0f92a0 <col:62>
|-FunctionDecl 0x564eff0f9418 <line:186:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x564eff0f9308 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x564eff0f94c0 <col:60>
|-FunctionDecl 0x564eff0f9718 <line:188:1, line:189:67> line:188:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x564eff0f9578 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x564eff0f95f8 <line:189:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x564eff0f97c8 <col:44>
|-FunctionDecl 0x564eff0f99d8 <line:190:1, line:191:72> line:190:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x564eff0f9830 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x564eff0f98b0 <line:191:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x564eff0f9a88 <col:49>
|-VarDecl 0x564eff0f9b88 <line:192:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x564eff0f9c08 <line:193:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x564eff0f9c88 <line:194:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x564eff0f9d50 <line:195:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x564eff0f9e80 <line:196:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x564eff0f9f20 <col:42>
|-VarDecl 0x564eff0f9f90 <line:197:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x564eff0fa010 <line:198:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x564eff0fa198 <line:199:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x564eff0fa088 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x564eff0fa240 <col:57>
|-FunctionDecl 0x564eff0fa350 <line:200:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x564eff0fa2c0 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x564eff0fa3f8 <col:56>
|-FunctionDecl 0x564eff0fb540 <line:201:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x564eff0fa478 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x564eff0fb5e8 <col:59>
|-FunctionDecl 0x564eff0fb6f0 <line:202:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x564eff0fb658 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x564eff0fb798 <col:48>
| `-ConstAttr 0x564eff0fb7f0 <col:89>
|-FunctionDecl 0x564eff0fba58 <line:203:1, line:204:37> line:203:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x564eff0fb8a8 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x564eff0fb938 <line:204:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x564eff0fbcb8 <line:205:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x564eff0fbb48 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x564eff0fbbd8 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x564eff0fbd68 <col:88>
|-FunctionDecl 0x564eff0fbf00 <line:206:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x564eff0fbdd0 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x564eff0fbe60 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x564eff0fbfb0 <col:88>
|-FunctionDecl 0x564eff0fc1c8 <line:207:1, line:208:45> line:207:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x564eff0fc018 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x564eff0fc0a8 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x564eff0fc278 <line:208:22>
|-FunctionDecl 0x564eff0fc5e8 <line:209:1, line:211:30> line:209:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x564eff0fc2e0 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x564eff0fc360 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x564eff0fc3f0 <line:210:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x564eff0fc480 <line:211:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x564eff0fc8e8 <line:212:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x564eff0fc6e8 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x564eff0fc7c0 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x564eff0fc998 <col:85>
|-FunctionDecl 0x564eff0fcd88 <line:213:1, line:215:75> line:213:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x564eff0fca00 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x564eff0fcb38 <line:214:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x564eff0fcc40 <line:215:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x564eff0fce40 <col:52>
|-FunctionDecl 0x564eff0fcfb8 <line:216:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x564eff0fcea8 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x564eff0fd060 <col:61>
|-FunctionDecl 0x564eff0fd560 <line:217:1, line:219:85> line:217:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x564eff0fd0c8 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x564eff0fd148 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x564eff0fd278 <line:218:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x564eff0fd368 <line:219:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x564eff0fd620 <col:62>
|-FunctionDecl 0x564eff0fd838 <line:220:1, line:221:45> line:220:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x564eff0fd688 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x564eff0fd718 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x564eff0fd8e8 <line:221:22>
|-FunctionDecl 0x564eff0fd9e8 <line:222:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x564eff0fd950 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x564eff0fda90 <col:65>
|-TypedefDecl 0x564eff0fdb00 <line:224:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x564eff088140 'unsigned long'
|-RecordDecl 0x564eff0fdb58 <line:225:1, line:229:1> line:225:7 union pthread_attr_t definition
| |-FieldDecl 0x564eff0fdca0 <line:227:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x564eff0fdd08 <line:228:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x564eff0fddb8 <line:230:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x564eff0fdd60 'union pthread_attr_t' sugar
|   `-RecordType 0x564eff0fdbe0 'union pthread_attr_t'
|     `-Record 0x564eff0fdb58 'pthread_attr_t'
|-RecordDecl 0x564eff0fde10 <line:231:9, line:235:1> line:231:16 struct __pthread_internal_list definition
| |-FieldDecl 0x564eff0fdf88 <line:233:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x564eff0fe000 <line:234:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x564eff0fe0b0 <line:231:1, line:235:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x564eff0fe050 'struct __pthread_internal_list' sugar
|   `-RecordType 0x564eff0fde90 'struct __pthread_internal_list'
|     `-Record 0x564eff0fde10 '__pthread_internal_list'
|-RecordDecl 0x564eff0fe120 <line:236:9, line:250:1> line:236:9 union definition
| |-RecordDecl 0x564eff0fe1c8 parent 0x564eff087f88 <line:238:3, line:247:3> line:238:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x564eff0fe2a0 <line:240:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x564eff0fe308 <line:241:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x564eff0fe370 <line:242:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x564eff0fe3d8 <line:243:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x564eff0fe440 <line:244:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x564eff0fe4a8 <line:245:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x564eff102580 <line:246:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x564eff102630 <line:238:3, line:247:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x564eff102720 <line:248:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x564eff102788 <line:249:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x564eff102910 <line:236:1, line:250:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x564eff1028b0 'union pthread_mutex_t' sugar
|   `-RecordType 0x564eff0fe1a0 'pthread_mutex_t'
|     `-Record 0x564eff0fe120 ''
|-RecordDecl 0x564eff102980 <line:251:9, line:255:1> line:251:9 union definition
| |-FieldDecl 0x564eff102ac0 <line:253:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x564eff102b28 <line:254:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x564eff102be0 <line:251:1, line:255:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x564eff102b80 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x564eff102a00 'pthread_mutexattr_t'
|     `-Record 0x564eff102980 ''
|-RecordDecl 0x564eff102c50 <line:256:9, line:271:1> line:256:9 union definition
| |-RecordDecl 0x564eff102cf8 <line:258:3, line:268:3> line:258:3 struct definition
| | |-FieldDecl 0x564eff102dc0 <line:260:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x564eff102e28 <line:261:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x564eff102e90 <line:262:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x564eff102ef8 <line:263:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x564eff102f60 <line:264:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x564eff102fc8 <line:265:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x564eff103030 <line:266:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x564eff103098 <line:267:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x564eff103150 <line:258:3, line:268:5> col:5 __data 'struct (anonymous struct at pthread-wmm/safe021_power.opt_false-unreach-call.i:258:3)':'struct pthread_cond_t::(anonymous at pthread-wmm/safe021_power.opt_false-unreach-call.i:258:3)'
| |-FieldDecl 0x564eff103240 <line:269:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x564eff1032a8 <line:270:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x564eff1033e0 <line:256:1, line:271:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x564eff103380 'union pthread_cond_t' sugar
|   `-RecordType 0x564eff102cd0 'pthread_cond_t'
|     `-Record 0x564eff102c50 ''
|-RecordDecl 0x564eff103450 <line:272:9, line:276:1> line:272:9 union definition
| |-FieldDecl 0x564eff103590 <line:274:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x564eff1035f8 <line:275:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x564eff1036b0 <line:272:1, line:276:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x564eff103650 'union pthread_condattr_t' sugar
|   `-RecordType 0x564eff1034d0 'pthread_condattr_t'
|     `-Record 0x564eff103450 ''
|-TypedefDecl 0x564eff103738 <line:277:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x564eff088120 'unsigned int'
|-TypedefDecl 0x564eff1037a8 <line:278:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x564eff088080 'int'
|-RecordDecl 0x564eff103800 <line:279:9, line:297:1> line:279:9 union definition
| |-RecordDecl 0x564eff1038a8 <line:281:3, line:294:3> line:281:3 struct definition
| | |-FieldDecl 0x564eff103970 <line:283:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x564eff1039d8 <line:284:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x564eff103a40 <line:285:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x564eff103aa8 <line:286:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x564eff103b10 <line:287:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x564eff103b78 <line:288:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x564eff103be0 <line:289:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x564eff103c48 <line:290:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x564eff103cb0 <line:291:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x564eff103d18 <line:292:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x564eff103d80 <line:293:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x564eff103e30 <line:281:3, line:294:5> col:5 __data 'struct (anonymous struct at pthread-wmm/safe021_power.opt_false-unreach-call.i:281:3)':'struct pthread_rwlock_t::(anonymous at pthread-wmm/safe021_power.opt_false-unreach-call.i:281:3)'
| |-FieldDecl 0x564eff103ed8 <line:295:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x564eff103f40 <line:296:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x564eff104090 <line:279:1, line:297:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x564eff104030 'union pthread_rwlock_t' sugar
|   `-RecordType 0x564eff103880 'pthread_rwlock_t'
|     `-Record 0x564eff103800 ''
|-RecordDecl 0x564eff104100 <line:298:9, line:302:1> line:298:9 union definition
| |-FieldDecl 0x564eff104240 <line:300:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x564eff1042a8 <line:301:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x564eff104360 <line:298:1, line:302:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x564eff104300 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x564eff104180 'pthread_rwlockattr_t'
|     `-Record 0x564eff104100 ''
|-TypedefDecl 0x564eff1043e8 <line:303:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x564eff088084 'volatile int' volatile
|   `-BuiltinType 0x564eff088080 'int'
|-RecordDecl 0x564eff104440 <line:304:9, line:308:1> line:304:9 union definition
| |-FieldDecl 0x564eff1065b0 <line:306:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x564eff106618 <line:307:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x564eff1066d0 <line:304:1, line:308:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x564eff106670 'union pthread_barrier_t' sugar
|   `-RecordType 0x564eff1044c0 'pthread_barrier_t'
|     `-Record 0x564eff104440 ''
|-RecordDecl 0x564eff106740 <line:309:9, line:313:1> line:309:9 union definition
| |-FieldDecl 0x564eff106840 <line:311:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x564eff1068a8 <line:312:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x564eff106960 <line:309:1, line:313:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x564eff106900 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x564eff1067c0 'pthread_barrierattr_t'
|     `-Record 0x564eff106740 ''
|-TypedefDecl 0x564eff106a78 <line:314:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x564eff106a10 'long [8]' 8 
|   `-BuiltinType 0x564eff0880a0 'long'
|-EnumDecl 0x564eff106ad0 <line:315:1, line:319:1> line:315:1
| |-EnumConstantDecl 0x564eff106b98 <line:317:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x564eff106be8 <line:318:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x564eff106c38 <line:320:1, line:331:1> line:320:1
| |-EnumConstantDecl 0x564eff106d08 <line:322:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x564eff106d58 <line:323:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x564eff106da8 <line:324:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x564eff106df8 <line:325:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x564eff106e80 <line:327:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x564eff106e68 <col:26> 'int'
| |   `-DeclRefExpr 0x564eff106e48 <col:26> 'int' EnumConstant 0x564eff106d08 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x564eff106f08 <line:328:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x564eff106ef0 <col:29> 'int'
| |   `-DeclRefExpr 0x564eff106ed0 <col:29> 'int' EnumConstant 0x564eff106d58 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x564eff106f90 <line:329:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x564eff106f78 <col:30> 'int'
| |   `-DeclRefExpr 0x564eff106f58 <col:30> 'int' EnumConstant 0x564eff106da8 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x564eff107018 <line:330:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x564eff107000 <col:27> 'int'
|     `-DeclRefExpr 0x564eff106fe0 <col:27> 'int' EnumConstant 0x564eff106e80 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x564eff107068 <line:332:1, line:338:1> line:332:1
| |-EnumConstantDecl 0x564eff107138 <line:334:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x564eff1071c0 <line:335:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x564eff1071a8 <col:30> 'int'
| |   `-DeclRefExpr 0x564eff107188 <col:30> 'int' EnumConstant 0x564eff107138 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x564eff107210 <line:336:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x564eff107298 <line:337:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x564eff107280 <col:29> 'int'
|     `-DeclRefExpr 0x564eff107260 <col:29> 'int' EnumConstant 0x564eff107210 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x564eff1072e8 <line:339:1, line:344:1> line:339:1
| |-EnumConstantDecl 0x564eff1073b8 <line:341:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x564eff107408 <line:342:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x564eff107458 <line:343:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x564eff1074a8 <line:345:1, line:351:1> line:345:1
| |-EnumConstantDecl 0x564eff1075c0 <line:347:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x564eff107610 <line:348:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x564eff107660 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x564eff1076e8 <line:350:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x564eff1076d0 <col:31> 'int'
|     `-DeclRefExpr 0x564eff1076b0 <col:31> 'int' EnumConstant 0x564eff1075c0 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x564eff107738 <line:352:1, line:356:1> line:352:1
| |-EnumConstantDecl 0x564eff107808 <line:354:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x564eff107858 <line:355:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x564eff1078a8 <line:357:1, line:361:1> line:357:1
| |-EnumConstantDecl 0x564eff107978 <line:359:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x564eff1079c8 <line:360:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x564eff107a18 <line:362:1, line:366:1> line:362:1
| |-EnumConstantDecl 0x564eff107ae8 <line:364:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x564eff107b38 <line:365:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x564eff107b88 <line:367:1, line:373:1> line:367:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x564eff107dc8 <line:369:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x564eff107e30 <line:370:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x564eff107e98 <line:371:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x564eff107fb8 <line:372:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x564eff108008 <line:374:1, line:378:1> line:374:1
| |-EnumConstantDecl 0x564eff1080d8 <line:376:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x564eff108128 <line:377:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x564eff108178 <line:379:1, line:383:1> line:379:1
| |-EnumConstantDecl 0x564eff108248 <line:381:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x564eff108298 <line:382:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x564eff1088f8 <line:385:1, line:388:96> line:385:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x564eff108390 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x564eff1084a0 <line:386:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x564eff1086e0 <line:387:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x564eff108760 <line:388:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x564eff1089b8 <col:47>
| |-NonNullAttr 0x564eff108a10 <col:77, col:94> 1 3
| `-CallbackAttr 0x564eff108a48 <line:385:12> Implicit 2 3
|-FunctionDecl 0x564eff108b70 <line:389:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x564eff108aa0 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x564eff108dc8 <line:390:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x564eff108c28 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x564eff108ca8 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x564eff108f98 <line:391:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x564eff108e88 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x564eff109040 <col:60>
|-FunctionDecl 0x564eff109190 <line:392:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x564eff109230 <col:54>
| `-ConstAttr 0x564eff109288 <col:95>
|-FunctionDecl 0x564eff109458 <line:393:1, line:394:70> line:393:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x564eff1092c0 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x564eff109338 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x564eff109508 <line:394:19>
| `-ConstAttr 0x564eff109560 <col:60>
|-FunctionDecl 0x564eff109f68 <line:395:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x564eff109e30 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x564eff10a010 <col:71>
| `-NonNullAttr 0x564eff10a068 <col:112, col:126> 1
|-FunctionDecl 0x564eff10a170 <line:396:1, line:397:79> line:396:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x564eff10a0b8 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x564eff10a218 <line:397:22>
| `-NonNullAttr 0x564eff10a270 <col:63, col:77> 1
|-FunctionDecl 0x564eff10a498 <line:398:1, line:400:82> line:398:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x564eff10a2b8 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x564eff10a338 <line:399:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x564eff10a548 <line:400:22>
| `-NonNullAttr 0x564eff10a5a0 <col:63, col:80> 1 2
|-FunctionDecl 0x564eff10a7a8 <line:401:1, line:403:79> line:401:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x564eff10a5e8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x564eff10a668 <line:402:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x564eff10a858 <line:403:22>
| `-NonNullAttr 0x564eff10a8b0 <col:63, col:77> 1
|-FunctionDecl 0x564eff10ab08 <line:404:1, line:406:82> line:404:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x564eff10a8f8 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x564eff10a9a0 <line:405:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x564eff10abb8 <line:406:22>
| `-NonNullAttr 0x564eff10ac10 <col:63, col:80> 1 2
|-FunctionDecl 0x564eff10be48 <line:407:1, line:409:79> line:407:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x564eff10ac58 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x564eff10acd0 <line:408:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x564eff10bef8 <line:409:22>
| `-NonNullAttr 0x564eff10bf50 <col:63, col:77> 1
|-FunctionDecl 0x564eff10c188 <line:410:1, line:412:82> line:410:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x564eff10bf98 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x564eff10c028 <line:411:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x564eff10c238 <line:412:22>
| `-NonNullAttr 0x564eff10c290 <col:63, col:80> 1 2
|-FunctionDecl 0x564eff10c4c8 <line:413:1, line:415:97> line:413:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x564eff10c2d8 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x564eff10c368 <line:414:12, line:415:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x564eff10c578 <col:37>
| `-NonNullAttr 0x564eff10c5d0 <col:78, col:95> 1 2
|-FunctionDecl 0x564eff10c7b8 <line:416:1, line:418:82> line:416:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x564eff10c618 <col:41, line:417:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x564eff10c698 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x564eff10c868 <line:418:22>
| `-NonNullAttr 0x564eff10c8c0 <col:63, col:80> 1 2
|-FunctionDecl 0x564eff10ca48 <line:419:1, line:420:79> line:419:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x564eff10c908 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x564eff10c988 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x564eff10caf8 <line:420:22>
| `-NonNullAttr 0x564eff10cb50 <col:63, col:77> 1
|-FunctionDecl 0x564eff10ccf8 <line:421:1, line:423:82> line:421:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x564eff10cb98 <col:42, line:422:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x564eff10cc18 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x564eff10cda8 <line:423:22>
| `-NonNullAttr 0x564eff10de30 <col:63, col:80> 1 2
|-FunctionDecl 0x564eff10dfb8 <line:424:1, line:426:79> line:424:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x564eff10de78 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x564eff10def8 <line:425:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x564eff10e068 <line:426:22>
| `-NonNullAttr 0x564eff10e0c0 <col:63, col:77> 1
|-FunctionDecl 0x564eff10e268 <line:427:1, line:429:82> line:427:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x564eff10e108 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x564eff10e188 <line:428:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x564eff10e318 <line:429:22>
| `-NonNullAttr 0x564eff10e370 <col:63, col:80> 1 2
|-FunctionDecl 0x564eff10e4f8 <line:430:1, line:431:79> line:430:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x564eff10e3b8 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x564eff10e438 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x564eff10e5a8 <line:431:22>
| `-NonNullAttr 0x564eff10e600 <col:63, col:77> 1
|-FunctionDecl 0x564eff10e828 <line:432:1, line:434:115> line:432:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x564eff10e648 <col:39, line:433:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x564eff10e6c8 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x564eff10e8d8 <line:434:22>
| |-NonNullAttr 0x564eff10e930 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x564eff10e968 <col:100> "" ""
|-FunctionDecl 0x564eff10eb78 <line:435:1, line:437:112> line:435:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x564eff10e9b8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x564eff10ea38 <line:436:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x564eff10ec28 <line:437:22>
| |-NonNullAttr 0x564eff10ec80 <col:63, col:77> 1
| `-DeprecatedAttr 0x564eff10ecb8 <col:97> "" ""
|-FunctionDecl 0x564eff10eeb8 <line:438:1, line:440:82> line:438:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x564eff10ed08 <col:39, line:439:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x564eff10ed80 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x564eff10ef68 <line:440:22>
| `-NonNullAttr 0x564eff10efc0 <col:63, col:80> 1 2
|-FunctionDecl 0x564eff10f140 <line:441:1, line:443:79> line:441:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x564eff10f008 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x564eff10f080 <line:442:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x564eff10f1f0 <line:443:22>
| `-NonNullAttr 0x564eff10f248 <col:63, col:77> 1
|-FunctionDecl 0x564eff10f538 <line:444:1, line:447:85> line:444:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x564eff10f298 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x564eff10f318 <line:445:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x564eff10f390 <line:446:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x564eff10f5f0 <line:447:22>
| `-NonNullAttr 0x564eff10f648 <col:63, col:83> 1 2 3
|-FunctionDecl 0x564eff10f8f8 <line:448:1, line:449:100> line:448:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x564eff10f6a0 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x564eff10f720 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x564eff10f798 <line:449:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x564eff10f9b0 <col:43>
| `-NonNullAttr 0x564eff10fa08 <col:84, col:98> 1
|-FunctionDecl 0x564eff10fcc8 <line:450:1, line:452:79> line:450:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x564eff10fa58 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x564eff10fad8 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x564eff10fb68 <line:451:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x564eff10fd80 <line:452:22>
| `-NonNullAttr 0x564eff10fdd8 <col:63, col:77> 3
|-FunctionDecl 0x564eff1100e8 <line:453:1, line:456:82> line:453:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x564eff10fe50 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x564eff10fed0 <line:454:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x564eff10ff60 <line:455:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x564eff1101a0 <line:456:22>
| `-NonNullAttr 0x564eff1101f8 <col:63, col:80> 2 3
|-FunctionDecl 0x564eff1103e8 <line:457:1, line:458:45> line:457:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x564eff110248 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x564eff1102c8 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x564eff110498 <line:458:22>
|-FunctionDecl 0x564eff110868 <line:459:1, line:460:71> line:459:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x564eff110560 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x564eff110700 <line:460:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x564eff110918 <col:52, col:69> 1 2
|-FunctionDecl 0x564eff110ac0 <line:461:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x564eff1109a0 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x564eff110a20 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x564eff110ca8 <line:462:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x564eff110b88 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x564eff110c08 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x564eff110e60 <line:463:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x564eff110d68 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x564eff110fa0 <line:464:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x564eff111040 <line:465:9, line:473:1> line:465:9 struct definition
| |-RecordDecl 0x564eff1110e8 <line:467:3, line:471:3> line:467:3 struct definition
| | |-FieldDecl 0x564eff1111d8 <line:469:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x564eff111240 <line:470:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x564eff111410 <line:467:3, line:471:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at pthread-wmm/safe021_power.opt_false-unreach-call.i:467:3) [1]'
| `-FieldDecl 0x564eff111508 <line:472:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x564eff1115c0 <line:465:1, line:473:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x564eff111560 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x564eff1110c0 '__pthread_unwind_buf_t'
| |   `-Record 0x564eff111040 ''
| `-AlignedAttr 0x564eff111618 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x564eff111690 <line:474:1, line:480:1> line:474:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x564eff1117f0 <line:476:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x564eff111858 <line:477:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x564eff1118c0 <line:478:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x564eff111928 <line:479:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x564eff111b30 <line:481:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x564eff111a20 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x564eff111c78 <line:483:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x564eff111be8 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x564eff111e70 <line:485:1, line:487:31> line:485:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x564eff111d30 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x564eff111f18 <line:487:22>
|-RecordDecl 0x564eff111f70 <line:489:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x564eff112288 <line:490:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x564eff1120e8 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x564eff112168 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x564eff112338 <col:86>
| `-ReturnsTwiceAttr 0x564eff112390 <col:12> Implicit
|-FunctionDecl 0x564eff1126b8 <line:491:1, line:493:79> line:491:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x564eff112460 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x564eff112570 <line:492:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x564eff112768 <line:493:22>
| `-NonNullAttr 0x564eff1127c0 <col:63, col:77> 1
|-FunctionDecl 0x564eff112938 <line:494:1, line:495:79> line:494:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x564eff112808 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x564eff1129e0 <line:495:22>
| `-NonNullAttr 0x564eff112a38 <col:63, col:77> 1
|-FunctionDecl 0x564eff112b40 <line:496:1, line:497:68> line:496:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x564eff112a88 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x564eff112be8 <line:497:22>
| `-NonNullAttr 0x564eff112c40 <col:52, col:66> 1
|-FunctionDecl 0x564eff112d40 <line:498:1, line:499:68> line:498:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x564eff112c88 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x564eff112de8 <line:499:22>
| `-NonNullAttr 0x564eff112e40 <col:52, col:66> 1
|-FunctionDecl 0x564eff113088 <line:500:1, line:502:85> line:500:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x564eff112e98 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x564eff112f28 <line:501:9, line:502:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x564eff113138 <col:36>
| `-NonNullAttr 0x564eff113190 <col:66, col:83> 1 2
|-FunctionDecl 0x564eff113290 <line:503:1, line:504:68> line:503:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x564eff1131d8 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x564eff113338 <line:504:22>
| `-NonNullAttr 0x564eff113390 <col:52, col:66> 1
|-FunctionDecl 0x564eff113628 <line:505:1, line:508:82> line:505:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x564eff113440 <col:42, line:506:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x564eff1134c0 <line:507:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x564eff1136d8 <line:508:22>
| `-NonNullAttr 0x564eff113730 <col:63, col:80> 1 2
|-FunctionDecl 0x564eff1139f8 <line:509:1, line:512:82> line:509:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x564eff113778 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x564eff1137f8 <line:510:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x564eff113878 <line:511:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x564eff113ab0 <line:512:22>
| `-NonNullAttr 0x564eff113b08 <col:63, col:80> 1 3
|-FunctionDecl 0x564eff113c10 <line:513:1, line:514:79> line:513:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x564eff113b58 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x564eff113cb8 <line:514:22>
| `-NonNullAttr 0x564eff113d10 <col:63, col:77> 1
|-FunctionDecl 0x564eff113f38 <line:515:1, line:516:79> line:515:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x564eff113dc0 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x564eff113fe0 <line:516:22>
| `-NonNullAttr 0x564eff114038 <col:63, col:77> 1
|-FunctionDecl 0x564eff114140 <line:517:1, line:518:79> line:517:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x564eff114088 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x564eff1141e8 <line:518:22>
| `-NonNullAttr 0x564eff114240 <col:63, col:77> 1
|-FunctionDecl 0x564eff114468 <line:519:1, line:522:82> line:519:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x564eff114288 <col:42, line:520:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x564eff114308 <line:521:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x564eff114518 <line:522:22>
| `-NonNullAttr 0x564eff114570 <col:63, col:80> 1 2
|-FunctionDecl 0x564eff114778 <line:523:1, line:525:79> line:523:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x564eff1145b8 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x564eff114638 <line:524:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x564eff114828 <line:525:22>
| `-NonNullAttr 0x564eff114880 <col:63, col:77> 1
|-FunctionDecl 0x564eff114a28 <line:526:1, line:528:82> line:526:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x564eff1148c8 <col:39, line:527:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x564eff114948 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x564eff114ad8 <line:528:22>
| `-NonNullAttr 0x564eff114b30 <col:63, col:80> 1 2
|-FunctionDecl 0x564eff114cb8 <line:529:1, line:530:79> line:529:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x564eff114b78 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x564eff114bf8 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x564eff114d68 <line:530:22>
| `-NonNullAttr 0x564eff114dc0 <col:63, col:77> 1
|-FunctionDecl 0x564eff115f90 <line:531:1, line:534:82> line:531:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x564eff114e08 <col:43, line:532:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x564eff115eb0 <line:533:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x564eff116040 <line:534:22>
| `-NonNullAttr 0x564eff116098 <col:63, col:80> 1 2
|-FunctionDecl 0x564eff116228 <line:535:1, line:537:79> line:535:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x564eff1160e8 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x564eff116168 <line:536:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x564eff1162d8 <line:537:22>
| `-NonNullAttr 0x564eff116330 <col:63, col:77> 1
|-FunctionDecl 0x564eff1164d8 <line:538:1, line:541:82> line:538:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x564eff116378 <col:46, line:539:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x564eff1163f8 <line:540:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x564eff116588 <line:541:22>
| `-NonNullAttr 0x564eff1165e0 <col:63, col:80> 1 2
|-FunctionDecl 0x564eff116768 <line:542:1, line:544:79> line:542:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x564eff116628 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x564eff1166a8 <line:543:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x564eff116818 <line:544:22>
| `-NonNullAttr 0x564eff116870 <col:63, col:77> 1
|-FunctionDecl 0x564eff116a58 <line:545:1, line:547:82> line:545:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x564eff1168b8 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x564eff116938 <line:546:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x564eff116b08 <line:547:22>
| `-NonNullAttr 0x564eff116b60 <col:63, col:80> 1 2
|-FunctionDecl 0x564eff116ce8 <line:548:1, line:550:79> line:548:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x564eff116ba8 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x564eff116c28 <line:549:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x564eff116d98 <line:550:22>
| `-NonNullAttr 0x564eff116df0 <col:63, col:77> 1
|-FunctionDecl 0x564eff118168 <line:551:1, line:553:86> line:551:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x564eff117f10 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x564eff118020 <line:552:5, line:553:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x564eff118218 <col:29>
| `-NonNullAttr 0x564eff118270 <col:70, col:84> 1
|-FunctionDecl 0x564eff1183e8 <line:554:1, line:555:79> line:554:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x564eff1182b8 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x564eff118490 <line:555:22>
| `-NonNullAttr 0x564eff1184e8 <col:63, col:77> 1
|-FunctionDecl 0x564eff1185f0 <line:556:1, line:557:68> line:556:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x564eff118538 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x564eff118698 <line:557:22>
| `-NonNullAttr 0x564eff1186f0 <col:52, col:66> 1
|-FunctionDecl 0x564eff1187f0 <line:558:1, line:559:65> line:558:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x564eff118738 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x564eff118898 <line:559:19>
| `-NonNullAttr 0x564eff1188f0 <col:49, col:63> 1
|-FunctionDecl 0x564eff118b28 <line:560:1, line:562:88> line:560:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x564eff118938 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x564eff1189c8 <line:561:12, line:562:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x564eff118bd8 <col:39>
| `-NonNullAttr 0x564eff118c30 <col:69, col:86> 1 2
|-FunctionDecl 0x564eff118d30 <line:563:1, line:564:68> line:563:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x564eff118c78 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x564eff118dd8 <line:564:22>
| `-NonNullAttr 0x564eff118e30 <col:52, col:66> 1
|-FunctionDecl 0x564eff118f98 <line:565:1, line:566:68> line:565:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x564eff118ee0 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x564eff119040 <line:566:22>
| `-NonNullAttr 0x564eff119098 <col:52, col:66> 1
|-FunctionDecl 0x564eff119258 <line:567:1, line:569:88> line:567:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x564eff1190e8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x564eff119178 <line:568:12, line:569:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x564eff119308 <col:39>
| `-NonNullAttr 0x564eff119360 <col:69, col:86> 1 2
|-FunctionDecl 0x564eff119460 <line:570:1, line:571:68> line:570:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x564eff1193a8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x564eff119508 <line:571:22>
| `-NonNullAttr 0x564eff119560 <col:52, col:66> 1
|-FunctionDecl 0x564eff119748 <line:572:1, line:573:79> line:572:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x564eff119610 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x564eff1197f0 <line:573:22>
| `-NonNullAttr 0x564eff119848 <col:63, col:77> 1
|-FunctionDecl 0x564eff119950 <line:574:1, line:575:79> line:574:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x564eff119898 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x564eff1199f8 <line:575:22>
| `-NonNullAttr 0x564eff119a50 <col:63, col:77> 1
|-FunctionDecl 0x564eff119c78 <line:576:1, line:579:82> line:576:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x564eff119a98 <col:43, line:577:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x564eff119b18 <line:578:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x564eff119d28 <line:579:22>
| `-NonNullAttr 0x564eff119d80 <col:63, col:80> 1 2
|-FunctionDecl 0x564eff119fa8 <line:580:1, line:582:79> line:580:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x564eff119dc8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x564eff119e48 <line:581:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x564eff11a058 <line:582:22>
| `-NonNullAttr 0x564eff11a0b0 <col:63, col:77> 1
|-FunctionDecl 0x564eff11a258 <line:583:1, line:586:82> line:583:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x564eff11a0f8 <col:43, line:584:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x564eff11a178 <line:585:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x564eff11a308 <line:586:22>
| `-NonNullAttr 0x564eff11a360 <col:63, col:80> 1 2
|-FunctionDecl 0x564eff11a4e8 <line:587:1, line:588:93> line:587:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x564eff11a3a8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x564eff11a428 <line:588:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x564eff11a598 <col:36>
| `-NonNullAttr 0x564eff11a5f0 <col:77, col:91> 1
|-FunctionDecl 0x564eff11a928 <line:589:1, line:591:79> line:589:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x564eff11a6d0 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x564eff11a7e0 <line:590:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x564eff11a9d8 <line:591:22>
| `-NonNullAttr 0x564eff11aa30 <col:63, col:77> 1
|-FunctionDecl 0x564eff11aba8 <line:592:1, line:593:79> line:592:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x564eff11aa78 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x564eff11ac50 <line:593:22>
| `-NonNullAttr 0x564eff11aca8 <col:63, col:77> 1
|-FunctionDecl 0x564eff11adb0 <line:594:1, line:595:68> line:594:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x564eff11acf8 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x564eff11ae58 <line:595:22>
| `-NonNullAttr 0x564eff11aeb0 <col:52, col:66> 1
|-FunctionDecl 0x564eff11afc8 <line:596:1, line:597:68> line:596:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x564eff11af10 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x564eff11b070 <line:597:22>
| `-NonNullAttr 0x564eff11b0c8 <col:52, col:66> 1
|-FunctionDecl 0x564eff11b2f8 <line:598:1, line:600:41> line:598:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x564eff11b118 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x564eff11b190 <line:599:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x564eff11b3a8 <line:600:22, col:39> 1 2
|-FunctionDecl 0x564eff11b6d8 <line:601:1, line:604:44> line:601:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x564eff11b428 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x564eff11b4a0 <line:602:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x564eff11b530 <line:603:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x564eff11b790 <line:604:22, col:42> 1 2 3
|-FunctionDecl 0x564eff11b9a8 <line:605:1, line:606:79> line:605:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x564eff11b870 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x564eff11ba50 <line:606:22>
| `-NonNullAttr 0x564eff11baa8 <col:63, col:77> 1
|-FunctionDecl 0x564eff11bbb0 <line:607:1, line:608:79> line:607:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x564eff11baf8 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x564eff11bc58 <line:608:22>
| `-NonNullAttr 0x564eff11bcb0 <col:63, col:77> 1
|-FunctionDecl 0x564eff11bf10 <line:609:1, line:612:82> line:609:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x564eff11bcf8 <col:41, line:610:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x564eff11bd78 <line:611:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x564eff11bfc0 <line:612:22>
| `-NonNullAttr 0x564eff11c018 <col:63, col:80> 1 2
|-FunctionDecl 0x564eff11c228 <line:613:1, line:614:94> line:613:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x564eff11c068 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x564eff11c0e8 <line:614:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x564eff11c2d8 <col:37>
| `-NonNullAttr 0x564eff11c330 <col:78, col:92> 1
|-FunctionDecl 0x564eff11c548 <line:615:1, line:618:82> line:615:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x564eff11c378 <col:39, line:616:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x564eff11c420 <line:617:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x564eff11c5f8 <line:618:22>
| `-NonNullAttr 0x564eff11c650 <col:63, col:80> 1 2
|-FunctionDecl 0x564eff11c818 <line:619:1, line:621:79> line:619:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x564eff11c698 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x564eff11c710 <line:620:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x564eff11c8c8 <line:621:22>
| `-NonNullAttr 0x564eff11c920 <col:63, col:77> 1
|-FunctionDecl 0x564eff11cbc8 <line:622:1, line:623:79> line:622:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x564eff11ca00 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x564eff11ca80 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x564eff11cc78 <line:623:22>
| `-NonNullAttr 0x564eff11ccd0 <col:63, col:77> 1
|-FunctionDecl 0x564eff11ce48 <line:624:1, line:625:79> line:624:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x564eff11cd18 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x564eff11cf20 <line:625:22>
| `-NonNullAttr 0x564eff11cf78 <col:63, col:77> 1
|-FunctionDecl 0x564eff11d080 <line:626:1, line:627:68> line:626:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x564eff11cfc8 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x564eff11d128 <line:627:22>
| `-NonNullAttr 0x564eff11d180 <col:52, col:66> 1
|-FunctionDecl 0x564eff11d280 <line:628:1, line:629:68> line:628:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x564eff11d1c8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x564eff11d328 <line:629:22>
| `-NonNullAttr 0x564eff11d380 <col:52, col:66> 1
|-FunctionDecl 0x564eff11d480 <line:630:1, line:631:68> line:630:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x564eff11d3c8 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x564eff11d528 <line:631:22>
| `-NonNullAttr 0x564eff11d580 <col:52, col:66> 1
|-FunctionDecl 0x564eff11d958 <line:632:1, line:635:79> line:632:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x564eff11d660 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x564eff11d770 <line:633:6, line:634:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x564eff11d7f0 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x564eff11da10 <line:635:22>
| `-NonNullAttr 0x564eff11da68 <col:63, col:77> 1
|-FunctionDecl 0x564eff11dbe8 <line:636:1, line:637:79> line:636:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x564eff11dab8 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x564eff11dc90 <line:637:22>
| `-NonNullAttr 0x564eff11dce8 <col:63, col:77> 1
|-FunctionDecl 0x564eff11ddf0 <line:638:1, line:639:68> line:638:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x564eff11dd38 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x564eff11de98 <line:639:22>
| `-NonNullAttr 0x564eff11def0 <col:52, col:66> 1
|-FunctionDecl 0x564eff11e0e8 <line:640:1, line:641:79> line:640:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x564eff11dfb0 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x564eff11e190 <line:641:22>
| `-NonNullAttr 0x564eff11e1e8 <col:63, col:77> 1
|-FunctionDecl 0x564eff11e2f0 <line:642:1, line:643:79> line:642:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x564eff11e238 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x564eff11e398 <line:643:22>
| `-NonNullAttr 0x564eff11e3f0 <col:63, col:77> 1
|-FunctionDecl 0x564eff11e618 <line:644:1, line:647:82> line:644:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x564eff11e438 <col:44, line:645:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x564eff11e4b8 <line:646:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x564eff11e6c8 <line:647:22>
| `-NonNullAttr 0x564eff11e720 <col:63, col:80> 1 2
|-FunctionDecl 0x564eff11e928 <line:648:1, line:650:79> line:648:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x564eff11e768 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x564eff11e7e8 <line:649:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x564eff11e9d8 <line:650:22>
| `-NonNullAttr 0x564eff11ea30 <col:63, col:77> 1
|-FunctionDecl 0x564eff11ed78 <line:651:1, line:653:79> line:651:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x564eff11eb10 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x564eff11ec30 <line:652:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x564eff11ee28 <line:653:22>
| `-NonNullAttr 0x564eff11ee80 <col:63, col:77> 1
|-FunctionDecl 0x564eff11efe8 <line:654:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x564eff11eec8 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x564eff11f090 <col:69>
|-FunctionDecl 0x564eff11f208 <line:655:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x564eff11f0f8 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x564eff11f2b0 <col:72>
|-FunctionDecl 0x564eff11f4e8 <line:656:1, line:657:67> line:656:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x564eff11f318 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x564eff11f3c8 <line:657:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x564eff11f598 <col:44>
|-FunctionDecl 0x564eff11f7b8 <line:658:1, line:660:79> line:658:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x564eff11f600 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x564eff11f678 <line:659:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x564eff11f868 <line:660:22>
| `-NonNullAttr 0x564eff11f8c0 <col:63, col:77> 2
|-FunctionDecl 0x564eff11fd08 <line:661:1, line:663:70> line:661:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x564eff11f9a0 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x564eff11fab0 <line:662:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x564eff11fbc0 <line:663:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x564eff11fdc0 <col:47>
|-FunctionDecl 0x564eff120f60 <line:665:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x564eff11fe30 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x564eff1210b8 <line:666:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x564eff121020 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x564eff121210 <line:667:1, col:20> col:8 used P2 'void *(void *)'
| `-ParmVarDecl 0x564eff121178 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x564eff1212d8 <line:668:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x564eff121398 <line:669:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x564eff121458 <line:670:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x564eff121510 <line:671:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x564eff121590 prev 0x564eff121510 <line:672:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x564eff1215f8 <col:24> 'int' 0
|-VarDecl 0x564eff121630 <line:673:1, col:5> col:5 used __unbuffered_p2_EAX 'int'
|-VarDecl 0x564eff1216b0 prev 0x564eff121630 <line:674:1, col:27> col:5 used __unbuffered_p2_EAX 'int' cinit
| `-IntegerLiteral 0x564eff121718 <col:27> 'int' 0
|-VarDecl 0x564eff121750 <line:675:1, col:5> col:5 used __unbuffered_p2_EBX 'int'
|-VarDecl 0x564eff1217d0 prev 0x564eff121750 <line:676:1, col:27> col:5 used __unbuffered_p2_EBX 'int' cinit
| `-IntegerLiteral 0x564eff121838 <col:27> 'int' 0
|-VarDecl 0x564eff121868 <line:677:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x564eff1218e0 <line:678:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x564eff121960 <line:679:1, col:5> col:5 used x 'int'
|-VarDecl 0x564eff1219e0 prev 0x564eff121960 <line:680:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x564eff121a48 <col:9> 'int' 0
|-VarDecl 0x564eff121a78 <line:681:1, col:7> col:7 used x$flush_delayed '_Bool'
|-VarDecl 0x564eff121af8 <line:682:1, col:5> col:5 used x$mem_tmp 'int'
|-VarDecl 0x564eff121b70 <line:683:1, col:7> col:7 used x$r_buff0_thd0 '_Bool'
|-VarDecl 0x564eff121be8 <line:684:1, col:7> col:7 used x$r_buff0_thd1 '_Bool'
|-VarDecl 0x564eff121c60 <line:685:1, col:7> col:7 used x$r_buff0_thd2 '_Bool'
|-VarDecl 0x564eff121cd8 <line:686:1, col:7> col:7 used x$r_buff0_thd3 '_Bool'
|-VarDecl 0x564eff121d50 <line:687:1, col:7> col:7 used x$r_buff1_thd0 '_Bool'
|-VarDecl 0x564eff121dc8 <line:688:1, col:7> col:7 used x$r_buff1_thd1 '_Bool'
|-VarDecl 0x564eff121e40 <line:689:1, col:7> col:7 used x$r_buff1_thd2 '_Bool'
|-VarDecl 0x564eff121eb8 <line:690:1, col:7> col:7 used x$r_buff1_thd3 '_Bool'
|-VarDecl 0x564eff121f70 <line:691:1, col:7> col:7 x$read_delayed '_Bool'
|-VarDecl 0x564eff121ff0 <line:692:1, col:6> col:6 x$read_delayed_var 'int *'
|-VarDecl 0x564eff122070 <line:693:1, col:5> col:5 used x$w_buff0 'int'
|-VarDecl 0x564eff1220e8 <line:694:1, col:7> col:7 used x$w_buff0_used '_Bool'
|-VarDecl 0x564eff122168 <line:695:1, col:5> col:5 used x$w_buff1 'int'
|-VarDecl 0x564eff1221e0 <line:696:1, col:7> col:7 used x$w_buff1_used '_Bool'
|-VarDecl 0x564eff122260 <line:697:1, col:5> col:5 used y 'int'
|-VarDecl 0x564eff1222e0 prev 0x564eff122260 <line:698:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x564eff122348 <col:9> 'int' 0
|-VarDecl 0x564eff122380 <line:699:1, col:5> col:5 used z 'int'
|-VarDecl 0x564eff122400 prev 0x564eff122380 <line:700:1, col:9> col:5 used z 'int' cinit
| `-IntegerLiteral 0x564eff122468 <col:9> 'int' 0
|-VarDecl 0x564eff122498 <line:701:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x564eff122510 <line:702:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x564eff122628 prev 0x564eff120f60 <line:703:1, line:722:1> line:703:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x564eff122590 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x564eff1238b8 <line:704:1, line:722:1>
|   |-CallExpr 0x564eff122738 <line:705:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x564eff122720 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564eff1226d0 <col:3> 'void ()' Function 0x564eff0c8350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x564eff122798 <line:706:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x564eff122758 <col:3> 'int' lvalue Var 0x564eff122400 'z' 'int'
|   | `-IntegerLiteral 0x564eff122778 <col:7> 'int' 1
|   |-CallExpr 0x564eff1227f0 <line:707:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x564eff1227d8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564eff1227b8 <col:3> 'void ()' Function 0x564eff0c8410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x564eff122848 <line:708:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x564eff122830 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564eff122810 <col:3> 'void ()' Function 0x564eff0c8350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x564eff1228a8 <line:709:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x564eff122868 <col:3> 'int' lvalue Var 0x564eff1219e0 'x' 'int'
|   | `-IntegerLiteral 0x564eff122888 <col:7> 'int' 1
|   |-CallExpr 0x564eff122900 <line:710:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x564eff1228e8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564eff1228c8 <col:3> 'void ()' Function 0x564eff0c8410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x564eff122958 <line:711:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x564eff122940 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564eff122920 <col:3> 'void ()' Function 0x564eff0c8350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x564eff122c40 <line:712:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x564eff122978 <col:3> 'int' lvalue Var 0x564eff1219e0 'x' 'int'
|   | `-ConditionalOperator 0x564eff122c10 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x564eff122a38 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x564eff1229f0 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x564eff1229d8 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x564eff122998 <col:7> '_Bool' lvalue Var 0x564eff1220e8 'x$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x564eff122a20 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x564eff122a08 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x564eff1229b8 <col:25> '_Bool' lvalue Var 0x564eff121be8 'x$r_buff0_thd1' '_Bool'
|   |   |-ImplicitCastExpr 0x564eff122bf8 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x564eff122a58 <col:42> 'int' lvalue Var 0x564eff122070 'x$w_buff0' 'int'
|   |   `-ParenExpr 0x564eff122bd8 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x564eff122ba8 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x564eff122b18 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x564eff122ad0 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x564eff122ab8 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x564eff122a78 <col:55> '_Bool' lvalue Var 0x564eff1221e0 'x$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x564eff122b00 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x564eff122ae8 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x564eff122a98 <col:73> '_Bool' lvalue Var 0x564eff121dc8 'x$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x564eff122b78 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x564eff122b38 <col:90> 'int' lvalue Var 0x564eff122168 'x$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x564eff122b90 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x564eff122b58 <col:102> 'int' lvalue Var 0x564eff1219e0 'x' 'int'
|   |-BinaryOperator 0x564eff122e48 <line:713:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x564eff122c60 <col:3> '_Bool' lvalue Var 0x564eff1220e8 'x$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x564eff122e30 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x564eff122e00 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x564eff122d20 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x564eff122cd8 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x564eff122cc0 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x564eff122c80 <col:20> '_Bool' lvalue Var 0x564eff1220e8 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x564eff122d08 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x564eff122cf0 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x564eff122ca0 <col:38> '_Bool' lvalue Var 0x564eff121be8 'x$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x564eff122db8 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x564eff122d70 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x564eff122d40 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x564eff122de8 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x564eff122dd0 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x564eff122d98 <col:66> '_Bool' lvalue Var 0x564eff1220e8 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x564eff123148 <line:714:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x564eff122e68 <col:3> '_Bool' lvalue Var 0x564eff1221e0 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x564eff123130 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x564eff123100 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x564eff123020 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x564eff122f28 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x564eff122ee0 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x564eff122ec8 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x564eff122e88 <col:20> '_Bool' lvalue Var 0x564eff1220e8 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x564eff122f10 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x564eff122ef8 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x564eff122ea8 <col:38> '_Bool' lvalue Var 0x564eff121be8 'x$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x564eff123000 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x564eff122fb8 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x564eff122fa0 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x564eff122f48 <col:56> '_Bool' lvalue Var 0x564eff1221e0 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x564eff122fe8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x564eff122fd0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x564eff122f80 <col:74> '_Bool' lvalue Var 0x564eff121dc8 'x$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x564eff1230b8 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x564eff123070 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x564eff123040 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x564eff1230e8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x564eff1230d0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x564eff123098 <col:102> '_Bool' lvalue Var 0x564eff1221e0 'x$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x564eff123350 <line:715:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x564eff123168 <col:3> '_Bool' lvalue Var 0x564eff121be8 'x$r_buff0_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x564eff123338 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x564eff123308 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x564eff123228 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x564eff1231e0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x564eff1231c8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x564eff123188 <col:20> '_Bool' lvalue Var 0x564eff1220e8 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x564eff123210 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x564eff1231f8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x564eff1231a8 <col:38> '_Bool' lvalue Var 0x564eff121be8 'x$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x564eff1232c0 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x564eff123278 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x564eff123248 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x564eff1232f0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x564eff1232d8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x564eff1232a0 <col:66> '_Bool' lvalue Var 0x564eff121be8 'x$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x564eff123638 <line:716:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x564eff123370 <col:3> '_Bool' lvalue Var 0x564eff121dc8 'x$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x564eff123620 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x564eff1235f0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x564eff123510 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x564eff123430 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x564eff1233e8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x564eff1233d0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x564eff123390 <col:20> '_Bool' lvalue Var 0x564eff1220e8 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x564eff123418 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x564eff123400 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x564eff1233b0 <col:38> '_Bool' lvalue Var 0x564eff121be8 'x$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x564eff1234f0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x564eff1234a8 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x564eff123490 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x564eff123450 <col:56> '_Bool' lvalue Var 0x564eff1221e0 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x564eff1234d8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x564eff1234c0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x564eff123470 <col:74> '_Bool' lvalue Var 0x564eff121dc8 'x$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x564eff1235a8 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x564eff123560 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x564eff123530 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x564eff1235d8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x564eff1235c0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x564eff123588 <col:102> '_Bool' lvalue Var 0x564eff121dc8 'x$r_buff1_thd1' '_Bool'
|   |-CallExpr 0x564eff123690 <line:717:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x564eff123678 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564eff123658 <col:3> 'void ()' Function 0x564eff0c8410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x564eff1236e8 <line:718:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x564eff1236d0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564eff1236b0 <col:3> 'void ()' Function 0x564eff0c8350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x564eff1237a0 <line:719:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x564eff123708 <col:3> 'int' lvalue Var 0x564eff121590 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x564eff123780 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x564eff123768 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x564eff123728 <col:22> 'int' lvalue Var 0x564eff121590 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x564eff123748 <col:41> 'int' 1
|   |-CallExpr 0x564eff1237f8 <line:720:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x564eff1237e0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564eff1237c0 <col:3> 'void ()' Function 0x564eff0c8410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x564eff1238a8 <line:721:3, col:36>
|     `-CallExpr 0x564eff123888 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x564eff123870 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x564eff123818 <col:10> 'void *(void)' Function 0x564eff0c7e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x564eff123a00 prev 0x564eff1210b8 <line:723:1, line:751:1> line:723:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x564eff123968 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x564eff1251c8 <line:724:1, line:751:1>
|   |-CallExpr 0x564eff123ae0 <line:725:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x564eff123ac8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564eff123aa8 <col:3> 'void ()' Function 0x564eff0c8350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x564eff123b58 <line:726:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x564eff123b00 <col:3> 'int' lvalue Var 0x564eff122168 'x$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x564eff123b40 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x564eff123b20 <col:15> 'int' lvalue Var 0x564eff122070 'x$w_buff0' 'int'
|   |-BinaryOperator 0x564eff123bb8 <line:727:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x564eff123b78 <col:3> 'int' lvalue Var 0x564eff122070 'x$w_buff0' 'int'
|   | `-IntegerLiteral 0x564eff123b98 <col:15> 'int' 2
|   |-BinaryOperator 0x564eff123c30 <line:728:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x564eff123bd8 <col:3> '_Bool' lvalue Var 0x564eff1221e0 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x564eff123c18 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x564eff123bf8 <col:20> '_Bool' lvalue Var 0x564eff1220e8 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x564eff123cc8 <line:729:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x564eff123c50 <col:3> '_Bool' lvalue Var 0x564eff1220e8 'x$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x564eff123ca0 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x564eff123c70 <col:27> 'int' 1
|   |-CallExpr 0x564eff123e48 <line:730:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x564eff123e30 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x564eff123ce8 <col:3> 'void (int)' Function 0x564eff0c80d8 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x564eff123de8 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x564eff123dc8 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x564eff123da8 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x564eff123d60 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x564eff123d48 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x564eff123d08 <col:23> '_Bool' lvalue Var 0x564eff1221e0 'x$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x564eff123d90 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x564eff123d78 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x564eff123d28 <col:41> '_Bool' lvalue Var 0x564eff1220e8 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x564eff123ec8 <line:731:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x564eff123e70 <col:3> '_Bool' lvalue Var 0x564eff121d50 'x$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x564eff123eb0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x564eff123e90 <col:20> '_Bool' lvalue Var 0x564eff121b70 'x$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x564eff123f40 <line:732:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x564eff123ee8 <col:3> '_Bool' lvalue Var 0x564eff121dc8 'x$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x564eff123f28 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x564eff123f08 <col:20> '_Bool' lvalue Var 0x564eff121be8 'x$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x564eff123fc8 <line:733:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x564eff123f60 <col:3> '_Bool' lvalue Var 0x564eff121e40 'x$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x564eff123fb0 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x564eff123f90 <col:20> '_Bool' lvalue Var 0x564eff121c60 'x$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x564eff124040 <line:734:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x564eff123fe8 <col:3> '_Bool' lvalue Var 0x564eff121eb8 'x$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x564eff124028 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x564eff124008 <col:20> '_Bool' lvalue Var 0x564eff121cd8 'x$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x564eff1240d8 <line:735:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x564eff124060 <col:3> '_Bool' lvalue Var 0x564eff121c60 'x$r_buff0_thd2' '_Bool'
|   | `-CStyleCastExpr 0x564eff1240b0 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x564eff124080 <col:27> 'int' 1
|   |-CallExpr 0x564eff124130 <line:736:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x564eff124118 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564eff1240f8 <col:3> 'void ()' Function 0x564eff0c8410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x564eff124188 <line:737:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x564eff124170 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564eff124150 <col:3> 'void ()' Function 0x564eff0c8350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x564eff1241e8 <line:738:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x564eff1241a8 <col:3> 'int' lvalue Var 0x564eff1222e0 'y' 'int'
|   | `-IntegerLiteral 0x564eff1241c8 <col:7> 'int' 1
|   |-CallExpr 0x564eff124240 <line:739:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x564eff124228 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564eff124208 <col:3> 'void ()' Function 0x564eff0c8410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x564eff124298 <line:740:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x564eff124280 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564eff124260 <col:3> 'void ()' Function 0x564eff0c8350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x564eff124580 <line:741:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x564eff1242b8 <col:3> 'int' lvalue Var 0x564eff1219e0 'x' 'int'
|   | `-ConditionalOperator 0x564eff124550 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x564eff124378 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x564eff124330 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x564eff124318 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x564eff1242d8 <col:7> '_Bool' lvalue Var 0x564eff1220e8 'x$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x564eff124360 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x564eff124348 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x564eff1242f8 <col:25> '_Bool' lvalue Var 0x564eff121c60 'x$r_buff0_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x564eff124538 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x564eff124398 <col:42> 'int' lvalue Var 0x564eff122070 'x$w_buff0' 'int'
|   |   `-ParenExpr 0x564eff124518 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x564eff1244e8 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x564eff124458 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x564eff124410 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x564eff1243f8 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x564eff1243b8 <col:55> '_Bool' lvalue Var 0x564eff1221e0 'x$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x564eff124440 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x564eff124428 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x564eff1243d8 <col:73> '_Bool' lvalue Var 0x564eff121e40 'x$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x564eff1244b8 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x564eff124478 <col:90> 'int' lvalue Var 0x564eff122168 'x$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x564eff1244d0 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x564eff124498 <col:102> 'int' lvalue Var 0x564eff1219e0 'x' 'int'
|   |-BinaryOperator 0x564eff124788 <line:742:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x564eff1245a0 <col:3> '_Bool' lvalue Var 0x564eff1220e8 'x$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x564eff124770 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x564eff124740 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x564eff124660 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x564eff124618 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x564eff124600 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x564eff1245c0 <col:20> '_Bool' lvalue Var 0x564eff1220e8 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x564eff124648 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x564eff124630 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x564eff1245e0 <col:38> '_Bool' lvalue Var 0x564eff121c60 'x$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x564eff1246f8 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x564eff1246b0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x564eff124680 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x564eff124728 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x564eff124710 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x564eff1246d8 <col:66> '_Bool' lvalue Var 0x564eff1220e8 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x564eff124a70 <line:743:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x564eff1247a8 <col:3> '_Bool' lvalue Var 0x564eff1221e0 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x564eff124a58 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x564eff124a28 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x564eff124948 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x564eff124868 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x564eff124820 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x564eff124808 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x564eff1247c8 <col:20> '_Bool' lvalue Var 0x564eff1220e8 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x564eff124850 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x564eff124838 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x564eff1247e8 <col:38> '_Bool' lvalue Var 0x564eff121c60 'x$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x564eff124928 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x564eff1248e0 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x564eff1248c8 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x564eff124888 <col:56> '_Bool' lvalue Var 0x564eff1221e0 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x564eff124910 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x564eff1248f8 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x564eff1248a8 <col:74> '_Bool' lvalue Var 0x564eff121e40 'x$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x564eff1249e0 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x564eff124998 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x564eff124968 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x564eff124a10 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x564eff1249f8 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x564eff1249c0 <col:102> '_Bool' lvalue Var 0x564eff1221e0 'x$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x564eff124c78 <line:744:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x564eff124a90 <col:3> '_Bool' lvalue Var 0x564eff121c60 'x$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x564eff124c60 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x564eff124c30 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x564eff124b50 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x564eff124b08 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x564eff124af0 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x564eff124ab0 <col:20> '_Bool' lvalue Var 0x564eff1220e8 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x564eff124b38 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x564eff124b20 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x564eff124ad0 <col:38> '_Bool' lvalue Var 0x564eff121c60 'x$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x564eff124be8 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x564eff124ba0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x564eff124b70 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x564eff124c18 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x564eff124c00 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x564eff124bc8 <col:66> '_Bool' lvalue Var 0x564eff121c60 'x$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x564eff124f60 <line:745:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x564eff124c98 <col:3> '_Bool' lvalue Var 0x564eff121e40 'x$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x564eff124f48 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x564eff124f18 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x564eff124e38 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x564eff124d58 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x564eff124d10 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x564eff124cf8 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x564eff124cb8 <col:20> '_Bool' lvalue Var 0x564eff1220e8 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x564eff124d40 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x564eff124d28 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x564eff124cd8 <col:38> '_Bool' lvalue Var 0x564eff121c60 'x$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x564eff124e18 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x564eff124dd0 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x564eff124db8 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x564eff124d78 <col:56> '_Bool' lvalue Var 0x564eff1221e0 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x564eff124e00 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x564eff124de8 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x564eff124d98 <col:74> '_Bool' lvalue Var 0x564eff121e40 'x$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x564eff124ed0 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x564eff124e88 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x564eff124e58 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x564eff124f00 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x564eff124ee8 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x564eff124eb0 <col:102> '_Bool' lvalue Var 0x564eff121e40 'x$r_buff1_thd2' '_Bool'
|   |-CallExpr 0x564eff124fd8 <line:746:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x564eff124fc0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564eff124fa0 <col:3> 'void ()' Function 0x564eff0c8410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x564eff125030 <line:747:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x564eff125018 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564eff124ff8 <col:3> 'void ()' Function 0x564eff0c8350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x564eff1250e8 <line:748:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x564eff125050 <col:3> 'int' lvalue Var 0x564eff121590 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x564eff1250c8 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x564eff1250b0 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x564eff125070 <col:22> 'int' lvalue Var 0x564eff121590 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x564eff125090 <col:41> 'int' 1
|   |-CallExpr 0x564eff125140 <line:749:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x564eff125128 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564eff125108 <col:3> 'void ()' Function 0x564eff0c8410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x564eff1251b8 <line:750:3, col:36>
|     `-CallExpr 0x564eff125198 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x564eff125180 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x564eff125160 <col:10> 'void *(void)' Function 0x564eff0c7e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x564eff125358 prev 0x564eff121210 <line:752:1, line:771:1> line:752:8 used P2 'void *(void *)'
| |-ParmVarDecl 0x564eff1252c0 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x564eff1265b8 <line:753:1, line:771:1>
|   |-CallExpr 0x564eff125438 <line:754:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x564eff125420 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564eff125400 <col:3> 'void ()' Function 0x564eff0c8350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x564eff1254b0 <line:755:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x564eff125458 <col:3> 'int' lvalue Var 0x564eff1216b0 '__unbuffered_p2_EAX' 'int'
|   | `-ImplicitCastExpr 0x564eff125498 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x564eff125478 <col:25> 'int' lvalue Var 0x564eff1222e0 'y' 'int'
|   |-CallExpr 0x564eff125508 <line:756:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x564eff1254f0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564eff1254d0 <col:3> 'void ()' Function 0x564eff0c8410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x564eff125560 <line:757:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x564eff125548 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564eff125528 <col:3> 'void ()' Function 0x564eff0c8350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x564eff1255d8 <line:758:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x564eff125580 <col:3> 'int' lvalue Var 0x564eff1217d0 '__unbuffered_p2_EBX' 'int'
|   | `-ImplicitCastExpr 0x564eff1255c0 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x564eff1255a0 <col:25> 'int' lvalue Var 0x564eff122400 'z' 'int'
|   |-CallExpr 0x564eff125630 <line:759:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x564eff125618 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564eff1255f8 <col:3> 'void ()' Function 0x564eff0c8410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x564eff125688 <line:760:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x564eff125670 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564eff125650 <col:3> 'void ()' Function 0x564eff0c8350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x564eff125970 <line:761:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x564eff1256a8 <col:3> 'int' lvalue Var 0x564eff1219e0 'x' 'int'
|   | `-ConditionalOperator 0x564eff125940 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x564eff125768 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x564eff125720 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x564eff125708 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x564eff1256c8 <col:7> '_Bool' lvalue Var 0x564eff1220e8 'x$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x564eff125750 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x564eff125738 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x564eff1256e8 <col:25> '_Bool' lvalue Var 0x564eff121cd8 'x$r_buff0_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x564eff125928 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x564eff125788 <col:42> 'int' lvalue Var 0x564eff122070 'x$w_buff0' 'int'
|   |   `-ParenExpr 0x564eff125908 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x564eff1258d8 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x564eff125848 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x564eff125800 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x564eff1257e8 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x564eff1257a8 <col:55> '_Bool' lvalue Var 0x564eff1221e0 'x$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x564eff125830 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x564eff125818 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x564eff1257c8 <col:73> '_Bool' lvalue Var 0x564eff121eb8 'x$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x564eff1258a8 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x564eff125868 <col:90> 'int' lvalue Var 0x564eff122168 'x$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x564eff1258c0 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x564eff125888 <col:102> 'int' lvalue Var 0x564eff1219e0 'x' 'int'
|   |-BinaryOperator 0x564eff125b78 <line:762:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x564eff125990 <col:3> '_Bool' lvalue Var 0x564eff1220e8 'x$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x564eff125b60 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x564eff125b30 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x564eff125a50 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x564eff125a08 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x564eff1259f0 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x564eff1259b0 <col:20> '_Bool' lvalue Var 0x564eff1220e8 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x564eff125a38 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x564eff125a20 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x564eff1259d0 <col:38> '_Bool' lvalue Var 0x564eff121cd8 'x$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x564eff125ae8 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x564eff125aa0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x564eff125a70 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x564eff125b18 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x564eff125b00 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x564eff125ac8 <col:66> '_Bool' lvalue Var 0x564eff1220e8 'x$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x564eff125e60 <line:763:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x564eff125b98 <col:3> '_Bool' lvalue Var 0x564eff1221e0 'x$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x564eff125e48 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x564eff125e18 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x564eff125d38 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x564eff125c58 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x564eff125c10 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x564eff125bf8 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x564eff125bb8 <col:20> '_Bool' lvalue Var 0x564eff1220e8 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x564eff125c40 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x564eff125c28 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x564eff125bd8 <col:38> '_Bool' lvalue Var 0x564eff121cd8 'x$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x564eff125d18 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x564eff125cd0 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x564eff125cb8 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x564eff125c78 <col:56> '_Bool' lvalue Var 0x564eff1221e0 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x564eff125d00 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x564eff125ce8 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x564eff125c98 <col:74> '_Bool' lvalue Var 0x564eff121eb8 'x$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x564eff125dd0 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x564eff125d88 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x564eff125d58 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x564eff125e00 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x564eff125de8 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x564eff125db0 <col:102> '_Bool' lvalue Var 0x564eff1221e0 'x$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x564eff126088 <line:764:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x564eff125e80 <col:3> '_Bool' lvalue Var 0x564eff121cd8 'x$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x564eff126070 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x564eff126040 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x564eff125f40 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x564eff125ef8 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x564eff125ee0 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x564eff125ea0 <col:20> '_Bool' lvalue Var 0x564eff1220e8 'x$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x564eff125f28 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x564eff125f10 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x564eff125ec0 <col:38> '_Bool' lvalue Var 0x564eff121cd8 'x$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x564eff125ff8 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x564eff125fb0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x564eff125f60 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x564eff126028 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x564eff126010 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x564eff125fd8 <col:66> '_Bool' lvalue Var 0x564eff121cd8 'x$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x564eff126370 <line:765:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x564eff1260a8 <col:3> '_Bool' lvalue Var 0x564eff121eb8 'x$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x564eff126358 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x564eff126328 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x564eff126248 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x564eff126168 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x564eff126120 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x564eff126108 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x564eff1260c8 <col:20> '_Bool' lvalue Var 0x564eff1220e8 'x$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x564eff126150 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x564eff126138 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x564eff1260e8 <col:38> '_Bool' lvalue Var 0x564eff121cd8 'x$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x564eff126228 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x564eff1261e0 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x564eff1261c8 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x564eff126188 <col:56> '_Bool' lvalue Var 0x564eff1221e0 'x$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x564eff126210 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x564eff1261f8 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x564eff1261a8 <col:74> '_Bool' lvalue Var 0x564eff121eb8 'x$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x564eff1262e0 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x564eff126298 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x564eff126268 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x564eff126310 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x564eff1262f8 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x564eff1262c0 <col:102> '_Bool' lvalue Var 0x564eff121eb8 'x$r_buff1_thd3' '_Bool'
|   |-CallExpr 0x564eff1263c8 <line:766:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x564eff1263b0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564eff126390 <col:3> 'void ()' Function 0x564eff0c8410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x564eff126420 <line:767:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x564eff126408 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564eff1263e8 <col:3> 'void ()' Function 0x564eff0c8350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x564eff1264d8 <line:768:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x564eff126440 <col:3> 'int' lvalue Var 0x564eff121590 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x564eff1264b8 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x564eff1264a0 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x564eff126460 <col:22> 'int' lvalue Var 0x564eff121590 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x564eff126480 <col:41> 'int' 1
|   |-CallExpr 0x564eff126530 <line:769:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x564eff126518 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564eff1264f8 <col:3> 'void ()' Function 0x564eff0c8410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x564eff1265a8 <line:770:3, col:36>
|     `-CallExpr 0x564eff126588 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x564eff126570 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x564eff126550 <col:10> 'void *(void)' Function 0x564eff0c7e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x564eff126670 prev 0x564eff1212d8 <line:772:1, line:774:1> line:772:6 fence 'void ()'
| `-CompoundStmt 0x564eff126710 <line:773:1, line:774:1>
|-FunctionDecl 0x564eff126740 prev 0x564eff121398 <line:775:1, line:777:1> line:775:6 isync 'void ()'
| `-CompoundStmt 0x564eff1267e0 <line:776:1, line:777:1>
|-FunctionDecl 0x564eff126810 prev 0x564eff121458 <line:778:1, line:780:1> line:778:6 lwfence 'void ()'
| `-CompoundStmt 0x564eff1268b0 <line:779:1, line:780:1>
`-FunctionDecl 0x564eff126918 <line:781:1, line:818:1> line:781:5 main 'int ()'
  `-CompoundStmt 0x564eff12b000 <line:782:1, line:818:1>
    |-DeclStmt 0x564eff126a30 <line:783:3, col:18>
    | `-VarDecl 0x564eff1269c8 <col:3, col:13> col:13 used t2286 'pthread_t':'unsigned long'
    |-CallExpr 0x564eff126c38 <line:784:3, col:54> 'int'
    | |-ImplicitCastExpr 0x564eff126c20 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x564eff126a48 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x564eff1088f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x564eff126a88 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x564eff126a68 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x564eff1269c8 't2286' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x564eff126c78 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x564eff126b00 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x564eff126ad8 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x564eff126aa0 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x564eff126c90 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x564eff126b20 <col:39> 'void *(void *)' Function 0x564eff122628 'P0' 'void *(void *)'
    | `-ParenExpr 0x564eff126ba0 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x564eff126b78 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x564eff126b40 <col:52> 'int' 0
    |-DeclStmt 0x564eff126d20 <line:785:3, col:18>
    | `-VarDecl 0x564eff126cb8 <col:3, col:13> col:13 used t2287 'pthread_t':'unsigned long'
    |-CallExpr 0x564eff126ec8 <line:786:3, col:54> 'int'
    | |-ImplicitCastExpr 0x564eff126eb0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x564eff126d38 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x564eff1088f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x564eff126d78 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x564eff126d58 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x564eff126cb8 't2287' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x564eff126f08 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x564eff126df0 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x564eff126dc8 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x564eff126d90 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x564eff126f20 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x564eff126e10 <col:39> 'void *(void *)' Function 0x564eff123a00 'P1' 'void *(void *)'
    | `-ParenExpr 0x564eff126e90 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x564eff126e68 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x564eff126e30 <col:52> 'int' 0
    |-DeclStmt 0x564eff126fc0 <line:787:3, col:18>
    | `-VarDecl 0x564eff126f48 <col:3, col:13> col:13 used t2288 'pthread_t':'unsigned long'
    |-CallExpr 0x564eff127168 <line:788:3, col:54> 'int'
    | |-ImplicitCastExpr 0x564eff127150 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x564eff126fd8 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x564eff1088f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x564eff127018 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x564eff126ff8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x564eff126f48 't2288' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x564eff1271a8 <col:26, col:36> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x564eff127090 <col:26, col:36> 'void *'
    | |   `-CStyleCastExpr 0x564eff127068 <col:27, col:35> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x564eff127030 <col:35> 'int' 0
    | |-ImplicitCastExpr 0x564eff1271c0 <col:39> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x564eff1270b0 <col:39> 'void *(void *)' Function 0x564eff125358 'P2' 'void *(void *)'
    | `-ParenExpr 0x564eff127130 <col:43, col:53> 'void *'
    |   `-CStyleCastExpr 0x564eff127108 <col:44, col:52> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x564eff1270d0 <col:52> 'int' 0
    |-CallExpr 0x564eff127210 <line:789:3, col:27> 'void'
    | `-ImplicitCastExpr 0x564eff1271f8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x564eff1271d8 <col:3> 'void ()' Function 0x564eff0c8350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x564eff1272e0 <line:790:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x564eff127230 <col:3> '_Bool' lvalue Var 0x564eff121868 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x564eff1272c8 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x564eff1272a8 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x564eff127290 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x564eff127250 <col:21> 'int' lvalue Var 0x564eff121590 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x564eff127270 <col:41> 'int' 3
    |-CallExpr 0x564eff127338 <line:791:3, col:25> 'void'
    | `-ImplicitCastExpr 0x564eff127320 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x564eff127300 <col:3> 'void ()' Function 0x564eff0c8410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x564eff1273b0 <line:792:3, col:36> 'void'
    | |-ImplicitCastExpr 0x564eff127398 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x564eff127358 <col:3> 'void (int)' Function 0x564eff0c7ca0 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x564eff1273f0 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x564eff1273d8 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x564eff127378 <col:21> '_Bool' lvalue Var 0x564eff121868 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x564eff127440 <line:793:3, col:27> 'void'
    | `-ImplicitCastExpr 0x564eff127428 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x564eff127408 <col:3> 'void ()' Function 0x564eff0c8350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x564eff127728 <line:794:3, col:103> 'int' '='
    | |-DeclRefExpr 0x564eff127460 <col:3> 'int' lvalue Var 0x564eff1219e0 'x' 'int'
    | `-ConditionalOperator 0x564eff1276f8 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x564eff127520 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x564eff1274d8 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x564eff1274c0 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x564eff127480 <col:7> '_Bool' lvalue Var 0x564eff1220e8 'x$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x564eff127508 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x564eff1274f0 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x564eff1274a0 <col:25> '_Bool' lvalue Var 0x564eff121b70 'x$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x564eff1276e0 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x564eff127540 <col:42> 'int' lvalue Var 0x564eff122070 'x$w_buff0' 'int'
    |   `-ParenExpr 0x564eff1276c0 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x564eff127690 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x564eff127600 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x564eff1275b8 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x564eff1275a0 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x564eff127560 <col:55> '_Bool' lvalue Var 0x564eff1221e0 'x$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x564eff1275e8 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x564eff1275d0 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x564eff127580 <col:73> '_Bool' lvalue Var 0x564eff121d50 'x$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x564eff127660 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x564eff127620 <col:90> 'int' lvalue Var 0x564eff122168 'x$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x564eff127678 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x564eff127640 <col:102> 'int' lvalue Var 0x564eff1219e0 'x' 'int'
    |-BinaryOperator 0x564eff127930 <line:795:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x564eff127748 <col:3> '_Bool' lvalue Var 0x564eff1220e8 'x$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x564eff127918 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x564eff1278e8 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x564eff127808 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x564eff1277c0 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x564eff1277a8 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x564eff127768 <col:20> '_Bool' lvalue Var 0x564eff1220e8 'x$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x564eff1277f0 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x564eff1277d8 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x564eff127788 <col:38> '_Bool' lvalue Var 0x564eff121b70 'x$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x564eff1278a0 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x564eff127858 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x564eff127828 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x564eff1278d0 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x564eff1278b8 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x564eff127880 <col:66> '_Bool' lvalue Var 0x564eff1220e8 'x$w_buff0_used' '_Bool'
    |-BinaryOperator 0x564eff127c18 <line:796:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x564eff127950 <col:3> '_Bool' lvalue Var 0x564eff1221e0 'x$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x564eff127c00 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x564eff127bd0 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x564eff127af0 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x564eff127a10 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x564eff1279c8 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x564eff1279b0 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x564eff127970 <col:20> '_Bool' lvalue Var 0x564eff1220e8 'x$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x564eff1279f8 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x564eff1279e0 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x564eff127990 <col:38> '_Bool' lvalue Var 0x564eff121b70 'x$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x564eff127ad0 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x564eff127a88 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x564eff127a70 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x564eff127a30 <col:56> '_Bool' lvalue Var 0x564eff1221e0 'x$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x564eff127ab8 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x564eff127aa0 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x564eff127a50 <col:74> '_Bool' lvalue Var 0x564eff121d50 'x$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x564eff127b88 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x564eff127b40 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x564eff127b10 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x564eff127bb8 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x564eff127ba0 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x564eff127b68 <col:102> '_Bool' lvalue Var 0x564eff1221e0 'x$w_buff1_used' '_Bool'
    |-BinaryOperator 0x564eff127e20 <line:797:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x564eff127c38 <col:3> '_Bool' lvalue Var 0x564eff121b70 'x$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x564eff127e08 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x564eff127dd8 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x564eff127cf8 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x564eff127cb0 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x564eff127c98 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x564eff127c58 <col:20> '_Bool' lvalue Var 0x564eff1220e8 'x$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x564eff127ce0 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x564eff127cc8 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x564eff127c78 <col:38> '_Bool' lvalue Var 0x564eff121b70 'x$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x564eff127d90 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x564eff127d48 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x564eff127d18 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x564eff127dc0 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x564eff127da8 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x564eff127d70 <col:66> '_Bool' lvalue Var 0x564eff121b70 'x$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x564eff128118 <line:798:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x564eff127e40 <col:3> '_Bool' lvalue Var 0x564eff121d50 'x$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x564eff128100 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x564eff1280d0 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x564eff127ff0 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x564eff127f00 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x564eff127eb8 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x564eff127ea0 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x564eff127e60 <col:20> '_Bool' lvalue Var 0x564eff1220e8 'x$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x564eff127ee8 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x564eff127ed0 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x564eff127e80 <col:38> '_Bool' lvalue Var 0x564eff121b70 'x$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x564eff127fd0 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x564eff127f78 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x564eff127f60 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x564eff127f20 <col:56> '_Bool' lvalue Var 0x564eff1221e0 'x$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x564eff127fa8 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x564eff127f90 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x564eff127f40 <col:74> '_Bool' lvalue Var 0x564eff121d50 'x$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x564eff128088 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x564eff128040 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x564eff128010 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x564eff1280b8 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x564eff1280a0 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x564eff128068 <col:102> '_Bool' lvalue Var 0x564eff121d50 'x$r_buff1_thd0' '_Bool'
    |-CallExpr 0x564eff128170 <line:799:3, col:25> 'void'
    | `-ImplicitCastExpr 0x564eff128158 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x564eff128138 <col:3> 'void ()' Function 0x564eff0c8410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x564eff1281c8 <line:800:3, col:27> 'void'
    | `-ImplicitCastExpr 0x564eff1281b0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x564eff128190 <col:3> 'void ()' Function 0x564eff0c8350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x564eff128278 <line:801:3, col:45> '_Bool' '='
    | |-DeclRefExpr 0x564eff1281e8 <col:3> '_Bool' lvalue Var 0x564eff122498 'weak$$choice0' '_Bool'
    | `-ImplicitCastExpr 0x564eff128260 <col:19, col:45> '_Bool' <PointerToBoolean>
    |   `-CallExpr 0x564eff128240 <col:19, col:45> 'void *'
    |     `-ImplicitCastExpr 0x564eff128228 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
    |       `-DeclRefExpr 0x564eff128208 <col:19> 'void *(void)' Function 0x564eff0c7e68 '__VERIFIER_nondet_pointer' 'void *(void)'
    |-BinaryOperator 0x564eff128328 <line:802:3, col:45> '_Bool' '='
    | |-DeclRefExpr 0x564eff128298 <col:3> '_Bool' lvalue Var 0x564eff122510 'weak$$choice2' '_Bool'
    | `-ImplicitCastExpr 0x564eff128310 <col:19, col:45> '_Bool' <PointerToBoolean>
    |   `-CallExpr 0x564eff1282f0 <col:19, col:45> 'void *'
    |     `-ImplicitCastExpr 0x564eff1282d8 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
    |       `-DeclRefExpr 0x564eff1282b8 <col:19> 'void *(void)' Function 0x564eff0c7e68 '__VERIFIER_nondet_pointer' 'void *(void)'
    |-BinaryOperator 0x564eff1283a0 <line:803:3, col:21> '_Bool' '='
    | |-DeclRefExpr 0x564eff128348 <col:3> '_Bool' lvalue Var 0x564eff121a78 'x$flush_delayed' '_Bool'
    | `-ImplicitCastExpr 0x564eff128388 <col:21> '_Bool' <LValueToRValue>
    |   `-DeclRefExpr 0x564eff128368 <col:21> '_Bool' lvalue Var 0x564eff122510 'weak$$choice2' '_Bool'
    |-BinaryOperator 0x564eff128418 <line:804:3, col:15> 'int' '='
    | |-DeclRefExpr 0x564eff1283c0 <col:3> 'int' lvalue Var 0x564eff121af8 'x$mem_tmp' 'int'
    | `-ImplicitCastExpr 0x564eff128400 <col:15> 'int' <LValueToRValue>
    |   `-DeclRefExpr 0x564eff1283e0 <col:15> 'int' lvalue Var 0x564eff1219e0 'x' 'int'
    |-BinaryOperator 0x564eff128850 <line:805:3, col:162> 'int' '='
    | |-DeclRefExpr 0x564eff128438 <col:3> 'int' lvalue Var 0x564eff1219e0 'x' 'int'
    | `-ConditionalOperator 0x564eff128820 <col:7, col:162> 'int'
    |   |-BinaryOperator 0x564eff128648 <col:7, col:84> 'int' '||'
    |   | |-BinaryOperator 0x564eff128568 <col:7, col:46> 'int' '||'
    |   | | |-UnaryOperator 0x564eff128490 <col:7, col:8> 'int' prefix '!' cannot overflow
    |   | | | `-ImplicitCastExpr 0x564eff128478 <col:8> '_Bool' <LValueToRValue>
    |   | | |   `-DeclRefExpr 0x564eff128458 <col:8> '_Bool' lvalue Var 0x564eff1220e8 'x$w_buff0_used' '_Bool'
    |   | | `-BinaryOperator 0x564eff128548 <col:26, col:46> 'int' '&&'
    |   | |   |-UnaryOperator 0x564eff1284e0 <col:26, col:27> 'int' prefix '!' cannot overflow
    |   | |   | `-ImplicitCastExpr 0x564eff1284c8 <col:27> '_Bool' <LValueToRValue>
    |   | |   |   `-DeclRefExpr 0x564eff1284a8 <col:27> '_Bool' lvalue Var 0x564eff121b70 'x$r_buff0_thd0' '_Bool'
    |   | |   `-UnaryOperator 0x564eff128530 <col:45, col:46> 'int' prefix '!' cannot overflow
    |   | |     `-ImplicitCastExpr 0x564eff128518 <col:46> '_Bool' <LValueToRValue>
    |   | |       `-DeclRefExpr 0x564eff1284f8 <col:46> '_Bool' lvalue Var 0x564eff1221e0 'x$w_buff1_used' '_Bool'
    |   | `-BinaryOperator 0x564eff128628 <col:64, col:84> 'int' '&&'
    |   |   |-UnaryOperator 0x564eff1285c0 <col:64, col:65> 'int' prefix '!' cannot overflow
    |   |   | `-ImplicitCastExpr 0x564eff1285a8 <col:65> '_Bool' <LValueToRValue>
    |   |   |   `-DeclRefExpr 0x564eff128588 <col:65> '_Bool' lvalue Var 0x564eff121b70 'x$r_buff0_thd0' '_Bool'
    |   |   `-UnaryOperator 0x564eff128610 <col:83, col:84> 'int' prefix '!' cannot overflow
    |   |     `-ImplicitCastExpr 0x564eff1285f8 <col:84> '_Bool' <LValueToRValue>
    |   |       `-DeclRefExpr 0x564eff1285d8 <col:84> '_Bool' lvalue Var 0x564eff121d50 'x$r_buff1_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x564eff128808 <col:101> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x564eff128668 <col:101> 'int' lvalue Var 0x564eff1219e0 'x' 'int'
    |   `-ParenExpr 0x564eff1287e8 <col:105, col:162> 'int'
    |     `-ConditionalOperator 0x564eff1287b8 <col:106, col:153> 'int'
    |       |-BinaryOperator 0x564eff128728 <col:106, col:124> 'int' '&&'
    |       | |-ImplicitCastExpr 0x564eff1286e0 <col:106> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x564eff1286c8 <col:106> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x564eff128688 <col:106> '_Bool' lvalue Var 0x564eff1220e8 'x$w_buff0_used' '_Bool'
    |       | `-ImplicitCastExpr 0x564eff128710 <col:124> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x564eff1286f8 <col:124> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x564eff1286a8 <col:124> '_Bool' lvalue Var 0x564eff121b70 'x$r_buff0_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x564eff128788 <col:141> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x564eff128748 <col:141> 'int' lvalue Var 0x564eff122070 'x$w_buff0' 'int'
    |       `-ImplicitCastExpr 0x564eff1287a0 <col:153> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x564eff128768 <col:153> 'int' lvalue Var 0x564eff122168 'x$w_buff1' 'int'
    |-BinaryOperator 0x564eff128d60 <line:806:3, col:208> 'int' '='
    | |-DeclRefExpr 0x564eff128870 <col:3> 'int' lvalue Var 0x564eff122070 'x$w_buff0' 'int'
    | `-ConditionalOperator 0x564eff128d30 <col:15, col:208> 'int'
    |   |-ImplicitCastExpr 0x564eff128d00 <col:15> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x564eff128ce8 <col:15> '_Bool' <LValueToRValue>
    |   |   `-DeclRefExpr 0x564eff128890 <col:15> '_Bool' lvalue Var 0x564eff122510 'weak$$choice2' '_Bool'
    |   |-ImplicitCastExpr 0x564eff128d18 <col:31> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x564eff1288b0 <col:31> 'int' lvalue Var 0x564eff122070 'x$w_buff0' 'int'
    |   `-ParenExpr 0x564eff128cc8 <col:43, col:208> 'int'
    |     `-ConditionalOperator 0x564eff128c98 <col:44, col:207> 'int'
    |       |-BinaryOperator 0x564eff128ac0 <col:44, col:121> 'int' '||'
    |       | |-BinaryOperator 0x564eff1289e0 <col:44, col:83> 'int' '||'
    |       | | |-UnaryOperator 0x564eff128908 <col:44, col:45> 'int' prefix '!' cannot overflow
    |       | | | `-ImplicitCastExpr 0x564eff1288f0 <col:45> '_Bool' <LValueToRValue>
    |       | | |   `-DeclRefExpr 0x564eff1288d0 <col:45> '_Bool' lvalue Var 0x564eff1220e8 'x$w_buff0_used' '_Bool'
    |       | | `-BinaryOperator 0x564eff1289c0 <col:63, col:83> 'int' '&&'
    |       | |   |-UnaryOperator 0x564eff128958 <col:63, col:64> 'int' prefix '!' cannot overflow
    |       | |   | `-ImplicitCastExpr 0x564eff128940 <col:64> '_Bool' <LValueToRValue>
    |       | |   |   `-DeclRefExpr 0x564eff128920 <col:64> '_Bool' lvalue Var 0x564eff121b70 'x$r_buff0_thd0' '_Bool'
    |       | |   `-UnaryOperator 0x564eff1289a8 <col:82, col:83> 'int' prefix '!' cannot overflow
    |       | |     `-ImplicitCastExpr 0x564eff128990 <col:83> '_Bool' <LValueToRValue>
    |       | |       `-DeclRefExpr 0x564eff128970 <col:83> '_Bool' lvalue Var 0x564eff1221e0 'x$w_buff1_used' '_Bool'
    |       | `-BinaryOperator 0x564eff128aa0 <col:101, col:121> 'int' '&&'
    |       |   |-UnaryOperator 0x564eff128a38 <col:101, col:102> 'int' prefix '!' cannot overflow
    |       |   | `-ImplicitCastExpr 0x564eff128a20 <col:102> '_Bool' <LValueToRValue>
    |       |   |   `-DeclRefExpr 0x564eff128a00 <col:102> '_Bool' lvalue Var 0x564eff121b70 'x$r_buff0_thd0' '_Bool'
    |       |   `-UnaryOperator 0x564eff128a88 <col:120, col:121> 'int' prefix '!' cannot overflow
    |       |     `-ImplicitCastExpr 0x564eff128a70 <col:121> '_Bool' <LValueToRValue>
    |       |       `-DeclRefExpr 0x564eff128a50 <col:121> '_Bool' lvalue Var 0x564eff121d50 'x$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x564eff128c80 <col:138> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x564eff128ae0 <col:138> 'int' lvalue Var 0x564eff122070 'x$w_buff0' 'int'
    |       `-ParenExpr 0x564eff128c60 <col:150, col:207> 'int'
    |         `-ConditionalOperator 0x564eff128c30 <col:151, col:198> 'int'
    |           |-BinaryOperator 0x564eff128ba0 <col:151, col:169> 'int' '&&'
    |           | |-ImplicitCastExpr 0x564eff128b58 <col:151> 'int' <IntegralCast>
    |           | | `-ImplicitCastExpr 0x564eff128b40 <col:151> '_Bool' <LValueToRValue>
    |           | |   `-DeclRefExpr 0x564eff128b00 <col:151> '_Bool' lvalue Var 0x564eff1220e8 'x$w_buff0_used' '_Bool'
    |           | `-ImplicitCastExpr 0x564eff128b88 <col:169> 'int' <IntegralCast>
    |           |   `-ImplicitCastExpr 0x564eff128b70 <col:169> '_Bool' <LValueToRValue>
    |           |     `-DeclRefExpr 0x564eff128b20 <col:169> '_Bool' lvalue Var 0x564eff121b70 'x$r_buff0_thd0' '_Bool'
    |           |-ImplicitCastExpr 0x564eff128c00 <col:186> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x564eff128bc0 <col:186> 'int' lvalue Var 0x564eff122070 'x$w_buff0' 'int'
    |           `-ImplicitCastExpr 0x564eff128c18 <col:198> 'int' <LValueToRValue>
    |             `-DeclRefExpr 0x564eff128be0 <col:198> 'int' lvalue Var 0x564eff122070 'x$w_buff0' 'int'
    |-BinaryOperator 0x564eff129280 <line:807:3, col:208> 'int' '='
    | |-DeclRefExpr 0x564eff128d80 <col:3> 'int' lvalue Var 0x564eff122168 'x$w_buff1' 'int'
    | `-ConditionalOperator 0x564eff129250 <col:15, col:208> 'int'
    |   |-ImplicitCastExpr 0x564eff129220 <col:15> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x564eff129208 <col:15> '_Bool' <LValueToRValue>
    |   |   `-DeclRefExpr 0x564eff128da0 <col:15> '_Bool' lvalue Var 0x564eff122510 'weak$$choice2' '_Bool'
    |   |-ImplicitCastExpr 0x564eff129238 <col:31> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x564eff128dc0 <col:31> 'int' lvalue Var 0x564eff122168 'x$w_buff1' 'int'
    |   `-ParenExpr 0x564eff1291e8 <col:43, col:208> 'int'
    |     `-ConditionalOperator 0x564eff1291b8 <col:44, col:207> 'int'
    |       |-BinaryOperator 0x564eff128fe0 <col:44, col:121> 'int' '||'
    |       | |-BinaryOperator 0x564eff128ef0 <col:44, col:83> 'int' '||'
    |       | | |-UnaryOperator 0x564eff128e18 <col:44, col:45> 'int' prefix '!' cannot overflow
    |       | | | `-ImplicitCastExpr 0x564eff128e00 <col:45> '_Bool' <LValueToRValue>
    |       | | |   `-DeclRefExpr 0x564eff128de0 <col:45> '_Bool' lvalue Var 0x564eff1220e8 'x$w_buff0_used' '_Bool'
    |       | | `-BinaryOperator 0x564eff128ed0 <col:63, col:83> 'int' '&&'
    |       | |   |-UnaryOperator 0x564eff128e68 <col:63, col:64> 'int' prefix '!' cannot overflow
    |       | |   | `-ImplicitCastExpr 0x564eff128e50 <col:64> '_Bool' <LValueToRValue>
    |       | |   |   `-DeclRefExpr 0x564eff128e30 <col:64> '_Bool' lvalue Var 0x564eff121b70 'x$r_buff0_thd0' '_Bool'
    |       | |   `-UnaryOperator 0x564eff128eb8 <col:82, col:83> 'int' prefix '!' cannot overflow
    |       | |     `-ImplicitCastExpr 0x564eff128ea0 <col:83> '_Bool' <LValueToRValue>
    |       | |       `-DeclRefExpr 0x564eff128e80 <col:83> '_Bool' lvalue Var 0x564eff1221e0 'x$w_buff1_used' '_Bool'
    |       | `-BinaryOperator 0x564eff128fb0 <col:101, col:121> 'int' '&&'
    |       |   |-UnaryOperator 0x564eff128f48 <col:101, col:102> 'int' prefix '!' cannot overflow
    |       |   | `-ImplicitCastExpr 0x564eff128f30 <col:102> '_Bool' <LValueToRValue>
    |       |   |   `-DeclRefExpr 0x564eff128f10 <col:102> '_Bool' lvalue Var 0x564eff121b70 'x$r_buff0_thd0' '_Bool'
    |       |   `-UnaryOperator 0x564eff128f98 <col:120, col:121> 'int' prefix '!' cannot overflow
    |       |     `-ImplicitCastExpr 0x564eff128f80 <col:121> '_Bool' <LValueToRValue>
    |       |       `-DeclRefExpr 0x564eff128f60 <col:121> '_Bool' lvalue Var 0x564eff121d50 'x$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x564eff1291a0 <col:138> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x564eff129000 <col:138> 'int' lvalue Var 0x564eff122168 'x$w_buff1' 'int'
    |       `-ParenExpr 0x564eff129180 <col:150, col:207> 'int'
    |         `-ConditionalOperator 0x564eff129150 <col:151, col:198> 'int'
    |           |-BinaryOperator 0x564eff1290c0 <col:151, col:169> 'int' '&&'
    |           | |-ImplicitCastExpr 0x564eff129078 <col:151> 'int' <IntegralCast>
    |           | | `-ImplicitCastExpr 0x564eff129060 <col:151> '_Bool' <LValueToRValue>
    |           | |   `-DeclRefExpr 0x564eff129020 <col:151> '_Bool' lvalue Var 0x564eff1220e8 'x$w_buff0_used' '_Bool'
    |           | `-ImplicitCastExpr 0x564eff1290a8 <col:169> 'int' <IntegralCast>
    |           |   `-ImplicitCastExpr 0x564eff129090 <col:169> '_Bool' <LValueToRValue>
    |           |     `-DeclRefExpr 0x564eff129040 <col:169> '_Bool' lvalue Var 0x564eff121b70 'x$r_buff0_thd0' '_Bool'
    |           |-ImplicitCastExpr 0x564eff129120 <col:186> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x564eff1290e0 <col:186> 'int' lvalue Var 0x564eff122168 'x$w_buff1' 'int'
    |           `-ImplicitCastExpr 0x564eff129138 <col:198> 'int' <LValueToRValue>
    |             `-DeclRefExpr 0x564eff129100 <col:198> 'int' lvalue Var 0x564eff122168 'x$w_buff1' 'int'
    |-BinaryOperator 0x564eff129828 <line:808:3, col:227> '_Bool' '='
    | |-DeclRefExpr 0x564eff1292a0 <col:3> '_Bool' lvalue Var 0x564eff1220e8 'x$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x564eff129810 <col:20, col:227> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x564eff1297e0 <col:20, col:227> 'int'
    |     |-ImplicitCastExpr 0x564eff129798 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x564eff129780 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x564eff1292c0 <col:20> '_Bool' lvalue Var 0x564eff122510 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x564eff1297c8 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x564eff1297b0 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x564eff1292e0 <col:36> '_Bool' lvalue Var 0x564eff1220e8 'x$w_buff0_used' '_Bool'
    |     `-ParenExpr 0x564eff129760 <col:53, col:227> 'int'
    |       `-ConditionalOperator 0x564eff129730 <col:54, col:226> 'int'
    |         |-BinaryOperator 0x564eff1294f0 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x564eff129410 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x564eff129338 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x564eff129320 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x564eff129300 <col:55> '_Bool' lvalue Var 0x564eff1220e8 'x$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x564eff1293f0 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x564eff129388 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x564eff129370 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x564eff129350 <col:74> '_Bool' lvalue Var 0x564eff121b70 'x$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x564eff1293d8 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x564eff1293c0 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x564eff1293a0 <col:93> '_Bool' lvalue Var 0x564eff1221e0 'x$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x564eff1294d0 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x564eff129468 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x564eff129450 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x564eff129430 <col:112> '_Bool' lvalue Var 0x564eff121b70 'x$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x564eff1294b8 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x564eff1294a0 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x564eff129480 <col:131> '_Bool' lvalue Var 0x564eff121d50 'x$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x564eff129718 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x564eff129700 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x564eff129510 <col:148> '_Bool' lvalue Var 0x564eff1220e8 'x$w_buff0_used' '_Bool'
    |         `-ParenExpr 0x564eff1296e0 <col:165, col:226> 'int'
    |           `-ConditionalOperator 0x564eff1296b0 <col:166, col:212> 'int'
    |             |-BinaryOperator 0x564eff1295d0 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x564eff129588 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x564eff129570 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x564eff129530 <col:166> '_Bool' lvalue Var 0x564eff1220e8 'x$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x564eff1295b8 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x564eff1295a0 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x564eff129550 <col:184> '_Bool' lvalue Var 0x564eff121b70 'x$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x564eff129668 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x564eff129620 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x564eff1295f0 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x564eff129698 <col:212> 'int' <IntegralCast>
    |               `-ImplicitCastExpr 0x564eff129680 <col:212> '_Bool' <LValueToRValue>
    |                 `-DeclRefExpr 0x564eff129648 <col:212> '_Bool' lvalue Var 0x564eff1220e8 'x$w_buff0_used' '_Bool'
    |-BinaryOperator 0x564eff129df0 <line:809:3, col:221> '_Bool' '='
    | |-DeclRefExpr 0x564eff129848 <col:3> '_Bool' lvalue Var 0x564eff1221e0 'x$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x564eff129dd8 <col:20, col:221> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x564eff129da8 <col:20, col:221> 'int'
    |     |-ImplicitCastExpr 0x564eff129d60 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x564eff129d48 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x564eff129868 <col:20> '_Bool' lvalue Var 0x564eff122510 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x564eff129d90 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x564eff129d78 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x564eff129888 <col:36> '_Bool' lvalue Var 0x564eff1221e0 'x$w_buff1_used' '_Bool'
    |     `-ParenExpr 0x564eff129d28 <col:53, col:221> 'int'
    |       `-ConditionalOperator 0x564eff129cf8 <col:54, col:220> 'int'
    |         |-BinaryOperator 0x564eff129a98 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x564eff1299b8 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x564eff1298e0 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x564eff1298c8 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x564eff1298a8 <col:55> '_Bool' lvalue Var 0x564eff1220e8 'x$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x564eff129998 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x564eff129930 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x564eff129918 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x564eff1298f8 <col:74> '_Bool' lvalue Var 0x564eff121b70 'x$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x564eff129980 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x564eff129968 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x564eff129948 <col:93> '_Bool' lvalue Var 0x564eff1221e0 'x$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x564eff129a78 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x564eff129a10 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x564eff1299f8 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x564eff1299d8 <col:112> '_Bool' lvalue Var 0x564eff121b70 'x$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x564eff129a60 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x564eff129a48 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x564eff129a28 <col:131> '_Bool' lvalue Var 0x564eff121d50 'x$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x564eff129ce0 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x564eff129cc8 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x564eff129ab8 <col:148> '_Bool' lvalue Var 0x564eff1221e0 'x$w_buff1_used' '_Bool'
    |         `-ParenExpr 0x564eff129ca8 <col:165, col:220> 'int'
    |           `-ConditionalOperator 0x564eff129c78 <col:166, col:219> 'int'
    |             |-BinaryOperator 0x564eff129b78 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x564eff129b30 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x564eff129b18 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x564eff129ad8 <col:166> '_Bool' lvalue Var 0x564eff1220e8 'x$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x564eff129b60 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x564eff129b48 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x564eff129af8 <col:184> '_Bool' lvalue Var 0x564eff121b70 'x$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x564eff129c48 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x564eff129bc8 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x564eff129b98 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x564eff129c60 <col:212, col:219> 'int' <IntegralCast>
    |               `-CStyleCastExpr 0x564eff129c20 <col:212, col:219> '_Bool' <IntegralToBoolean>
    |                 `-IntegerLiteral 0x564eff129bf0 <col:219> 'int' 0
    |-BinaryOperator 0x564eff12a3b0 <line:810:3, col:227> '_Bool' '='
    | |-DeclRefExpr 0x564eff129e10 <col:3> '_Bool' lvalue Var 0x564eff121b70 'x$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x564eff12a398 <col:20, col:227> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x564eff12a368 <col:20, col:227> 'int'
    |     |-ImplicitCastExpr 0x564eff12a320 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x564eff12a308 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x564eff129e30 <col:20> '_Bool' lvalue Var 0x564eff122510 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x564eff12a350 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x564eff12a338 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x564eff129e50 <col:36> '_Bool' lvalue Var 0x564eff121b70 'x$r_buff0_thd0' '_Bool'
    |     `-ParenExpr 0x564eff12a2e8 <col:53, col:227> 'int'
    |       `-ConditionalOperator 0x564eff12a2b8 <col:54, col:226> 'int'
    |         |-BinaryOperator 0x564eff12a078 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x564eff129f80 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x564eff129ea8 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x564eff129e90 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x564eff129e70 <col:55> '_Bool' lvalue Var 0x564eff1220e8 'x$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x564eff129f60 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x564eff129ef8 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x564eff129ee0 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x564eff129ec0 <col:74> '_Bool' lvalue Var 0x564eff121b70 'x$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x564eff129f48 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x564eff129f30 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x564eff129f10 <col:93> '_Bool' lvalue Var 0x564eff1221e0 'x$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x564eff12a058 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x564eff129ff0 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x564eff129fc0 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x564eff129fa0 <col:112> '_Bool' lvalue Var 0x564eff121b70 'x$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x564eff12a040 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x564eff12a028 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x564eff12a008 <col:131> '_Bool' lvalue Var 0x564eff121d50 'x$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x564eff12a2a0 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x564eff12a288 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x564eff12a098 <col:148> '_Bool' lvalue Var 0x564eff121b70 'x$r_buff0_thd0' '_Bool'
    |         `-ParenExpr 0x564eff12a268 <col:165, col:226> 'int'
    |           `-ConditionalOperator 0x564eff12a238 <col:166, col:212> 'int'
    |             |-BinaryOperator 0x564eff12a158 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x564eff12a110 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x564eff12a0f8 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x564eff12a0b8 <col:166> '_Bool' lvalue Var 0x564eff1220e8 'x$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x564eff12a140 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x564eff12a128 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x564eff12a0d8 <col:184> '_Bool' lvalue Var 0x564eff121b70 'x$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x564eff12a1f0 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x564eff12a1a8 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x564eff12a178 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x564eff12a220 <col:212> 'int' <IntegralCast>
    |               `-ImplicitCastExpr 0x564eff12a208 <col:212> '_Bool' <LValueToRValue>
    |                 `-DeclRefExpr 0x564eff12a1d0 <col:212> '_Bool' lvalue Var 0x564eff121b70 'x$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x564eff12a978 <line:811:3, col:221> '_Bool' '='
    | |-DeclRefExpr 0x564eff12a3d0 <col:3> '_Bool' lvalue Var 0x564eff121d50 'x$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x564eff12a960 <col:20, col:221> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x564eff12a930 <col:20, col:221> 'int'
    |     |-ImplicitCastExpr 0x564eff12a8e8 <col:20> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x564eff12a8d0 <col:20> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x564eff12a3f0 <col:20> '_Bool' lvalue Var 0x564eff122510 'weak$$choice2' '_Bool'
    |     |-ImplicitCastExpr 0x564eff12a918 <col:36> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x564eff12a900 <col:36> '_Bool' <LValueToRValue>
    |     |   `-DeclRefExpr 0x564eff12a410 <col:36> '_Bool' lvalue Var 0x564eff121d50 'x$r_buff1_thd0' '_Bool'
    |     `-ParenExpr 0x564eff12a8b0 <col:53, col:221> 'int'
    |       `-ConditionalOperator 0x564eff12a880 <col:54, col:220> 'int'
    |         |-BinaryOperator 0x564eff12a620 <col:54, col:131> 'int' '||'
    |         | |-BinaryOperator 0x564eff12a540 <col:54, col:93> 'int' '||'
    |         | | |-UnaryOperator 0x564eff12a468 <col:54, col:55> 'int' prefix '!' cannot overflow
    |         | | | `-ImplicitCastExpr 0x564eff12a450 <col:55> '_Bool' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x564eff12a430 <col:55> '_Bool' lvalue Var 0x564eff1220e8 'x$w_buff0_used' '_Bool'
    |         | | `-BinaryOperator 0x564eff12a520 <col:73, col:93> 'int' '&&'
    |         | |   |-UnaryOperator 0x564eff12a4b8 <col:73, col:74> 'int' prefix '!' cannot overflow
    |         | |   | `-ImplicitCastExpr 0x564eff12a4a0 <col:74> '_Bool' <LValueToRValue>
    |         | |   |   `-DeclRefExpr 0x564eff12a480 <col:74> '_Bool' lvalue Var 0x564eff121b70 'x$r_buff0_thd0' '_Bool'
    |         | |   `-UnaryOperator 0x564eff12a508 <col:92, col:93> 'int' prefix '!' cannot overflow
    |         | |     `-ImplicitCastExpr 0x564eff12a4f0 <col:93> '_Bool' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x564eff12a4d0 <col:93> '_Bool' lvalue Var 0x564eff1221e0 'x$w_buff1_used' '_Bool'
    |         | `-BinaryOperator 0x564eff12a600 <col:111, col:131> 'int' '&&'
    |         |   |-UnaryOperator 0x564eff12a598 <col:111, col:112> 'int' prefix '!' cannot overflow
    |         |   | `-ImplicitCastExpr 0x564eff12a580 <col:112> '_Bool' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x564eff12a560 <col:112> '_Bool' lvalue Var 0x564eff121b70 'x$r_buff0_thd0' '_Bool'
    |         |   `-UnaryOperator 0x564eff12a5e8 <col:130, col:131> 'int' prefix '!' cannot overflow
    |         |     `-ImplicitCastExpr 0x564eff12a5d0 <col:131> '_Bool' <LValueToRValue>
    |         |       `-DeclRefExpr 0x564eff12a5b0 <col:131> '_Bool' lvalue Var 0x564eff121d50 'x$r_buff1_thd0' '_Bool'
    |         |-ImplicitCastExpr 0x564eff12a868 <col:148> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x564eff12a850 <col:148> '_Bool' <LValueToRValue>
    |         |   `-DeclRefExpr 0x564eff12a640 <col:148> '_Bool' lvalue Var 0x564eff121d50 'x$r_buff1_thd0' '_Bool'
    |         `-ParenExpr 0x564eff12a830 <col:165, col:220> 'int'
    |           `-ConditionalOperator 0x564eff12a800 <col:166, col:219> 'int'
    |             |-BinaryOperator 0x564eff12a700 <col:166, col:184> 'int' '&&'
    |             | |-ImplicitCastExpr 0x564eff12a6b8 <col:166> 'int' <IntegralCast>
    |             | | `-ImplicitCastExpr 0x564eff12a6a0 <col:166> '_Bool' <LValueToRValue>
    |             | |   `-DeclRefExpr 0x564eff12a660 <col:166> '_Bool' lvalue Var 0x564eff1220e8 'x$w_buff0_used' '_Bool'
    |             | `-ImplicitCastExpr 0x564eff12a6e8 <col:184> 'int' <IntegralCast>
    |             |   `-ImplicitCastExpr 0x564eff12a6d0 <col:184> '_Bool' <LValueToRValue>
    |             |     `-DeclRefExpr 0x564eff12a680 <col:184> '_Bool' lvalue Var 0x564eff121b70 'x$r_buff0_thd0' '_Bool'
    |             |-ImplicitCastExpr 0x564eff12a7d0 <col:201, col:208> 'int' <IntegralCast>
    |             | `-CStyleCastExpr 0x564eff12a750 <col:201, col:208> '_Bool' <IntegralToBoolean>
    |             |   `-IntegerLiteral 0x564eff12a720 <col:208> 'int' 0
    |             `-ImplicitCastExpr 0x564eff12a7e8 <col:212, col:219> 'int' <IntegralCast>
    |               `-CStyleCastExpr 0x564eff12a7a8 <col:212, col:219> '_Bool' <IntegralToBoolean>
    |                 `-IntegerLiteral 0x564eff12a778 <col:219> 'int' 0
    |-BinaryOperator 0x564eff12abb0 <line:812:3, col:85> '_Bool' '='
    | |-DeclRefExpr 0x564eff12a998 <col:3> '_Bool' lvalue Var 0x564eff1218e0 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x564eff12ab98 <col:21, col:85> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x564eff12ab80 <col:21, col:85> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x564eff12ab60 <col:22, col:85> 'int'
    |       `-BinaryOperator 0x564eff12ab40 <col:23, col:84> 'int' '&&'
    |         |-BinaryOperator 0x564eff12aaa8 <col:23, col:56> 'int' '&&'
    |         | |-BinaryOperator 0x564eff12aa10 <col:23, col:28> 'int' '=='
    |         | | |-ImplicitCastExpr 0x564eff12a9f8 <col:23> 'int' <LValueToRValue>
    |         | | | `-DeclRefExpr 0x564eff12a9b8 <col:23> 'int' lvalue Var 0x564eff1219e0 'x' 'int'
    |         | | `-IntegerLiteral 0x564eff12a9d8 <col:28> 'int' 2
    |         | `-BinaryOperator 0x564eff12aa88 <col:33, col:56> 'int' '=='
    |         |   |-ImplicitCastExpr 0x564eff12aa70 <col:33> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x564eff12aa30 <col:33> 'int' lvalue Var 0x564eff1216b0 '__unbuffered_p2_EAX' 'int'
    |         |   `-IntegerLiteral 0x564eff12aa50 <col:56> 'int' 1
    |         `-BinaryOperator 0x564eff12ab20 <col:61, col:84> 'int' '=='
    |           |-ImplicitCastExpr 0x564eff12ab08 <col:61> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x564eff12aac8 <col:61> 'int' lvalue Var 0x564eff1217d0 '__unbuffered_p2_EBX' 'int'
    |           `-IntegerLiteral 0x564eff12aae8 <col:84> 'int' 0
    |-BinaryOperator 0x564eff12ace0 <line:813:3, col:37> 'int' '='
    | |-DeclRefExpr 0x564eff12abd0 <col:3> 'int' lvalue Var 0x564eff1219e0 'x' 'int'
    | `-ConditionalOperator 0x564eff12acb0 <col:7, col:37> 'int'
    |   |-ImplicitCastExpr 0x564eff12ac68 <col:7> 'int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x564eff12ac50 <col:7> '_Bool' <LValueToRValue>
    |   |   `-DeclRefExpr 0x564eff12abf0 <col:7> '_Bool' lvalue Var 0x564eff121a78 'x$flush_delayed' '_Bool'
    |   |-ImplicitCastExpr 0x564eff12ac80 <col:25> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x564eff12ac10 <col:25> 'int' lvalue Var 0x564eff121af8 'x$mem_tmp' 'int'
    |   `-ImplicitCastExpr 0x564eff12ac98 <col:37> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x564eff12ac30 <col:37> 'int' lvalue Var 0x564eff1219e0 'x' 'int'
    |-BinaryOperator 0x564eff12ad78 <line:814:3, col:28> '_Bool' '='
    | |-DeclRefExpr 0x564eff12ad00 <col:3> '_Bool' lvalue Var 0x564eff121a78 'x$flush_delayed' '_Bool'
    | `-CStyleCastExpr 0x564eff12ad50 <col:21, col:28> '_Bool' <IntegralToBoolean>
    |   `-IntegerLiteral 0x564eff12ad20 <col:28> 'int' 0
    |-CallExpr 0x564eff12add0 <line:815:3, col:25> 'void'
    | `-ImplicitCastExpr 0x564eff12adb8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x564eff12ad98 <col:3> 'void ()' Function 0x564eff0c8410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x564eff12ae48 <line:816:3, col:36> 'void'
    | |-ImplicitCastExpr 0x564eff12ae30 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x564eff12adf0 <col:3> 'void (int)' Function 0x564eff0c80d8 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x564eff12ae88 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x564eff12ae70 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x564eff12ae10 <col:21> '_Bool' lvalue Var 0x564eff1218e0 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x564eff12aec0 <line:817:3, col:10>
      `-IntegerLiteral 0x564eff12aea0 <col:10> 'int' 0
