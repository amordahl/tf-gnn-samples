TranslationUnitDecl 0x555ca7af4dd8 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x555ca7af5698 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x555ca7af5370 '__int128'
|-TypedefDecl 0x555ca7af5708 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x555ca7af5390 'unsigned __int128'
|-TypedefDecl 0x555ca7af5a10 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x555ca7af57e0 'struct __NSConstantString_tag'
|   `-Record 0x555ca7af5760 '__NSConstantString_tag'
|-TypedefDecl 0x555ca7af5ab8 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x555ca7af5a70 'char *'
|   `-BuiltinType 0x555ca7af4e70 'char'
|-TypedefDecl 0x555ca7b34990 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x555ca7af5d50 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x555ca7af5b90 'struct __va_list_tag'
|     `-Record 0x555ca7af5b10 '__va_list_tag'
|-FunctionDecl 0x555ca7b34a70 <array-examples/standard_maxInArray_true-unreach-call_ground.i:1:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x555ca7b34c40 <line:2:1, col:79> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x555ca7b34b70 <col:24, col:28> col:28 used cond 'int'
| `-CompoundStmt 0x555ca7b34e80 <col:34, col:79>
|   `-IfStmt 0x555ca7b34e68 <col:36, col:77>
|     |-UnaryOperator 0x555ca7b34d40 <col:39, col:45> 'int' prefix '!' cannot overflow
|     | `-ImplicitCastExpr 0x555ca7b34d28 <col:40, col:45> 'int' <LValueToRValue>
|     |   `-ParenExpr 0x555ca7b34d08 <col:40, col:45> 'int' lvalue
|     |     `-DeclRefExpr 0x555ca7b34ce8 <col:41> 'int' lvalue ParmVar 0x555ca7b34b70 'cond' 'int'
|     `-CompoundStmt 0x555ca7b34e50 <col:48, col:77>
|       `-LabelStmt 0x555ca7b34e38 <col:50, col:74> 'ERROR'
|         `-CallExpr 0x555ca7b34dc8 <col:57, col:74> 'void'
|           `-ImplicitCastExpr 0x555ca7b34db0 <col:57> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|             `-DeclRefExpr 0x555ca7b34d58 <col:57> 'void () __attribute__((noreturn))' Function 0x555ca7b34a70 '__VERIFIER_error' 'void () __attribute__((noreturn))'
`-FunctionDecl 0x555ca7b34ef8 <line:3:1, line:18:1> line:3:5 main 'int ()'
  `-CompoundStmt 0x555ca7b59ed0 <col:13, line:18:1>
    |-DeclStmt 0x555ca7b350a0 <line:4:3, col:16>
    | `-VarDecl 0x555ca7b35038 <col:3, col:15> col:7 used a 'int [100000]'
    |-DeclStmt 0x555ca7b35158 <line:5:3, col:14>
    | `-VarDecl 0x555ca7b350d0 <col:3, col:13> col:7 used max 'int' cinit
    |   `-IntegerLiteral 0x555ca7b35138 <col:13> 'int' 0
    |-DeclStmt 0x555ca7b35210 <line:6:3, col:12>
    | `-VarDecl 0x555ca7b35188 <col:3, col:11> col:7 used i 'int' cinit
    |   `-IntegerLiteral 0x555ca7b351f0 <col:11> 'int' 0
    |-WhileStmt 0x555ca7b355c0 <line:7:3, line:12:3>
    | |-BinaryOperator 0x555ca7b35280 <line:7:11, col:15> 'int' '<'
    | | |-ImplicitCastExpr 0x555ca7b35268 <col:11> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x555ca7b35228 <col:11> 'int' lvalue Var 0x555ca7b35188 'i' 'int'
    | | `-IntegerLiteral 0x555ca7b35248 <col:15> 'int' 100000
    | `-CompoundStmt 0x555ca7b355a0 <col:24, line:12:3>
    |   |-IfStmt 0x555ca7b354d0 <line:8:5, line:10:5>
    |   | |-BinaryOperator 0x555ca7b353b0 <line:8:10, col:17> 'int' '>'
    |   | | |-ImplicitCastExpr 0x555ca7b35380 <col:10, col:13> 'int' <LValueToRValue>
    |   | | | `-ArraySubscriptExpr 0x555ca7b35340 <col:10, col:13> 'int' lvalue
    |   | | |   |-ImplicitCastExpr 0x555ca7b35310 <col:10> 'int *' <ArrayToPointerDecay>
    |   | | |   | `-DeclRefExpr 0x555ca7b352a0 <col:10> 'int [100000]' lvalue Var 0x555ca7b35038 'a' 'int [100000]'
    |   | | |   `-ImplicitCastExpr 0x555ca7b35328 <col:12> 'int' <LValueToRValue>
    |   | | |     `-DeclRefExpr 0x555ca7b352c0 <col:12> 'int' lvalue Var 0x555ca7b35188 'i' 'int'
    |   | | `-ImplicitCastExpr 0x555ca7b35398 <col:17> 'int' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x555ca7b35360 <col:17> 'int' lvalue Var 0x555ca7b350d0 'max' 'int'
    |   | `-CompoundStmt 0x555ca7b354b8 <col:23, line:10:5>
    |   |   `-BinaryOperator 0x555ca7b35498 <line:9:7, col:16> 'int' '='
    |   |     |-DeclRefExpr 0x555ca7b353d0 <col:7> 'int' lvalue Var 0x555ca7b350d0 'max' 'int'
    |   |     `-ImplicitCastExpr 0x555ca7b35480 <col:13, col:16> 'int' <LValueToRValue>
    |   |       `-ArraySubscriptExpr 0x555ca7b35460 <col:13, col:16> 'int' lvalue
    |   |         |-ImplicitCastExpr 0x555ca7b35430 <col:13> 'int *' <ArrayToPointerDecay>
    |   |         | `-DeclRefExpr 0x555ca7b353f0 <col:13> 'int [100000]' lvalue Var 0x555ca7b35038 'a' 'int [100000]'
    |   |         `-ImplicitCastExpr 0x555ca7b35448 <col:15> 'int' <LValueToRValue>
    |   |           `-DeclRefExpr 0x555ca7b35410 <col:15> 'int' lvalue Var 0x555ca7b35188 'i' 'int'
    |   `-BinaryOperator 0x555ca7b35580 <line:11:5, col:13> 'int' '='
    |     |-DeclRefExpr 0x555ca7b354e8 <col:5> 'int' lvalue Var 0x555ca7b35188 'i' 'int'
    |     `-BinaryOperator 0x555ca7b35560 <col:9, col:13> 'int' '+'
    |       |-ImplicitCastExpr 0x555ca7b35548 <col:9> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x555ca7b35508 <col:9> 'int' lvalue Var 0x555ca7b35188 'i' 'int'
    |       `-IntegerLiteral 0x555ca7b35528 <col:13> 'int' 1
    |-DeclStmt 0x555ca7b35658 <line:13:3, col:8>
    | `-VarDecl 0x555ca7b355f0 <col:3, col:7> col:7 used x 'int'
    |-ForStmt 0x555ca7b35928 <line:14:3, line:16:3>
    | |-BinaryOperator 0x555ca7b356b0 <line:14:9, col:13> 'int' '='
    | | |-DeclRefExpr 0x555ca7b35670 <col:9> 'int' lvalue Var 0x555ca7b355f0 'x' 'int'
    | | `-IntegerLiteral 0x555ca7b35690 <col:13> 'int' 0
    | |-<<<NULL>>>
    | |-BinaryOperator 0x555ca7b35728 <col:17, col:21> 'int' '<'
    | | |-ImplicitCastExpr 0x555ca7b35710 <col:17> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x555ca7b356d0 <col:17> 'int' lvalue Var 0x555ca7b355f0 'x' 'int'
    | | `-IntegerLiteral 0x555ca7b356f0 <col:21> 'int' 100000
    | |-UnaryOperator 0x555ca7b35768 <col:30, col:31> 'int' postfix '++'
    | | `-DeclRefExpr 0x555ca7b35748 <col:30> 'int' lvalue Var 0x555ca7b355f0 'x' 'int'
    | `-CompoundStmt 0x555ca7b35910 <col:36, line:16:3>
    |   `-CallExpr 0x555ca7b358e8 <line:15:5, col:36> 'void'
    |     |-ImplicitCastExpr 0x555ca7b358d0 <col:5> 'void (*)(int)' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x555ca7b35780 <col:5> 'void (int)' Function 0x555ca7b34c40 '__VERIFIER_assert' 'void (int)'
    |     `-BinaryOperator 0x555ca7b35880 <col:24, col:32> 'int' '<='
    |       |-ImplicitCastExpr 0x555ca7b35850 <col:24, col:27> 'int' <LValueToRValue>
    |       | `-ArraySubscriptExpr 0x555ca7b35810 <col:24, col:27> 'int' lvalue
    |       |   |-ImplicitCastExpr 0x555ca7b357e0 <col:24> 'int *' <ArrayToPointerDecay>
    |       |   | `-DeclRefExpr 0x555ca7b357a0 <col:24> 'int [100000]' lvalue Var 0x555ca7b35038 'a' 'int [100000]'
    |       |   `-ImplicitCastExpr 0x555ca7b357f8 <col:26> 'int' <LValueToRValue>
    |       |     `-DeclRefExpr 0x555ca7b357c0 <col:26> 'int' lvalue Var 0x555ca7b355f0 'x' 'int'
    |       `-ImplicitCastExpr 0x555ca7b35868 <col:32> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x555ca7b35830 <col:32> 'int' lvalue Var 0x555ca7b350d0 'max' 'int'
    `-ReturnStmt 0x555ca7b35980 <line:17:3, col:10>
      `-IntegerLiteral 0x555ca7b35960 <col:10> 'int' 0
