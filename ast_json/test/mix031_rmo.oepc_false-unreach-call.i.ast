TranslationUnitDecl 0x564fe5d46f88 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x564fe5d47848 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x564fe5d47520 '__int128'
|-TypedefDecl 0x564fe5d478b8 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x564fe5d47540 'unsigned __int128'
|-TypedefDecl 0x564fe5d47bc0 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x564fe5d47990 'struct __NSConstantString_tag'
|   `-Record 0x564fe5d47910 '__NSConstantString_tag'
|-TypedefDecl 0x564fe5d47c68 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x564fe5d47c20 'char *'
|   `-BuiltinType 0x564fe5d47020 'char'
|-TypedefDecl 0x564fe5d86b60 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x564fe5d47f00 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x564fe5d47d40 'struct __va_list_tag'
|     `-Record 0x564fe5d47cc0 '__va_list_tag'
|-FunctionDecl 0x564fe5d86ca0 <pthread-wmm/mix031_rmo.oepc_false-unreach-call.i:1:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x564fe5d86bd0 <col:31> col:34 'int'
|-FunctionDecl 0x564fe5d86e68 <line:2:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x564fe5d86f90 <line:3:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x564fe5d870d8 <line:4:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x564fe5d87048 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x564fe5d87308 <col:40, col:99>
|   |-IfStmt 0x564fe5d872d8 <col:42, col:88>
|   | |-UnaryOperator 0x564fe5d871b8 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x564fe5d871a0 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x564fe5d87180 <col:47> 'int' lvalue ParmVar 0x564fe5d87048 'expression' 'int'
|   | `-CompoundStmt 0x564fe5d872c0 <col:59, col:88>
|   |   `-LabelStmt 0x564fe5d872a8 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x564fe5d87238 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x564fe5d87220 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x564fe5d871d0 <col:68> 'void () __attribute__((noreturn))' Function 0x564fe5d86f90 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x564fe5d872f0 <col:89>
|   `-ReturnStmt 0x564fe5d872f8 <col:91>
|-FunctionDecl 0x564fe5d87350 <line:5:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x564fe5d87410 <line:6:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x564fe5d87790 <line:8:1, line:10:76> line:8:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x564fe5d874c8 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x564fe5d87548 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x564fe5d875c8 <line:9:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x564fe5d87648 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x564fe5d87850 <line:10:22>
|-FunctionDecl 0x564fe5dad8a0 <line:11:1, line:13:76> line:11:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x564fe5d878c0 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x564fe5d87940 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x564fe5d879c0 <line:12:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x564fe5d87a40 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x564fe5dad960 <line:13:22>
|-FunctionDecl 0x564fe5dadc10 <line:14:1, line:15:76> line:14:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x564fe5dad9d0 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x564fe5dada50 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x564fe5dadad0 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x564fe5dadcc8 <line:15:22>
|-TypedefDecl 0x564fe5dadd38 <line:17:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x564fe5d470e0 'unsigned char'
|-TypedefDecl 0x564fe5dadda8 <line:18:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x564fe5d47100 'unsigned short'
|-TypedefDecl 0x564fe5dade18 <line:19:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x564fe5d47120 'unsigned int'
|-TypedefDecl 0x564fe5dade88 <line:20:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x564fe5d47140 'unsigned long'
|-TypedefDecl 0x564fe5dadef8 <line:21:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x564fe5d47040 'signed char'
|-TypedefDecl 0x564fe5dadf68 <line:22:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x564fe5d470e0 'unsigned char'
|-TypedefDecl 0x564fe5dadfd8 <line:23:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x564fe5d47060 'short'
|-TypedefDecl 0x564fe5dae048 <line:24:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x564fe5d47100 'unsigned short'
|-TypedefDecl 0x564fe5dae0b8 <line:25:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x564fe5d47080 'int'
|-TypedefDecl 0x564fe5dae128 <line:26:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x564fe5d47120 'unsigned int'
|-TypedefDecl 0x564fe5dae198 <line:27:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x564fe5d470a0 'long'
|-TypedefDecl 0x564fe5dae208 <line:28:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x564fe5d47140 'unsigned long'
|-TypedefDecl 0x564fe5dae278 <line:29:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x564fe5d470a0 'long'
|-TypedefDecl 0x564fe5dae2e8 <line:30:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x564fe5d47140 'unsigned long'
|-TypedefDecl 0x564fe5dae358 <line:31:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x564fe5d47140 'unsigned long'
|-TypedefDecl 0x564fe5dae3c8 <line:32:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x564fe5d47120 'unsigned int'
|-TypedefDecl 0x564fe5dae438 <line:33:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x564fe5d47120 'unsigned int'
|-TypedefDecl 0x564fe5dae4a8 <line:34:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x564fe5d47140 'unsigned long'
|-TypedefDecl 0x564fe5dae518 <line:35:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x564fe5d47140 'unsigned long'
|-TypedefDecl 0x564fe5dae588 <line:36:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x564fe5d47120 'unsigned int'
|-TypedefDecl 0x564fe5dae5f8 <line:37:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x564fe5d47140 'unsigned long'
|-TypedefDecl 0x564fe5dae668 <line:38:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x564fe5d470a0 'long'
|-TypedefDecl 0x564fe5dae6d8 <line:39:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x564fe5d470a0 'long'
|-TypedefDecl 0x564fe5dae748 <line:40:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x564fe5d47080 'int'
|-RecordDecl 0x564fe5dae7a0 <line:41:9, col:32> col:9 struct definition
| `-FieldDecl 0x564fe5dae918 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x564fe5dae9d0 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x564fe5dae970 'struct __fsid_t' sugar
|   `-RecordType 0x564fe5dae820 '__fsid_t'
|     `-Record 0x564fe5dae7a0 ''
|-TypedefDecl 0x564fe5daea58 <line:42:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x564fe5d470a0 'long'
|-TypedefDecl 0x564fe5daeac8 <line:43:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x564fe5d47140 'unsigned long'
|-TypedefDecl 0x564fe5daeb38 <line:44:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x564fe5d47140 'unsigned long'
|-TypedefDecl 0x564fe5daeba8 <line:45:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x564fe5d47120 'unsigned int'
|-TypedefDecl 0x564fe5daec18 <line:46:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x564fe5d470a0 'long'
|-TypedefDecl 0x564fe5daec88 <line:47:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x564fe5d47120 'unsigned int'
|-TypedefDecl 0x564fe5daecf8 <line:48:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x564fe5d470a0 'long'
|-TypedefDecl 0x564fe5daed68 <line:49:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x564fe5d47080 'int'
|-TypedefDecl 0x564fe5daedd8 <line:50:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x564fe5d47080 'int'
|-TypedefDecl 0x564fe5daee48 <line:51:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x564fe5d47080 'int'
|-TypedefDecl 0x564fe5daeeb8 <line:52:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x564fe5d477a0 'void *'
|   `-BuiltinType 0x564fe5d46fe0 'void'
|-TypedefDecl 0x564fe5daef28 <line:53:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x564fe5d470a0 'long'
|-TypedefDecl 0x564fe5daef98 <line:54:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x564fe5d470a0 'long'
|-TypedefDecl 0x564fe5daf008 <line:55:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x564fe5d470a0 'long'
|-TypedefDecl 0x564fe5daf078 <line:56:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x564fe5d47140 'unsigned long'
|-TypedefDecl 0x564fe5daf0e8 <line:57:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x564fe5d47140 'unsigned long'
|-TypedefDecl 0x564fe5daf158 <line:58:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x564fe5d47140 'unsigned long'
|-TypedefDecl 0x564fe5daf1c8 <line:59:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x564fe5d47140 'unsigned long'
|-TypedefDecl 0x564fe5daf238 <line:60:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x564fe5d470a0 'long'
|-TypedefDecl 0x564fe5daf2a8 <line:61:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x564fe5d470a0 'long'
|-TypedefDecl 0x564fe5daf318 <line:62:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x564fe5d470a0 'long'
|-TypedefDecl 0x564fe5daf388 <line:63:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x564fe5d47140 'unsigned long'
|-TypedefDecl 0x564fe5daf418 <line:64:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x564fe5daf3e0 '__off64_t' sugar
|   |-Typedef 0x564fe5dae6d8 '__off64_t'
|   `-BuiltinType 0x564fe5d470a0 'long'
|-TypedefDecl 0x564fe5daf510 <line:65:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x564fe5daf4d0 '__quad_t *'
|   `-TypedefType 0x564fe5daf470 '__quad_t' sugar
|     |-Typedef 0x564fe5dae278 '__quad_t'
|     `-BuiltinType 0x564fe5d470a0 'long'
|-TypedefDecl 0x564fe5daf580 <line:66:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x564fe5d47c20 'char *'
|   `-BuiltinType 0x564fe5d47020 'char'
|-TypedefDecl 0x564fe5daf5f0 <line:67:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x564fe5d470a0 'long'
|-TypedefDecl 0x564fe5daf660 <line:68:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x564fe5d47120 'unsigned int'
|-FunctionDecl 0x564fe5daf7a8 <line:69:1, line:73:1> line:70:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x564fe5daf6d0 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x564fe5dafae8 <line:71:1, line:73:1>
|   `-ReturnStmt 0x564fe5dafad8 <line:72:3, col:34>
|     `-CallExpr 0x564fe5dafa98 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x564fe5dafa80 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x564fe5dafa10 <col:10> '<builtin fn type>' Function 0x564fe5daf880 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x564fe5dafac0 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x564fe5dafa30 <col:29> 'unsigned int' lvalue ParmVar 0x564fe5daf6d0 '__bsx' 'unsigned int'
|-FunctionDecl 0x564fe5daf880 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x564fe5daf920 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x564fe5daf990 <col:10> Implicit
| `-ConstAttr 0x564fe5daf9e8 <col:10> Implicit
|-FunctionDecl 0x564fe5dafc40 <line:74:1, line:78:1> line:75:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x564fe5dafb38 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x564fe5daff58 <line:76:1, line:78:1>
|   `-ReturnStmt 0x564fe5daff48 <line:77:3, col:34>
|     `-CallExpr 0x564fe5daff08 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x564fe5dafef0 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x564fe5dafe78 <col:10> '<builtin fn type>' Function 0x564fe5dafce8 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x564fe5daff30 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x564fe5dafe98 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x564fe5dafb38 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x564fe5dafce8 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x564fe5dafd88 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x564fe5dafdf8 <col:10> Implicit
| `-ConstAttr 0x564fe5dafe50 <col:10> Implicit
|-TypedefDecl 0x564fe5daff88 <line:79:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x564fe5d47140 'unsigned long'
|-TypedefDecl 0x564fe5db0018 <line:81:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x564fe5daffe0 '__time_t' sugar
|   |-Typedef 0x564fe5daec18 '__time_t'
|   `-BuiltinType 0x564fe5d470a0 'long'
|-RecordDecl 0x564fe5db0070 <line:84:1, line:88:3> line:84:8 struct timespec definition
| |-FieldDecl 0x564fe5db0128 <line:86:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x564fe5db01b8 <line:87:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x564fe5db0248 <line:89:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x564fe5db0210 '__pid_t' sugar
|   |-Typedef 0x564fe5dae748 '__pid_t'
|   `-BuiltinType 0x564fe5d47080 'int'
|-RecordDecl 0x564fe5db02a0 <line:90:1, line:93:3> line:90:8 struct sched_param definition
| `-FieldDecl 0x564fe5db0360 <line:92:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x564fe5db03b0 <line:96:1, line:99:3> line:96:8 struct __sched_param definition
| `-FieldDecl 0x564fe5db0470 <line:98:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x564fe5db04d8 <line:100:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x564fe5d47140 'unsigned long'
|-RecordDecl 0x564fe5db0530 <line:101:9, line:104:1> line:101:9 struct definition
| `-FieldDecl 0x564fe5db07c0 <line:103:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x564fe5db28b0 <line:101:1, line:104:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x564fe5db0810 'struct cpu_set_t' sugar
|   `-RecordType 0x564fe5db05b0 'cpu_set_t'
|     `-Record 0x564fe5db0530 ''
|-FunctionDecl 0x564fe5db2b88 <line:106:1, line:107:42> line:106:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x564fe5db2958 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x564fe5db2a60 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x564fe5db2c38 <line:107:19>
|-FunctionDecl 0x564fe5db2e10 <line:108:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x564fe5db2ca0 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x564fe5db2eb8 <col:69>
|-FunctionDecl 0x564fe5db3030 <line:109:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x564fe5db2f20 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x564fe5db30d8 <col:64>
|-FunctionDecl 0x564fe5db3398 <line:112:1, line:113:45> line:112:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x564fe5db3140 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x564fe5db3278 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x564fe5db3448 <line:113:22>
|-FunctionDecl 0x564fe5db36c8 <line:114:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x564fe5db34b0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x564fe5db35a8 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x564fe5db3778 <col:88>
|-FunctionDecl 0x564fe5db3a98 <line:115:1, line:116:85> line:115:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x564fe5db37e0 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x564fe5db38c0 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x564fe5db3950 <line:116:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x564fe5db3b50 <col:62>
|-FunctionDecl 0x564fe5db3cc8 <line:117:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x564fe5db3bb8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x564fe5db3d70 <col:63>
|-FunctionDecl 0x564fe5db3e98 <line:118:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x564fe5db3f38 <col:47>
|-FunctionDecl 0x564fe5db4040 <line:119:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x564fe5db3fa8 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x564fe5db40e8 <col:69>
|-FunctionDecl 0x564fe5db41f0 <line:120:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x564fe5db4158 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x564fe5db4298 <col:69>
|-FunctionDecl 0x564fe5db4558 <line:121:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x564fe5db4300 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x564fe5db4438 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x564fe5db4608 <col:88>
|-TypedefDecl 0x564fe5db4698 <line:125:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x564fe5db4660 '__clock_t' sugar
|   |-Typedef 0x564fe5daea58 '__clock_t'
|   `-BuiltinType 0x564fe5d470a0 'long'
|-TypedefDecl 0x564fe5db4728 <line:128:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x564fe5db46f0 '__clockid_t' sugar
|   |-Typedef 0x564fe5daee48 '__clockid_t'
|   `-BuiltinType 0x564fe5d47080 'int'
|-TypedefDecl 0x564fe5db47b8 <line:129:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x564fe5db4780 '__timer_t' sugar
|   |-Typedef 0x564fe5daeeb8 '__timer_t'
|   `-PointerType 0x564fe5d477a0 'void *'
|     `-BuiltinType 0x564fe5d46fe0 'void'
|-RecordDecl 0x564fe5db4810 <line:131:1, line:144:1> line:131:8 struct tm definition
| |-FieldDecl 0x564fe5db48e8 <line:133:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x564fe5db4950 <line:134:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x564fe5db49b8 <line:135:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x564fe5db4a20 <line:136:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x564fe5db4a88 <line:137:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x564fe5db4af0 <line:138:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x564fe5db4b58 <line:139:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x564fe5db4bc0 <line:140:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x564fe5db4c28 <line:141:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x564fe5db4c90 <line:142:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x564fe5db4cf8 <line:143:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x564fe5db4d48 <line:147:1, line:151:3> line:147:8 struct itimerspec definition
| |-FieldDecl 0x564fe5db4e18 <line:149:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x564fe5db4e88 <line:150:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x564fe5db4f30 <line:152:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x564fe5db5100 <line:154:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x564fe5db51a0 <col:45>
|-FunctionDecl 0x564fe5db5380 <line:155:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x564fe5db5270 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x564fe5db5428 <col:54>
|-FunctionDecl 0x564fe5db5628 <line:156:1, line:157:73> line:156:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x564fe5db5490 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x564fe5db5508 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x564fe5db56d8 <line:157:22>
| `-ConstAttr 0x564fe5db5730 <col:63>
|-FunctionDecl 0x564fe5db6560 <line:158:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x564fe5db5828 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x564fe5db6608 <col:56>
|-FunctionDecl 0x564fe5db69b0 <line:159:1, line:161:77> line:159:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x564fe5db6678 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x564fe5db66f0 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x564fe5db6770 <line:160:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x564fe5db6868 <line:161:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x564fe5db6a70 <col:54>
|-RecordDecl 0x564fe5db6ac8 <line:163:9, line:170:1> line:163:16 struct __locale_struct definition
| |-RecordDecl 0x564fe5db6b78 parent 0x564fe5d46f88 <line:165:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x564fe5db6dd8 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x564fe5db6e78 <line:166:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x564fe5db6ee0 <line:167:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x564fe5db6f48 <line:168:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x564fe5db7038 <line:169:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x564fe5db7158 <line:163:1, line:170:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x564fe5db7100 'struct __locale_struct *'
|   `-ElaboratedType 0x564fe5db7090 'struct __locale_struct' sugar
|     `-RecordType 0x564fe5db6b50 'struct __locale_struct'
|       `-Record 0x564fe5db6ac8 '__locale_struct'
|-TypedefDecl 0x564fe5db7208 <line:171:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x564fe5db71d0 '__locale_t' sugar
|   |-Typedef 0x564fe5db7158 '__locale_t'
|   `-PointerType 0x564fe5db7100 'struct __locale_struct *'
|     `-ElaboratedType 0x564fe5db7090 'struct __locale_struct' sugar
|       `-RecordType 0x564fe5db6b50 'struct __locale_struct'
|         `-Record 0x564fe5db6ac8 '__locale_struct'
|-FunctionDecl 0x564fe5db7610 <line:172:1, line:175:63> line:172:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x564fe5db7278 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x564fe5db72f0 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x564fe5db7370 <line:173:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x564fe5db7400 <line:174:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x564fe5db7478 <line:175:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x564fe5db76d8 <col:40>
|-FunctionDecl 0x564fe5db78c8 <line:177:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x564fe5db77a0 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x564fe5db7970 <col:66>
|-FunctionDecl 0x564fe5db7a80 <line:178:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x564fe5db79d8 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x564fe5db7b28 <col:69>
|-FunctionDecl 0x564fe5db7d58 <line:180:1, line:181:75> line:180:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x564fe5db7b90 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x564fe5db7c20 <line:181:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x564fe5db7e08 <col:52>
|-FunctionDecl 0x564fe5db7fb0 <line:182:1, line:183:78> line:182:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x564fe5db7e70 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x564fe5db7f00 <line:183:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x564fe5db8060 <col:55>
|-FunctionDecl 0x564fe5db81f8 <line:185:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x564fe5db80e0 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x564fe5db82a0 <col:62>
|-FunctionDecl 0x564fe5db8418 <line:186:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x564fe5db8308 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x564fe5db84c0 <col:60>
|-FunctionDecl 0x564fe5db8718 <line:188:1, line:189:67> line:188:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x564fe5db8578 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x564fe5db85f8 <line:189:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x564fe5db87c8 <col:44>
|-FunctionDecl 0x564fe5db89d8 <line:190:1, line:191:72> line:190:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x564fe5db8830 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x564fe5db88b0 <line:191:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x564fe5db8a88 <col:49>
|-VarDecl 0x564fe5db8b88 <line:192:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x564fe5db8c08 <line:193:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x564fe5db8c88 <line:194:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x564fe5db8d50 <line:195:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x564fe5db8e80 <line:196:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x564fe5db8f20 <col:42>
|-VarDecl 0x564fe5db8f90 <line:197:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x564fe5db9010 <line:198:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x564fe5db9198 <line:199:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x564fe5db9088 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x564fe5db9240 <col:57>
|-FunctionDecl 0x564fe5db9350 <line:200:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x564fe5db92c0 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x564fe5db93f8 <col:56>
|-FunctionDecl 0x564fe5dba540 <line:201:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x564fe5db9478 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x564fe5dba5e8 <col:59>
|-FunctionDecl 0x564fe5dba6f0 <line:202:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x564fe5dba658 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x564fe5dba798 <col:48>
| `-ConstAttr 0x564fe5dba7f0 <col:89>
|-FunctionDecl 0x564fe5dbaa58 <line:203:1, line:204:37> line:203:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x564fe5dba8a8 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x564fe5dba938 <line:204:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x564fe5dbacb8 <line:205:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x564fe5dbab48 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x564fe5dbabd8 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x564fe5dbad68 <col:88>
|-FunctionDecl 0x564fe5dbaf00 <line:206:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x564fe5dbadd0 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x564fe5dbae60 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x564fe5dbafb0 <col:88>
|-FunctionDecl 0x564fe5dbb1c8 <line:207:1, line:208:45> line:207:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x564fe5dbb018 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x564fe5dbb0a8 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x564fe5dbb278 <line:208:22>
|-FunctionDecl 0x564fe5dbb5e8 <line:209:1, line:211:30> line:209:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x564fe5dbb2e0 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x564fe5dbb360 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x564fe5dbb3f0 <line:210:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x564fe5dbb480 <line:211:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x564fe5dbb8e8 <line:212:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x564fe5dbb6e8 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x564fe5dbb7c0 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x564fe5dbb998 <col:85>
|-FunctionDecl 0x564fe5dbbd88 <line:213:1, line:215:75> line:213:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x564fe5dbba00 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x564fe5dbbb38 <line:214:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x564fe5dbbc40 <line:215:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x564fe5dbbe40 <col:52>
|-FunctionDecl 0x564fe5dbbfb8 <line:216:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x564fe5dbbea8 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x564fe5dbc060 <col:61>
|-FunctionDecl 0x564fe5dbc560 <line:217:1, line:219:85> line:217:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x564fe5dbc0c8 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x564fe5dbc148 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x564fe5dbc278 <line:218:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x564fe5dbc368 <line:219:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x564fe5dbc620 <col:62>
|-FunctionDecl 0x564fe5dbc838 <line:220:1, line:221:45> line:220:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x564fe5dbc688 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x564fe5dbc718 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x564fe5dbc8e8 <line:221:22>
|-FunctionDecl 0x564fe5dbc9e8 <line:222:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x564fe5dbc950 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x564fe5dbca90 <col:65>
|-TypedefDecl 0x564fe5dbcb00 <line:224:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x564fe5d47140 'unsigned long'
|-RecordDecl 0x564fe5dbcb58 <line:225:1, line:229:1> line:225:7 union pthread_attr_t definition
| |-FieldDecl 0x564fe5dbcca0 <line:227:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x564fe5dbcd08 <line:228:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x564fe5dbcdb8 <line:230:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x564fe5dbcd60 'union pthread_attr_t' sugar
|   `-RecordType 0x564fe5dbcbe0 'union pthread_attr_t'
|     `-Record 0x564fe5dbcb58 'pthread_attr_t'
|-RecordDecl 0x564fe5dbce10 <line:231:9, line:235:1> line:231:16 struct __pthread_internal_list definition
| |-FieldDecl 0x564fe5dbcf88 <line:233:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x564fe5dbd000 <line:234:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x564fe5dbd0b0 <line:231:1, line:235:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x564fe5dbd050 'struct __pthread_internal_list' sugar
|   `-RecordType 0x564fe5dbce90 'struct __pthread_internal_list'
|     `-Record 0x564fe5dbce10 '__pthread_internal_list'
|-RecordDecl 0x564fe5dbd120 <line:236:9, line:250:1> line:236:9 union definition
| |-RecordDecl 0x564fe5dbd1c8 parent 0x564fe5d46f88 <line:238:3, line:247:3> line:238:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x564fe5dbd2a0 <line:240:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x564fe5dbd308 <line:241:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x564fe5dbd370 <line:242:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x564fe5dbd3d8 <line:243:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x564fe5dbd440 <line:244:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x564fe5dbd4a8 <line:245:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x564fe5dc1580 <line:246:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x564fe5dc1630 <line:238:3, line:247:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x564fe5dc1720 <line:248:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x564fe5dc1788 <line:249:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x564fe5dc1910 <line:236:1, line:250:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x564fe5dc18b0 'union pthread_mutex_t' sugar
|   `-RecordType 0x564fe5dbd1a0 'pthread_mutex_t'
|     `-Record 0x564fe5dbd120 ''
|-RecordDecl 0x564fe5dc1980 <line:251:9, line:255:1> line:251:9 union definition
| |-FieldDecl 0x564fe5dc1ac0 <line:253:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x564fe5dc1b28 <line:254:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x564fe5dc1be0 <line:251:1, line:255:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x564fe5dc1b80 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x564fe5dc1a00 'pthread_mutexattr_t'
|     `-Record 0x564fe5dc1980 ''
|-RecordDecl 0x564fe5dc1c50 <line:256:9, line:271:1> line:256:9 union definition
| |-RecordDecl 0x564fe5dc1cf8 <line:258:3, line:268:3> line:258:3 struct definition
| | |-FieldDecl 0x564fe5dc1dc0 <line:260:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x564fe5dc1e28 <line:261:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x564fe5dc1e90 <line:262:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x564fe5dc1ef8 <line:263:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x564fe5dc1f60 <line:264:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x564fe5dc1fc8 <line:265:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x564fe5dc2030 <line:266:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x564fe5dc2098 <line:267:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x564fe5dc2150 <line:258:3, line:268:5> col:5 __data 'struct (anonymous struct at pthread-wmm/mix031_rmo.oepc_false-unreach-call.i:258:3)':'struct pthread_cond_t::(anonymous at pthread-wmm/mix031_rmo.oepc_false-unreach-call.i:258:3)'
| |-FieldDecl 0x564fe5dc2240 <line:269:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x564fe5dc22a8 <line:270:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x564fe5dc23e0 <line:256:1, line:271:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x564fe5dc2380 'union pthread_cond_t' sugar
|   `-RecordType 0x564fe5dc1cd0 'pthread_cond_t'
|     `-Record 0x564fe5dc1c50 ''
|-RecordDecl 0x564fe5dc2450 <line:272:9, line:276:1> line:272:9 union definition
| |-FieldDecl 0x564fe5dc2590 <line:274:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x564fe5dc25f8 <line:275:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x564fe5dc26b0 <line:272:1, line:276:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x564fe5dc2650 'union pthread_condattr_t' sugar
|   `-RecordType 0x564fe5dc24d0 'pthread_condattr_t'
|     `-Record 0x564fe5dc2450 ''
|-TypedefDecl 0x564fe5dc2738 <line:277:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x564fe5d47120 'unsigned int'
|-TypedefDecl 0x564fe5dc27a8 <line:278:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x564fe5d47080 'int'
|-RecordDecl 0x564fe5dc2800 <line:279:9, line:297:1> line:279:9 union definition
| |-RecordDecl 0x564fe5dc28a8 <line:281:3, line:294:3> line:281:3 struct definition
| | |-FieldDecl 0x564fe5dc2970 <line:283:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x564fe5dc29d8 <line:284:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x564fe5dc2a40 <line:285:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x564fe5dc2aa8 <line:286:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x564fe5dc2b10 <line:287:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x564fe5dc2b78 <line:288:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x564fe5dc2be0 <line:289:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x564fe5dc2c48 <line:290:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x564fe5dc2cb0 <line:291:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x564fe5dc2d18 <line:292:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x564fe5dc2d80 <line:293:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x564fe5dc2e30 <line:281:3, line:294:5> col:5 __data 'struct (anonymous struct at pthread-wmm/mix031_rmo.oepc_false-unreach-call.i:281:3)':'struct pthread_rwlock_t::(anonymous at pthread-wmm/mix031_rmo.oepc_false-unreach-call.i:281:3)'
| |-FieldDecl 0x564fe5dc2ed8 <line:295:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x564fe5dc2f40 <line:296:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x564fe5dc3090 <line:279:1, line:297:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x564fe5dc3030 'union pthread_rwlock_t' sugar
|   `-RecordType 0x564fe5dc2880 'pthread_rwlock_t'
|     `-Record 0x564fe5dc2800 ''
|-RecordDecl 0x564fe5dc3100 <line:298:9, line:302:1> line:298:9 union definition
| |-FieldDecl 0x564fe5dc3240 <line:300:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x564fe5dc32a8 <line:301:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x564fe5dc3360 <line:298:1, line:302:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x564fe5dc3300 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x564fe5dc3180 'pthread_rwlockattr_t'
|     `-Record 0x564fe5dc3100 ''
|-TypedefDecl 0x564fe5dc33e8 <line:303:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x564fe5d47084 'volatile int' volatile
|   `-BuiltinType 0x564fe5d47080 'int'
|-RecordDecl 0x564fe5dc3440 <line:304:9, line:308:1> line:304:9 union definition
| |-FieldDecl 0x564fe5dc55b0 <line:306:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x564fe5dc5618 <line:307:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x564fe5dc56d0 <line:304:1, line:308:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x564fe5dc5670 'union pthread_barrier_t' sugar
|   `-RecordType 0x564fe5dc34c0 'pthread_barrier_t'
|     `-Record 0x564fe5dc3440 ''
|-RecordDecl 0x564fe5dc5740 <line:309:9, line:313:1> line:309:9 union definition
| |-FieldDecl 0x564fe5dc5840 <line:311:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x564fe5dc58a8 <line:312:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x564fe5dc5960 <line:309:1, line:313:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x564fe5dc5900 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x564fe5dc57c0 'pthread_barrierattr_t'
|     `-Record 0x564fe5dc5740 ''
|-TypedefDecl 0x564fe5dc5a78 <line:314:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x564fe5dc5a10 'long [8]' 8 
|   `-BuiltinType 0x564fe5d470a0 'long'
|-EnumDecl 0x564fe5dc5ad0 <line:315:1, line:319:1> line:315:1
| |-EnumConstantDecl 0x564fe5dc5b98 <line:317:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x564fe5dc5be8 <line:318:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x564fe5dc5c38 <line:320:1, line:331:1> line:320:1
| |-EnumConstantDecl 0x564fe5dc5d08 <line:322:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x564fe5dc5d58 <line:323:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x564fe5dc5da8 <line:324:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x564fe5dc5df8 <line:325:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x564fe5dc5e80 <line:327:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x564fe5dc5e68 <col:26> 'int'
| |   `-DeclRefExpr 0x564fe5dc5e48 <col:26> 'int' EnumConstant 0x564fe5dc5d08 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x564fe5dc5f08 <line:328:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x564fe5dc5ef0 <col:29> 'int'
| |   `-DeclRefExpr 0x564fe5dc5ed0 <col:29> 'int' EnumConstant 0x564fe5dc5d58 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x564fe5dc5f90 <line:329:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x564fe5dc5f78 <col:30> 'int'
| |   `-DeclRefExpr 0x564fe5dc5f58 <col:30> 'int' EnumConstant 0x564fe5dc5da8 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x564fe5dc6018 <line:330:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x564fe5dc6000 <col:27> 'int'
|     `-DeclRefExpr 0x564fe5dc5fe0 <col:27> 'int' EnumConstant 0x564fe5dc5e80 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x564fe5dc6068 <line:332:1, line:338:1> line:332:1
| |-EnumConstantDecl 0x564fe5dc6138 <line:334:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x564fe5dc61c0 <line:335:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x564fe5dc61a8 <col:30> 'int'
| |   `-DeclRefExpr 0x564fe5dc6188 <col:30> 'int' EnumConstant 0x564fe5dc6138 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x564fe5dc6210 <line:336:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x564fe5dc6298 <line:337:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x564fe5dc6280 <col:29> 'int'
|     `-DeclRefExpr 0x564fe5dc6260 <col:29> 'int' EnumConstant 0x564fe5dc6210 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x564fe5dc62e8 <line:339:1, line:344:1> line:339:1
| |-EnumConstantDecl 0x564fe5dc63b8 <line:341:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x564fe5dc6408 <line:342:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x564fe5dc6458 <line:343:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x564fe5dc64a8 <line:345:1, line:351:1> line:345:1
| |-EnumConstantDecl 0x564fe5dc65c0 <line:347:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x564fe5dc6610 <line:348:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x564fe5dc6660 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x564fe5dc66e8 <line:350:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x564fe5dc66d0 <col:31> 'int'
|     `-DeclRefExpr 0x564fe5dc66b0 <col:31> 'int' EnumConstant 0x564fe5dc65c0 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x564fe5dc6738 <line:352:1, line:356:1> line:352:1
| |-EnumConstantDecl 0x564fe5dc6808 <line:354:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x564fe5dc6858 <line:355:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x564fe5dc68a8 <line:357:1, line:361:1> line:357:1
| |-EnumConstantDecl 0x564fe5dc6978 <line:359:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x564fe5dc69c8 <line:360:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x564fe5dc6a18 <line:362:1, line:366:1> line:362:1
| |-EnumConstantDecl 0x564fe5dc6ae8 <line:364:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x564fe5dc6b38 <line:365:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x564fe5dc6b88 <line:367:1, line:373:1> line:367:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x564fe5dc6dc8 <line:369:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x564fe5dc6e30 <line:370:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x564fe5dc6e98 <line:371:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x564fe5dc6fb8 <line:372:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x564fe5dc7008 <line:374:1, line:378:1> line:374:1
| |-EnumConstantDecl 0x564fe5dc70d8 <line:376:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x564fe5dc7128 <line:377:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x564fe5dc7178 <line:379:1, line:383:1> line:379:1
| |-EnumConstantDecl 0x564fe5dc7248 <line:381:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x564fe5dc7298 <line:382:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x564fe5dc78f8 <line:385:1, line:388:96> line:385:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x564fe5dc7390 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x564fe5dc74a0 <line:386:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x564fe5dc76e0 <line:387:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x564fe5dc7760 <line:388:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x564fe5dc79b8 <col:47>
| |-NonNullAttr 0x564fe5dc7a10 <col:77, col:94> 1 3
| `-CallbackAttr 0x564fe5dc7a48 <line:385:12> Implicit 2 3
|-FunctionDecl 0x564fe5dc7b70 <line:389:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x564fe5dc7aa0 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x564fe5dc7dc8 <line:390:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x564fe5dc7c28 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x564fe5dc7ca8 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x564fe5dc7f98 <line:391:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x564fe5dc7e88 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x564fe5dc8040 <col:60>
|-FunctionDecl 0x564fe5dc8190 <line:392:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x564fe5dc8230 <col:54>
| `-ConstAttr 0x564fe5dc8288 <col:95>
|-FunctionDecl 0x564fe5dc8458 <line:393:1, line:394:70> line:393:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x564fe5dc82c0 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x564fe5dc8338 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x564fe5dc8508 <line:394:19>
| `-ConstAttr 0x564fe5dc8560 <col:60>
|-FunctionDecl 0x564fe5dc8f68 <line:395:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x564fe5dc8e30 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x564fe5dc9010 <col:71>
| `-NonNullAttr 0x564fe5dc9068 <col:112, col:126> 1
|-FunctionDecl 0x564fe5dc9170 <line:396:1, line:397:79> line:396:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x564fe5dc90b8 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x564fe5dc9218 <line:397:22>
| `-NonNullAttr 0x564fe5dc9270 <col:63, col:77> 1
|-FunctionDecl 0x564fe5dc9498 <line:398:1, line:400:82> line:398:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x564fe5dc92b8 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x564fe5dc9338 <line:399:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x564fe5dc9548 <line:400:22>
| `-NonNullAttr 0x564fe5dc95a0 <col:63, col:80> 1 2
|-FunctionDecl 0x564fe5dc97a8 <line:401:1, line:403:79> line:401:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x564fe5dc95e8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x564fe5dc9668 <line:402:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x564fe5dc9858 <line:403:22>
| `-NonNullAttr 0x564fe5dc98b0 <col:63, col:77> 1
|-FunctionDecl 0x564fe5dc9b08 <line:404:1, line:406:82> line:404:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x564fe5dc98f8 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x564fe5dc99a0 <line:405:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x564fe5dc9bb8 <line:406:22>
| `-NonNullAttr 0x564fe5dc9c10 <col:63, col:80> 1 2
|-FunctionDecl 0x564fe5dcae48 <line:407:1, line:409:79> line:407:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x564fe5dc9c58 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x564fe5dc9cd0 <line:408:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x564fe5dcaef8 <line:409:22>
| `-NonNullAttr 0x564fe5dcaf50 <col:63, col:77> 1
|-FunctionDecl 0x564fe5dcb188 <line:410:1, line:412:82> line:410:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x564fe5dcaf98 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x564fe5dcb028 <line:411:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x564fe5dcb238 <line:412:22>
| `-NonNullAttr 0x564fe5dcb290 <col:63, col:80> 1 2
|-FunctionDecl 0x564fe5dcb4c8 <line:413:1, line:415:97> line:413:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x564fe5dcb2d8 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x564fe5dcb368 <line:414:12, line:415:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x564fe5dcb578 <col:37>
| `-NonNullAttr 0x564fe5dcb5d0 <col:78, col:95> 1 2
|-FunctionDecl 0x564fe5dcb7b8 <line:416:1, line:418:82> line:416:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x564fe5dcb618 <col:41, line:417:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x564fe5dcb698 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x564fe5dcb868 <line:418:22>
| `-NonNullAttr 0x564fe5dcb8c0 <col:63, col:80> 1 2
|-FunctionDecl 0x564fe5dcba48 <line:419:1, line:420:79> line:419:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x564fe5dcb908 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x564fe5dcb988 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x564fe5dcbaf8 <line:420:22>
| `-NonNullAttr 0x564fe5dcbb50 <col:63, col:77> 1
|-FunctionDecl 0x564fe5dcbcf8 <line:421:1, line:423:82> line:421:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x564fe5dcbb98 <col:42, line:422:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x564fe5dcbc18 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x564fe5dcbda8 <line:423:22>
| `-NonNullAttr 0x564fe5dcce30 <col:63, col:80> 1 2
|-FunctionDecl 0x564fe5dccfb8 <line:424:1, line:426:79> line:424:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x564fe5dcce78 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x564fe5dccef8 <line:425:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x564fe5dcd068 <line:426:22>
| `-NonNullAttr 0x564fe5dcd0c0 <col:63, col:77> 1
|-FunctionDecl 0x564fe5dcd268 <line:427:1, line:429:82> line:427:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x564fe5dcd108 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x564fe5dcd188 <line:428:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x564fe5dcd318 <line:429:22>
| `-NonNullAttr 0x564fe5dcd370 <col:63, col:80> 1 2
|-FunctionDecl 0x564fe5dcd4f8 <line:430:1, line:431:79> line:430:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x564fe5dcd3b8 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x564fe5dcd438 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x564fe5dcd5a8 <line:431:22>
| `-NonNullAttr 0x564fe5dcd600 <col:63, col:77> 1
|-FunctionDecl 0x564fe5dcd828 <line:432:1, line:434:115> line:432:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x564fe5dcd648 <col:39, line:433:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x564fe5dcd6c8 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x564fe5dcd8d8 <line:434:22>
| |-NonNullAttr 0x564fe5dcd930 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x564fe5dcd968 <col:100> "" ""
|-FunctionDecl 0x564fe5dcdb78 <line:435:1, line:437:112> line:435:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x564fe5dcd9b8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x564fe5dcda38 <line:436:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x564fe5dcdc28 <line:437:22>
| |-NonNullAttr 0x564fe5dcdc80 <col:63, col:77> 1
| `-DeprecatedAttr 0x564fe5dcdcb8 <col:97> "" ""
|-FunctionDecl 0x564fe5dcdeb8 <line:438:1, line:440:82> line:438:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x564fe5dcdd08 <col:39, line:439:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x564fe5dcdd80 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x564fe5dcdf68 <line:440:22>
| `-NonNullAttr 0x564fe5dcdfc0 <col:63, col:80> 1 2
|-FunctionDecl 0x564fe5dce140 <line:441:1, line:443:79> line:441:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x564fe5dce008 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x564fe5dce080 <line:442:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x564fe5dce1f0 <line:443:22>
| `-NonNullAttr 0x564fe5dce248 <col:63, col:77> 1
|-FunctionDecl 0x564fe5dce538 <line:444:1, line:447:85> line:444:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x564fe5dce298 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x564fe5dce318 <line:445:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x564fe5dce390 <line:446:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x564fe5dce5f0 <line:447:22>
| `-NonNullAttr 0x564fe5dce648 <col:63, col:83> 1 2 3
|-FunctionDecl 0x564fe5dce8f8 <line:448:1, line:449:100> line:448:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x564fe5dce6a0 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x564fe5dce720 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x564fe5dce798 <line:449:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x564fe5dce9b0 <col:43>
| `-NonNullAttr 0x564fe5dcea08 <col:84, col:98> 1
|-FunctionDecl 0x564fe5dcecc8 <line:450:1, line:452:79> line:450:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x564fe5dcea58 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x564fe5dcead8 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x564fe5dceb68 <line:451:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x564fe5dced80 <line:452:22>
| `-NonNullAttr 0x564fe5dcedd8 <col:63, col:77> 3
|-FunctionDecl 0x564fe5dcf0e8 <line:453:1, line:456:82> line:453:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x564fe5dcee50 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x564fe5dceed0 <line:454:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x564fe5dcef60 <line:455:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x564fe5dcf1a0 <line:456:22>
| `-NonNullAttr 0x564fe5dcf1f8 <col:63, col:80> 2 3
|-FunctionDecl 0x564fe5dcf3e8 <line:457:1, line:458:45> line:457:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x564fe5dcf248 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x564fe5dcf2c8 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x564fe5dcf498 <line:458:22>
|-FunctionDecl 0x564fe5dcf868 <line:459:1, line:460:71> line:459:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x564fe5dcf560 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x564fe5dcf700 <line:460:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x564fe5dcf918 <col:52, col:69> 1 2
|-FunctionDecl 0x564fe5dcfac0 <line:461:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x564fe5dcf9a0 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x564fe5dcfa20 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x564fe5dcfca8 <line:462:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x564fe5dcfb88 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x564fe5dcfc08 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x564fe5dcfe60 <line:463:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x564fe5dcfd68 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x564fe5dcffa0 <line:464:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x564fe5dd0040 <line:465:9, line:473:1> line:465:9 struct definition
| |-RecordDecl 0x564fe5dd00e8 <line:467:3, line:471:3> line:467:3 struct definition
| | |-FieldDecl 0x564fe5dd01d8 <line:469:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x564fe5dd0240 <line:470:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x564fe5dd0410 <line:467:3, line:471:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at pthread-wmm/mix031_rmo.oepc_false-unreach-call.i:467:3) [1]'
| `-FieldDecl 0x564fe5dd0508 <line:472:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x564fe5dd05c0 <line:465:1, line:473:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x564fe5dd0560 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x564fe5dd00c0 '__pthread_unwind_buf_t'
| |   `-Record 0x564fe5dd0040 ''
| `-AlignedAttr 0x564fe5dd0618 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x564fe5dd0690 <line:474:1, line:480:1> line:474:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x564fe5dd07f0 <line:476:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x564fe5dd0858 <line:477:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x564fe5dd08c0 <line:478:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x564fe5dd0928 <line:479:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x564fe5dd0b30 <line:481:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x564fe5dd0a20 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x564fe5dd0c78 <line:483:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x564fe5dd0be8 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x564fe5dd0e70 <line:485:1, line:487:31> line:485:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x564fe5dd0d30 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x564fe5dd0f18 <line:487:22>
|-RecordDecl 0x564fe5dd0f70 <line:489:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x564fe5dd1288 <line:490:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x564fe5dd10e8 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x564fe5dd1168 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x564fe5dd1338 <col:86>
| `-ReturnsTwiceAttr 0x564fe5dd1390 <col:12> Implicit
|-FunctionDecl 0x564fe5dd16b8 <line:491:1, line:493:79> line:491:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x564fe5dd1460 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x564fe5dd1570 <line:492:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x564fe5dd1768 <line:493:22>
| `-NonNullAttr 0x564fe5dd17c0 <col:63, col:77> 1
|-FunctionDecl 0x564fe5dd1938 <line:494:1, line:495:79> line:494:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x564fe5dd1808 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x564fe5dd19e0 <line:495:22>
| `-NonNullAttr 0x564fe5dd1a38 <col:63, col:77> 1
|-FunctionDecl 0x564fe5dd1b40 <line:496:1, line:497:68> line:496:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x564fe5dd1a88 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x564fe5dd1be8 <line:497:22>
| `-NonNullAttr 0x564fe5dd1c40 <col:52, col:66> 1
|-FunctionDecl 0x564fe5dd1d40 <line:498:1, line:499:68> line:498:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x564fe5dd1c88 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x564fe5dd1de8 <line:499:22>
| `-NonNullAttr 0x564fe5dd1e40 <col:52, col:66> 1
|-FunctionDecl 0x564fe5dd2088 <line:500:1, line:502:85> line:500:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x564fe5dd1e98 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x564fe5dd1f28 <line:501:9, line:502:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x564fe5dd2138 <col:36>
| `-NonNullAttr 0x564fe5dd2190 <col:66, col:83> 1 2
|-FunctionDecl 0x564fe5dd2290 <line:503:1, line:504:68> line:503:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x564fe5dd21d8 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x564fe5dd2338 <line:504:22>
| `-NonNullAttr 0x564fe5dd2390 <col:52, col:66> 1
|-FunctionDecl 0x564fe5dd2628 <line:505:1, line:508:82> line:505:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x564fe5dd2440 <col:42, line:506:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x564fe5dd24c0 <line:507:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x564fe5dd26d8 <line:508:22>
| `-NonNullAttr 0x564fe5dd2730 <col:63, col:80> 1 2
|-FunctionDecl 0x564fe5dd29f8 <line:509:1, line:512:82> line:509:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x564fe5dd2778 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x564fe5dd27f8 <line:510:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x564fe5dd2878 <line:511:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x564fe5dd2ab0 <line:512:22>
| `-NonNullAttr 0x564fe5dd2b08 <col:63, col:80> 1 3
|-FunctionDecl 0x564fe5dd2c10 <line:513:1, line:514:79> line:513:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x564fe5dd2b58 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x564fe5dd2cb8 <line:514:22>
| `-NonNullAttr 0x564fe5dd2d10 <col:63, col:77> 1
|-FunctionDecl 0x564fe5dd2f38 <line:515:1, line:516:79> line:515:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x564fe5dd2dc0 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x564fe5dd2fe0 <line:516:22>
| `-NonNullAttr 0x564fe5dd3038 <col:63, col:77> 1
|-FunctionDecl 0x564fe5dd3140 <line:517:1, line:518:79> line:517:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x564fe5dd3088 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x564fe5dd31e8 <line:518:22>
| `-NonNullAttr 0x564fe5dd3240 <col:63, col:77> 1
|-FunctionDecl 0x564fe5dd3468 <line:519:1, line:522:82> line:519:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x564fe5dd3288 <col:42, line:520:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x564fe5dd3308 <line:521:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x564fe5dd3518 <line:522:22>
| `-NonNullAttr 0x564fe5dd3570 <col:63, col:80> 1 2
|-FunctionDecl 0x564fe5dd3778 <line:523:1, line:525:79> line:523:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x564fe5dd35b8 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x564fe5dd3638 <line:524:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x564fe5dd3828 <line:525:22>
| `-NonNullAttr 0x564fe5dd3880 <col:63, col:77> 1
|-FunctionDecl 0x564fe5dd3a28 <line:526:1, line:528:82> line:526:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x564fe5dd38c8 <col:39, line:527:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x564fe5dd3948 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x564fe5dd3ad8 <line:528:22>
| `-NonNullAttr 0x564fe5dd3b30 <col:63, col:80> 1 2
|-FunctionDecl 0x564fe5dd3cb8 <line:529:1, line:530:79> line:529:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x564fe5dd3b78 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x564fe5dd3bf8 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x564fe5dd3d68 <line:530:22>
| `-NonNullAttr 0x564fe5dd3dc0 <col:63, col:77> 1
|-FunctionDecl 0x564fe5dd4f90 <line:531:1, line:534:82> line:531:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x564fe5dd3e08 <col:43, line:532:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x564fe5dd4eb0 <line:533:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x564fe5dd5040 <line:534:22>
| `-NonNullAttr 0x564fe5dd5098 <col:63, col:80> 1 2
|-FunctionDecl 0x564fe5dd5228 <line:535:1, line:537:79> line:535:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x564fe5dd50e8 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x564fe5dd5168 <line:536:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x564fe5dd52d8 <line:537:22>
| `-NonNullAttr 0x564fe5dd5330 <col:63, col:77> 1
|-FunctionDecl 0x564fe5dd54d8 <line:538:1, line:541:82> line:538:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x564fe5dd5378 <col:46, line:539:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x564fe5dd53f8 <line:540:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x564fe5dd5588 <line:541:22>
| `-NonNullAttr 0x564fe5dd55e0 <col:63, col:80> 1 2
|-FunctionDecl 0x564fe5dd5768 <line:542:1, line:544:79> line:542:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x564fe5dd5628 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x564fe5dd56a8 <line:543:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x564fe5dd5818 <line:544:22>
| `-NonNullAttr 0x564fe5dd5870 <col:63, col:77> 1
|-FunctionDecl 0x564fe5dd5a58 <line:545:1, line:547:82> line:545:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x564fe5dd58b8 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x564fe5dd5938 <line:546:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x564fe5dd5b08 <line:547:22>
| `-NonNullAttr 0x564fe5dd5b60 <col:63, col:80> 1 2
|-FunctionDecl 0x564fe5dd5ce8 <line:548:1, line:550:79> line:548:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x564fe5dd5ba8 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x564fe5dd5c28 <line:549:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x564fe5dd5d98 <line:550:22>
| `-NonNullAttr 0x564fe5dd5df0 <col:63, col:77> 1
|-FunctionDecl 0x564fe5dd7168 <line:551:1, line:553:86> line:551:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x564fe5dd6f10 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x564fe5dd7020 <line:552:5, line:553:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x564fe5dd7218 <col:29>
| `-NonNullAttr 0x564fe5dd7270 <col:70, col:84> 1
|-FunctionDecl 0x564fe5dd73e8 <line:554:1, line:555:79> line:554:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x564fe5dd72b8 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x564fe5dd7490 <line:555:22>
| `-NonNullAttr 0x564fe5dd74e8 <col:63, col:77> 1
|-FunctionDecl 0x564fe5dd75f0 <line:556:1, line:557:68> line:556:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x564fe5dd7538 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x564fe5dd7698 <line:557:22>
| `-NonNullAttr 0x564fe5dd76f0 <col:52, col:66> 1
|-FunctionDecl 0x564fe5dd77f0 <line:558:1, line:559:65> line:558:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x564fe5dd7738 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x564fe5dd7898 <line:559:19>
| `-NonNullAttr 0x564fe5dd78f0 <col:49, col:63> 1
|-FunctionDecl 0x564fe5dd7b28 <line:560:1, line:562:88> line:560:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x564fe5dd7938 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x564fe5dd79c8 <line:561:12, line:562:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x564fe5dd7bd8 <col:39>
| `-NonNullAttr 0x564fe5dd7c30 <col:69, col:86> 1 2
|-FunctionDecl 0x564fe5dd7d30 <line:563:1, line:564:68> line:563:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x564fe5dd7c78 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x564fe5dd7dd8 <line:564:22>
| `-NonNullAttr 0x564fe5dd7e30 <col:52, col:66> 1
|-FunctionDecl 0x564fe5dd7f98 <line:565:1, line:566:68> line:565:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x564fe5dd7ee0 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x564fe5dd8040 <line:566:22>
| `-NonNullAttr 0x564fe5dd8098 <col:52, col:66> 1
|-FunctionDecl 0x564fe5dd8258 <line:567:1, line:569:88> line:567:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x564fe5dd80e8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x564fe5dd8178 <line:568:12, line:569:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x564fe5dd8308 <col:39>
| `-NonNullAttr 0x564fe5dd8360 <col:69, col:86> 1 2
|-FunctionDecl 0x564fe5dd8460 <line:570:1, line:571:68> line:570:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x564fe5dd83a8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x564fe5dd8508 <line:571:22>
| `-NonNullAttr 0x564fe5dd8560 <col:52, col:66> 1
|-FunctionDecl 0x564fe5dd8748 <line:572:1, line:573:79> line:572:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x564fe5dd8610 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x564fe5dd87f0 <line:573:22>
| `-NonNullAttr 0x564fe5dd8848 <col:63, col:77> 1
|-FunctionDecl 0x564fe5dd8950 <line:574:1, line:575:79> line:574:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x564fe5dd8898 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x564fe5dd89f8 <line:575:22>
| `-NonNullAttr 0x564fe5dd8a50 <col:63, col:77> 1
|-FunctionDecl 0x564fe5dd8c78 <line:576:1, line:579:82> line:576:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x564fe5dd8a98 <col:43, line:577:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x564fe5dd8b18 <line:578:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x564fe5dd8d28 <line:579:22>
| `-NonNullAttr 0x564fe5dd8d80 <col:63, col:80> 1 2
|-FunctionDecl 0x564fe5dd8fa8 <line:580:1, line:582:79> line:580:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x564fe5dd8dc8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x564fe5dd8e48 <line:581:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x564fe5dd9058 <line:582:22>
| `-NonNullAttr 0x564fe5dd90b0 <col:63, col:77> 1
|-FunctionDecl 0x564fe5dd9258 <line:583:1, line:586:82> line:583:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x564fe5dd90f8 <col:43, line:584:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x564fe5dd9178 <line:585:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x564fe5dd9308 <line:586:22>
| `-NonNullAttr 0x564fe5dd9360 <col:63, col:80> 1 2
|-FunctionDecl 0x564fe5dd94e8 <line:587:1, line:588:93> line:587:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x564fe5dd93a8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x564fe5dd9428 <line:588:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x564fe5dd9598 <col:36>
| `-NonNullAttr 0x564fe5dd95f0 <col:77, col:91> 1
|-FunctionDecl 0x564fe5dd9928 <line:589:1, line:591:79> line:589:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x564fe5dd96d0 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x564fe5dd97e0 <line:590:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x564fe5dd99d8 <line:591:22>
| `-NonNullAttr 0x564fe5dd9a30 <col:63, col:77> 1
|-FunctionDecl 0x564fe5dd9ba8 <line:592:1, line:593:79> line:592:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x564fe5dd9a78 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x564fe5dd9c50 <line:593:22>
| `-NonNullAttr 0x564fe5dd9ca8 <col:63, col:77> 1
|-FunctionDecl 0x564fe5dd9db0 <line:594:1, line:595:68> line:594:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x564fe5dd9cf8 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x564fe5dd9e58 <line:595:22>
| `-NonNullAttr 0x564fe5dd9eb0 <col:52, col:66> 1
|-FunctionDecl 0x564fe5dd9fc8 <line:596:1, line:597:68> line:596:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x564fe5dd9f10 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x564fe5dda070 <line:597:22>
| `-NonNullAttr 0x564fe5dda0c8 <col:52, col:66> 1
|-FunctionDecl 0x564fe5dda2f8 <line:598:1, line:600:41> line:598:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x564fe5dda118 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x564fe5dda190 <line:599:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x564fe5dda3a8 <line:600:22, col:39> 1 2
|-FunctionDecl 0x564fe5dda6d8 <line:601:1, line:604:44> line:601:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x564fe5dda428 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x564fe5dda4a0 <line:602:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x564fe5dda530 <line:603:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x564fe5dda790 <line:604:22, col:42> 1 2 3
|-FunctionDecl 0x564fe5dda9a8 <line:605:1, line:606:79> line:605:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x564fe5dda870 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x564fe5ddaa50 <line:606:22>
| `-NonNullAttr 0x564fe5ddaaa8 <col:63, col:77> 1
|-FunctionDecl 0x564fe5ddabb0 <line:607:1, line:608:79> line:607:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x564fe5ddaaf8 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x564fe5ddac58 <line:608:22>
| `-NonNullAttr 0x564fe5ddacb0 <col:63, col:77> 1
|-FunctionDecl 0x564fe5ddaf10 <line:609:1, line:612:82> line:609:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x564fe5ddacf8 <col:41, line:610:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x564fe5ddad78 <line:611:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x564fe5ddafc0 <line:612:22>
| `-NonNullAttr 0x564fe5ddb018 <col:63, col:80> 1 2
|-FunctionDecl 0x564fe5ddb228 <line:613:1, line:614:94> line:613:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x564fe5ddb068 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x564fe5ddb0e8 <line:614:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x564fe5ddb2d8 <col:37>
| `-NonNullAttr 0x564fe5ddb330 <col:78, col:92> 1
|-FunctionDecl 0x564fe5ddb548 <line:615:1, line:618:82> line:615:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x564fe5ddb378 <col:39, line:616:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x564fe5ddb420 <line:617:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x564fe5ddb5f8 <line:618:22>
| `-NonNullAttr 0x564fe5ddb650 <col:63, col:80> 1 2
|-FunctionDecl 0x564fe5ddb818 <line:619:1, line:621:79> line:619:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x564fe5ddb698 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x564fe5ddb710 <line:620:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x564fe5ddb8c8 <line:621:22>
| `-NonNullAttr 0x564fe5ddb920 <col:63, col:77> 1
|-FunctionDecl 0x564fe5ddbbc8 <line:622:1, line:623:79> line:622:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x564fe5ddba00 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x564fe5ddba80 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x564fe5ddbc78 <line:623:22>
| `-NonNullAttr 0x564fe5ddbcd0 <col:63, col:77> 1
|-FunctionDecl 0x564fe5ddbe48 <line:624:1, line:625:79> line:624:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x564fe5ddbd18 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x564fe5ddbf20 <line:625:22>
| `-NonNullAttr 0x564fe5ddbf78 <col:63, col:77> 1
|-FunctionDecl 0x564fe5ddc080 <line:626:1, line:627:68> line:626:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x564fe5ddbfc8 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x564fe5ddc128 <line:627:22>
| `-NonNullAttr 0x564fe5ddc180 <col:52, col:66> 1
|-FunctionDecl 0x564fe5ddc280 <line:628:1, line:629:68> line:628:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x564fe5ddc1c8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x564fe5ddc328 <line:629:22>
| `-NonNullAttr 0x564fe5ddc380 <col:52, col:66> 1
|-FunctionDecl 0x564fe5ddc480 <line:630:1, line:631:68> line:630:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x564fe5ddc3c8 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x564fe5ddc528 <line:631:22>
| `-NonNullAttr 0x564fe5ddc580 <col:52, col:66> 1
|-FunctionDecl 0x564fe5ddc958 <line:632:1, line:635:79> line:632:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x564fe5ddc660 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x564fe5ddc770 <line:633:6, line:634:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x564fe5ddc7f0 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x564fe5ddca10 <line:635:22>
| `-NonNullAttr 0x564fe5ddca68 <col:63, col:77> 1
|-FunctionDecl 0x564fe5ddcbe8 <line:636:1, line:637:79> line:636:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x564fe5ddcab8 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x564fe5ddcc90 <line:637:22>
| `-NonNullAttr 0x564fe5ddcce8 <col:63, col:77> 1
|-FunctionDecl 0x564fe5ddcdf0 <line:638:1, line:639:68> line:638:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x564fe5ddcd38 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x564fe5ddce98 <line:639:22>
| `-NonNullAttr 0x564fe5ddcef0 <col:52, col:66> 1
|-FunctionDecl 0x564fe5ddd0e8 <line:640:1, line:641:79> line:640:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x564fe5ddcfb0 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x564fe5ddd190 <line:641:22>
| `-NonNullAttr 0x564fe5ddd1e8 <col:63, col:77> 1
|-FunctionDecl 0x564fe5ddd2f0 <line:642:1, line:643:79> line:642:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x564fe5ddd238 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x564fe5ddd398 <line:643:22>
| `-NonNullAttr 0x564fe5ddd3f0 <col:63, col:77> 1
|-FunctionDecl 0x564fe5ddd618 <line:644:1, line:647:82> line:644:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x564fe5ddd438 <col:44, line:645:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x564fe5ddd4b8 <line:646:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x564fe5ddd6c8 <line:647:22>
| `-NonNullAttr 0x564fe5ddd720 <col:63, col:80> 1 2
|-FunctionDecl 0x564fe5ddd928 <line:648:1, line:650:79> line:648:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x564fe5ddd768 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x564fe5ddd7e8 <line:649:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x564fe5ddd9d8 <line:650:22>
| `-NonNullAttr 0x564fe5ddda30 <col:63, col:77> 1
|-FunctionDecl 0x564fe5dddd78 <line:651:1, line:653:79> line:651:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x564fe5dddb10 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x564fe5dddc30 <line:652:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x564fe5ddde28 <line:653:22>
| `-NonNullAttr 0x564fe5ddde80 <col:63, col:77> 1
|-FunctionDecl 0x564fe5dddfe8 <line:654:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x564fe5dddec8 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x564fe5dde090 <col:69>
|-FunctionDecl 0x564fe5dde208 <line:655:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x564fe5dde0f8 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x564fe5dde2b0 <col:72>
|-FunctionDecl 0x564fe5dde4e8 <line:656:1, line:657:67> line:656:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x564fe5dde318 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x564fe5dde3c8 <line:657:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x564fe5dde598 <col:44>
|-FunctionDecl 0x564fe5dde7b8 <line:658:1, line:660:79> line:658:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x564fe5dde600 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x564fe5dde678 <line:659:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x564fe5dde868 <line:660:22>
| `-NonNullAttr 0x564fe5dde8c0 <col:63, col:77> 2
|-FunctionDecl 0x564fe5dded08 <line:661:1, line:663:70> line:661:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x564fe5dde9a0 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x564fe5ddeab0 <line:662:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x564fe5ddebc0 <line:663:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x564fe5ddedc0 <col:47>
|-FunctionDecl 0x564fe5ddff60 <line:665:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x564fe5ddee30 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x564fe5de00b8 <line:666:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x564fe5de0020 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x564fe5de0180 <line:667:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x564fe5de0240 <line:668:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x564fe5de0300 <line:669:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x564fe5de03b8 <line:670:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x564fe5de0438 prev 0x564fe5de03b8 <line:671:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x564fe5de04a0 <col:24> 'int' 0
|-VarDecl 0x564fe5de04d8 <line:672:1, col:5> col:5 used __unbuffered_p0_EAX 'int'
|-VarDecl 0x564fe5de0558 prev 0x564fe5de04d8 <line:673:1, col:27> col:5 used __unbuffered_p0_EAX 'int' cinit
| `-IntegerLiteral 0x564fe5de05c0 <col:27> 'int' 0
|-VarDecl 0x564fe5de05f8 <line:674:1, col:5> col:5 used __unbuffered_p0_EBX 'int'
|-VarDecl 0x564fe5de0678 prev 0x564fe5de05f8 <line:675:1, col:27> col:5 used __unbuffered_p0_EBX 'int' cinit
| `-IntegerLiteral 0x564fe5de06e0 <col:27> 'int' 0
|-VarDecl 0x564fe5de0718 <line:676:1, col:5> col:5 used __unbuffered_p1_EAX 'int'
|-VarDecl 0x564fe5de0798 prev 0x564fe5de0718 <line:677:1, col:27> col:5 used __unbuffered_p1_EAX 'int' cinit
| `-IntegerLiteral 0x564fe5de0800 <col:27> 'int' 0
|-VarDecl 0x564fe5de0838 <line:678:1, col:5> col:5 used __unbuffered_p1_EBX 'int'
|-VarDecl 0x564fe5de08b8 prev 0x564fe5de0838 <line:679:1, col:27> col:5 used __unbuffered_p1_EBX 'int' cinit
| `-IntegerLiteral 0x564fe5de0920 <col:27> 'int' 0
|-VarDecl 0x564fe5de0958 <line:680:1, col:5> col:5 used a 'int'
|-VarDecl 0x564fe5de09d8 prev 0x564fe5de0958 <line:681:1, col:9> col:5 used a 'int' cinit
| `-IntegerLiteral 0x564fe5de0a40 <col:9> 'int' 0
|-VarDecl 0x564fe5de0a70 <line:682:1, col:7> col:7 used a$flush_delayed '_Bool'
|-VarDecl 0x564fe5de0af0 <line:683:1, col:5> col:5 used a$mem_tmp 'int'
|-VarDecl 0x564fe5de0b68 <line:684:1, col:7> col:7 used a$r_buff0_thd0 '_Bool'
|-VarDecl 0x564fe5de0be0 <line:685:1, col:7> col:7 used a$r_buff0_thd1 '_Bool'
|-VarDecl 0x564fe5de0c58 <line:686:1, col:7> col:7 used a$r_buff0_thd2 '_Bool'
|-VarDecl 0x564fe5de0cd0 <line:687:1, col:7> col:7 used a$r_buff1_thd0 '_Bool'
|-VarDecl 0x564fe5de0d48 <line:688:1, col:7> col:7 used a$r_buff1_thd1 '_Bool'
|-VarDecl 0x564fe5de0dc0 <line:689:1, col:7> col:7 used a$r_buff1_thd2 '_Bool'
|-VarDecl 0x564fe5de0e38 <line:690:1, col:7> col:7 a$read_delayed '_Bool'
|-VarDecl 0x564fe5de0eb8 <line:691:1, col:6> col:6 a$read_delayed_var 'int *'
|-VarDecl 0x564fe5de0f70 <line:692:1, col:5> col:5 used a$w_buff0 'int'
|-VarDecl 0x564fe5de0fe8 <line:693:1, col:7> col:7 used a$w_buff0_used '_Bool'
|-VarDecl 0x564fe5de1068 <line:694:1, col:5> col:5 used a$w_buff1 'int'
|-VarDecl 0x564fe5de10e0 <line:695:1, col:7> col:7 used a$w_buff1_used '_Bool'
|-VarDecl 0x564fe5de1158 <line:696:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x564fe5de11d0 <line:697:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x564fe5de1250 <line:698:1, col:5> col:5 used x 'int'
|-VarDecl 0x564fe5de12d0 prev 0x564fe5de1250 <line:699:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x564fe5de1338 <col:9> 'int' 0
|-VarDecl 0x564fe5de1370 <line:700:1, col:5> col:5 used y 'int'
|-VarDecl 0x564fe5de13f0 prev 0x564fe5de1370 <line:701:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x564fe5de1458 <col:9> 'int' 0
|-VarDecl 0x564fe5de1490 <line:702:1, col:5> col:5 used z 'int'
|-VarDecl 0x564fe5de1510 prev 0x564fe5de1490 <line:703:1, col:9> col:5 used z 'int' cinit
| `-IntegerLiteral 0x564fe5de1578 <col:9> 'int' 0
|-VarDecl 0x564fe5de15a8 <line:704:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x564fe5de1620 <line:705:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x564fe5de1738 prev 0x564fe5ddff60 <line:706:1, line:739:1> line:706:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x564fe5de16a0 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x564fe5de3138 <line:707:1, line:739:1>
|   |-CallExpr 0x564fe5de1848 <line:708:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x564fe5de1830 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564fe5de17e0 <col:3> 'void ()' Function 0x564fe5d87350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x564fe5de18c0 <line:709:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x564fe5de1868 <col:3> 'int' lvalue Var 0x564fe5de1068 'a$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x564fe5de18a8 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x564fe5de1888 <col:15> 'int' lvalue Var 0x564fe5de0f70 'a$w_buff0' 'int'
|   |-BinaryOperator 0x564fe5de1920 <line:710:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x564fe5de18e0 <col:3> 'int' lvalue Var 0x564fe5de0f70 'a$w_buff0' 'int'
|   | `-IntegerLiteral 0x564fe5de1900 <col:15> 'int' 1
|   |-BinaryOperator 0x564fe5de1998 <line:711:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x564fe5de1940 <col:3> '_Bool' lvalue Var 0x564fe5de10e0 'a$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x564fe5de1980 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x564fe5de1960 <col:20> '_Bool' lvalue Var 0x564fe5de0fe8 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x564fe5de1a30 <line:712:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x564fe5de19b8 <col:3> '_Bool' lvalue Var 0x564fe5de0fe8 'a$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x564fe5de1a08 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x564fe5de19d8 <col:27> 'int' 1
|   |-CallExpr 0x564fe5de1bb8 <line:713:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x564fe5de1ba0 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x564fe5de1a50 <col:3> 'void (int)' Function 0x564fe5d870d8 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x564fe5de1b50 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x564fe5de1b30 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x564fe5de1b10 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x564fe5de1ac8 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x564fe5de1ab0 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x564fe5de1a70 <col:23> '_Bool' lvalue Var 0x564fe5de10e0 'a$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x564fe5de1af8 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x564fe5de1ae0 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x564fe5de1a90 <col:41> '_Bool' lvalue Var 0x564fe5de0fe8 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x564fe5de1c38 <line:714:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x564fe5de1be0 <col:3> '_Bool' lvalue Var 0x564fe5de0cd0 'a$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x564fe5de1c20 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x564fe5de1c00 <col:20> '_Bool' lvalue Var 0x564fe5de0b68 'a$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x564fe5de1cb0 <line:715:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x564fe5de1c58 <col:3> '_Bool' lvalue Var 0x564fe5de0d48 'a$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x564fe5de1c98 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x564fe5de1c78 <col:20> '_Bool' lvalue Var 0x564fe5de0be0 'a$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x564fe5de1d28 <line:716:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x564fe5de1cd0 <col:3> '_Bool' lvalue Var 0x564fe5de0dc0 'a$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x564fe5de1d10 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x564fe5de1cf0 <col:20> '_Bool' lvalue Var 0x564fe5de0c58 'a$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x564fe5de1dc0 <line:717:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x564fe5de1d48 <col:3> '_Bool' lvalue Var 0x564fe5de0be0 'a$r_buff0_thd1' '_Bool'
|   | `-CStyleCastExpr 0x564fe5de1d98 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x564fe5de1d68 <col:27> 'int' 1
|   |-CallExpr 0x564fe5de1e18 <line:718:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x564fe5de1e00 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564fe5de1de0 <col:3> 'void ()' Function 0x564fe5d87410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x564fe5de1e70 <line:719:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x564fe5de1e58 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564fe5de1e38 <col:3> 'void ()' Function 0x564fe5d87350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x564fe5de1ed0 <line:720:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x564fe5de1e90 <col:3> 'int' lvalue Var 0x564fe5de12d0 'x' 'int'
|   | `-IntegerLiteral 0x564fe5de1eb0 <col:7> 'int' 1
|   |-CallExpr 0x564fe5de1f28 <line:721:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x564fe5de1f10 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564fe5de1ef0 <col:3> 'void ()' Function 0x564fe5d87410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x564fe5de1f98 <line:722:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x564fe5de1f80 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564fe5de1f48 <col:3> 'void ()' Function 0x564fe5d87350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x564fe5de2010 <line:723:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x564fe5de1fb8 <col:3> 'int' lvalue Var 0x564fe5de0558 '__unbuffered_p0_EAX' 'int'
|   | `-ImplicitCastExpr 0x564fe5de1ff8 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x564fe5de1fd8 <col:25> 'int' lvalue Var 0x564fe5de12d0 'x' 'int'
|   |-CallExpr 0x564fe5de2068 <line:724:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x564fe5de2050 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564fe5de2030 <col:3> 'void ()' Function 0x564fe5d87410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x564fe5de20c0 <line:725:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x564fe5de20a8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564fe5de2088 <col:3> 'void ()' Function 0x564fe5d87350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x564fe5de2138 <line:726:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x564fe5de20e0 <col:3> 'int' lvalue Var 0x564fe5de0678 '__unbuffered_p0_EBX' 'int'
|   | `-ImplicitCastExpr 0x564fe5de2120 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x564fe5de2100 <col:25> 'int' lvalue Var 0x564fe5de13f0 'y' 'int'
|   |-CallExpr 0x564fe5de2190 <line:727:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x564fe5de2178 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564fe5de2158 <col:3> 'void ()' Function 0x564fe5d87410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x564fe5de21e8 <line:728:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x564fe5de21d0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564fe5de21b0 <col:3> 'void ()' Function 0x564fe5d87350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x564fe5de24d0 <line:729:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x564fe5de2208 <col:3> 'int' lvalue Var 0x564fe5de09d8 'a' 'int'
|   | `-ConditionalOperator 0x564fe5de24a0 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x564fe5de22c8 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x564fe5de2280 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x564fe5de2268 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x564fe5de2228 <col:7> '_Bool' lvalue Var 0x564fe5de0fe8 'a$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x564fe5de22b0 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x564fe5de2298 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x564fe5de2248 <col:25> '_Bool' lvalue Var 0x564fe5de0be0 'a$r_buff0_thd1' '_Bool'
|   |   |-ImplicitCastExpr 0x564fe5de2488 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x564fe5de22e8 <col:42> 'int' lvalue Var 0x564fe5de0f70 'a$w_buff0' 'int'
|   |   `-ParenExpr 0x564fe5de2468 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x564fe5de2438 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x564fe5de23a8 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x564fe5de2360 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x564fe5de2348 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x564fe5de2308 <col:55> '_Bool' lvalue Var 0x564fe5de10e0 'a$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x564fe5de2390 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x564fe5de2378 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x564fe5de2328 <col:73> '_Bool' lvalue Var 0x564fe5de0d48 'a$r_buff1_thd1' '_Bool'
|   |       |-ImplicitCastExpr 0x564fe5de2408 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x564fe5de23c8 <col:90> 'int' lvalue Var 0x564fe5de1068 'a$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x564fe5de2420 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x564fe5de23e8 <col:102> 'int' lvalue Var 0x564fe5de09d8 'a' 'int'
|   |-BinaryOperator 0x564fe5de26d8 <line:730:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x564fe5de24f0 <col:3> '_Bool' lvalue Var 0x564fe5de0fe8 'a$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x564fe5de26c0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x564fe5de2690 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x564fe5de25b0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x564fe5de2568 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x564fe5de2550 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x564fe5de2510 <col:20> '_Bool' lvalue Var 0x564fe5de0fe8 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x564fe5de2598 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x564fe5de2580 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x564fe5de2530 <col:38> '_Bool' lvalue Var 0x564fe5de0be0 'a$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x564fe5de2648 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x564fe5de2600 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x564fe5de25d0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x564fe5de2678 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x564fe5de2660 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x564fe5de2628 <col:66> '_Bool' lvalue Var 0x564fe5de0fe8 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x564fe5de29c0 <line:731:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x564fe5de26f8 <col:3> '_Bool' lvalue Var 0x564fe5de10e0 'a$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x564fe5de29a8 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x564fe5de2978 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x564fe5de2898 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x564fe5de27b8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x564fe5de2770 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x564fe5de2758 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x564fe5de2718 <col:20> '_Bool' lvalue Var 0x564fe5de0fe8 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x564fe5de27a0 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x564fe5de2788 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x564fe5de2738 <col:38> '_Bool' lvalue Var 0x564fe5de0be0 'a$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x564fe5de2878 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x564fe5de2830 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x564fe5de2818 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x564fe5de27d8 <col:56> '_Bool' lvalue Var 0x564fe5de10e0 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x564fe5de2860 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x564fe5de2848 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x564fe5de27f8 <col:74> '_Bool' lvalue Var 0x564fe5de0d48 'a$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x564fe5de2930 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x564fe5de28e8 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x564fe5de28b8 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x564fe5de2960 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x564fe5de2948 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x564fe5de2910 <col:102> '_Bool' lvalue Var 0x564fe5de10e0 'a$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x564fe5de2bc8 <line:732:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x564fe5de29e0 <col:3> '_Bool' lvalue Var 0x564fe5de0be0 'a$r_buff0_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x564fe5de2bb0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x564fe5de2b80 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x564fe5de2aa0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x564fe5de2a58 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x564fe5de2a40 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x564fe5de2a00 <col:20> '_Bool' lvalue Var 0x564fe5de0fe8 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x564fe5de2a88 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x564fe5de2a70 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x564fe5de2a20 <col:38> '_Bool' lvalue Var 0x564fe5de0be0 'a$r_buff0_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x564fe5de2b38 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x564fe5de2af0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x564fe5de2ac0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x564fe5de2b68 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x564fe5de2b50 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x564fe5de2b18 <col:66> '_Bool' lvalue Var 0x564fe5de0be0 'a$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x564fe5de2eb0 <line:733:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x564fe5de2be8 <col:3> '_Bool' lvalue Var 0x564fe5de0d48 'a$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x564fe5de2e98 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x564fe5de2e68 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x564fe5de2d88 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x564fe5de2ca8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x564fe5de2c60 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x564fe5de2c48 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x564fe5de2c08 <col:20> '_Bool' lvalue Var 0x564fe5de0fe8 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x564fe5de2c90 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x564fe5de2c78 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x564fe5de2c28 <col:38> '_Bool' lvalue Var 0x564fe5de0be0 'a$r_buff0_thd1' '_Bool'
|   |     | `-BinaryOperator 0x564fe5de2d68 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x564fe5de2d20 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x564fe5de2d08 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x564fe5de2cc8 <col:56> '_Bool' lvalue Var 0x564fe5de10e0 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x564fe5de2d50 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x564fe5de2d38 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x564fe5de2ce8 <col:74> '_Bool' lvalue Var 0x564fe5de0d48 'a$r_buff1_thd1' '_Bool'
|   |     |-ImplicitCastExpr 0x564fe5de2e20 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x564fe5de2dd8 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x564fe5de2da8 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x564fe5de2e50 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x564fe5de2e38 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x564fe5de2e00 <col:102> '_Bool' lvalue Var 0x564fe5de0d48 'a$r_buff1_thd1' '_Bool'
|   |-CallExpr 0x564fe5de2f08 <line:734:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x564fe5de2ef0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564fe5de2ed0 <col:3> 'void ()' Function 0x564fe5d87410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x564fe5de2f60 <line:735:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x564fe5de2f48 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564fe5de2f28 <col:3> 'void ()' Function 0x564fe5d87350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x564fe5de3028 <line:736:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x564fe5de2f90 <col:3> 'int' lvalue Var 0x564fe5de0438 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x564fe5de3008 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x564fe5de2ff0 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x564fe5de2fb0 <col:22> 'int' lvalue Var 0x564fe5de0438 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x564fe5de2fd0 <col:41> 'int' 1
|   |-CallExpr 0x564fe5de3080 <line:737:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x564fe5de3068 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564fe5de3048 <col:3> 'void ()' Function 0x564fe5d87410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x564fe5de3128 <line:738:3, col:36>
|     `-CallExpr 0x564fe5de3108 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x564fe5de30f0 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x564fe5de30a0 <col:10> 'void *(void)' Function 0x564fe5d86e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x564fe5de32f0 prev 0x564fe5de00b8 <line:740:1, line:778:1> line:740:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x564fe5de3258 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x564fe5de7108 <line:741:1, line:778:1>
|   |-CallExpr 0x564fe5de33d0 <line:742:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x564fe5de33b8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564fe5de3398 <col:3> 'void ()' Function 0x564fe5d87350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x564fe5de3430 <line:743:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x564fe5de33f0 <col:3> 'int' lvalue Var 0x564fe5de13f0 'y' 'int'
|   | `-IntegerLiteral 0x564fe5de3410 <col:7> 'int' 1
|   |-CallExpr 0x564fe5de3488 <line:744:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x564fe5de3470 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564fe5de3450 <col:3> 'void ()' Function 0x564fe5d87410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x564fe5de34e0 <line:745:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x564fe5de34c8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564fe5de34a8 <col:3> 'void ()' Function 0x564fe5d87350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x564fe5de3540 <line:746:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x564fe5de3500 <col:3> 'int' lvalue Var 0x564fe5de1510 'z' 'int'
|   | `-IntegerLiteral 0x564fe5de3520 <col:7> 'int' 1
|   |-CallExpr 0x564fe5de3598 <line:747:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x564fe5de3580 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564fe5de3560 <col:3> 'void ()' Function 0x564fe5d87410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x564fe5de35f0 <line:748:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x564fe5de35d8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564fe5de35b8 <col:3> 'void ()' Function 0x564fe5d87350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x564fe5de3668 <line:749:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x564fe5de3610 <col:3> 'int' lvalue Var 0x564fe5de0798 '__unbuffered_p1_EAX' 'int'
|   | `-ImplicitCastExpr 0x564fe5de3650 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x564fe5de3630 <col:25> 'int' lvalue Var 0x564fe5de1510 'z' 'int'
|   |-CallExpr 0x564fe5de36c0 <line:750:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x564fe5de36a8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564fe5de3688 <col:3> 'void ()' Function 0x564fe5d87410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x564fe5de3718 <line:751:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x564fe5de3700 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564fe5de36e0 <col:3> 'void ()' Function 0x564fe5d87350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x564fe5de37c8 <line:752:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x564fe5de3738 <col:3> '_Bool' lvalue Var 0x564fe5de15a8 'weak$$choice0' '_Bool'
|   | `-ImplicitCastExpr 0x564fe5de37b0 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x564fe5de3790 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x564fe5de3778 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x564fe5de3758 <col:19> 'void *(void)' Function 0x564fe5d86e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x564fe5de3878 <line:753:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x564fe5de37e8 <col:3> '_Bool' lvalue Var 0x564fe5de1620 'weak$$choice2' '_Bool'
|   | `-ImplicitCastExpr 0x564fe5de3860 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x564fe5de3840 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x564fe5de3828 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x564fe5de3808 <col:19> 'void *(void)' Function 0x564fe5d86e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x564fe5de38f0 <line:754:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x564fe5de3898 <col:3> '_Bool' lvalue Var 0x564fe5de0a70 'a$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x564fe5de38d8 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x564fe5de38b8 <col:21> '_Bool' lvalue Var 0x564fe5de1620 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x564fe5de3968 <line:755:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x564fe5de3910 <col:3> 'int' lvalue Var 0x564fe5de0af0 'a$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x564fe5de3950 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x564fe5de3930 <col:15> 'int' lvalue Var 0x564fe5de09d8 'a' 'int'
|   |-BinaryOperator 0x564fe5de3da0 <line:756:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x564fe5de3988 <col:3> 'int' lvalue Var 0x564fe5de09d8 'a' 'int'
|   | `-ConditionalOperator 0x564fe5de3d70 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x564fe5de3b98 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x564fe5de3ab8 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x564fe5de39e0 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x564fe5de39c8 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x564fe5de39a8 <col:8> '_Bool' lvalue Var 0x564fe5de0fe8 'a$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x564fe5de3a98 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x564fe5de3a30 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x564fe5de3a18 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x564fe5de39f8 <col:27> '_Bool' lvalue Var 0x564fe5de0c58 'a$r_buff0_thd2' '_Bool'
|   |   | |   `-UnaryOperator 0x564fe5de3a80 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x564fe5de3a68 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x564fe5de3a48 <col:46> '_Bool' lvalue Var 0x564fe5de10e0 'a$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x564fe5de3b78 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x564fe5de3b10 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x564fe5de3af8 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x564fe5de3ad8 <col:65> '_Bool' lvalue Var 0x564fe5de0c58 'a$r_buff0_thd2' '_Bool'
|   |   |   `-UnaryOperator 0x564fe5de3b60 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x564fe5de3b48 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x564fe5de3b28 <col:84> '_Bool' lvalue Var 0x564fe5de0dc0 'a$r_buff1_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x564fe5de3d58 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x564fe5de3bb8 <col:101> 'int' lvalue Var 0x564fe5de09d8 'a' 'int'
|   |   `-ParenExpr 0x564fe5de3d38 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x564fe5de3d08 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x564fe5de3c78 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x564fe5de3c30 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x564fe5de3c18 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x564fe5de3bd8 <col:106> '_Bool' lvalue Var 0x564fe5de0fe8 'a$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x564fe5de3c60 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x564fe5de3c48 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x564fe5de3bf8 <col:124> '_Bool' lvalue Var 0x564fe5de0c58 'a$r_buff0_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x564fe5de3cd8 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x564fe5de3c98 <col:141> 'int' lvalue Var 0x564fe5de0f70 'a$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x564fe5de3cf0 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x564fe5de3cb8 <col:153> 'int' lvalue Var 0x564fe5de1068 'a$w_buff1' 'int'
|   |-BinaryOperator 0x564fe5de42c8 <line:757:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x564fe5de3dc0 <col:3> 'int' lvalue Var 0x564fe5de0f70 'a$w_buff0' 'int'
|   | `-ConditionalOperator 0x564fe5de4298 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x564fe5de4268 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x564fe5de4250 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x564fe5de3de0 <col:15> '_Bool' lvalue Var 0x564fe5de1620 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x564fe5de4280 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x564fe5de3e00 <col:31> 'int' lvalue Var 0x564fe5de0f70 'a$w_buff0' 'int'
|   |   `-ParenExpr 0x564fe5de4230 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x564fe5de4200 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x564fe5de4028 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x564fe5de3f30 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x564fe5de3e58 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x564fe5de3e40 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x564fe5de3e20 <col:45> '_Bool' lvalue Var 0x564fe5de0fe8 'a$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x564fe5de3f10 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x564fe5de3ea8 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x564fe5de3e90 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x564fe5de3e70 <col:64> '_Bool' lvalue Var 0x564fe5de0c58 'a$r_buff0_thd2' '_Bool'
|   |       | |   `-UnaryOperator 0x564fe5de3ef8 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x564fe5de3ee0 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x564fe5de3ec0 <col:83> '_Bool' lvalue Var 0x564fe5de10e0 'a$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x564fe5de4008 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x564fe5de3fa0 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x564fe5de3f70 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x564fe5de3f50 <col:102> '_Bool' lvalue Var 0x564fe5de0c58 'a$r_buff0_thd2' '_Bool'
|   |       |   `-UnaryOperator 0x564fe5de3ff0 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x564fe5de3fd8 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x564fe5de3fb8 <col:121> '_Bool' lvalue Var 0x564fe5de0dc0 'a$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x564fe5de41e8 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x564fe5de4048 <col:138> 'int' lvalue Var 0x564fe5de0f70 'a$w_buff0' 'int'
|   |       `-ParenExpr 0x564fe5de41c8 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x564fe5de4198 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x564fe5de4108 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x564fe5de40c0 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x564fe5de40a8 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x564fe5de4068 <col:151> '_Bool' lvalue Var 0x564fe5de0fe8 'a$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x564fe5de40f0 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x564fe5de40d8 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x564fe5de4088 <col:169> '_Bool' lvalue Var 0x564fe5de0c58 'a$r_buff0_thd2' '_Bool'
|   |           |-ImplicitCastExpr 0x564fe5de4168 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x564fe5de4128 <col:186> 'int' lvalue Var 0x564fe5de0f70 'a$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x564fe5de4180 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x564fe5de4148 <col:198> 'int' lvalue Var 0x564fe5de0f70 'a$w_buff0' 'int'
|   |-BinaryOperator 0x564fe5de47d8 <line:758:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x564fe5de42e8 <col:3> 'int' lvalue Var 0x564fe5de1068 'a$w_buff1' 'int'
|   | `-ConditionalOperator 0x564fe5de47a8 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x564fe5de4778 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x564fe5de4760 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x564fe5de4308 <col:15> '_Bool' lvalue Var 0x564fe5de1620 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x564fe5de4790 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x564fe5de4328 <col:31> 'int' lvalue Var 0x564fe5de1068 'a$w_buff1' 'int'
|   |   `-ParenExpr 0x564fe5de4740 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x564fe5de4710 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x564fe5de4538 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x564fe5de4458 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x564fe5de4380 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x564fe5de4368 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x564fe5de4348 <col:45> '_Bool' lvalue Var 0x564fe5de0fe8 'a$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x564fe5de4438 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x564fe5de43d0 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x564fe5de43b8 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x564fe5de4398 <col:64> '_Bool' lvalue Var 0x564fe5de0c58 'a$r_buff0_thd2' '_Bool'
|   |       | |   `-UnaryOperator 0x564fe5de4420 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x564fe5de4408 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x564fe5de43e8 <col:83> '_Bool' lvalue Var 0x564fe5de10e0 'a$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x564fe5de4518 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x564fe5de44b0 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x564fe5de4498 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x564fe5de4478 <col:102> '_Bool' lvalue Var 0x564fe5de0c58 'a$r_buff0_thd2' '_Bool'
|   |       |   `-UnaryOperator 0x564fe5de4500 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x564fe5de44e8 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x564fe5de44c8 <col:121> '_Bool' lvalue Var 0x564fe5de0dc0 'a$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x564fe5de46f8 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x564fe5de4558 <col:138> 'int' lvalue Var 0x564fe5de1068 'a$w_buff1' 'int'
|   |       `-ParenExpr 0x564fe5de46d8 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x564fe5de46a8 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x564fe5de4618 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x564fe5de45d0 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x564fe5de45b8 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x564fe5de4578 <col:151> '_Bool' lvalue Var 0x564fe5de0fe8 'a$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x564fe5de4600 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x564fe5de45e8 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x564fe5de4598 <col:169> '_Bool' lvalue Var 0x564fe5de0c58 'a$r_buff0_thd2' '_Bool'
|   |           |-ImplicitCastExpr 0x564fe5de4678 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x564fe5de4638 <col:186> 'int' lvalue Var 0x564fe5de1068 'a$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x564fe5de4690 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x564fe5de4658 <col:198> 'int' lvalue Var 0x564fe5de1068 'a$w_buff1' 'int'
|   |-BinaryOperator 0x564fe5de4d80 <line:759:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x564fe5de47f8 <col:3> '_Bool' lvalue Var 0x564fe5de0fe8 'a$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x564fe5de4d68 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x564fe5de4d38 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x564fe5de4cf0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x564fe5de4cd8 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x564fe5de4818 <col:20> '_Bool' lvalue Var 0x564fe5de1620 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x564fe5de4d20 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x564fe5de4d08 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x564fe5de4838 <col:36> '_Bool' lvalue Var 0x564fe5de0fe8 'a$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x564fe5de4cb8 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x564fe5de4c88 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x564fe5de4a48 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x564fe5de4968 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x564fe5de4890 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x564fe5de4878 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x564fe5de4858 <col:55> '_Bool' lvalue Var 0x564fe5de0fe8 'a$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x564fe5de4948 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x564fe5de48e0 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x564fe5de48c8 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x564fe5de48a8 <col:74> '_Bool' lvalue Var 0x564fe5de0c58 'a$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x564fe5de4930 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x564fe5de4918 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x564fe5de48f8 <col:93> '_Bool' lvalue Var 0x564fe5de10e0 'a$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x564fe5de4a28 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x564fe5de49c0 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x564fe5de49a8 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x564fe5de4988 <col:112> '_Bool' lvalue Var 0x564fe5de0c58 'a$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x564fe5de4a10 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x564fe5de49f8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x564fe5de49d8 <col:131> '_Bool' lvalue Var 0x564fe5de0dc0 'a$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x564fe5de4c70 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x564fe5de4c58 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x564fe5de4a68 <col:148> '_Bool' lvalue Var 0x564fe5de0fe8 'a$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x564fe5de4c38 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x564fe5de4c08 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x564fe5de4b28 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x564fe5de4ae0 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x564fe5de4ac8 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x564fe5de4a88 <col:166> '_Bool' lvalue Var 0x564fe5de0fe8 'a$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x564fe5de4b10 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x564fe5de4af8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x564fe5de4aa8 <col:184> '_Bool' lvalue Var 0x564fe5de0c58 'a$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x564fe5de4bc0 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x564fe5de4b78 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x564fe5de4b48 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x564fe5de4bf0 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x564fe5de4bd8 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x564fe5de4ba0 <col:212> '_Bool' lvalue Var 0x564fe5de0fe8 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x564fe5de5358 <line:760:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x564fe5de4da0 <col:3> '_Bool' lvalue Var 0x564fe5de10e0 'a$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x564fe5de5340 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x564fe5de5310 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x564fe5de52c8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x564fe5de52b0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x564fe5de4dc0 <col:20> '_Bool' lvalue Var 0x564fe5de1620 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x564fe5de52f8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x564fe5de52e0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x564fe5de4de0 <col:36> '_Bool' lvalue Var 0x564fe5de10e0 'a$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x564fe5de5290 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x564fe5de5260 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x564fe5de5000 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x564fe5de4f10 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x564fe5de4e38 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x564fe5de4e20 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x564fe5de4e00 <col:55> '_Bool' lvalue Var 0x564fe5de0fe8 'a$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x564fe5de4ef0 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x564fe5de4e88 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x564fe5de4e70 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x564fe5de4e50 <col:74> '_Bool' lvalue Var 0x564fe5de0c58 'a$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x564fe5de4ed8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x564fe5de4ec0 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x564fe5de4ea0 <col:93> '_Bool' lvalue Var 0x564fe5de10e0 'a$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x564fe5de4fe0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x564fe5de4f68 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x564fe5de4f50 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x564fe5de4f30 <col:112> '_Bool' lvalue Var 0x564fe5de0c58 'a$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x564fe5de4fc8 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x564fe5de4fb0 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x564fe5de4f80 <col:131> '_Bool' lvalue Var 0x564fe5de0dc0 'a$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x564fe5de5248 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x564fe5de5230 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x564fe5de5020 <col:148> '_Bool' lvalue Var 0x564fe5de10e0 'a$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x564fe5de5210 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x564fe5de51e0 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x564fe5de50e0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x564fe5de5098 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x564fe5de5080 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x564fe5de5040 <col:166> '_Bool' lvalue Var 0x564fe5de0fe8 'a$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x564fe5de50c8 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x564fe5de50b0 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x564fe5de5060 <col:184> '_Bool' lvalue Var 0x564fe5de0c58 'a$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x564fe5de51b0 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x564fe5de5130 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x564fe5de5100 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x564fe5de51c8 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x564fe5de5188 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x564fe5de5158 <col:219> 'int' 0
|   |-BinaryOperator 0x564fe5de5900 <line:761:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x564fe5de5378 <col:3> '_Bool' lvalue Var 0x564fe5de0c58 'a$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x564fe5de58e8 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x564fe5de58b8 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x564fe5de5870 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x564fe5de5858 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x564fe5de5398 <col:20> '_Bool' lvalue Var 0x564fe5de1620 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x564fe5de58a0 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x564fe5de5888 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x564fe5de53b8 <col:36> '_Bool' lvalue Var 0x564fe5de0c58 'a$r_buff0_thd2' '_Bool'
|   |     `-ParenExpr 0x564fe5de5838 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x564fe5de5808 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x564fe5de55c8 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x564fe5de54e8 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x564fe5de5410 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x564fe5de53f8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x564fe5de53d8 <col:55> '_Bool' lvalue Var 0x564fe5de0fe8 'a$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x564fe5de54c8 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x564fe5de5460 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x564fe5de5448 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x564fe5de5428 <col:74> '_Bool' lvalue Var 0x564fe5de0c58 'a$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x564fe5de54b0 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x564fe5de5498 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x564fe5de5478 <col:93> '_Bool' lvalue Var 0x564fe5de10e0 'a$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x564fe5de55a8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x564fe5de5540 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x564fe5de5528 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x564fe5de5508 <col:112> '_Bool' lvalue Var 0x564fe5de0c58 'a$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x564fe5de5590 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x564fe5de5578 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x564fe5de5558 <col:131> '_Bool' lvalue Var 0x564fe5de0dc0 'a$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x564fe5de57f0 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x564fe5de57d8 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x564fe5de55e8 <col:148> '_Bool' lvalue Var 0x564fe5de0c58 'a$r_buff0_thd2' '_Bool'
|   |         `-ParenExpr 0x564fe5de57b8 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x564fe5de5788 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x564fe5de56a8 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x564fe5de5660 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x564fe5de5648 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x564fe5de5608 <col:166> '_Bool' lvalue Var 0x564fe5de0fe8 'a$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x564fe5de5690 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x564fe5de5678 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x564fe5de5628 <col:184> '_Bool' lvalue Var 0x564fe5de0c58 'a$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x564fe5de5740 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x564fe5de56f8 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x564fe5de56c8 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x564fe5de5770 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x564fe5de5758 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x564fe5de5720 <col:212> '_Bool' lvalue Var 0x564fe5de0c58 'a$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x564fe5de5ec8 <line:762:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x564fe5de5920 <col:3> '_Bool' lvalue Var 0x564fe5de0dc0 'a$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x564fe5de5eb0 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x564fe5de5e80 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x564fe5de5e38 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x564fe5de5e20 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x564fe5de5940 <col:20> '_Bool' lvalue Var 0x564fe5de1620 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x564fe5de5e68 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x564fe5de5e50 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x564fe5de5960 <col:36> '_Bool' lvalue Var 0x564fe5de0dc0 'a$r_buff1_thd2' '_Bool'
|   |     `-ParenExpr 0x564fe5de5e00 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x564fe5de5dd0 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x564fe5de5b70 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x564fe5de5a90 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x564fe5de59b8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x564fe5de59a0 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x564fe5de5980 <col:55> '_Bool' lvalue Var 0x564fe5de0fe8 'a$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x564fe5de5a70 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x564fe5de5a08 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x564fe5de59f0 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x564fe5de59d0 <col:74> '_Bool' lvalue Var 0x564fe5de0c58 'a$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x564fe5de5a58 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x564fe5de5a40 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x564fe5de5a20 <col:93> '_Bool' lvalue Var 0x564fe5de10e0 'a$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x564fe5de5b50 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x564fe5de5ae8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x564fe5de5ad0 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x564fe5de5ab0 <col:112> '_Bool' lvalue Var 0x564fe5de0c58 'a$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x564fe5de5b38 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x564fe5de5b20 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x564fe5de5b00 <col:131> '_Bool' lvalue Var 0x564fe5de0dc0 'a$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x564fe5de5db8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x564fe5de5da0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x564fe5de5b90 <col:148> '_Bool' lvalue Var 0x564fe5de0dc0 'a$r_buff1_thd2' '_Bool'
|   |         `-ParenExpr 0x564fe5de5d80 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x564fe5de5d50 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x564fe5de5c50 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x564fe5de5c08 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x564fe5de5bf0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x564fe5de5bb0 <col:166> '_Bool' lvalue Var 0x564fe5de0fe8 'a$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x564fe5de5c38 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x564fe5de5c20 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x564fe5de5bd0 <col:184> '_Bool' lvalue Var 0x564fe5de0c58 'a$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x564fe5de5d20 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x564fe5de5ca0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x564fe5de5c70 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x564fe5de5d38 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x564fe5de5cf8 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x564fe5de5cc8 <col:219> 'int' 0
|   |-BinaryOperator 0x564fe5de5f40 <line:763:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x564fe5de5ee8 <col:3> 'int' lvalue Var 0x564fe5de08b8 '__unbuffered_p1_EBX' 'int'
|   | `-ImplicitCastExpr 0x564fe5de5f28 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x564fe5de5f08 <col:25> 'int' lvalue Var 0x564fe5de09d8 'a' 'int'
|   |-BinaryOperator 0x564fe5de6090 <line:764:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x564fe5de5f60 <col:3> 'int' lvalue Var 0x564fe5de09d8 'a' 'int'
|   | `-ConditionalOperator 0x564fe5de6060 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x564fe5de6018 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x564fe5de6000 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x564fe5de5f80 <col:7> '_Bool' lvalue Var 0x564fe5de0a70 'a$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x564fe5de6030 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x564fe5de5fc0 <col:25> 'int' lvalue Var 0x564fe5de0af0 'a$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x564fe5de6048 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x564fe5de5fe0 <col:37> 'int' lvalue Var 0x564fe5de09d8 'a' 'int'
|   |-BinaryOperator 0x564fe5de6128 <line:765:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x564fe5de60b0 <col:3> '_Bool' lvalue Var 0x564fe5de0a70 'a$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x564fe5de6100 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x564fe5de60d0 <col:28> 'int' 0
|   |-CallExpr 0x564fe5de6180 <line:766:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x564fe5de6168 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564fe5de6148 <col:3> 'void ()' Function 0x564fe5d87410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x564fe5de61d8 <line:767:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x564fe5de61c0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564fe5de61a0 <col:3> 'void ()' Function 0x564fe5d87350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x564fe5de64c0 <line:768:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x564fe5de61f8 <col:3> 'int' lvalue Var 0x564fe5de09d8 'a' 'int'
|   | `-ConditionalOperator 0x564fe5de6490 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x564fe5de62b8 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x564fe5de6270 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x564fe5de6258 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x564fe5de6218 <col:7> '_Bool' lvalue Var 0x564fe5de0fe8 'a$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x564fe5de62a0 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x564fe5de6288 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x564fe5de6238 <col:25> '_Bool' lvalue Var 0x564fe5de0c58 'a$r_buff0_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x564fe5de6478 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x564fe5de62d8 <col:42> 'int' lvalue Var 0x564fe5de0f70 'a$w_buff0' 'int'
|   |   `-ParenExpr 0x564fe5de6458 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x564fe5de6428 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x564fe5de6398 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x564fe5de6350 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x564fe5de6338 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x564fe5de62f8 <col:55> '_Bool' lvalue Var 0x564fe5de10e0 'a$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x564fe5de6380 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x564fe5de6368 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x564fe5de6318 <col:73> '_Bool' lvalue Var 0x564fe5de0dc0 'a$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x564fe5de63f8 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x564fe5de63b8 <col:90> 'int' lvalue Var 0x564fe5de1068 'a$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x564fe5de6410 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x564fe5de63d8 <col:102> 'int' lvalue Var 0x564fe5de09d8 'a' 'int'
|   |-BinaryOperator 0x564fe5de66c8 <line:769:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x564fe5de64e0 <col:3> '_Bool' lvalue Var 0x564fe5de0fe8 'a$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x564fe5de66b0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x564fe5de6680 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x564fe5de65a0 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x564fe5de6558 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x564fe5de6540 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x564fe5de6500 <col:20> '_Bool' lvalue Var 0x564fe5de0fe8 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x564fe5de6588 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x564fe5de6570 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x564fe5de6520 <col:38> '_Bool' lvalue Var 0x564fe5de0c58 'a$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x564fe5de6638 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x564fe5de65f0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x564fe5de65c0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x564fe5de6668 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x564fe5de6650 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x564fe5de6618 <col:66> '_Bool' lvalue Var 0x564fe5de0fe8 'a$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x564fe5de69b0 <line:770:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x564fe5de66e8 <col:3> '_Bool' lvalue Var 0x564fe5de10e0 'a$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x564fe5de6998 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x564fe5de6968 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x564fe5de6888 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x564fe5de67a8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x564fe5de6760 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x564fe5de6748 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x564fe5de6708 <col:20> '_Bool' lvalue Var 0x564fe5de0fe8 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x564fe5de6790 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x564fe5de6778 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x564fe5de6728 <col:38> '_Bool' lvalue Var 0x564fe5de0c58 'a$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x564fe5de6868 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x564fe5de6820 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x564fe5de6808 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x564fe5de67c8 <col:56> '_Bool' lvalue Var 0x564fe5de10e0 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x564fe5de6850 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x564fe5de6838 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x564fe5de67e8 <col:74> '_Bool' lvalue Var 0x564fe5de0dc0 'a$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x564fe5de6920 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x564fe5de68d8 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x564fe5de68a8 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x564fe5de6950 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x564fe5de6938 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x564fe5de6900 <col:102> '_Bool' lvalue Var 0x564fe5de10e0 'a$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x564fe5de6bb8 <line:771:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x564fe5de69d0 <col:3> '_Bool' lvalue Var 0x564fe5de0c58 'a$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x564fe5de6ba0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x564fe5de6b70 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x564fe5de6a90 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x564fe5de6a48 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x564fe5de6a30 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x564fe5de69f0 <col:20> '_Bool' lvalue Var 0x564fe5de0fe8 'a$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x564fe5de6a78 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x564fe5de6a60 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x564fe5de6a10 <col:38> '_Bool' lvalue Var 0x564fe5de0c58 'a$r_buff0_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x564fe5de6b28 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x564fe5de6ae0 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x564fe5de6ab0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x564fe5de6b58 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x564fe5de6b40 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x564fe5de6b08 <col:66> '_Bool' lvalue Var 0x564fe5de0c58 'a$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x564fe5de6ea0 <line:772:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x564fe5de6bd8 <col:3> '_Bool' lvalue Var 0x564fe5de0dc0 'a$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x564fe5de6e88 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x564fe5de6e58 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x564fe5de6d78 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x564fe5de6c98 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x564fe5de6c50 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x564fe5de6c38 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x564fe5de6bf8 <col:20> '_Bool' lvalue Var 0x564fe5de0fe8 'a$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x564fe5de6c80 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x564fe5de6c68 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x564fe5de6c18 <col:38> '_Bool' lvalue Var 0x564fe5de0c58 'a$r_buff0_thd2' '_Bool'
|   |     | `-BinaryOperator 0x564fe5de6d58 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x564fe5de6d10 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x564fe5de6cf8 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x564fe5de6cb8 <col:56> '_Bool' lvalue Var 0x564fe5de10e0 'a$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x564fe5de6d40 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x564fe5de6d28 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x564fe5de6cd8 <col:74> '_Bool' lvalue Var 0x564fe5de0dc0 'a$r_buff1_thd2' '_Bool'
|   |     |-ImplicitCastExpr 0x564fe5de6e10 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x564fe5de6dc8 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x564fe5de6d98 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x564fe5de6e40 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x564fe5de6e28 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x564fe5de6df0 <col:102> '_Bool' lvalue Var 0x564fe5de0dc0 'a$r_buff1_thd2' '_Bool'
|   |-CallExpr 0x564fe5de6ef8 <line:773:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x564fe5de6ee0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564fe5de6ec0 <col:3> 'void ()' Function 0x564fe5d87410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x564fe5de6f50 <line:774:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x564fe5de6f38 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564fe5de6f18 <col:3> 'void ()' Function 0x564fe5d87350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x564fe5de7028 <line:775:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x564fe5de6f70 <col:3> 'int' lvalue Var 0x564fe5de0438 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x564fe5de7008 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x564fe5de6ff0 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x564fe5de6f90 <col:22> 'int' lvalue Var 0x564fe5de0438 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x564fe5de6fd0 <col:41> 'int' 1
|   |-CallExpr 0x564fe5de7080 <line:776:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x564fe5de7068 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x564fe5de7048 <col:3> 'void ()' Function 0x564fe5d87410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x564fe5de70f8 <line:777:3, col:36>
|     `-CallExpr 0x564fe5de70d8 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x564fe5de70c0 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x564fe5de70a0 <col:10> 'void *(void)' Function 0x564fe5d86e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x564fe5de7258 prev 0x564fe5de0180 <line:779:1, line:781:1> line:779:6 fence 'void ()'
| `-CompoundStmt 0x564fe5de72f8 <line:780:1, line:781:1>
|-FunctionDecl 0x564fe5de7328 prev 0x564fe5de0240 <line:782:1, line:784:1> line:782:6 isync 'void ()'
| `-CompoundStmt 0x564fe5de73c8 <line:783:1, line:784:1>
|-FunctionDecl 0x564fe5de73f8 prev 0x564fe5de0300 <line:785:1, line:787:1> line:785:6 lwfence 'void ()'
| `-CompoundStmt 0x564fe5de7498 <line:786:1, line:787:1>
`-FunctionDecl 0x564fe5de7508 <line:788:1, line:810:1> line:788:5 main 'int ()'
  `-CompoundStmt 0x564fe5de8ff0 <line:789:1, line:810:1>
    |-DeclStmt 0x564fe5de7620 <line:790:3, col:17>
    | `-VarDecl 0x564fe5de75b8 <col:3, col:13> col:13 used t843 'pthread_t':'unsigned long'
    |-CallExpr 0x564fe5de7828 <line:791:3, col:53> 'int'
    | |-ImplicitCastExpr 0x564fe5de7810 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x564fe5de7638 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x564fe5dc78f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x564fe5de7678 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x564fe5de7658 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x564fe5de75b8 't843' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x564fe5de7868 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x564fe5de76f0 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x564fe5de76c8 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x564fe5de7690 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x564fe5de7880 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x564fe5de7710 <col:38> 'void *(void *)' Function 0x564fe5de1738 'P0' 'void *(void *)'
    | `-ParenExpr 0x564fe5de7790 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x564fe5de7768 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x564fe5de7730 <col:51> 'int' 0
    |-DeclStmt 0x564fe5de7910 <line:792:3, col:17>
    | `-VarDecl 0x564fe5de78a8 <col:3, col:13> col:13 used t844 'pthread_t':'unsigned long'
    |-CallExpr 0x564fe5de7ab8 <line:793:3, col:53> 'int'
    | |-ImplicitCastExpr 0x564fe5de7aa0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x564fe5de7928 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x564fe5dc78f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x564fe5de7968 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x564fe5de7948 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x564fe5de78a8 't844' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x564fe5de7af8 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x564fe5de79e0 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x564fe5de79b8 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x564fe5de7980 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x564fe5de7b10 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x564fe5de7a00 <col:38> 'void *(void *)' Function 0x564fe5de32f0 'P1' 'void *(void *)'
    | `-ParenExpr 0x564fe5de7a80 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x564fe5de7a58 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x564fe5de7a20 <col:51> 'int' 0
    |-CallExpr 0x564fe5de7b60 <line:794:3, col:27> 'void'
    | `-ImplicitCastExpr 0x564fe5de7b48 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x564fe5de7b28 <col:3> 'void ()' Function 0x564fe5d87350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x564fe5de7c30 <line:795:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x564fe5de7b80 <col:3> '_Bool' lvalue Var 0x564fe5de1158 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x564fe5de7c18 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x564fe5de7bf8 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x564fe5de7be0 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x564fe5de7ba0 <col:21> 'int' lvalue Var 0x564fe5de0438 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x564fe5de7bc0 <col:41> 'int' 2
    |-CallExpr 0x564fe5de7c88 <line:796:3, col:25> 'void'
    | `-ImplicitCastExpr 0x564fe5de7c70 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x564fe5de7c50 <col:3> 'void ()' Function 0x564fe5d87410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x564fe5de7d00 <line:797:3, col:36> 'void'
    | |-ImplicitCastExpr 0x564fe5de7ce8 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x564fe5de7ca8 <col:3> 'void (int)' Function 0x564fe5d86ca0 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x564fe5de7d40 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x564fe5de7d28 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x564fe5de7cc8 <col:21> '_Bool' lvalue Var 0x564fe5de1158 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x564fe5de7d90 <line:798:3, col:27> 'void'
    | `-ImplicitCastExpr 0x564fe5de7d78 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x564fe5de7d58 <col:3> 'void ()' Function 0x564fe5d87350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x564fe5de8090 <line:799:3, col:103> 'int' '='
    | |-DeclRefExpr 0x564fe5de7db0 <col:3> 'int' lvalue Var 0x564fe5de09d8 'a' 'int'
    | `-ConditionalOperator 0x564fe5de8060 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x564fe5de7e70 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x564fe5de7e28 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x564fe5de7e10 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x564fe5de7dd0 <col:7> '_Bool' lvalue Var 0x564fe5de0fe8 'a$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x564fe5de7e58 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x564fe5de7e40 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x564fe5de7df0 <col:25> '_Bool' lvalue Var 0x564fe5de0b68 'a$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x564fe5de8048 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x564fe5de7e90 <col:42> 'int' lvalue Var 0x564fe5de0f70 'a$w_buff0' 'int'
    |   `-ParenExpr 0x564fe5de8028 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x564fe5de7ff8 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x564fe5de7f50 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x564fe5de7f08 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x564fe5de7ef0 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x564fe5de7eb0 <col:55> '_Bool' lvalue Var 0x564fe5de10e0 'a$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x564fe5de7f38 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x564fe5de7f20 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x564fe5de7ed0 <col:73> '_Bool' lvalue Var 0x564fe5de0cd0 'a$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x564fe5de7fb0 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x564fe5de7f70 <col:90> 'int' lvalue Var 0x564fe5de1068 'a$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x564fe5de7fe0 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x564fe5de7f90 <col:102> 'int' lvalue Var 0x564fe5de09d8 'a' 'int'
    |-BinaryOperator 0x564fe5de8298 <line:800:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x564fe5de80b0 <col:3> '_Bool' lvalue Var 0x564fe5de0fe8 'a$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x564fe5de8280 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x564fe5de8250 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x564fe5de8170 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x564fe5de8128 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x564fe5de8110 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x564fe5de80d0 <col:20> '_Bool' lvalue Var 0x564fe5de0fe8 'a$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x564fe5de8158 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x564fe5de8140 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x564fe5de80f0 <col:38> '_Bool' lvalue Var 0x564fe5de0b68 'a$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x564fe5de8208 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x564fe5de81c0 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x564fe5de8190 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x564fe5de8238 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x564fe5de8220 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x564fe5de81e8 <col:66> '_Bool' lvalue Var 0x564fe5de0fe8 'a$w_buff0_used' '_Bool'
    |-BinaryOperator 0x564fe5de8580 <line:801:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x564fe5de82b8 <col:3> '_Bool' lvalue Var 0x564fe5de10e0 'a$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x564fe5de8568 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x564fe5de8538 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x564fe5de8458 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x564fe5de8378 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x564fe5de8330 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x564fe5de8318 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x564fe5de82d8 <col:20> '_Bool' lvalue Var 0x564fe5de0fe8 'a$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x564fe5de8360 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x564fe5de8348 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x564fe5de82f8 <col:38> '_Bool' lvalue Var 0x564fe5de0b68 'a$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x564fe5de8438 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x564fe5de83f0 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x564fe5de83d8 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x564fe5de8398 <col:56> '_Bool' lvalue Var 0x564fe5de10e0 'a$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x564fe5de8420 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x564fe5de8408 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x564fe5de83b8 <col:74> '_Bool' lvalue Var 0x564fe5de0cd0 'a$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x564fe5de84f0 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x564fe5de84a8 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x564fe5de8478 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x564fe5de8520 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x564fe5de8508 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x564fe5de84d0 <col:102> '_Bool' lvalue Var 0x564fe5de10e0 'a$w_buff1_used' '_Bool'
    |-BinaryOperator 0x564fe5de8788 <line:802:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x564fe5de85a0 <col:3> '_Bool' lvalue Var 0x564fe5de0b68 'a$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x564fe5de8770 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x564fe5de8740 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x564fe5de8660 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x564fe5de8618 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x564fe5de8600 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x564fe5de85c0 <col:20> '_Bool' lvalue Var 0x564fe5de0fe8 'a$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x564fe5de8648 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x564fe5de8630 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x564fe5de85e0 <col:38> '_Bool' lvalue Var 0x564fe5de0b68 'a$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x564fe5de86f8 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x564fe5de86b0 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x564fe5de8680 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x564fe5de8728 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x564fe5de8710 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x564fe5de86d8 <col:66> '_Bool' lvalue Var 0x564fe5de0b68 'a$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x564fe5de8a70 <line:803:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x564fe5de87a8 <col:3> '_Bool' lvalue Var 0x564fe5de0cd0 'a$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x564fe5de8a58 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x564fe5de8a28 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x564fe5de8948 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x564fe5de8868 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x564fe5de8820 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x564fe5de8808 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x564fe5de87c8 <col:20> '_Bool' lvalue Var 0x564fe5de0fe8 'a$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x564fe5de8850 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x564fe5de8838 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x564fe5de87e8 <col:38> '_Bool' lvalue Var 0x564fe5de0b68 'a$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x564fe5de8928 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x564fe5de88e0 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x564fe5de88c8 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x564fe5de8888 <col:56> '_Bool' lvalue Var 0x564fe5de10e0 'a$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x564fe5de8910 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x564fe5de88f8 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x564fe5de88a8 <col:74> '_Bool' lvalue Var 0x564fe5de0cd0 'a$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x564fe5de89e0 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x564fe5de8998 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x564fe5de8968 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x564fe5de8a10 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x564fe5de89f8 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x564fe5de89c0 <col:102> '_Bool' lvalue Var 0x564fe5de0cd0 'a$r_buff1_thd0' '_Bool'
    |-CallExpr 0x564fe5de8ac8 <line:804:3, col:25> 'void'
    | `-ImplicitCastExpr 0x564fe5de8ab0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x564fe5de8a90 <col:3> 'void ()' Function 0x564fe5d87410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x564fe5de8b20 <line:805:3, col:27> 'void'
    | `-ImplicitCastExpr 0x564fe5de8b08 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x564fe5de8ae8 <col:3> 'void ()' Function 0x564fe5d87350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x564fe5de8df0 <line:806:3, col:131> '_Bool' '='
    | |-DeclRefExpr 0x564fe5de8b40 <col:3> '_Bool' lvalue Var 0x564fe5de11d0 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x564fe5de8dd8 <col:21, col:131> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x564fe5de8dc0 <col:21, col:131> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x564fe5de8da0 <col:22, col:131> 'int'
    |       `-BinaryOperator 0x564fe5de8d80 <col:23, col:130> 'int' '&&'
    |         |-BinaryOperator 0x564fe5de8ce8 <col:23, col:102> 'int' '&&'
    |         | |-BinaryOperator 0x564fe5de8c50 <col:23, col:74> 'int' '&&'
    |         | | |-BinaryOperator 0x564fe5de8bb8 <col:23, col:46> 'int' '=='
    |         | | | |-ImplicitCastExpr 0x564fe5de8ba0 <col:23> 'int' <LValueToRValue>
    |         | | | | `-DeclRefExpr 0x564fe5de8b60 <col:23> 'int' lvalue Var 0x564fe5de0558 '__unbuffered_p0_EAX' 'int'
    |         | | | `-IntegerLiteral 0x564fe5de8b80 <col:46> 'int' 1
    |         | | `-BinaryOperator 0x564fe5de8c30 <col:51, col:74> 'int' '=='
    |         | |   |-ImplicitCastExpr 0x564fe5de8c18 <col:51> 'int' <LValueToRValue>
    |         | |   | `-DeclRefExpr 0x564fe5de8bd8 <col:51> 'int' lvalue Var 0x564fe5de0678 '__unbuffered_p0_EBX' 'int'
    |         | |   `-IntegerLiteral 0x564fe5de8bf8 <col:74> 'int' 0
    |         | `-BinaryOperator 0x564fe5de8cc8 <col:79, col:102> 'int' '=='
    |         |   |-ImplicitCastExpr 0x564fe5de8cb0 <col:79> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x564fe5de8c70 <col:79> 'int' lvalue Var 0x564fe5de0798 '__unbuffered_p1_EAX' 'int'
    |         |   `-IntegerLiteral 0x564fe5de8c90 <col:102> 'int' 1
    |         `-BinaryOperator 0x564fe5de8d60 <col:107, col:130> 'int' '=='
    |           |-ImplicitCastExpr 0x564fe5de8d48 <col:107> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x564fe5de8d08 <col:107> 'int' lvalue Var 0x564fe5de08b8 '__unbuffered_p1_EBX' 'int'
    |           `-IntegerLiteral 0x564fe5de8d28 <col:130> 'int' 0
    |-CallExpr 0x564fe5de8e48 <line:807:3, col:25> 'void'
    | `-ImplicitCastExpr 0x564fe5de8e30 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x564fe5de8e10 <col:3> 'void ()' Function 0x564fe5d87410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x564fe5de8ec0 <line:808:3, col:36> 'void'
    | |-ImplicitCastExpr 0x564fe5de8ea8 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x564fe5de8e68 <col:3> 'void (int)' Function 0x564fe5d870d8 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x564fe5de8f00 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x564fe5de8ee8 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x564fe5de8e88 <col:21> '_Bool' lvalue Var 0x564fe5de11d0 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x564fe5de8f38 <line:809:3, col:10>
      `-IntegerLiteral 0x564fe5de8f18 <col:10> 'int' 0
