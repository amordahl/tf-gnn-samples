TranslationUnitDecl 0x55d187da2d58 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x55d187da3618 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x55d187da32f0 '__int128'
|-TypedefDecl 0x55d187da3688 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x55d187da3310 'unsigned __int128'
|-TypedefDecl 0x55d187da3990 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x55d187da3760 'struct __NSConstantString_tag'
|   `-Record 0x55d187da36e0 '__NSConstantString_tag'
|-TypedefDecl 0x55d187da3a38 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x55d187da39f0 'char *'
|   `-BuiltinType 0x55d187da2df0 'char'
|-TypedefDecl 0x55d187de2d90 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x55d187da3cd0 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x55d187da3b10 'struct __va_list_tag'
|     `-Record 0x55d187da3a90 '__va_list_tag'
|-FunctionDecl 0x55d187de2e70 <loops/vogal_true-unreach-call.i:1:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x55d187de3040 <line:3:1, col:34> col:13 __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x55d187de2f70 <col:31> col:34 'int'
|-FunctionDecl 0x55d187de3190 <line:4:1, line:9:1> line:4:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x55d187de3100 <col:24, col:28> col:28 used cond 'int'
| `-CompoundStmt 0x55d187de33e0 <col:34, line:9:1>
|   |-IfStmt 0x55d187de33b8 <line:5:3, line:7:3>
|   | |-UnaryOperator 0x55d187de3290 <line:5:7, col:13> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x55d187de3278 <col:8, col:13> 'int' <LValueToRValue>
|   | |   `-ParenExpr 0x55d187de3258 <col:8, col:13> 'int' lvalue
|   | |     `-DeclRefExpr 0x55d187de3238 <col:9> 'int' lvalue ParmVar 0x55d187de3100 'cond' 'int'
|   | `-CompoundStmt 0x55d187de33a0 <col:16, line:7:3>
|   |   `-LabelStmt 0x55d187de3388 <line:6:5, col:29> 'ERROR'
|   |     `-CallExpr 0x55d187de3318 <col:12, col:29> 'void'
|   |       `-ImplicitCastExpr 0x55d187de3300 <col:12> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x55d187de32a8 <col:12> 'void () __attribute__((noreturn))' Function 0x55d187de2e70 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   `-ReturnStmt 0x55d187de33d0 <line:8:3>
|-FunctionDecl 0x55d187de3450 <line:12:1, col:29> col:6 used __VERIFIER_nondet_char 'char ()'
`-FunctionDecl 0x55d187de35c8 <line:14:1, line:47:1> line:14:5 main 'int (void)'
  `-CompoundStmt 0x55d187e09c00 <line:15:1, line:47:1>
    |-DeclStmt 0x55d187de3cb8 <line:16:3, col:85>
    | |-VarDecl 0x55d187de3740 <col:3, col:22> col:8 used input_string 'char [5]'
    | `-VarDecl 0x55d187de3800 <col:3, col:84> col:25 used vogal_array 'char [11]' cinit
    |   `-InitListExpr 0x55d187de3a18 <col:39, col:84> 'char [11]'
    |     |-ImplicitCastExpr 0x55d187de3a58 <col:40> 'char' <IntegralCast>
    |     | `-CharacterLiteral 0x55d187de3868 <col:40> 'int' 97
    |     |-ImplicitCastExpr 0x55d187de3a78 <col:44> 'char' <IntegralCast>
    |     | `-CharacterLiteral 0x55d187de3880 <col:44> 'int' 65
    |     |-ImplicitCastExpr 0x55d187de3aa0 <col:48> 'char' <IntegralCast>
    |     | `-CharacterLiteral 0x55d187de3898 <col:48> 'int' 101
    |     |-ImplicitCastExpr 0x55d187de3ad8 <col:52> 'char' <IntegralCast>
    |     | `-CharacterLiteral 0x55d187de38b0 <col:52> 'int' 69
    |     |-ImplicitCastExpr 0x55d187de3af0 <col:56> 'char' <IntegralCast>
    |     | `-CharacterLiteral 0x55d187de38c8 <col:56> 'int' 105
    |     |-ImplicitCastExpr 0x55d187de3b48 <col:60> 'char' <IntegralCast>
    |     | `-CharacterLiteral 0x55d187de38e0 <col:60> 'int' 73
    |     |-ImplicitCastExpr 0x55d187de3b60 <col:64> 'char' <IntegralCast>
    |     | `-CharacterLiteral 0x55d187de38f8 <col:64> 'int' 111
    |     |-ImplicitCastExpr 0x55d187de3b78 <col:68> 'char' <IntegralCast>
    |     | `-CharacterLiteral 0x55d187de3910 <col:68> 'int' 79
    |     |-ImplicitCastExpr 0x55d187de3b90 <col:72> 'char' <IntegralCast>
    |     | `-CharacterLiteral 0x55d187de3928 <col:72> 'int' 117
    |     |-ImplicitCastExpr 0x55d187de3c28 <col:76> 'char' <IntegralCast>
    |     | `-CharacterLiteral 0x55d187de3940 <col:76> 'int' 85
    |     `-ImplicitCastExpr 0x55d187de3c40 <col:80> 'char' <IntegralCast>
    |       `-CharacterLiteral 0x55d187de3958 <col:80> 'int' 0
    |-NullStmt 0x55d187de3cd0 <col:86>
    |-DeclStmt 0x55d187e08168 <line:17:3, col:48>
    | |-VarDecl 0x55d187de3cf0 <col:3, col:16> col:16 used i 'unsigned int'
    | |-VarDecl 0x55d187e07f50 <col:3, col:18> col:18 used j 'unsigned int'
    | |-VarDecl 0x55d187e07fd0 <col:3, col:20> col:20 used cont 'unsigned int'
    | |-VarDecl 0x55d187e08050 <col:3, col:26> col:26 tam_string 'unsigned int'
    | `-VarDecl 0x55d187e080d0 <col:3, col:38> col:38 used n_caracter 'unsigned int'
    |-ForStmt 0x55d187e083f8 <line:19:3, line:20:46>
    | |-BinaryOperator 0x55d187e081d8 <line:19:7, col:9> 'unsigned int' '='
    | | |-DeclRefExpr 0x55d187e08180 <col:7> 'unsigned int' lvalue Var 0x55d187de3cf0 'i' 'unsigned int'
    | | `-ImplicitCastExpr 0x55d187e081c0 <col:9> 'unsigned int' <IntegralCast>
    | |   `-IntegerLiteral 0x55d187e081a0 <col:9> 'int' 0
    | |-<<<NULL>>>
    | |-BinaryOperator 0x55d187e08268 <col:11, col:13> 'int' '<'
    | | |-ImplicitCastExpr 0x55d187e08238 <col:11> 'unsigned int' <LValueToRValue>
    | | | `-DeclRefExpr 0x55d187e081f8 <col:11> 'unsigned int' lvalue Var 0x55d187de3cf0 'i' 'unsigned int'
    | | `-ImplicitCastExpr 0x55d187e08250 <col:13> 'unsigned int' <IntegralCast>
    | |   `-IntegerLiteral 0x55d187e08218 <col:13> 'int' 5
    | |-UnaryOperator 0x55d187e082a8 <col:15, col:16> 'unsigned int' postfix '++'
    | | `-DeclRefExpr 0x55d187e08288 <col:15> 'unsigned int' lvalue Var 0x55d187de3cf0 'i' 'unsigned int'
    | `-BinaryOperator 0x55d187e083d8 <line:20:5, col:46> 'char' '='
    |   |-ArraySubscriptExpr 0x55d187e08330 <col:5, col:19> 'char' lvalue
    |   | |-ImplicitCastExpr 0x55d187e08300 <col:5> 'char *' <ArrayToPointerDecay>
    |   | | `-DeclRefExpr 0x55d187e082c0 <col:5> 'char [5]' lvalue Var 0x55d187de3740 'input_string' 'char [5]'
    |   | `-ImplicitCastExpr 0x55d187e08318 <col:18> 'unsigned int' <LValueToRValue>
    |   |   `-DeclRefExpr 0x55d187e082e0 <col:18> 'unsigned int' lvalue Var 0x55d187de3cf0 'i' 'unsigned int'
    |   `-CallExpr 0x55d187e083b8 <col:23, col:46> 'char'
    |     `-ImplicitCastExpr 0x55d187e083a0 <col:23> 'char (*)()' <FunctionToPointerDecay>
    |       `-DeclRefExpr 0x55d187e08350 <col:23> 'char ()' Function 0x55d187de3450 '__VERIFIER_nondet_char' 'char ()'
    |-IfStmt 0x55d187e085b8 <line:21:3, col:43>
    | |-UnaryOperator 0x55d187e08570 <col:7, col:33> 'int' prefix '!' cannot overflow
    | | `-ParenExpr 0x55d187e08550 <col:8, col:33> 'int'
    | |   `-BinaryOperator 0x55d187e08530 <col:9, col:29> 'int' '=='
    | |     |-ImplicitCastExpr 0x55d187e08518 <col:9, col:26> 'int' <IntegralCast>
    | |     | `-ImplicitCastExpr 0x55d187e08500 <col:9, col:26> 'char' <LValueToRValue>
    | |     |   `-ArraySubscriptExpr 0x55d187e084c8 <col:9, col:26> 'char' lvalue
    | |     |     |-ImplicitCastExpr 0x55d187e084b0 <col:9> 'char *' <ArrayToPointerDecay>
    | |     |     | `-DeclRefExpr 0x55d187e08430 <col:9> 'char [5]' lvalue Var 0x55d187de3740 'input_string' 'char [5]'
    | |     |     `-BinaryOperator 0x55d187e08490 <col:22, col:25> 'int' '-'
    | |     |       |-IntegerLiteral 0x55d187e08450 <col:22> 'int' 5
    | |     |       `-IntegerLiteral 0x55d187e08470 <col:25> 'int' 1
    | |     `-CharacterLiteral 0x55d187e084e8 <col:29> 'int' 0
    | `-ReturnStmt 0x55d187e085a8 <col:36, col:43>
    |   `-IntegerLiteral 0x55d187e08588 <col:43> 'int' 0
    |-BinaryOperator 0x55d187e08628 <line:23:3, col:16> 'unsigned int' '='
    | |-DeclRefExpr 0x55d187e085d0 <col:3> 'unsigned int' lvalue Var 0x55d187e080d0 'n_caracter' 'unsigned int'
    | `-ImplicitCastExpr 0x55d187e08610 <col:16> 'unsigned int' <IntegralCast>
    |   `-IntegerLiteral 0x55d187e085f0 <col:16> 'int' 0
    |-WhileStmt 0x55d187e08778 <line:24:3, line:25:15>
    | |-BinaryOperator 0x55d187e08720 <line:24:9, col:35> 'int' '!='
    | | |-ImplicitCastExpr 0x55d187e08708 <col:9, col:32> 'int' <IntegralCast>
    | | | `-ImplicitCastExpr 0x55d187e086f0 <col:9, col:32> 'char' <LValueToRValue>
    | | |   `-ArraySubscriptExpr 0x55d187e086b8 <col:9, col:32> 'char' lvalue
    | | |     |-ImplicitCastExpr 0x55d187e08688 <col:9> 'char *' <ArrayToPointerDecay>
    | | |     | `-DeclRefExpr 0x55d187e08648 <col:9> 'char [5]' lvalue Var 0x55d187de3740 'input_string' 'char [5]'
    | | |     `-ImplicitCastExpr 0x55d187e086a0 <col:22> 'unsigned int' <LValueToRValue>
    | | |       `-DeclRefExpr 0x55d187e08668 <col:22> 'unsigned int' lvalue Var 0x55d187e080d0 'n_caracter' 'unsigned int'
    | | `-CharacterLiteral 0x55d187e086d8 <col:35> 'int' 0
    | `-UnaryOperator 0x55d187e08760 <line:25:5, col:15> 'unsigned int' postfix '++'
    |   `-DeclRefExpr 0x55d187e08740 <col:5> 'unsigned int' lvalue Var 0x55d187e080d0 'n_caracter' 'unsigned int'
    |-BinaryOperator 0x55d187e087e8 <line:27:3, col:10> 'unsigned int' '='
    | |-DeclRefExpr 0x55d187e08790 <col:3> 'unsigned int' lvalue Var 0x55d187e07fd0 'cont' 'unsigned int'
    | `-ImplicitCastExpr 0x55d187e087d0 <col:10> 'unsigned int' <IntegralCast>
    |   `-IntegerLiteral 0x55d187e087b0 <col:10> 'int' 0
    |-ForStmt 0x55d187e08cf0 <line:28:3, line:31:16>
    | |-BinaryOperator 0x55d187e08860 <line:28:7, col:9> 'unsigned int' '='
    | | |-DeclRefExpr 0x55d187e08808 <col:7> 'unsigned int' lvalue Var 0x55d187de3cf0 'i' 'unsigned int'
    | | `-ImplicitCastExpr 0x55d187e08848 <col:9> 'unsigned int' <IntegralCast>
    | |   `-IntegerLiteral 0x55d187e08828 <col:9> 'int' 0
    | |-<<<NULL>>>
    | |-BinaryOperator 0x55d187e088f0 <col:11, col:13> 'int' '<'
    | | |-ImplicitCastExpr 0x55d187e088c0 <col:11> 'unsigned int' <LValueToRValue>
    | | | `-DeclRefExpr 0x55d187e08880 <col:11> 'unsigned int' lvalue Var 0x55d187de3cf0 'i' 'unsigned int'
    | | `-ImplicitCastExpr 0x55d187e088d8 <col:13> 'unsigned int' <LValueToRValue>
    | |   `-DeclRefExpr 0x55d187e088a0 <col:13> 'unsigned int' lvalue Var 0x55d187e080d0 'n_caracter' 'unsigned int'
    | |-UnaryOperator 0x55d187e08930 <col:24, col:25> 'unsigned int' postfix '++'
    | | `-DeclRefExpr 0x55d187e08910 <col:24> 'unsigned int' lvalue Var 0x55d187de3cf0 'i' 'unsigned int'
    | `-ForStmt 0x55d187e08cb8 <line:29:6, line:31:16>
    |   |-BinaryOperator 0x55d187e089a0 <line:29:10, col:12> 'unsigned int' '='
    |   | |-DeclRefExpr 0x55d187e08948 <col:10> 'unsigned int' lvalue Var 0x55d187e07f50 'j' 'unsigned int'
    |   | `-ImplicitCastExpr 0x55d187e08988 <col:12> 'unsigned int' <IntegralCast>
    |   |   `-IntegerLiteral 0x55d187e08968 <col:12> 'int' 0
    |   |-<<<NULL>>>
    |   |-BinaryOperator 0x55d187e08a70 <col:14, col:18> 'int' '<'
    |   | |-ImplicitCastExpr 0x55d187e08a40 <col:14> 'unsigned int' <LValueToRValue>
    |   | | `-DeclRefExpr 0x55d187e089c0 <col:14> 'unsigned int' lvalue Var 0x55d187e07f50 'j' 'unsigned int'
    |   | `-ImplicitCastExpr 0x55d187e08a58 <col:16, col:18> 'unsigned int' <IntegralCast>
    |   |   `-BinaryOperator 0x55d187e08a20 <col:16, col:18> 'int' '/'
    |   |     |-IntegerLiteral 0x55d187e089e0 <col:16> 'int' 5
    |   |     `-IntegerLiteral 0x55d187e08a00 <col:18> 'int' 2
    |   |-UnaryOperator 0x55d187e08ab0 <col:20, col:21> 'unsigned int' postfix '++'
    |   | `-DeclRefExpr 0x55d187e08a90 <col:20> 'unsigned int' lvalue Var 0x55d187e07f50 'j' 'unsigned int'
    |   `-IfStmt 0x55d187e08ca0 <line:30:9, line:31:16>
    |     |-BinaryOperator 0x55d187e08c48 <line:30:12, col:44> 'int' '=='
    |     | |-ImplicitCastExpr 0x55d187e08c18 <col:12, col:26> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x55d187e08be8 <col:12, col:26> 'char' <LValueToRValue>
    |     | |   `-ArraySubscriptExpr 0x55d187e08b38 <col:12, col:26> 'char' lvalue
    |     | |     |-ImplicitCastExpr 0x55d187e08b08 <col:12> 'char *' <ArrayToPointerDecay>
    |     | |     | `-DeclRefExpr 0x55d187e08ac8 <col:12> 'char [5]' lvalue Var 0x55d187de3740 'input_string' 'char [5]'
    |     | |     `-ImplicitCastExpr 0x55d187e08b20 <col:25> 'unsigned int' <LValueToRValue>
    |     | |       `-DeclRefExpr 0x55d187e08ae8 <col:25> 'unsigned int' lvalue Var 0x55d187de3cf0 'i' 'unsigned int'
    |     | `-ImplicitCastExpr 0x55d187e08c30 <col:31, col:44> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x55d187e08c00 <col:31, col:44> 'char' <LValueToRValue>
    |     |     `-ArraySubscriptExpr 0x55d187e08bc8 <col:31, col:44> 'char' lvalue
    |     |       |-ImplicitCastExpr 0x55d187e08b98 <col:31> 'char *' <ArrayToPointerDecay>
    |     |       | `-DeclRefExpr 0x55d187e08b58 <col:31> 'char [11]' lvalue Var 0x55d187de3800 'vogal_array' 'char [11]'
    |     |       `-ImplicitCastExpr 0x55d187e08bb0 <col:43> 'unsigned int' <LValueToRValue>
    |     |         `-DeclRefExpr 0x55d187e08b78 <col:43> 'unsigned int' lvalue Var 0x55d187e07f50 'j' 'unsigned int'
    |     `-UnaryOperator 0x55d187e08c88 <line:31:12, col:16> 'unsigned int' postfix '++'
    |       `-DeclRefExpr 0x55d187e08c68 <col:12> 'unsigned int' lvalue Var 0x55d187e07fd0 'cont' 'unsigned int'
    |-BinaryOperator 0x55d187e08d80 <line:33:3, col:5> 'unsigned int' '='
    | |-DeclRefExpr 0x55d187e08d28 <col:3> 'unsigned int' lvalue Var 0x55d187de3cf0 'i' 'unsigned int'
    | `-ImplicitCastExpr 0x55d187e08d68 <col:5> 'unsigned int' <IntegralCast>
    |   `-IntegerLiteral 0x55d187e08d48 <col:5> 'int' 0
    |-DeclStmt 0x55d187e08e40 <line:34:3, col:19>
    | `-VarDecl 0x55d187e08db8 <col:3, col:18> col:7 used cont_aux 'int' cinit
    |   `-IntegerLiteral 0x55d187e08e20 <col:18> 'int' 0
    |-WhileStmt 0x55d187e09a78 <line:35:3, line:43:3>
    | |-BinaryOperator 0x55d187e08f30 <line:35:9, col:26> 'int' '!='
    | | |-ImplicitCastExpr 0x55d187e08f18 <col:9, col:23> 'int' <IntegralCast>
    | | | `-ImplicitCastExpr 0x55d187e08f00 <col:9, col:23> 'char' <LValueToRValue>
    | | |   `-ArraySubscriptExpr 0x55d187e08ec8 <col:9, col:23> 'char' lvalue
    | | |     |-ImplicitCastExpr 0x55d187e08e98 <col:9> 'char *' <ArrayToPointerDecay>
    | | |     | `-DeclRefExpr 0x55d187e08e58 <col:9> 'char [5]' lvalue Var 0x55d187de3740 'input_string' 'char [5]'
    | | |     `-ImplicitCastExpr 0x55d187e08eb0 <col:22> 'unsigned int' <LValueToRValue>
    | | |       `-DeclRefExpr 0x55d187e08e78 <col:22> 'unsigned int' lvalue Var 0x55d187de3cf0 'i' 'unsigned int'
    | | `-CharacterLiteral 0x55d187e08ee8 <col:26> 'int' 0
    | `-CompoundStmt 0x55d187e09a58 <line:36:3, line:43:3>
    |   |-ForStmt 0x55d187e099e8 <line:37:5, line:41:5>
    |   | |-BinaryOperator 0x55d187e096b8 <line:37:9, col:11> 'unsigned int' '='
    |   | | |-DeclRefExpr 0x55d187e09660 <col:9> 'unsigned int' lvalue Var 0x55d187e07f50 'j' 'unsigned int'
    |   | | `-ImplicitCastExpr 0x55d187e096a0 <col:11> 'unsigned int' <IntegralCast>
    |   | |   `-IntegerLiteral 0x55d187e09680 <col:11> 'int' 0
    |   | |-<<<NULL>>>
    |   | |-BinaryOperator 0x55d187e09788 <col:13, col:17> 'int' '<'
    |   | | |-ImplicitCastExpr 0x55d187e09758 <col:13> 'unsigned int' <LValueToRValue>
    |   | | | `-DeclRefExpr 0x55d187e096d8 <col:13> 'unsigned int' lvalue Var 0x55d187e07f50 'j' 'unsigned int'
    |   | | `-ImplicitCastExpr 0x55d187e09770 <col:15, col:17> 'unsigned int' <IntegralCast>
    |   | |   `-BinaryOperator 0x55d187e09738 <col:15, col:17> 'int' '/'
    |   | |     |-IntegerLiteral 0x55d187e096f8 <col:15> 'int' 5
    |   | |     `-IntegerLiteral 0x55d187e09718 <col:17> 'int' 2
    |   | |-UnaryOperator 0x55d187e097c8 <col:19, col:20> 'unsigned int' postfix '++'
    |   | | `-DeclRefExpr 0x55d187e097a8 <col:19> 'unsigned int' lvalue Var 0x55d187e07f50 'j' 'unsigned int'
    |   | `-CompoundStmt 0x55d187e099d0 <line:38:5, line:41:5>
    |   |   `-IfStmt 0x55d187e099b8 <line:39:9, line:40:20>
    |   |     |-BinaryOperator 0x55d187e09960 <line:39:12, col:44> 'int' '=='
    |   |     | |-ImplicitCastExpr 0x55d187e09930 <col:12, col:26> 'int' <IntegralCast>
    |   |     | | `-ImplicitCastExpr 0x55d187e09900 <col:12, col:26> 'char' <LValueToRValue>
    |   |     | |   `-ArraySubscriptExpr 0x55d187e09850 <col:12, col:26> 'char' lvalue
    |   |     | |     |-ImplicitCastExpr 0x55d187e09820 <col:12> 'char *' <ArrayToPointerDecay>
    |   |     | |     | `-DeclRefExpr 0x55d187e097e0 <col:12> 'char [5]' lvalue Var 0x55d187de3740 'input_string' 'char [5]'
    |   |     | |     `-ImplicitCastExpr 0x55d187e09838 <col:25> 'unsigned int' <LValueToRValue>
    |   |     | |       `-DeclRefExpr 0x55d187e09800 <col:25> 'unsigned int' lvalue Var 0x55d187de3cf0 'i' 'unsigned int'
    |   |     | `-ImplicitCastExpr 0x55d187e09948 <col:31, col:44> 'int' <IntegralCast>
    |   |     |   `-ImplicitCastExpr 0x55d187e09918 <col:31, col:44> 'char' <LValueToRValue>
    |   |     |     `-ArraySubscriptExpr 0x55d187e098e0 <col:31, col:44> 'char' lvalue
    |   |     |       |-ImplicitCastExpr 0x55d187e098b0 <col:31> 'char *' <ArrayToPointerDecay>
    |   |     |       | `-DeclRefExpr 0x55d187e09870 <col:31> 'char [11]' lvalue Var 0x55d187de3800 'vogal_array' 'char [11]'
    |   |     |       `-ImplicitCastExpr 0x55d187e098c8 <col:43> 'unsigned int' <LValueToRValue>
    |   |     |         `-DeclRefExpr 0x55d187e09890 <col:43> 'unsigned int' lvalue Var 0x55d187e07f50 'j' 'unsigned int'
    |   |     `-UnaryOperator 0x55d187e099a0 <line:40:12, col:20> 'int' postfix '++'
    |   |       `-DeclRefExpr 0x55d187e09980 <col:12> 'int' lvalue Var 0x55d187e08db8 'cont_aux' 'int'
    |   `-UnaryOperator 0x55d187e09a40 <line:42:5, col:6> 'unsigned int' postfix '++'
    |     `-DeclRefExpr 0x55d187e09a20 <col:5> 'unsigned int' lvalue Var 0x55d187de3cf0 'i' 'unsigned int'
    |-CallExpr 0x55d187e09ba8 <line:44:3, col:35> 'void'
    | |-ImplicitCastExpr 0x55d187e09b90 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x55d187e09a90 <col:3> 'void (int)' Function 0x55d187de3190 '__VERIFIER_assert' 'void (int)'
    | `-BinaryOperator 0x55d187e09b38 <col:21, col:31> 'int' '=='
    |   |-ImplicitCastExpr 0x55d187e09b20 <col:21> 'unsigned int' <IntegralCast>
    |   | `-ImplicitCastExpr 0x55d187e09af0 <col:21> 'int' <LValueToRValue>
    |   |   `-DeclRefExpr 0x55d187e09ab0 <col:21> 'int' lvalue Var 0x55d187e08db8 'cont_aux' 'int'
    |   `-ImplicitCastExpr 0x55d187e09b08 <col:31> 'unsigned int' <LValueToRValue>
    |     `-DeclRefExpr 0x55d187e09ad0 <col:31> 'unsigned int' lvalue Var 0x55d187e07fd0 'cont' 'unsigned int'
    `-ReturnStmt 0x55d187e09bf0 <line:46:3, col:10>
      `-IntegerLiteral 0x55d187e09bd0 <col:10> 'int' 0
