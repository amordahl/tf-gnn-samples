TranslationUnitDecl 0x5571a4392f88 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x5571a4393848 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x5571a4393520 '__int128'
|-TypedefDecl 0x5571a43938b8 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x5571a4393540 'unsigned __int128'
|-TypedefDecl 0x5571a4393bc0 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x5571a4393990 'struct __NSConstantString_tag'
|   `-Record 0x5571a4393910 '__NSConstantString_tag'
|-TypedefDecl 0x5571a4393c68 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x5571a4393c20 'char *'
|   `-BuiltinType 0x5571a4393020 'char'
|-TypedefDecl 0x5571a43d2b60 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x5571a4393f00 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x5571a4393d40 'struct __va_list_tag'
|     `-Record 0x5571a4393cc0 '__va_list_tag'
|-FunctionDecl 0x5571a43d2ca0 <pthread-wmm/mix011_pso.opt_false-unreach-call.i:1:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x5571a43d2bd0 <col:31> col:34 'int'
|-FunctionDecl 0x5571a43d2e68 <line:2:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x5571a43d2f90 <line:3:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x5571a43d30d8 <line:4:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x5571a43d3048 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x5571a43d3308 <col:40, col:99>
|   |-IfStmt 0x5571a43d32d8 <col:42, col:88>
|   | |-UnaryOperator 0x5571a43d31b8 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x5571a43d31a0 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x5571a43d3180 <col:47> 'int' lvalue ParmVar 0x5571a43d3048 'expression' 'int'
|   | `-CompoundStmt 0x5571a43d32c0 <col:59, col:88>
|   |   `-LabelStmt 0x5571a43d32a8 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x5571a43d3238 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x5571a43d3220 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x5571a43d31d0 <col:68> 'void () __attribute__((noreturn))' Function 0x5571a43d2f90 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x5571a43d32f0 <col:89>
|   `-ReturnStmt 0x5571a43d32f8 <col:91>
|-FunctionDecl 0x5571a43d3350 <line:5:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x5571a43d3410 <line:6:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x5571a43d3790 <line:8:1, line:10:76> line:8:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5571a43d34c8 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x5571a43d3548 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x5571a43d35c8 <line:9:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x5571a43d3648 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x5571a43d3850 <line:10:22>
|-FunctionDecl 0x5571a43f98a0 <line:11:1, line:13:76> line:11:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5571a43d38c0 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x5571a43d3940 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x5571a43d39c0 <line:12:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x5571a43d3a40 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x5571a43f9960 <line:13:22>
|-FunctionDecl 0x5571a43f9c10 <line:14:1, line:15:76> line:14:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5571a43f99d0 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x5571a43f9a50 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x5571a43f9ad0 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x5571a43f9cc8 <line:15:22>
|-TypedefDecl 0x5571a43f9d38 <line:17:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x5571a43930e0 'unsigned char'
|-TypedefDecl 0x5571a43f9da8 <line:18:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x5571a4393100 'unsigned short'
|-TypedefDecl 0x5571a43f9e18 <line:19:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x5571a4393120 'unsigned int'
|-TypedefDecl 0x5571a43f9e88 <line:20:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x5571a4393140 'unsigned long'
|-TypedefDecl 0x5571a43f9ef8 <line:21:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x5571a4393040 'signed char'
|-TypedefDecl 0x5571a43f9f68 <line:22:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x5571a43930e0 'unsigned char'
|-TypedefDecl 0x5571a43f9fd8 <line:23:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x5571a4393060 'short'
|-TypedefDecl 0x5571a43fa048 <line:24:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x5571a4393100 'unsigned short'
|-TypedefDecl 0x5571a43fa0b8 <line:25:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x5571a4393080 'int'
|-TypedefDecl 0x5571a43fa128 <line:26:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x5571a4393120 'unsigned int'
|-TypedefDecl 0x5571a43fa198 <line:27:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x5571a43930a0 'long'
|-TypedefDecl 0x5571a43fa208 <line:28:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x5571a4393140 'unsigned long'
|-TypedefDecl 0x5571a43fa278 <line:29:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x5571a43930a0 'long'
|-TypedefDecl 0x5571a43fa2e8 <line:30:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x5571a4393140 'unsigned long'
|-TypedefDecl 0x5571a43fa358 <line:31:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x5571a4393140 'unsigned long'
|-TypedefDecl 0x5571a43fa3c8 <line:32:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x5571a4393120 'unsigned int'
|-TypedefDecl 0x5571a43fa438 <line:33:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x5571a4393120 'unsigned int'
|-TypedefDecl 0x5571a43fa4a8 <line:34:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x5571a4393140 'unsigned long'
|-TypedefDecl 0x5571a43fa518 <line:35:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x5571a4393140 'unsigned long'
|-TypedefDecl 0x5571a43fa588 <line:36:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x5571a4393120 'unsigned int'
|-TypedefDecl 0x5571a43fa5f8 <line:37:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x5571a4393140 'unsigned long'
|-TypedefDecl 0x5571a43fa668 <line:38:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x5571a43930a0 'long'
|-TypedefDecl 0x5571a43fa6d8 <line:39:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x5571a43930a0 'long'
|-TypedefDecl 0x5571a43fa748 <line:40:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x5571a4393080 'int'
|-RecordDecl 0x5571a43fa7a0 <line:41:9, col:32> col:9 struct definition
| `-FieldDecl 0x5571a43fa918 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x5571a43fa9d0 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x5571a43fa970 'struct __fsid_t' sugar
|   `-RecordType 0x5571a43fa820 '__fsid_t'
|     `-Record 0x5571a43fa7a0 ''
|-TypedefDecl 0x5571a43faa58 <line:42:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x5571a43930a0 'long'
|-TypedefDecl 0x5571a43faac8 <line:43:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x5571a4393140 'unsigned long'
|-TypedefDecl 0x5571a43fab38 <line:44:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x5571a4393140 'unsigned long'
|-TypedefDecl 0x5571a43faba8 <line:45:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x5571a4393120 'unsigned int'
|-TypedefDecl 0x5571a43fac18 <line:46:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x5571a43930a0 'long'
|-TypedefDecl 0x5571a43fac88 <line:47:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x5571a4393120 'unsigned int'
|-TypedefDecl 0x5571a43facf8 <line:48:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x5571a43930a0 'long'
|-TypedefDecl 0x5571a43fad68 <line:49:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x5571a4393080 'int'
|-TypedefDecl 0x5571a43fadd8 <line:50:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x5571a4393080 'int'
|-TypedefDecl 0x5571a43fae48 <line:51:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x5571a4393080 'int'
|-TypedefDecl 0x5571a43faeb8 <line:52:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x5571a43937a0 'void *'
|   `-BuiltinType 0x5571a4392fe0 'void'
|-TypedefDecl 0x5571a43faf28 <line:53:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x5571a43930a0 'long'
|-TypedefDecl 0x5571a43faf98 <line:54:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x5571a43930a0 'long'
|-TypedefDecl 0x5571a43fb008 <line:55:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x5571a43930a0 'long'
|-TypedefDecl 0x5571a43fb078 <line:56:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x5571a4393140 'unsigned long'
|-TypedefDecl 0x5571a43fb0e8 <line:57:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x5571a4393140 'unsigned long'
|-TypedefDecl 0x5571a43fb158 <line:58:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x5571a4393140 'unsigned long'
|-TypedefDecl 0x5571a43fb1c8 <line:59:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x5571a4393140 'unsigned long'
|-TypedefDecl 0x5571a43fb238 <line:60:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x5571a43930a0 'long'
|-TypedefDecl 0x5571a43fb2a8 <line:61:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x5571a43930a0 'long'
|-TypedefDecl 0x5571a43fb318 <line:62:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x5571a43930a0 'long'
|-TypedefDecl 0x5571a43fb388 <line:63:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x5571a4393140 'unsigned long'
|-TypedefDecl 0x5571a43fb418 <line:64:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x5571a43fb3e0 '__off64_t' sugar
|   |-Typedef 0x5571a43fa6d8 '__off64_t'
|   `-BuiltinType 0x5571a43930a0 'long'
|-TypedefDecl 0x5571a43fb510 <line:65:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x5571a43fb4d0 '__quad_t *'
|   `-TypedefType 0x5571a43fb470 '__quad_t' sugar
|     |-Typedef 0x5571a43fa278 '__quad_t'
|     `-BuiltinType 0x5571a43930a0 'long'
|-TypedefDecl 0x5571a43fb580 <line:66:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x5571a4393c20 'char *'
|   `-BuiltinType 0x5571a4393020 'char'
|-TypedefDecl 0x5571a43fb5f0 <line:67:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x5571a43930a0 'long'
|-TypedefDecl 0x5571a43fb660 <line:68:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x5571a4393120 'unsigned int'
|-FunctionDecl 0x5571a43fb7a8 <line:69:1, line:73:1> line:70:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x5571a43fb6d0 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x5571a43fbae8 <line:71:1, line:73:1>
|   `-ReturnStmt 0x5571a43fbad8 <line:72:3, col:34>
|     `-CallExpr 0x5571a43fba98 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x5571a43fba80 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x5571a43fba10 <col:10> '<builtin fn type>' Function 0x5571a43fb880 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x5571a43fbac0 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x5571a43fba30 <col:29> 'unsigned int' lvalue ParmVar 0x5571a43fb6d0 '__bsx' 'unsigned int'
|-FunctionDecl 0x5571a43fb880 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x5571a43fb920 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x5571a43fb990 <col:10> Implicit
| `-ConstAttr 0x5571a43fb9e8 <col:10> Implicit
|-FunctionDecl 0x5571a43fbc40 <line:74:1, line:78:1> line:75:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x5571a43fbb38 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x5571a43fbf58 <line:76:1, line:78:1>
|   `-ReturnStmt 0x5571a43fbf48 <line:77:3, col:34>
|     `-CallExpr 0x5571a43fbf08 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x5571a43fbef0 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x5571a43fbe78 <col:10> '<builtin fn type>' Function 0x5571a43fbce8 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x5571a43fbf30 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x5571a43fbe98 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x5571a43fbb38 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x5571a43fbce8 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x5571a43fbd88 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x5571a43fbdf8 <col:10> Implicit
| `-ConstAttr 0x5571a43fbe50 <col:10> Implicit
|-TypedefDecl 0x5571a43fbf88 <line:79:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x5571a4393140 'unsigned long'
|-TypedefDecl 0x5571a43fc018 <line:81:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x5571a43fbfe0 '__time_t' sugar
|   |-Typedef 0x5571a43fac18 '__time_t'
|   `-BuiltinType 0x5571a43930a0 'long'
|-RecordDecl 0x5571a43fc070 <line:84:1, line:88:3> line:84:8 struct timespec definition
| |-FieldDecl 0x5571a43fc128 <line:86:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x5571a43fc1b8 <line:87:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x5571a43fc248 <line:89:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x5571a43fc210 '__pid_t' sugar
|   |-Typedef 0x5571a43fa748 '__pid_t'
|   `-BuiltinType 0x5571a4393080 'int'
|-RecordDecl 0x5571a43fc2a0 <line:90:1, line:93:3> line:90:8 struct sched_param definition
| `-FieldDecl 0x5571a43fc360 <line:92:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x5571a43fc3b0 <line:96:1, line:99:3> line:96:8 struct __sched_param definition
| `-FieldDecl 0x5571a43fc470 <line:98:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x5571a43fc4d8 <line:100:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x5571a4393140 'unsigned long'
|-RecordDecl 0x5571a43fc530 <line:101:9, line:104:1> line:101:9 struct definition
| `-FieldDecl 0x5571a43fc7c0 <line:103:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x5571a43fe8b0 <line:101:1, line:104:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x5571a43fc810 'struct cpu_set_t' sugar
|   `-RecordType 0x5571a43fc5b0 'cpu_set_t'
|     `-Record 0x5571a43fc530 ''
|-FunctionDecl 0x5571a43feb88 <line:106:1, line:107:42> line:106:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x5571a43fe958 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x5571a43fea60 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x5571a43fec38 <line:107:19>
|-FunctionDecl 0x5571a43fee10 <line:108:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x5571a43feca0 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x5571a43feeb8 <col:69>
|-FunctionDecl 0x5571a43ff030 <line:109:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x5571a43fef20 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x5571a43ff0d8 <col:64>
|-FunctionDecl 0x5571a43ff398 <line:112:1, line:113:45> line:112:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x5571a43ff140 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5571a43ff278 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x5571a43ff448 <line:113:22>
|-FunctionDecl 0x5571a43ff6c8 <line:114:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x5571a43ff4b0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5571a43ff5a8 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x5571a43ff778 <col:88>
|-FunctionDecl 0x5571a43ffa98 <line:115:1, line:116:85> line:115:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x5571a43ff7e0 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5571a43ff8c0 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x5571a43ff950 <line:116:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x5571a43ffb50 <col:62>
|-FunctionDecl 0x5571a43ffcc8 <line:117:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x5571a43ffbb8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x5571a43ffd70 <col:63>
|-FunctionDecl 0x5571a43ffe98 <line:118:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x5571a43fff38 <col:47>
|-FunctionDecl 0x5571a4400040 <line:119:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x5571a43fffa8 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x5571a44000e8 <col:69>
|-FunctionDecl 0x5571a44001f0 <line:120:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x5571a4400158 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x5571a4400298 <col:69>
|-FunctionDecl 0x5571a4400558 <line:121:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x5571a4400300 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x5571a4400438 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x5571a4400608 <col:88>
|-TypedefDecl 0x5571a4400698 <line:125:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x5571a4400660 '__clock_t' sugar
|   |-Typedef 0x5571a43faa58 '__clock_t'
|   `-BuiltinType 0x5571a43930a0 'long'
|-TypedefDecl 0x5571a4400728 <line:128:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x5571a44006f0 '__clockid_t' sugar
|   |-Typedef 0x5571a43fae48 '__clockid_t'
|   `-BuiltinType 0x5571a4393080 'int'
|-TypedefDecl 0x5571a44007b8 <line:129:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x5571a4400780 '__timer_t' sugar
|   |-Typedef 0x5571a43faeb8 '__timer_t'
|   `-PointerType 0x5571a43937a0 'void *'
|     `-BuiltinType 0x5571a4392fe0 'void'
|-RecordDecl 0x5571a4400810 <line:131:1, line:144:1> line:131:8 struct tm definition
| |-FieldDecl 0x5571a44008e8 <line:133:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x5571a4400950 <line:134:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x5571a44009b8 <line:135:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x5571a4400a20 <line:136:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x5571a4400a88 <line:137:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x5571a4400af0 <line:138:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x5571a4400b58 <line:139:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x5571a4400bc0 <line:140:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x5571a4400c28 <line:141:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x5571a4400c90 <line:142:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x5571a4400cf8 <line:143:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x5571a4400d48 <line:147:1, line:151:3> line:147:8 struct itimerspec definition
| |-FieldDecl 0x5571a4400e18 <line:149:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x5571a4400e88 <line:150:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x5571a4400f30 <line:152:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x5571a4401100 <line:154:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x5571a44011a0 <col:45>
|-FunctionDecl 0x5571a4401380 <line:155:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x5571a4401270 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x5571a4401428 <col:54>
|-FunctionDecl 0x5571a4401628 <line:156:1, line:157:73> line:156:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x5571a4401490 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x5571a4401508 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x5571a44016d8 <line:157:22>
| `-ConstAttr 0x5571a4401730 <col:63>
|-FunctionDecl 0x5571a4402560 <line:158:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x5571a4401828 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x5571a4402608 <col:56>
|-FunctionDecl 0x5571a44029b0 <line:159:1, line:161:77> line:159:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x5571a4402678 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x5571a44026f0 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x5571a4402770 <line:160:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x5571a4402868 <line:161:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x5571a4402a70 <col:54>
|-RecordDecl 0x5571a4402ac8 <line:163:9, line:170:1> line:163:16 struct __locale_struct definition
| |-RecordDecl 0x5571a4402b78 parent 0x5571a4392f88 <line:165:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x5571a4402dd8 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x5571a4402e78 <line:166:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x5571a4402ee0 <line:167:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x5571a4402f48 <line:168:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x5571a4403038 <line:169:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x5571a4403158 <line:163:1, line:170:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x5571a4403100 'struct __locale_struct *'
|   `-ElaboratedType 0x5571a4403090 'struct __locale_struct' sugar
|     `-RecordType 0x5571a4402b50 'struct __locale_struct'
|       `-Record 0x5571a4402ac8 '__locale_struct'
|-TypedefDecl 0x5571a4403208 <line:171:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x5571a44031d0 '__locale_t' sugar
|   |-Typedef 0x5571a4403158 '__locale_t'
|   `-PointerType 0x5571a4403100 'struct __locale_struct *'
|     `-ElaboratedType 0x5571a4403090 'struct __locale_struct' sugar
|       `-RecordType 0x5571a4402b50 'struct __locale_struct'
|         `-Record 0x5571a4402ac8 '__locale_struct'
|-FunctionDecl 0x5571a4403610 <line:172:1, line:175:63> line:172:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x5571a4403278 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x5571a44032f0 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x5571a4403370 <line:173:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x5571a4403400 <line:174:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x5571a4403478 <line:175:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x5571a44036d8 <col:40>
|-FunctionDecl 0x5571a44038c8 <line:177:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x5571a44037a0 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x5571a4403970 <col:66>
|-FunctionDecl 0x5571a4403a80 <line:178:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x5571a44039d8 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x5571a4403b28 <col:69>
|-FunctionDecl 0x5571a4403d58 <line:180:1, line:181:75> line:180:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x5571a4403b90 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x5571a4403c20 <line:181:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x5571a4403e08 <col:52>
|-FunctionDecl 0x5571a4403fb0 <line:182:1, line:183:78> line:182:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x5571a4403e70 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x5571a4403f00 <line:183:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x5571a4404060 <col:55>
|-FunctionDecl 0x5571a44041f8 <line:185:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x5571a44040e0 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x5571a44042a0 <col:62>
|-FunctionDecl 0x5571a4404418 <line:186:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x5571a4404308 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x5571a44044c0 <col:60>
|-FunctionDecl 0x5571a4404718 <line:188:1, line:189:67> line:188:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x5571a4404578 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x5571a44045f8 <line:189:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x5571a44047c8 <col:44>
|-FunctionDecl 0x5571a44049d8 <line:190:1, line:191:72> line:190:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x5571a4404830 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x5571a44048b0 <line:191:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x5571a4404a88 <col:49>
|-VarDecl 0x5571a4404b88 <line:192:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x5571a4404c08 <line:193:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x5571a4404c88 <line:194:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x5571a4404d50 <line:195:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x5571a4404e80 <line:196:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x5571a4404f20 <col:42>
|-VarDecl 0x5571a4404f90 <line:197:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x5571a4405010 <line:198:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x5571a4405198 <line:199:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x5571a4405088 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x5571a4405240 <col:57>
|-FunctionDecl 0x5571a4405350 <line:200:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x5571a44052c0 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x5571a44053f8 <col:56>
|-FunctionDecl 0x5571a4406540 <line:201:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x5571a4405478 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x5571a44065e8 <col:59>
|-FunctionDecl 0x5571a44066f0 <line:202:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x5571a4406658 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x5571a4406798 <col:48>
| `-ConstAttr 0x5571a44067f0 <col:89>
|-FunctionDecl 0x5571a4406a58 <line:203:1, line:204:37> line:203:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x5571a44068a8 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x5571a4406938 <line:204:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x5571a4406cb8 <line:205:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x5571a4406b48 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5571a4406bd8 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x5571a4406d68 <col:88>
|-FunctionDecl 0x5571a4406f00 <line:206:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x5571a4406dd0 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5571a4406e60 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x5571a4406fb0 <col:88>
|-FunctionDecl 0x5571a44071c8 <line:207:1, line:208:45> line:207:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x5571a4407018 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5571a44070a8 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x5571a4407278 <line:208:22>
|-FunctionDecl 0x5571a44075e8 <line:209:1, line:211:30> line:209:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x5571a44072e0 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5571a4407360 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x5571a44073f0 <line:210:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x5571a4407480 <line:211:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x5571a44078e8 <line:212:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x5571a44076e8 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x5571a44077c0 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x5571a4407998 <col:85>
|-FunctionDecl 0x5571a4407d88 <line:213:1, line:215:75> line:213:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x5571a4407a00 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x5571a4407b38 <line:214:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x5571a4407c40 <line:215:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x5571a4407e40 <col:52>
|-FunctionDecl 0x5571a4407fb8 <line:216:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x5571a4407ea8 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x5571a4408060 <col:61>
|-FunctionDecl 0x5571a4408560 <line:217:1, line:219:85> line:217:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x5571a44080c8 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x5571a4408148 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x5571a4408278 <line:218:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x5571a4408368 <line:219:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x5571a4408620 <col:62>
|-FunctionDecl 0x5571a4408838 <line:220:1, line:221:45> line:220:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x5571a4408688 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x5571a4408718 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x5571a44088e8 <line:221:22>
|-FunctionDecl 0x5571a44089e8 <line:222:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x5571a4408950 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x5571a4408a90 <col:65>
|-TypedefDecl 0x5571a4408b00 <line:224:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x5571a4393140 'unsigned long'
|-RecordDecl 0x5571a4408b58 <line:225:1, line:229:1> line:225:7 union pthread_attr_t definition
| |-FieldDecl 0x5571a4408ca0 <line:227:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x5571a4408d08 <line:228:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5571a4408db8 <line:230:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x5571a4408d60 'union pthread_attr_t' sugar
|   `-RecordType 0x5571a4408be0 'union pthread_attr_t'
|     `-Record 0x5571a4408b58 'pthread_attr_t'
|-RecordDecl 0x5571a4408e10 <line:231:9, line:235:1> line:231:16 struct __pthread_internal_list definition
| |-FieldDecl 0x5571a4408f88 <line:233:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x5571a4409000 <line:234:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x5571a44090b0 <line:231:1, line:235:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x5571a4409050 'struct __pthread_internal_list' sugar
|   `-RecordType 0x5571a4408e90 'struct __pthread_internal_list'
|     `-Record 0x5571a4408e10 '__pthread_internal_list'
|-RecordDecl 0x5571a4409120 <line:236:9, line:250:1> line:236:9 union definition
| |-RecordDecl 0x5571a44091c8 parent 0x5571a4392f88 <line:238:3, line:247:3> line:238:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x5571a44092a0 <line:240:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x5571a4409308 <line:241:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x5571a4409370 <line:242:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x5571a44093d8 <line:243:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x5571a4409440 <line:244:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x5571a44094a8 <line:245:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x5571a440d580 <line:246:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x5571a440d630 <line:238:3, line:247:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x5571a440d720 <line:248:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x5571a440d788 <line:249:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5571a440d910 <line:236:1, line:250:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x5571a440d8b0 'union pthread_mutex_t' sugar
|   `-RecordType 0x5571a44091a0 'pthread_mutex_t'
|     `-Record 0x5571a4409120 ''
|-RecordDecl 0x5571a440d980 <line:251:9, line:255:1> line:251:9 union definition
| |-FieldDecl 0x5571a440dac0 <line:253:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x5571a440db28 <line:254:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x5571a440dbe0 <line:251:1, line:255:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x5571a440db80 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x5571a440da00 'pthread_mutexattr_t'
|     `-Record 0x5571a440d980 ''
|-RecordDecl 0x5571a440dc50 <line:256:9, line:271:1> line:256:9 union definition
| |-RecordDecl 0x5571a440dcf8 <line:258:3, line:268:3> line:258:3 struct definition
| | |-FieldDecl 0x5571a440ddc0 <line:260:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x5571a440de28 <line:261:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x5571a440de90 <line:262:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x5571a440def8 <line:263:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x5571a440df60 <line:264:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x5571a440dfc8 <line:265:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x5571a440e030 <line:266:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x5571a440e098 <line:267:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x5571a440e150 <line:258:3, line:268:5> col:5 __data 'struct (anonymous struct at pthread-wmm/mix011_pso.opt_false-unreach-call.i:258:3)':'struct pthread_cond_t::(anonymous at pthread-wmm/mix011_pso.opt_false-unreach-call.i:258:3)'
| |-FieldDecl 0x5571a440e240 <line:269:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x5571a440e2a8 <line:270:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x5571a440e3e0 <line:256:1, line:271:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x5571a440e380 'union pthread_cond_t' sugar
|   `-RecordType 0x5571a440dcd0 'pthread_cond_t'
|     `-Record 0x5571a440dc50 ''
|-RecordDecl 0x5571a440e450 <line:272:9, line:276:1> line:272:9 union definition
| |-FieldDecl 0x5571a440e590 <line:274:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x5571a440e5f8 <line:275:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x5571a440e6b0 <line:272:1, line:276:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x5571a440e650 'union pthread_condattr_t' sugar
|   `-RecordType 0x5571a440e4d0 'pthread_condattr_t'
|     `-Record 0x5571a440e450 ''
|-TypedefDecl 0x5571a440e738 <line:277:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x5571a4393120 'unsigned int'
|-TypedefDecl 0x5571a440e7a8 <line:278:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x5571a4393080 'int'
|-RecordDecl 0x5571a440e800 <line:279:9, line:297:1> line:279:9 union definition
| |-RecordDecl 0x5571a440e8a8 <line:281:3, line:294:3> line:281:3 struct definition
| | |-FieldDecl 0x5571a440e970 <line:283:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x5571a440e9d8 <line:284:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x5571a440ea40 <line:285:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x5571a440eaa8 <line:286:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x5571a440eb10 <line:287:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x5571a440eb78 <line:288:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x5571a440ebe0 <line:289:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x5571a440ec48 <line:290:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x5571a440ecb0 <line:291:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x5571a440ed18 <line:292:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x5571a440ed80 <line:293:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x5571a440ee30 <line:281:3, line:294:5> col:5 __data 'struct (anonymous struct at pthread-wmm/mix011_pso.opt_false-unreach-call.i:281:3)':'struct pthread_rwlock_t::(anonymous at pthread-wmm/mix011_pso.opt_false-unreach-call.i:281:3)'
| |-FieldDecl 0x5571a440eed8 <line:295:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x5571a440ef40 <line:296:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5571a440f090 <line:279:1, line:297:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x5571a440f030 'union pthread_rwlock_t' sugar
|   `-RecordType 0x5571a440e880 'pthread_rwlock_t'
|     `-Record 0x5571a440e800 ''
|-RecordDecl 0x5571a440f100 <line:298:9, line:302:1> line:298:9 union definition
| |-FieldDecl 0x5571a440f240 <line:300:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x5571a440f2a8 <line:301:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5571a440f360 <line:298:1, line:302:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x5571a440f300 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x5571a440f180 'pthread_rwlockattr_t'
|     `-Record 0x5571a440f100 ''
|-TypedefDecl 0x5571a440f3e8 <line:303:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x5571a4393084 'volatile int' volatile
|   `-BuiltinType 0x5571a4393080 'int'
|-RecordDecl 0x5571a440f440 <line:304:9, line:308:1> line:304:9 union definition
| |-FieldDecl 0x5571a44115b0 <line:306:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x5571a4411618 <line:307:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x5571a44116d0 <line:304:1, line:308:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x5571a4411670 'union pthread_barrier_t' sugar
|   `-RecordType 0x5571a440f4c0 'pthread_barrier_t'
|     `-Record 0x5571a440f440 ''
|-RecordDecl 0x5571a4411740 <line:309:9, line:313:1> line:309:9 union definition
| |-FieldDecl 0x5571a4411840 <line:311:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x5571a44118a8 <line:312:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x5571a4411960 <line:309:1, line:313:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x5571a4411900 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x5571a44117c0 'pthread_barrierattr_t'
|     `-Record 0x5571a4411740 ''
|-TypedefDecl 0x5571a4411a78 <line:314:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x5571a4411a10 'long [8]' 8 
|   `-BuiltinType 0x5571a43930a0 'long'
|-EnumDecl 0x5571a4411ad0 <line:315:1, line:319:1> line:315:1
| |-EnumConstantDecl 0x5571a4411b98 <line:317:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x5571a4411be8 <line:318:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x5571a4411c38 <line:320:1, line:331:1> line:320:1
| |-EnumConstantDecl 0x5571a4411d08 <line:322:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x5571a4411d58 <line:323:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x5571a4411da8 <line:324:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x5571a4411df8 <line:325:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x5571a4411e80 <line:327:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x5571a4411e68 <col:26> 'int'
| |   `-DeclRefExpr 0x5571a4411e48 <col:26> 'int' EnumConstant 0x5571a4411d08 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x5571a4411f08 <line:328:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x5571a4411ef0 <col:29> 'int'
| |   `-DeclRefExpr 0x5571a4411ed0 <col:29> 'int' EnumConstant 0x5571a4411d58 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x5571a4411f90 <line:329:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x5571a4411f78 <col:30> 'int'
| |   `-DeclRefExpr 0x5571a4411f58 <col:30> 'int' EnumConstant 0x5571a4411da8 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x5571a4412018 <line:330:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x5571a4412000 <col:27> 'int'
|     `-DeclRefExpr 0x5571a4411fe0 <col:27> 'int' EnumConstant 0x5571a4411e80 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x5571a4412068 <line:332:1, line:338:1> line:332:1
| |-EnumConstantDecl 0x5571a4412138 <line:334:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x5571a44121c0 <line:335:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x5571a44121a8 <col:30> 'int'
| |   `-DeclRefExpr 0x5571a4412188 <col:30> 'int' EnumConstant 0x5571a4412138 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x5571a4412210 <line:336:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x5571a4412298 <line:337:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x5571a4412280 <col:29> 'int'
|     `-DeclRefExpr 0x5571a4412260 <col:29> 'int' EnumConstant 0x5571a4412210 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x5571a44122e8 <line:339:1, line:344:1> line:339:1
| |-EnumConstantDecl 0x5571a44123b8 <line:341:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x5571a4412408 <line:342:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x5571a4412458 <line:343:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x5571a44124a8 <line:345:1, line:351:1> line:345:1
| |-EnumConstantDecl 0x5571a44125c0 <line:347:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x5571a4412610 <line:348:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x5571a4412660 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x5571a44126e8 <line:350:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x5571a44126d0 <col:31> 'int'
|     `-DeclRefExpr 0x5571a44126b0 <col:31> 'int' EnumConstant 0x5571a44125c0 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x5571a4412738 <line:352:1, line:356:1> line:352:1
| |-EnumConstantDecl 0x5571a4412808 <line:354:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x5571a4412858 <line:355:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x5571a44128a8 <line:357:1, line:361:1> line:357:1
| |-EnumConstantDecl 0x5571a4412978 <line:359:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x5571a44129c8 <line:360:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x5571a4412a18 <line:362:1, line:366:1> line:362:1
| |-EnumConstantDecl 0x5571a4412ae8 <line:364:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x5571a4412b38 <line:365:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x5571a4412b88 <line:367:1, line:373:1> line:367:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x5571a4412dc8 <line:369:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x5571a4412e30 <line:370:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x5571a4412e98 <line:371:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x5571a4412fb8 <line:372:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x5571a4413008 <line:374:1, line:378:1> line:374:1
| |-EnumConstantDecl 0x5571a44130d8 <line:376:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x5571a4413128 <line:377:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x5571a4413178 <line:379:1, line:383:1> line:379:1
| |-EnumConstantDecl 0x5571a4413248 <line:381:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x5571a4413298 <line:382:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x5571a44138f8 <line:385:1, line:388:96> line:385:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x5571a4413390 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x5571a44134a0 <line:386:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5571a44136e0 <line:387:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x5571a4413760 <line:388:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x5571a44139b8 <col:47>
| |-NonNullAttr 0x5571a4413a10 <col:77, col:94> 1 3
| `-CallbackAttr 0x5571a4413a48 <line:385:12> Implicit 2 3
|-FunctionDecl 0x5571a4413b70 <line:389:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x5571a4413aa0 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x5571a4413dc8 <line:390:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x5571a4413c28 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x5571a4413ca8 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x5571a4413f98 <line:391:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x5571a4413e88 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x5571a4414040 <col:60>
|-FunctionDecl 0x5571a4414190 <line:392:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x5571a4414230 <col:54>
| `-ConstAttr 0x5571a4414288 <col:95>
|-FunctionDecl 0x5571a4414458 <line:393:1, line:394:70> line:393:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x5571a44142c0 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5571a4414338 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x5571a4414508 <line:394:19>
| `-ConstAttr 0x5571a4414560 <col:60>
|-FunctionDecl 0x5571a4414f68 <line:395:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x5571a4414e30 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x5571a4415010 <col:71>
| `-NonNullAttr 0x5571a4415068 <col:112, col:126> 1
|-FunctionDecl 0x5571a4415170 <line:396:1, line:397:79> line:396:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x5571a44150b8 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x5571a4415218 <line:397:22>
| `-NonNullAttr 0x5571a4415270 <col:63, col:77> 1
|-FunctionDecl 0x5571a4415498 <line:398:1, line:400:82> line:398:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x5571a44152b8 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x5571a4415338 <line:399:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x5571a4415548 <line:400:22>
| `-NonNullAttr 0x5571a44155a0 <col:63, col:80> 1 2
|-FunctionDecl 0x5571a44157a8 <line:401:1, line:403:79> line:401:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x5571a44155e8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5571a4415668 <line:402:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x5571a4415858 <line:403:22>
| `-NonNullAttr 0x5571a44158b0 <col:63, col:77> 1
|-FunctionDecl 0x5571a4415b08 <line:404:1, line:406:82> line:404:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x5571a44158f8 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x5571a44159a0 <line:405:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x5571a4415bb8 <line:406:22>
| `-NonNullAttr 0x5571a4415c10 <col:63, col:80> 1 2
|-FunctionDecl 0x5571a4416e48 <line:407:1, line:409:79> line:407:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x5571a4415c58 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5571a4415cd0 <line:408:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x5571a4416ef8 <line:409:22>
| `-NonNullAttr 0x5571a4416f50 <col:63, col:77> 1
|-FunctionDecl 0x5571a4417188 <line:410:1, line:412:82> line:410:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x5571a4416f98 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5571a4417028 <line:411:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x5571a4417238 <line:412:22>
| `-NonNullAttr 0x5571a4417290 <col:63, col:80> 1 2
|-FunctionDecl 0x5571a44174c8 <line:413:1, line:415:97> line:413:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x5571a44172d8 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x5571a4417368 <line:414:12, line:415:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x5571a4417578 <col:37>
| `-NonNullAttr 0x5571a44175d0 <col:78, col:95> 1 2
|-FunctionDecl 0x5571a44177b8 <line:416:1, line:418:82> line:416:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5571a4417618 <col:41, line:417:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5571a4417698 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x5571a4417868 <line:418:22>
| `-NonNullAttr 0x5571a44178c0 <col:63, col:80> 1 2
|-FunctionDecl 0x5571a4417a48 <line:419:1, line:420:79> line:419:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x5571a4417908 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5571a4417988 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x5571a4417af8 <line:420:22>
| `-NonNullAttr 0x5571a4417b50 <col:63, col:77> 1
|-FunctionDecl 0x5571a4417cf8 <line:421:1, line:423:82> line:421:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5571a4417b98 <col:42, line:422:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5571a4417c18 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x5571a4417da8 <line:423:22>
| `-NonNullAttr 0x5571a4418e30 <col:63, col:80> 1 2
|-FunctionDecl 0x5571a4418fb8 <line:424:1, line:426:79> line:424:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x5571a4418e78 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5571a4418ef8 <line:425:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x5571a4419068 <line:426:22>
| `-NonNullAttr 0x5571a44190c0 <col:63, col:77> 1
|-FunctionDecl 0x5571a4419268 <line:427:1, line:429:82> line:427:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5571a4419108 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5571a4419188 <line:428:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x5571a4419318 <line:429:22>
| `-NonNullAttr 0x5571a4419370 <col:63, col:80> 1 2
|-FunctionDecl 0x5571a44194f8 <line:430:1, line:431:79> line:430:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x5571a44193b8 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5571a4419438 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x5571a44195a8 <line:431:22>
| `-NonNullAttr 0x5571a4419600 <col:63, col:77> 1
|-FunctionDecl 0x5571a4419828 <line:432:1, line:434:115> line:432:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x5571a4419648 <col:39, line:433:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5571a44196c8 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x5571a44198d8 <line:434:22>
| |-NonNullAttr 0x5571a4419930 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x5571a4419968 <col:100> "" ""
|-FunctionDecl 0x5571a4419b78 <line:435:1, line:437:112> line:435:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x5571a44199b8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5571a4419a38 <line:436:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x5571a4419c28 <line:437:22>
| |-NonNullAttr 0x5571a4419c80 <col:63, col:77> 1
| `-DeprecatedAttr 0x5571a4419cb8 <col:97> "" ""
|-FunctionDecl 0x5571a4419eb8 <line:438:1, line:440:82> line:438:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x5571a4419d08 <col:39, line:439:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5571a4419d80 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x5571a4419f68 <line:440:22>
| `-NonNullAttr 0x5571a4419fc0 <col:63, col:80> 1 2
|-FunctionDecl 0x5571a441a140 <line:441:1, line:443:79> line:441:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x5571a441a008 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5571a441a080 <line:442:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x5571a441a1f0 <line:443:22>
| `-NonNullAttr 0x5571a441a248 <col:63, col:77> 1
|-FunctionDecl 0x5571a441a538 <line:444:1, line:447:85> line:444:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x5571a441a298 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x5571a441a318 <line:445:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x5571a441a390 <line:446:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x5571a441a5f0 <line:447:22>
| `-NonNullAttr 0x5571a441a648 <col:63, col:83> 1 2 3
|-FunctionDecl 0x5571a441a8f8 <line:448:1, line:449:100> line:448:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x5571a441a6a0 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x5571a441a720 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x5571a441a798 <line:449:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x5571a441a9b0 <col:43>
| `-NonNullAttr 0x5571a441aa08 <col:84, col:98> 1
|-FunctionDecl 0x5571a441acc8 <line:450:1, line:452:79> line:450:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x5571a441aa58 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5571a441aad8 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x5571a441ab68 <line:451:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x5571a441ad80 <line:452:22>
| `-NonNullAttr 0x5571a441add8 <col:63, col:77> 3
|-FunctionDecl 0x5571a441b0e8 <line:453:1, line:456:82> line:453:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x5571a441ae50 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5571a441aed0 <line:454:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x5571a441af60 <line:455:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x5571a441b1a0 <line:456:22>
| `-NonNullAttr 0x5571a441b1f8 <col:63, col:80> 2 3
|-FunctionDecl 0x5571a441b3e8 <line:457:1, line:458:45> line:457:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x5571a441b248 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5571a441b2c8 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x5571a441b498 <line:458:22>
|-FunctionDecl 0x5571a441b868 <line:459:1, line:460:71> line:459:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x5571a441b560 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x5571a441b700 <line:460:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x5571a441b918 <col:52, col:69> 1 2
|-FunctionDecl 0x5571a441bac0 <line:461:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x5571a441b9a0 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x5571a441ba20 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x5571a441bca8 <line:462:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x5571a441bb88 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x5571a441bc08 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x5571a441be60 <line:463:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x5571a441bd68 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x5571a441bfa0 <line:464:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x5571a441c040 <line:465:9, line:473:1> line:465:9 struct definition
| |-RecordDecl 0x5571a441c0e8 <line:467:3, line:471:3> line:467:3 struct definition
| | |-FieldDecl 0x5571a441c1d8 <line:469:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x5571a441c240 <line:470:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x5571a441c410 <line:467:3, line:471:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at pthread-wmm/mix011_pso.opt_false-unreach-call.i:467:3) [1]'
| `-FieldDecl 0x5571a441c508 <line:472:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x5571a441c5c0 <line:465:1, line:473:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x5571a441c560 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x5571a441c0c0 '__pthread_unwind_buf_t'
| |   `-Record 0x5571a441c040 ''
| `-AlignedAttr 0x5571a441c618 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x5571a441c690 <line:474:1, line:480:1> line:474:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x5571a441c7f0 <line:476:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x5571a441c858 <line:477:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x5571a441c8c0 <line:478:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x5571a441c928 <line:479:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x5571a441cb30 <line:481:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x5571a441ca20 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x5571a441cc78 <line:483:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x5571a441cbe8 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x5571a441ce70 <line:485:1, line:487:31> line:485:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x5571a441cd30 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x5571a441cf18 <line:487:22>
|-RecordDecl 0x5571a441cf70 <line:489:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x5571a441d288 <line:490:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x5571a441d0e8 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x5571a441d168 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x5571a441d338 <col:86>
| `-ReturnsTwiceAttr 0x5571a441d390 <col:12> Implicit
|-FunctionDecl 0x5571a441d6b8 <line:491:1, line:493:79> line:491:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x5571a441d460 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x5571a441d570 <line:492:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x5571a441d768 <line:493:22>
| `-NonNullAttr 0x5571a441d7c0 <col:63, col:77> 1
|-FunctionDecl 0x5571a441d938 <line:494:1, line:495:79> line:494:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5571a441d808 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5571a441d9e0 <line:495:22>
| `-NonNullAttr 0x5571a441da38 <col:63, col:77> 1
|-FunctionDecl 0x5571a441db40 <line:496:1, line:497:68> line:496:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5571a441da88 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5571a441dbe8 <line:497:22>
| `-NonNullAttr 0x5571a441dc40 <col:52, col:66> 1
|-FunctionDecl 0x5571a441dd40 <line:498:1, line:499:68> line:498:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5571a441dc88 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5571a441dde8 <line:499:22>
| `-NonNullAttr 0x5571a441de40 <col:52, col:66> 1
|-FunctionDecl 0x5571a441e088 <line:500:1, line:502:85> line:500:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x5571a441de98 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x5571a441df28 <line:501:9, line:502:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x5571a441e138 <col:36>
| `-NonNullAttr 0x5571a441e190 <col:66, col:83> 1 2
|-FunctionDecl 0x5571a441e290 <line:503:1, line:504:68> line:503:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5571a441e1d8 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5571a441e338 <line:504:22>
| `-NonNullAttr 0x5571a441e390 <col:52, col:66> 1
|-FunctionDecl 0x5571a441e628 <line:505:1, line:508:82> line:505:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5571a441e440 <col:42, line:506:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x5571a441e4c0 <line:507:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x5571a441e6d8 <line:508:22>
| `-NonNullAttr 0x5571a441e730 <col:63, col:80> 1 2
|-FunctionDecl 0x5571a441e9f8 <line:509:1, line:512:82> line:509:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x5571a441e778 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x5571a441e7f8 <line:510:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x5571a441e878 <line:511:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x5571a441eab0 <line:512:22>
| `-NonNullAttr 0x5571a441eb08 <col:63, col:80> 1 3
|-FunctionDecl 0x5571a441ec10 <line:513:1, line:514:79> line:513:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x5571a441eb58 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x5571a441ecb8 <line:514:22>
| `-NonNullAttr 0x5571a441ed10 <col:63, col:77> 1
|-FunctionDecl 0x5571a441ef38 <line:515:1, line:516:79> line:515:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x5571a441edc0 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x5571a441efe0 <line:516:22>
| `-NonNullAttr 0x5571a441f038 <col:63, col:77> 1
|-FunctionDecl 0x5571a441f140 <line:517:1, line:518:79> line:517:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x5571a441f088 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x5571a441f1e8 <line:518:22>
| `-NonNullAttr 0x5571a441f240 <col:63, col:77> 1
|-FunctionDecl 0x5571a441f468 <line:519:1, line:522:82> line:519:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5571a441f288 <col:42, line:520:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x5571a441f308 <line:521:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x5571a441f518 <line:522:22>
| `-NonNullAttr 0x5571a441f570 <col:63, col:80> 1 2
|-FunctionDecl 0x5571a441f778 <line:523:1, line:525:79> line:523:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5571a441f5b8 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5571a441f638 <line:524:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x5571a441f828 <line:525:22>
| `-NonNullAttr 0x5571a441f880 <col:63, col:77> 1
|-FunctionDecl 0x5571a441fa28 <line:526:1, line:528:82> line:526:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5571a441f8c8 <col:39, line:527:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x5571a441f948 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x5571a441fad8 <line:528:22>
| `-NonNullAttr 0x5571a441fb30 <col:63, col:80> 1 2
|-FunctionDecl 0x5571a441fcb8 <line:529:1, line:530:79> line:529:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5571a441fb78 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5571a441fbf8 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x5571a441fd68 <line:530:22>
| `-NonNullAttr 0x5571a441fdc0 <col:63, col:77> 1
|-FunctionDecl 0x5571a4420f90 <line:531:1, line:534:82> line:531:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5571a441fe08 <col:43, line:532:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x5571a4420eb0 <line:533:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x5571a4421040 <line:534:22>
| `-NonNullAttr 0x5571a4421098 <col:63, col:80> 1 2
|-FunctionDecl 0x5571a4421228 <line:535:1, line:537:79> line:535:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5571a44210e8 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5571a4421168 <line:536:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x5571a44212d8 <line:537:22>
| `-NonNullAttr 0x5571a4421330 <col:63, col:77> 1
|-FunctionDecl 0x5571a44214d8 <line:538:1, line:541:82> line:538:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5571a4421378 <col:46, line:539:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x5571a44213f8 <line:540:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x5571a4421588 <line:541:22>
| `-NonNullAttr 0x5571a44215e0 <col:63, col:80> 1 2
|-FunctionDecl 0x5571a4421768 <line:542:1, line:544:79> line:542:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5571a4421628 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5571a44216a8 <line:543:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x5571a4421818 <line:544:22>
| `-NonNullAttr 0x5571a4421870 <col:63, col:77> 1
|-FunctionDecl 0x5571a4421a58 <line:545:1, line:547:82> line:545:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x5571a44218b8 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x5571a4421938 <line:546:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x5571a4421b08 <line:547:22>
| `-NonNullAttr 0x5571a4421b60 <col:63, col:80> 1 2
|-FunctionDecl 0x5571a4421ce8 <line:548:1, line:550:79> line:548:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x5571a4421ba8 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x5571a4421c28 <line:549:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x5571a4421d98 <line:550:22>
| `-NonNullAttr 0x5571a4421df0 <col:63, col:77> 1
|-FunctionDecl 0x5571a4423168 <line:551:1, line:553:86> line:551:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x5571a4422f10 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x5571a4423020 <line:552:5, line:553:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x5571a4423218 <col:29>
| `-NonNullAttr 0x5571a4423270 <col:70, col:84> 1
|-FunctionDecl 0x5571a44233e8 <line:554:1, line:555:79> line:554:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5571a44232b8 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5571a4423490 <line:555:22>
| `-NonNullAttr 0x5571a44234e8 <col:63, col:77> 1
|-FunctionDecl 0x5571a44235f0 <line:556:1, line:557:68> line:556:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5571a4423538 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5571a4423698 <line:557:22>
| `-NonNullAttr 0x5571a44236f0 <col:52, col:66> 1
|-FunctionDecl 0x5571a44237f0 <line:558:1, line:559:65> line:558:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5571a4423738 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5571a4423898 <line:559:19>
| `-NonNullAttr 0x5571a44238f0 <col:49, col:63> 1
|-FunctionDecl 0x5571a4423b28 <line:560:1, line:562:88> line:560:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x5571a4423938 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x5571a44239c8 <line:561:12, line:562:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x5571a4423bd8 <col:39>
| `-NonNullAttr 0x5571a4423c30 <col:69, col:86> 1 2
|-FunctionDecl 0x5571a4423d30 <line:563:1, line:564:68> line:563:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5571a4423c78 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5571a4423dd8 <line:564:22>
| `-NonNullAttr 0x5571a4423e30 <col:52, col:66> 1
|-FunctionDecl 0x5571a4423f98 <line:565:1, line:566:68> line:565:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5571a4423ee0 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5571a4424040 <line:566:22>
| `-NonNullAttr 0x5571a4424098 <col:52, col:66> 1
|-FunctionDecl 0x5571a4424258 <line:567:1, line:569:88> line:567:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x5571a44240e8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x5571a4424178 <line:568:12, line:569:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x5571a4424308 <col:39>
| `-NonNullAttr 0x5571a4424360 <col:69, col:86> 1 2
|-FunctionDecl 0x5571a4424460 <line:570:1, line:571:68> line:570:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x5571a44243a8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x5571a4424508 <line:571:22>
| `-NonNullAttr 0x5571a4424560 <col:52, col:66> 1
|-FunctionDecl 0x5571a4424748 <line:572:1, line:573:79> line:572:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x5571a4424610 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x5571a44247f0 <line:573:22>
| `-NonNullAttr 0x5571a4424848 <col:63, col:77> 1
|-FunctionDecl 0x5571a4424950 <line:574:1, line:575:79> line:574:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x5571a4424898 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x5571a44249f8 <line:575:22>
| `-NonNullAttr 0x5571a4424a50 <col:63, col:77> 1
|-FunctionDecl 0x5571a4424c78 <line:576:1, line:579:82> line:576:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5571a4424a98 <col:43, line:577:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x5571a4424b18 <line:578:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x5571a4424d28 <line:579:22>
| `-NonNullAttr 0x5571a4424d80 <col:63, col:80> 1 2
|-FunctionDecl 0x5571a4424fa8 <line:580:1, line:582:79> line:580:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x5571a4424dc8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x5571a4424e48 <line:581:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x5571a4425058 <line:582:22>
| `-NonNullAttr 0x5571a44250b0 <col:63, col:77> 1
|-FunctionDecl 0x5571a4425258 <line:583:1, line:586:82> line:583:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5571a44250f8 <col:43, line:584:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x5571a4425178 <line:585:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x5571a4425308 <line:586:22>
| `-NonNullAttr 0x5571a4425360 <col:63, col:80> 1 2
|-FunctionDecl 0x5571a44254e8 <line:587:1, line:588:93> line:587:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x5571a44253a8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x5571a4425428 <line:588:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x5571a4425598 <col:36>
| `-NonNullAttr 0x5571a44255f0 <col:77, col:91> 1
|-FunctionDecl 0x5571a4425928 <line:589:1, line:591:79> line:589:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x5571a44256d0 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x5571a44257e0 <line:590:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x5571a44259d8 <line:591:22>
| `-NonNullAttr 0x5571a4425a30 <col:63, col:77> 1
|-FunctionDecl 0x5571a4425ba8 <line:592:1, line:593:79> line:592:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x5571a4425a78 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x5571a4425c50 <line:593:22>
| `-NonNullAttr 0x5571a4425ca8 <col:63, col:77> 1
|-FunctionDecl 0x5571a4425db0 <line:594:1, line:595:68> line:594:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x5571a4425cf8 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x5571a4425e58 <line:595:22>
| `-NonNullAttr 0x5571a4425eb0 <col:52, col:66> 1
|-FunctionDecl 0x5571a4425fc8 <line:596:1, line:597:68> line:596:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x5571a4425f10 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x5571a4426070 <line:597:22>
| `-NonNullAttr 0x5571a44260c8 <col:52, col:66> 1
|-FunctionDecl 0x5571a44262f8 <line:598:1, line:600:41> line:598:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x5571a4426118 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x5571a4426190 <line:599:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x5571a44263a8 <line:600:22, col:39> 1 2
|-FunctionDecl 0x5571a44266d8 <line:601:1, line:604:44> line:601:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x5571a4426428 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x5571a44264a0 <line:602:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x5571a4426530 <line:603:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x5571a4426790 <line:604:22, col:42> 1 2 3
|-FunctionDecl 0x5571a44269a8 <line:605:1, line:606:79> line:605:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x5571a4426870 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x5571a4426a50 <line:606:22>
| `-NonNullAttr 0x5571a4426aa8 <col:63, col:77> 1
|-FunctionDecl 0x5571a4426bb0 <line:607:1, line:608:79> line:607:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x5571a4426af8 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x5571a4426c58 <line:608:22>
| `-NonNullAttr 0x5571a4426cb0 <col:63, col:77> 1
|-FunctionDecl 0x5571a4426f10 <line:609:1, line:612:82> line:609:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5571a4426cf8 <col:41, line:610:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x5571a4426d78 <line:611:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x5571a4426fc0 <line:612:22>
| `-NonNullAttr 0x5571a4427018 <col:63, col:80> 1 2
|-FunctionDecl 0x5571a4427228 <line:613:1, line:614:94> line:613:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x5571a4427068 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x5571a44270e8 <line:614:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x5571a44272d8 <col:37>
| `-NonNullAttr 0x5571a4427330 <col:78, col:92> 1
|-FunctionDecl 0x5571a4427548 <line:615:1, line:618:82> line:615:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x5571a4427378 <col:39, line:616:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x5571a4427420 <line:617:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x5571a44275f8 <line:618:22>
| `-NonNullAttr 0x5571a4427650 <col:63, col:80> 1 2
|-FunctionDecl 0x5571a4427818 <line:619:1, line:621:79> line:619:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x5571a4427698 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x5571a4427710 <line:620:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x5571a44278c8 <line:621:22>
| `-NonNullAttr 0x5571a4427920 <col:63, col:77> 1
|-FunctionDecl 0x5571a4427bc8 <line:622:1, line:623:79> line:622:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x5571a4427a00 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x5571a4427a80 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x5571a4427c78 <line:623:22>
| `-NonNullAttr 0x5571a4427cd0 <col:63, col:77> 1
|-FunctionDecl 0x5571a4427e48 <line:624:1, line:625:79> line:624:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x5571a4427d18 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x5571a4427f20 <line:625:22>
| `-NonNullAttr 0x5571a4427f78 <col:63, col:77> 1
|-FunctionDecl 0x5571a4428080 <line:626:1, line:627:68> line:626:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x5571a4427fc8 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x5571a4428128 <line:627:22>
| `-NonNullAttr 0x5571a4428180 <col:52, col:66> 1
|-FunctionDecl 0x5571a4428280 <line:628:1, line:629:68> line:628:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x5571a44281c8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x5571a4428328 <line:629:22>
| `-NonNullAttr 0x5571a4428380 <col:52, col:66> 1
|-FunctionDecl 0x5571a4428480 <line:630:1, line:631:68> line:630:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x5571a44283c8 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x5571a4428528 <line:631:22>
| `-NonNullAttr 0x5571a4428580 <col:52, col:66> 1
|-FunctionDecl 0x5571a4428958 <line:632:1, line:635:79> line:632:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x5571a4428660 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x5571a4428770 <line:633:6, line:634:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x5571a44287f0 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x5571a4428a10 <line:635:22>
| `-NonNullAttr 0x5571a4428a68 <col:63, col:77> 1
|-FunctionDecl 0x5571a4428be8 <line:636:1, line:637:79> line:636:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x5571a4428ab8 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x5571a4428c90 <line:637:22>
| `-NonNullAttr 0x5571a4428ce8 <col:63, col:77> 1
|-FunctionDecl 0x5571a4428df0 <line:638:1, line:639:68> line:638:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x5571a4428d38 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x5571a4428e98 <line:639:22>
| `-NonNullAttr 0x5571a4428ef0 <col:52, col:66> 1
|-FunctionDecl 0x5571a44290e8 <line:640:1, line:641:79> line:640:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x5571a4428fb0 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x5571a4429190 <line:641:22>
| `-NonNullAttr 0x5571a44291e8 <col:63, col:77> 1
|-FunctionDecl 0x5571a44292f0 <line:642:1, line:643:79> line:642:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x5571a4429238 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x5571a4429398 <line:643:22>
| `-NonNullAttr 0x5571a44293f0 <col:63, col:77> 1
|-FunctionDecl 0x5571a4429618 <line:644:1, line:647:82> line:644:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x5571a4429438 <col:44, line:645:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x5571a44294b8 <line:646:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x5571a44296c8 <line:647:22>
| `-NonNullAttr 0x5571a4429720 <col:63, col:80> 1 2
|-FunctionDecl 0x5571a4429928 <line:648:1, line:650:79> line:648:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x5571a4429768 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x5571a44297e8 <line:649:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x5571a44299d8 <line:650:22>
| `-NonNullAttr 0x5571a4429a30 <col:63, col:77> 1
|-FunctionDecl 0x5571a4429d78 <line:651:1, line:653:79> line:651:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x5571a4429b10 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x5571a4429c30 <line:652:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x5571a4429e28 <line:653:22>
| `-NonNullAttr 0x5571a4429e80 <col:63, col:77> 1
|-FunctionDecl 0x5571a4429fe8 <line:654:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x5571a4429ec8 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x5571a442a090 <col:69>
|-FunctionDecl 0x5571a442a208 <line:655:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x5571a442a0f8 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x5571a442a2b0 <col:72>
|-FunctionDecl 0x5571a442a4e8 <line:656:1, line:657:67> line:656:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x5571a442a318 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x5571a442a3c8 <line:657:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x5571a442a598 <col:44>
|-FunctionDecl 0x5571a442a7b8 <line:658:1, line:660:79> line:658:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x5571a442a600 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x5571a442a678 <line:659:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x5571a442a868 <line:660:22>
| `-NonNullAttr 0x5571a442a8c0 <col:63, col:77> 2
|-FunctionDecl 0x5571a442ad08 <line:661:1, line:663:70> line:661:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x5571a442a9a0 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x5571a442aab0 <line:662:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x5571a442abc0 <line:663:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x5571a442adc0 <col:47>
|-FunctionDecl 0x5571a442bf60 <line:665:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x5571a442ae30 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x5571a442c0b8 <line:666:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x5571a442c020 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x5571a442c210 <line:667:1, col:20> col:8 used P2 'void *(void *)'
| `-ParmVarDecl 0x5571a442c178 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x5571a442c2d8 <line:668:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x5571a442c398 <line:669:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x5571a442c458 <line:670:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x5571a442c510 <line:671:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x5571a442c590 prev 0x5571a442c510 <line:672:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x5571a442c5f8 <col:24> 'int' 0
|-VarDecl 0x5571a442c630 <line:673:1, col:5> col:5 used __unbuffered_p1_EAX 'int'
|-VarDecl 0x5571a442c6b0 prev 0x5571a442c630 <line:674:1, col:27> col:5 used __unbuffered_p1_EAX 'int' cinit
| `-IntegerLiteral 0x5571a442c718 <col:27> 'int' 0
|-VarDecl 0x5571a442c750 <line:675:1, col:5> col:5 used __unbuffered_p1_EBX 'int'
|-VarDecl 0x5571a442c7d0 prev 0x5571a442c750 <line:676:1, col:27> col:5 used __unbuffered_p1_EBX 'int' cinit
| `-IntegerLiteral 0x5571a442c838 <col:27> 'int' 0
|-VarDecl 0x5571a442c870 <line:677:1, col:5> col:5 used __unbuffered_p2_EAX 'int'
|-VarDecl 0x5571a442c8f0 prev 0x5571a442c870 <line:678:1, col:27> col:5 used __unbuffered_p2_EAX 'int' cinit
| `-IntegerLiteral 0x5571a442c958 <col:27> 'int' 0
|-VarDecl 0x5571a442c990 <line:679:1, col:5> col:5 used __unbuffered_p2_EBX 'int'
|-VarDecl 0x5571a442ca10 prev 0x5571a442c990 <line:680:1, col:27> col:5 used __unbuffered_p2_EBX 'int' cinit
| `-IntegerLiteral 0x5571a442ca78 <col:27> 'int' 0
|-VarDecl 0x5571a442cab0 <line:681:1, col:5> col:5 used a 'int'
|-VarDecl 0x5571a442cb30 prev 0x5571a442cab0 <line:682:1, col:9> col:5 used a 'int' cinit
| `-IntegerLiteral 0x5571a442cb98 <col:9> 'int' 0
|-VarDecl 0x5571a442cbc8 <line:683:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x5571a442cc40 <line:684:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x5571a442ccc0 <line:685:1, col:5> col:5 used x 'int'
|-VarDecl 0x5571a442cd40 prev 0x5571a442ccc0 <line:686:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x5571a442cda8 <col:9> 'int' 0
|-VarDecl 0x5571a442cde0 <line:687:1, col:5> col:5 used y 'int'
|-VarDecl 0x5571a442ce60 prev 0x5571a442cde0 <line:688:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x5571a442cec8 <col:9> 'int' 0
|-VarDecl 0x5571a442cf70 <line:689:1, col:5> col:5 used z 'int'
|-VarDecl 0x5571a442cff0 prev 0x5571a442cf70 <line:690:1, col:9> col:5 used z 'int' cinit
| `-IntegerLiteral 0x5571a442d058 <col:9> 'int' 0
|-VarDecl 0x5571a442d088 <line:691:1, col:7> col:7 used z$flush_delayed '_Bool'
|-VarDecl 0x5571a442d108 <line:692:1, col:5> col:5 used z$mem_tmp 'int'
|-VarDecl 0x5571a442d180 <line:693:1, col:7> col:7 used z$r_buff0_thd0 '_Bool'
|-VarDecl 0x5571a442d1f8 <line:694:1, col:7> col:7 used z$r_buff0_thd1 '_Bool'
|-VarDecl 0x5571a442d270 <line:695:1, col:7> col:7 used z$r_buff0_thd2 '_Bool'
|-VarDecl 0x5571a442d2e8 <line:696:1, col:7> col:7 used z$r_buff0_thd3 '_Bool'
|-VarDecl 0x5571a442d360 <line:697:1, col:7> col:7 used z$r_buff1_thd0 '_Bool'
|-VarDecl 0x5571a442d3d8 <line:698:1, col:7> col:7 used z$r_buff1_thd1 '_Bool'
|-VarDecl 0x5571a442d450 <line:699:1, col:7> col:7 used z$r_buff1_thd2 '_Bool'
|-VarDecl 0x5571a442d4c8 <line:700:1, col:7> col:7 used z$r_buff1_thd3 '_Bool'
|-VarDecl 0x5571a442d540 <line:701:1, col:7> col:7 z$read_delayed '_Bool'
|-VarDecl 0x5571a442d5c0 <line:702:1, col:6> col:6 z$read_delayed_var 'int *'
|-VarDecl 0x5571a442d640 <line:703:1, col:5> col:5 used z$w_buff0 'int'
|-VarDecl 0x5571a442d6b8 <line:704:1, col:7> col:7 used z$w_buff0_used '_Bool'
|-VarDecl 0x5571a442d738 <line:705:1, col:5> col:5 used z$w_buff1 'int'
|-VarDecl 0x5571a442d7b0 <line:706:1, col:7> col:7 used z$w_buff1_used '_Bool'
|-VarDecl 0x5571a442d828 <line:707:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x5571a442d8a0 <line:708:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x5571a442d9b8 prev 0x5571a442bf60 <line:709:1, line:723:1> line:709:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x5571a442d920 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x5571a442df80 <line:710:1, line:723:1>
|   |-CallExpr 0x5571a442dac8 <line:711:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5571a442dab0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5571a442da60 <col:3> 'void ()' Function 0x5571a43d3350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5571a442db28 <line:712:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x5571a442dae8 <col:3> 'int' lvalue Var 0x5571a442cb30 'a' 'int'
|   | `-IntegerLiteral 0x5571a442db08 <col:7> 'int' 1
|   |-CallExpr 0x5571a442db80 <line:713:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5571a442db68 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5571a442db48 <col:3> 'void ()' Function 0x5571a43d3410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5571a442dbd8 <line:714:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5571a442dbc0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5571a442dba0 <col:3> 'void ()' Function 0x5571a43d3350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5571a442dc38 <line:715:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x5571a442dbf8 <col:3> 'int' lvalue Var 0x5571a442cd40 'x' 'int'
|   | `-IntegerLiteral 0x5571a442dc18 <col:7> 'int' 1
|   |-CallExpr 0x5571a442dc90 <line:716:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5571a442dc78 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5571a442dc58 <col:3> 'void ()' Function 0x5571a43d3410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5571a442dce8 <line:717:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5571a442dcd0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5571a442dcb0 <col:3> 'void ()' Function 0x5571a43d3350 '__VERIFIER_atomic_begin' 'void ()'
|   |-CallExpr 0x5571a442dd40 <line:718:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5571a442dd28 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5571a442dd08 <col:3> 'void ()' Function 0x5571a43d3410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5571a442dd98 <line:719:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5571a442dd80 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5571a442dd60 <col:3> 'void ()' Function 0x5571a43d3350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5571a442de50 <line:720:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x5571a442ddb8 <col:3> 'int' lvalue Var 0x5571a442c590 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x5571a442de30 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x5571a442de18 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5571a442ddd8 <col:22> 'int' lvalue Var 0x5571a442c590 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x5571a442ddf8 <col:41> 'int' 1
|   |-CallExpr 0x5571a442dea8 <line:721:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5571a442de90 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5571a442de70 <col:3> 'void ()' Function 0x5571a43d3410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x5571a442df58 <line:722:3, col:36>
|     `-CallExpr 0x5571a442df38 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x5571a442df20 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x5571a442dec8 <col:10> 'void *(void)' Function 0x5571a43d2e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x5571a442e0a0 prev 0x5571a442c0b8 <line:724:1, line:757:1> line:724:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x5571a442e008 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x5571a44311d8 <line:725:1, line:757:1>
|   |-CallExpr 0x5571a442e180 <line:726:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5571a442e168 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5571a442e148 <col:3> 'void ()' Function 0x5571a43d3350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5571a442e1e0 <line:727:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x5571a442e1a0 <col:3> 'int' lvalue Var 0x5571a442cd40 'x' 'int'
|   | `-IntegerLiteral 0x5571a442e1c0 <col:7> 'int' 2
|   |-CallExpr 0x5571a442e238 <line:728:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5571a442e220 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5571a442e200 <col:3> 'void ()' Function 0x5571a43d3410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5571a442e290 <line:729:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5571a442e278 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5571a442e258 <col:3> 'void ()' Function 0x5571a43d3350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5571a442e2f0 <line:730:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x5571a442e2b0 <col:3> 'int' lvalue Var 0x5571a442ce60 'y' 'int'
|   | `-IntegerLiteral 0x5571a442e2d0 <col:7> 'int' 1
|   |-CallExpr 0x5571a442e348 <line:731:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5571a442e330 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5571a442e310 <col:3> 'void ()' Function 0x5571a43d3410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5571a442e3a0 <line:732:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5571a442e388 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5571a442e368 <col:3> 'void ()' Function 0x5571a43d3350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5571a442e418 <line:733:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x5571a442e3c0 <col:3> 'int' lvalue Var 0x5571a442c6b0 '__unbuffered_p1_EAX' 'int'
|   | `-ImplicitCastExpr 0x5571a442e400 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5571a442e3e0 <col:25> 'int' lvalue Var 0x5571a442ce60 'y' 'int'
|   |-CallExpr 0x5571a442e470 <line:734:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5571a442e458 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5571a442e438 <col:3> 'void ()' Function 0x5571a43d3410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5571a442e4c8 <line:735:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5571a442e4b0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5571a442e490 <col:3> 'void ()' Function 0x5571a43d3350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5571a442e578 <line:736:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x5571a442e4e8 <col:3> '_Bool' lvalue Var 0x5571a442d828 'weak$$choice0' '_Bool'
|   | `-ImplicitCastExpr 0x5571a442e560 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x5571a442e540 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x5571a442e528 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x5571a442e508 <col:19> 'void *(void)' Function 0x5571a43d2e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x5571a442e628 <line:737:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x5571a442e598 <col:3> '_Bool' lvalue Var 0x5571a442d8a0 'weak$$choice2' '_Bool'
|   | `-ImplicitCastExpr 0x5571a442e610 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x5571a442e5f0 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x5571a442e5d8 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x5571a442e5b8 <col:19> 'void *(void)' Function 0x5571a43d2e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x5571a442e6a0 <line:738:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x5571a442e648 <col:3> '_Bool' lvalue Var 0x5571a442d088 'z$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x5571a442e688 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5571a442e668 <col:21> '_Bool' lvalue Var 0x5571a442d8a0 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x5571a442e718 <line:739:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x5571a442e6c0 <col:3> 'int' lvalue Var 0x5571a442d108 'z$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x5571a442e700 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5571a442e6e0 <col:15> 'int' lvalue Var 0x5571a442cff0 'z' 'int'
|   |-BinaryOperator 0x5571a442eb50 <line:740:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x5571a442e738 <col:3> 'int' lvalue Var 0x5571a442cff0 'z' 'int'
|   | `-ConditionalOperator 0x5571a442eb20 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x5571a442e948 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x5571a442e868 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x5571a442e790 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x5571a442e778 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x5571a442e758 <col:8> '_Bool' lvalue Var 0x5571a442d6b8 'z$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x5571a442e848 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x5571a442e7e0 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x5571a442e7c8 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x5571a442e7a8 <col:27> '_Bool' lvalue Var 0x5571a442d270 'z$r_buff0_thd2' '_Bool'
|   |   | |   `-UnaryOperator 0x5571a442e830 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x5571a442e818 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x5571a442e7f8 <col:46> '_Bool' lvalue Var 0x5571a442d7b0 'z$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x5571a442e928 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x5571a442e8c0 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x5571a442e8a8 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x5571a442e888 <col:65> '_Bool' lvalue Var 0x5571a442d270 'z$r_buff0_thd2' '_Bool'
|   |   |   `-UnaryOperator 0x5571a442e910 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x5571a442e8f8 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x5571a442e8d8 <col:84> '_Bool' lvalue Var 0x5571a442d450 'z$r_buff1_thd2' '_Bool'
|   |   |-ImplicitCastExpr 0x5571a442eb08 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5571a442e968 <col:101> 'int' lvalue Var 0x5571a442cff0 'z' 'int'
|   |   `-ParenExpr 0x5571a442eae8 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x5571a442eab8 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x5571a442ea28 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x5571a442e9e0 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x5571a442e9c8 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x5571a442e988 <col:106> '_Bool' lvalue Var 0x5571a442d6b8 'z$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x5571a442ea10 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x5571a442e9f8 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x5571a442e9a8 <col:124> '_Bool' lvalue Var 0x5571a442d270 'z$r_buff0_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x5571a442ea88 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5571a442ea48 <col:141> 'int' lvalue Var 0x5571a442d640 'z$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x5571a442eaa0 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x5571a442ea68 <col:153> 'int' lvalue Var 0x5571a442d738 'z$w_buff1' 'int'
|   |-BinaryOperator 0x5571a442f070 <line:741:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x5571a442eb70 <col:3> 'int' lvalue Var 0x5571a442d640 'z$w_buff0' 'int'
|   | `-ConditionalOperator 0x5571a442f040 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x5571a442f010 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x5571a442eff8 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x5571a442eb90 <col:15> '_Bool' lvalue Var 0x5571a442d8a0 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x5571a442f028 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5571a442ebb0 <col:31> 'int' lvalue Var 0x5571a442d640 'z$w_buff0' 'int'
|   |   `-ParenExpr 0x5571a442efd8 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x5571a442efa8 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x5571a442edc0 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x5571a442ece0 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x5571a442ec08 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x5571a442ebf0 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x5571a442ebd0 <col:45> '_Bool' lvalue Var 0x5571a442d6b8 'z$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x5571a442ecc0 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x5571a442ec58 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x5571a442ec40 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x5571a442ec20 <col:64> '_Bool' lvalue Var 0x5571a442d270 'z$r_buff0_thd2' '_Bool'
|   |       | |   `-UnaryOperator 0x5571a442eca8 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x5571a442ec90 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x5571a442ec70 <col:83> '_Bool' lvalue Var 0x5571a442d7b0 'z$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x5571a442eda0 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x5571a442ed38 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x5571a442ed20 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x5571a442ed00 <col:102> '_Bool' lvalue Var 0x5571a442d270 'z$r_buff0_thd2' '_Bool'
|   |       |   `-UnaryOperator 0x5571a442ed88 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x5571a442ed70 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x5571a442ed50 <col:121> '_Bool' lvalue Var 0x5571a442d450 'z$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x5571a442ef90 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5571a442ede0 <col:138> 'int' lvalue Var 0x5571a442d640 'z$w_buff0' 'int'
|   |       `-ParenExpr 0x5571a442ef60 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x5571a442ef30 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x5571a442eea0 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x5571a442ee58 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x5571a442ee40 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x5571a442ee00 <col:151> '_Bool' lvalue Var 0x5571a442d6b8 'z$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x5571a442ee88 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x5571a442ee70 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x5571a442ee20 <col:169> '_Bool' lvalue Var 0x5571a442d270 'z$r_buff0_thd2' '_Bool'
|   |           |-ImplicitCastExpr 0x5571a442ef00 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x5571a442eec0 <col:186> 'int' lvalue Var 0x5571a442d640 'z$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x5571a442ef18 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x5571a442eee0 <col:198> 'int' lvalue Var 0x5571a442d640 'z$w_buff0' 'int'
|   |-BinaryOperator 0x5571a442f580 <line:742:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x5571a442f090 <col:3> 'int' lvalue Var 0x5571a442d738 'z$w_buff1' 'int'
|   | `-ConditionalOperator 0x5571a442f550 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x5571a442f520 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x5571a442f508 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x5571a442f0b0 <col:15> '_Bool' lvalue Var 0x5571a442d8a0 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x5571a442f538 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5571a442f0d0 <col:31> 'int' lvalue Var 0x5571a442d738 'z$w_buff1' 'int'
|   |   `-ParenExpr 0x5571a442f4e8 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x5571a442f4b8 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x5571a442f2e0 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x5571a442f200 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x5571a442f128 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x5571a442f110 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x5571a442f0f0 <col:45> '_Bool' lvalue Var 0x5571a442d6b8 'z$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x5571a442f1e0 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x5571a442f178 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x5571a442f160 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x5571a442f140 <col:64> '_Bool' lvalue Var 0x5571a442d270 'z$r_buff0_thd2' '_Bool'
|   |       | |   `-UnaryOperator 0x5571a442f1c8 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x5571a442f1b0 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x5571a442f190 <col:83> '_Bool' lvalue Var 0x5571a442d7b0 'z$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x5571a442f2c0 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x5571a442f258 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x5571a442f240 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x5571a442f220 <col:102> '_Bool' lvalue Var 0x5571a442d270 'z$r_buff0_thd2' '_Bool'
|   |       |   `-UnaryOperator 0x5571a442f2a8 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x5571a442f290 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x5571a442f270 <col:121> '_Bool' lvalue Var 0x5571a442d450 'z$r_buff1_thd2' '_Bool'
|   |       |-ImplicitCastExpr 0x5571a442f4a0 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5571a442f300 <col:138> 'int' lvalue Var 0x5571a442d738 'z$w_buff1' 'int'
|   |       `-ParenExpr 0x5571a442f480 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x5571a442f450 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x5571a442f3c0 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x5571a442f378 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x5571a442f360 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x5571a442f320 <col:151> '_Bool' lvalue Var 0x5571a442d6b8 'z$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x5571a442f3a8 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x5571a442f390 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x5571a442f340 <col:169> '_Bool' lvalue Var 0x5571a442d270 'z$r_buff0_thd2' '_Bool'
|   |           |-ImplicitCastExpr 0x5571a442f420 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x5571a442f3e0 <col:186> 'int' lvalue Var 0x5571a442d738 'z$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x5571a442f438 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x5571a442f400 <col:198> 'int' lvalue Var 0x5571a442d738 'z$w_buff1' 'int'
|   |-BinaryOperator 0x5571a442fb28 <line:743:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x5571a442f5a0 <col:3> '_Bool' lvalue Var 0x5571a442d6b8 'z$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x5571a442fb10 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5571a442fae0 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x5571a442fa98 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5571a442fa80 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5571a442f5c0 <col:20> '_Bool' lvalue Var 0x5571a442d8a0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5571a442fac8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5571a442fab0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5571a442f5e0 <col:36> '_Bool' lvalue Var 0x5571a442d6b8 'z$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x5571a442fa60 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x5571a442fa30 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x5571a442f7f0 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5571a442f710 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5571a442f638 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5571a442f620 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5571a442f600 <col:55> '_Bool' lvalue Var 0x5571a442d6b8 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5571a442f6f0 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5571a442f688 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5571a442f670 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5571a442f650 <col:74> '_Bool' lvalue Var 0x5571a442d270 'z$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x5571a442f6d8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5571a442f6c0 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5571a442f6a0 <col:93> '_Bool' lvalue Var 0x5571a442d7b0 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5571a442f7d0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5571a442f768 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5571a442f750 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5571a442f730 <col:112> '_Bool' lvalue Var 0x5571a442d270 'z$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x5571a442f7b8 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5571a442f7a0 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5571a442f780 <col:131> '_Bool' lvalue Var 0x5571a442d450 'z$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x5571a442fa18 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5571a442fa00 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5571a442f810 <col:148> '_Bool' lvalue Var 0x5571a442d6b8 'z$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x5571a442f9e0 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x5571a442f9b0 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x5571a442f8d0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5571a442f888 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5571a442f870 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5571a442f830 <col:166> '_Bool' lvalue Var 0x5571a442d6b8 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5571a442f8b8 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5571a442f8a0 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5571a442f850 <col:184> '_Bool' lvalue Var 0x5571a442d270 'z$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x5571a442f968 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5571a442f920 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5571a442f8f0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5571a442f998 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x5571a442f980 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x5571a442f948 <col:212> '_Bool' lvalue Var 0x5571a442d6b8 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5571a4430118 <line:744:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x5571a442fb48 <col:3> '_Bool' lvalue Var 0x5571a442d7b0 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5571a4430100 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5571a44300d0 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x5571a4430088 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5571a4430070 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5571a442fb68 <col:20> '_Bool' lvalue Var 0x5571a442d8a0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5571a44300b8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5571a44300a0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5571a442fb88 <col:36> '_Bool' lvalue Var 0x5571a442d7b0 'z$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x5571a4430050 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x5571a4430020 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x5571a442fd98 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5571a442fcb8 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5571a442fbe0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5571a442fbc8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5571a442fba8 <col:55> '_Bool' lvalue Var 0x5571a442d6b8 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5571a442fc98 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5571a442fc30 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5571a442fc18 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5571a442fbf8 <col:74> '_Bool' lvalue Var 0x5571a442d270 'z$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x5571a442fc80 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5571a442fc68 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5571a442fc48 <col:93> '_Bool' lvalue Var 0x5571a442d7b0 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5571a442fd78 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5571a442fd10 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5571a442fcf8 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5571a442fcd8 <col:112> '_Bool' lvalue Var 0x5571a442d270 'z$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x5571a442fd60 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5571a442fd48 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5571a442fd28 <col:131> '_Bool' lvalue Var 0x5571a442d450 'z$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x5571a4430008 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5571a442fff0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5571a442fdb8 <col:148> '_Bool' lvalue Var 0x5571a442d7b0 'z$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x5571a442ffd0 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x5571a442ffa0 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x5571a442fe78 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5571a442fe30 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5571a442fe18 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5571a442fdd8 <col:166> '_Bool' lvalue Var 0x5571a442d6b8 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5571a442fe60 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5571a442fe48 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5571a442fdf8 <col:184> '_Bool' lvalue Var 0x5571a442d270 'z$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x5571a442ff48 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5571a442fec8 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5571a442fe98 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5571a442ff60 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x5571a442ff20 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x5571a442fef0 <col:219> 'int' 0
|   |-BinaryOperator 0x5571a44306c0 <line:745:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x5571a4430138 <col:3> '_Bool' lvalue Var 0x5571a442d270 'z$r_buff0_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x5571a44306a8 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5571a4430678 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x5571a4430630 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5571a4430618 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5571a4430158 <col:20> '_Bool' lvalue Var 0x5571a442d8a0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5571a4430660 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5571a4430648 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5571a4430178 <col:36> '_Bool' lvalue Var 0x5571a442d270 'z$r_buff0_thd2' '_Bool'
|   |     `-ParenExpr 0x5571a44305f8 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x5571a44305c8 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x5571a4430388 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5571a44302a8 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5571a44301d0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5571a44301b8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5571a4430198 <col:55> '_Bool' lvalue Var 0x5571a442d6b8 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5571a4430288 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5571a4430220 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5571a4430208 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5571a44301e8 <col:74> '_Bool' lvalue Var 0x5571a442d270 'z$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x5571a4430270 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5571a4430258 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5571a4430238 <col:93> '_Bool' lvalue Var 0x5571a442d7b0 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5571a4430368 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5571a4430300 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5571a44302e8 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5571a44302c8 <col:112> '_Bool' lvalue Var 0x5571a442d270 'z$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x5571a4430350 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5571a4430338 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5571a4430318 <col:131> '_Bool' lvalue Var 0x5571a442d450 'z$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x5571a44305b0 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5571a4430598 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5571a44303a8 <col:148> '_Bool' lvalue Var 0x5571a442d270 'z$r_buff0_thd2' '_Bool'
|   |         `-ParenExpr 0x5571a4430578 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x5571a4430548 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x5571a4430468 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5571a4430420 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5571a4430408 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5571a44303c8 <col:166> '_Bool' lvalue Var 0x5571a442d6b8 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5571a4430450 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5571a4430438 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5571a44303e8 <col:184> '_Bool' lvalue Var 0x5571a442d270 'z$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x5571a4430500 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5571a44304b8 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5571a4430488 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5571a4430530 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x5571a4430518 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x5571a44304e0 <col:212> '_Bool' lvalue Var 0x5571a442d270 'z$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x5571a4430c88 <line:746:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x5571a44306e0 <col:3> '_Bool' lvalue Var 0x5571a442d450 'z$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x5571a4430c70 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5571a4430c40 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x5571a4430bf8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5571a4430be0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5571a4430700 <col:20> '_Bool' lvalue Var 0x5571a442d8a0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5571a4430c28 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5571a4430c10 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5571a4430720 <col:36> '_Bool' lvalue Var 0x5571a442d450 'z$r_buff1_thd2' '_Bool'
|   |     `-ParenExpr 0x5571a4430bc0 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x5571a4430b90 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x5571a4430930 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5571a4430850 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5571a4430778 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5571a4430760 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5571a4430740 <col:55> '_Bool' lvalue Var 0x5571a442d6b8 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5571a4430830 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5571a44307c8 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5571a44307b0 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5571a4430790 <col:74> '_Bool' lvalue Var 0x5571a442d270 'z$r_buff0_thd2' '_Bool'
|   |         | |   `-UnaryOperator 0x5571a4430818 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5571a4430800 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5571a44307e0 <col:93> '_Bool' lvalue Var 0x5571a442d7b0 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5571a4430910 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5571a44308a8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5571a4430890 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5571a4430870 <col:112> '_Bool' lvalue Var 0x5571a442d270 'z$r_buff0_thd2' '_Bool'
|   |         |   `-UnaryOperator 0x5571a44308f8 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5571a44308e0 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5571a44308c0 <col:131> '_Bool' lvalue Var 0x5571a442d450 'z$r_buff1_thd2' '_Bool'
|   |         |-ImplicitCastExpr 0x5571a4430b78 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5571a4430b60 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5571a4430950 <col:148> '_Bool' lvalue Var 0x5571a442d450 'z$r_buff1_thd2' '_Bool'
|   |         `-ParenExpr 0x5571a4430b40 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x5571a4430b10 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x5571a4430a10 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5571a44309c8 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5571a44309b0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5571a4430970 <col:166> '_Bool' lvalue Var 0x5571a442d6b8 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5571a44309f8 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5571a44309e0 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5571a4430990 <col:184> '_Bool' lvalue Var 0x5571a442d270 'z$r_buff0_thd2' '_Bool'
|   |             |-ImplicitCastExpr 0x5571a4430ae0 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5571a4430a60 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5571a4430a30 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5571a4430af8 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x5571a4430ab8 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x5571a4430a88 <col:219> 'int' 0
|   |-BinaryOperator 0x5571a4430d00 <line:747:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x5571a4430ca8 <col:3> 'int' lvalue Var 0x5571a442c7d0 '__unbuffered_p1_EBX' 'int'
|   | `-ImplicitCastExpr 0x5571a4430ce8 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5571a4430cc8 <col:25> 'int' lvalue Var 0x5571a442cff0 'z' 'int'
|   |-BinaryOperator 0x5571a4430e30 <line:748:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x5571a4430d20 <col:3> 'int' lvalue Var 0x5571a442cff0 'z' 'int'
|   | `-ConditionalOperator 0x5571a4430e00 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x5571a4430db8 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x5571a4430da0 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x5571a4430d40 <col:7> '_Bool' lvalue Var 0x5571a442d088 'z$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x5571a4430dd0 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5571a4430d60 <col:25> 'int' lvalue Var 0x5571a442d108 'z$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x5571a4430de8 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x5571a4430d80 <col:37> 'int' lvalue Var 0x5571a442cff0 'z' 'int'
|   |-BinaryOperator 0x5571a4430ec8 <line:749:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x5571a4430e50 <col:3> '_Bool' lvalue Var 0x5571a442d088 'z$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x5571a4430ea0 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x5571a4430e70 <col:28> 'int' 0
|   |-CallExpr 0x5571a4430f20 <line:750:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5571a4430f08 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5571a4430ee8 <col:3> 'void ()' Function 0x5571a43d3410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5571a4430f78 <line:751:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5571a4430f60 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5571a4430f40 <col:3> 'void ()' Function 0x5571a43d3350 '__VERIFIER_atomic_begin' 'void ()'
|   |-CallExpr 0x5571a4430fe8 <line:752:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5571a4430fd0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5571a4430fb0 <col:3> 'void ()' Function 0x5571a43d3410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5571a4431040 <line:753:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5571a4431028 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5571a4431008 <col:3> 'void ()' Function 0x5571a43d3350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5571a44310f8 <line:754:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x5571a4431060 <col:3> 'int' lvalue Var 0x5571a442c590 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x5571a44310d8 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x5571a44310c0 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5571a4431080 <col:22> 'int' lvalue Var 0x5571a442c590 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x5571a44310a0 <col:41> 'int' 1
|   |-CallExpr 0x5571a4431150 <line:755:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5571a4431138 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5571a4431118 <col:3> 'void ()' Function 0x5571a43d3410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x5571a44311c8 <line:756:3, col:36>
|     `-CallExpr 0x5571a44311a8 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x5571a4431190 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x5571a4431170 <col:10> 'void *(void)' Function 0x5571a43d2e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x5571a4431390 prev 0x5571a442c210 <line:758:1, line:802:1> line:758:8 used P2 'void *(void *)'
| |-ParmVarDecl 0x5571a44312f8 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x5571a4435628 <line:759:1, line:802:1>
|   |-CallExpr 0x5571a4431470 <line:760:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5571a4431458 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5571a4431438 <col:3> 'void ()' Function 0x5571a43d3350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5571a44314e8 <line:761:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x5571a4431490 <col:3> 'int' lvalue Var 0x5571a442d738 'z$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x5571a44314d0 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5571a44314b0 <col:15> 'int' lvalue Var 0x5571a442d640 'z$w_buff0' 'int'
|   |-BinaryOperator 0x5571a4431548 <line:762:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x5571a4431508 <col:3> 'int' lvalue Var 0x5571a442d640 'z$w_buff0' 'int'
|   | `-IntegerLiteral 0x5571a4431528 <col:15> 'int' 1
|   |-BinaryOperator 0x5571a44315c0 <line:763:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5571a4431568 <col:3> '_Bool' lvalue Var 0x5571a442d7b0 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5571a44315a8 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5571a4431588 <col:20> '_Bool' lvalue Var 0x5571a442d6b8 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5571a4431658 <line:764:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x5571a44315e0 <col:3> '_Bool' lvalue Var 0x5571a442d6b8 'z$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x5571a4431630 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x5571a4431600 <col:27> 'int' 1
|   |-CallExpr 0x5571a44317d8 <line:765:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x5571a44317c0 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x5571a4431678 <col:3> 'void (int)' Function 0x5571a43d30d8 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x5571a4431778 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x5571a4431758 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x5571a4431738 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x5571a44316f0 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x5571a44316d8 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x5571a4431698 <col:23> '_Bool' lvalue Var 0x5571a442d7b0 'z$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x5571a4431720 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x5571a4431708 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x5571a44316b8 <col:41> '_Bool' lvalue Var 0x5571a442d6b8 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5571a4431858 <line:766:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5571a4431800 <col:3> '_Bool' lvalue Var 0x5571a442d360 'z$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x5571a4431840 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5571a4431820 <col:20> '_Bool' lvalue Var 0x5571a442d180 'z$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x5571a44318d0 <line:767:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5571a4431878 <col:3> '_Bool' lvalue Var 0x5571a442d3d8 'z$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x5571a44318b8 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5571a4431898 <col:20> '_Bool' lvalue Var 0x5571a442d1f8 'z$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x5571a4431948 <line:768:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5571a44318f0 <col:3> '_Bool' lvalue Var 0x5571a442d450 'z$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x5571a4431930 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5571a4431910 <col:20> '_Bool' lvalue Var 0x5571a442d270 'z$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x5571a44319c0 <line:769:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x5571a4431968 <col:3> '_Bool' lvalue Var 0x5571a442d4c8 'z$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x5571a44319a8 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5571a4431988 <col:20> '_Bool' lvalue Var 0x5571a442d2e8 'z$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x5571a4431a58 <line:770:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x5571a44319e0 <col:3> '_Bool' lvalue Var 0x5571a442d2e8 'z$r_buff0_thd3' '_Bool'
|   | `-CStyleCastExpr 0x5571a4431a30 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x5571a4431a00 <col:27> 'int' 1
|   |-CallExpr 0x5571a4431ab0 <line:771:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5571a4431a98 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5571a4431a78 <col:3> 'void ()' Function 0x5571a43d3410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5571a4431b08 <line:772:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5571a4431af0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5571a4431ad0 <col:3> 'void ()' Function 0x5571a43d3350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5571a4431bb8 <line:773:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x5571a4431b28 <col:3> '_Bool' lvalue Var 0x5571a442d828 'weak$$choice0' '_Bool'
|   | `-ImplicitCastExpr 0x5571a4431ba0 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x5571a4431b80 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x5571a4431b68 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x5571a4431b48 <col:19> 'void *(void)' Function 0x5571a43d2e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x5571a4431c68 <line:774:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x5571a4431bd8 <col:3> '_Bool' lvalue Var 0x5571a442d8a0 'weak$$choice2' '_Bool'
|   | `-ImplicitCastExpr 0x5571a4431c50 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x5571a4431c30 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x5571a4431c18 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x5571a4431bf8 <col:19> 'void *(void)' Function 0x5571a43d2e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x5571a4431ce0 <line:775:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x5571a4431c88 <col:3> '_Bool' lvalue Var 0x5571a442d088 'z$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x5571a4431cc8 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x5571a4431ca8 <col:21> '_Bool' lvalue Var 0x5571a442d8a0 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x5571a4431d58 <line:776:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x5571a4431d00 <col:3> 'int' lvalue Var 0x5571a442d108 'z$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x5571a4431d40 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5571a4431d20 <col:15> 'int' lvalue Var 0x5571a442cff0 'z' 'int'
|   |-BinaryOperator 0x5571a44321a8 <line:777:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x5571a4431d78 <col:3> 'int' lvalue Var 0x5571a442cff0 'z' 'int'
|   | `-ConditionalOperator 0x5571a4432178 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x5571a4431f88 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x5571a4431ea8 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x5571a4431dd0 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x5571a4431db8 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x5571a4431d98 <col:8> '_Bool' lvalue Var 0x5571a442d6b8 'z$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x5571a4431e88 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x5571a4431e20 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x5571a4431e08 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x5571a4431de8 <col:27> '_Bool' lvalue Var 0x5571a442d2e8 'z$r_buff0_thd3' '_Bool'
|   |   | |   `-UnaryOperator 0x5571a4431e70 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x5571a4431e58 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x5571a4431e38 <col:46> '_Bool' lvalue Var 0x5571a442d7b0 'z$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x5571a4431f68 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x5571a4431f00 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x5571a4431ee8 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x5571a4431ec8 <col:65> '_Bool' lvalue Var 0x5571a442d2e8 'z$r_buff0_thd3' '_Bool'
|   |   |   `-UnaryOperator 0x5571a4431f50 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x5571a4431f38 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x5571a4431f18 <col:84> '_Bool' lvalue Var 0x5571a442d4c8 'z$r_buff1_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x5571a4432160 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5571a4431fc0 <col:101> 'int' lvalue Var 0x5571a442cff0 'z' 'int'
|   |   `-ParenExpr 0x5571a4432140 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x5571a4432110 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x5571a4432080 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x5571a4432038 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x5571a4432020 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x5571a4431fe0 <col:106> '_Bool' lvalue Var 0x5571a442d6b8 'z$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x5571a4432068 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x5571a4432050 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x5571a4432000 <col:124> '_Bool' lvalue Var 0x5571a442d2e8 'z$r_buff0_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x5571a44320e0 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5571a44320a0 <col:141> 'int' lvalue Var 0x5571a442d640 'z$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x5571a44320f8 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x5571a44320c0 <col:153> 'int' lvalue Var 0x5571a442d738 'z$w_buff1' 'int'
|   |-BinaryOperator 0x5571a44326b8 <line:778:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x5571a44321c8 <col:3> 'int' lvalue Var 0x5571a442d640 'z$w_buff0' 'int'
|   | `-ConditionalOperator 0x5571a4432688 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x5571a4432658 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x5571a4432640 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x5571a44321e8 <col:15> '_Bool' lvalue Var 0x5571a442d8a0 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x5571a4432670 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5571a4432208 <col:31> 'int' lvalue Var 0x5571a442d640 'z$w_buff0' 'int'
|   |   `-ParenExpr 0x5571a4432620 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x5571a44325f0 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x5571a4432418 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x5571a4432338 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x5571a4432260 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x5571a4432248 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x5571a4432228 <col:45> '_Bool' lvalue Var 0x5571a442d6b8 'z$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x5571a4432318 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x5571a44322b0 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x5571a4432298 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x5571a4432278 <col:64> '_Bool' lvalue Var 0x5571a442d2e8 'z$r_buff0_thd3' '_Bool'
|   |       | |   `-UnaryOperator 0x5571a4432300 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x5571a44322e8 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x5571a44322c8 <col:83> '_Bool' lvalue Var 0x5571a442d7b0 'z$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x5571a44323f8 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x5571a4432390 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x5571a4432378 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x5571a4432358 <col:102> '_Bool' lvalue Var 0x5571a442d2e8 'z$r_buff0_thd3' '_Bool'
|   |       |   `-UnaryOperator 0x5571a44323e0 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x5571a44323c8 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x5571a44323a8 <col:121> '_Bool' lvalue Var 0x5571a442d4c8 'z$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x5571a44325d8 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5571a4432438 <col:138> 'int' lvalue Var 0x5571a442d640 'z$w_buff0' 'int'
|   |       `-ParenExpr 0x5571a44325b8 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x5571a4432588 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x5571a44324f8 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x5571a44324b0 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x5571a4432498 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x5571a4432458 <col:151> '_Bool' lvalue Var 0x5571a442d6b8 'z$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x5571a44324e0 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x5571a44324c8 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x5571a4432478 <col:169> '_Bool' lvalue Var 0x5571a442d2e8 'z$r_buff0_thd3' '_Bool'
|   |           |-ImplicitCastExpr 0x5571a4432558 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x5571a4432518 <col:186> 'int' lvalue Var 0x5571a442d640 'z$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x5571a4432570 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x5571a4432538 <col:198> 'int' lvalue Var 0x5571a442d640 'z$w_buff0' 'int'
|   |-BinaryOperator 0x5571a4432bc8 <line:779:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x5571a44326d8 <col:3> 'int' lvalue Var 0x5571a442d738 'z$w_buff1' 'int'
|   | `-ConditionalOperator 0x5571a4432b98 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x5571a4432b68 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x5571a4432b50 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x5571a44326f8 <col:15> '_Bool' lvalue Var 0x5571a442d8a0 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x5571a4432b80 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5571a4432718 <col:31> 'int' lvalue Var 0x5571a442d738 'z$w_buff1' 'int'
|   |   `-ParenExpr 0x5571a4432b30 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x5571a4432b00 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x5571a4432928 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x5571a4432848 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x5571a4432770 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x5571a4432758 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x5571a4432738 <col:45> '_Bool' lvalue Var 0x5571a442d6b8 'z$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x5571a4432828 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x5571a44327c0 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x5571a44327a8 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x5571a4432788 <col:64> '_Bool' lvalue Var 0x5571a442d2e8 'z$r_buff0_thd3' '_Bool'
|   |       | |   `-UnaryOperator 0x5571a4432810 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x5571a44327f8 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x5571a44327d8 <col:83> '_Bool' lvalue Var 0x5571a442d7b0 'z$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x5571a4432908 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x5571a44328a0 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x5571a4432888 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x5571a4432868 <col:102> '_Bool' lvalue Var 0x5571a442d2e8 'z$r_buff0_thd3' '_Bool'
|   |       |   `-UnaryOperator 0x5571a44328f0 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x5571a44328d8 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x5571a44328b8 <col:121> '_Bool' lvalue Var 0x5571a442d4c8 'z$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x5571a4432ae8 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5571a4432948 <col:138> 'int' lvalue Var 0x5571a442d738 'z$w_buff1' 'int'
|   |       `-ParenExpr 0x5571a4432ac8 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x5571a4432a98 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x5571a4432a08 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x5571a44329c0 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x5571a44329a8 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x5571a4432968 <col:151> '_Bool' lvalue Var 0x5571a442d6b8 'z$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x5571a44329f0 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x5571a44329d8 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x5571a4432988 <col:169> '_Bool' lvalue Var 0x5571a442d2e8 'z$r_buff0_thd3' '_Bool'
|   |           |-ImplicitCastExpr 0x5571a4432a68 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x5571a4432a28 <col:186> 'int' lvalue Var 0x5571a442d738 'z$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x5571a4432a80 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x5571a4432a48 <col:198> 'int' lvalue Var 0x5571a442d738 'z$w_buff1' 'int'
|   |-BinaryOperator 0x5571a4433190 <line:780:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x5571a4432be8 <col:3> '_Bool' lvalue Var 0x5571a442d6b8 'z$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x5571a4433178 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5571a4433148 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x5571a4433100 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5571a44330e8 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5571a4432c08 <col:20> '_Bool' lvalue Var 0x5571a442d8a0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5571a4433130 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5571a4433118 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5571a4432c28 <col:36> '_Bool' lvalue Var 0x5571a442d6b8 'z$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x5571a44330c8 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x5571a4433098 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x5571a4432e38 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5571a4432d58 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5571a4432c80 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5571a4432c68 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5571a4432c48 <col:55> '_Bool' lvalue Var 0x5571a442d6b8 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5571a4432d38 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5571a4432cd0 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5571a4432cb8 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5571a4432c98 <col:74> '_Bool' lvalue Var 0x5571a442d2e8 'z$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x5571a4432d20 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5571a4432d08 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5571a4432ce8 <col:93> '_Bool' lvalue Var 0x5571a442d7b0 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5571a4432e18 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5571a4432db0 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5571a4432d98 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5571a4432d78 <col:112> '_Bool' lvalue Var 0x5571a442d2e8 'z$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x5571a4432e00 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5571a4432de8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5571a4432dc8 <col:131> '_Bool' lvalue Var 0x5571a442d4c8 'z$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x5571a4433080 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5571a4433068 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5571a4432e58 <col:148> '_Bool' lvalue Var 0x5571a442d6b8 'z$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x5571a4433048 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x5571a4433018 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x5571a4432f18 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5571a4432ed0 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5571a4432eb8 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5571a4432e78 <col:166> '_Bool' lvalue Var 0x5571a442d6b8 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5571a4432f00 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5571a4432ee8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5571a4432e98 <col:184> '_Bool' lvalue Var 0x5571a442d2e8 'z$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x5571a4432fd0 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5571a4432f68 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5571a4432f38 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5571a4433000 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x5571a4432fe8 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x5571a4432f90 <col:212> '_Bool' lvalue Var 0x5571a442d6b8 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5571a4433758 <line:781:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x5571a44331b0 <col:3> '_Bool' lvalue Var 0x5571a442d7b0 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5571a4433740 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5571a4433710 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x5571a44336c8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5571a44336b0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5571a44331d0 <col:20> '_Bool' lvalue Var 0x5571a442d8a0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5571a44336f8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5571a44336e0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5571a44331f0 <col:36> '_Bool' lvalue Var 0x5571a442d7b0 'z$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x5571a4433690 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x5571a4433660 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x5571a4433400 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5571a4433320 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5571a4433248 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5571a4433230 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5571a4433210 <col:55> '_Bool' lvalue Var 0x5571a442d6b8 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5571a4433300 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5571a4433298 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5571a4433280 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5571a4433260 <col:74> '_Bool' lvalue Var 0x5571a442d2e8 'z$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x5571a44332e8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5571a44332d0 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5571a44332b0 <col:93> '_Bool' lvalue Var 0x5571a442d7b0 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5571a44333e0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5571a4433378 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5571a4433360 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5571a4433340 <col:112> '_Bool' lvalue Var 0x5571a442d2e8 'z$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x5571a44333c8 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5571a44333b0 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5571a4433390 <col:131> '_Bool' lvalue Var 0x5571a442d4c8 'z$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x5571a4433648 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5571a4433630 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5571a4433420 <col:148> '_Bool' lvalue Var 0x5571a442d7b0 'z$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x5571a4433610 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x5571a44335e0 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x5571a44334e0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5571a4433498 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5571a4433480 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5571a4433440 <col:166> '_Bool' lvalue Var 0x5571a442d6b8 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5571a44334c8 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5571a44334b0 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5571a4433460 <col:184> '_Bool' lvalue Var 0x5571a442d2e8 'z$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x5571a44335b0 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5571a4433530 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5571a4433500 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5571a44335c8 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x5571a4433588 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x5571a4433558 <col:219> 'int' 0
|   |-BinaryOperator 0x5571a4433d00 <line:782:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x5571a4433778 <col:3> '_Bool' lvalue Var 0x5571a442d2e8 'z$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x5571a4433ce8 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5571a4433cb8 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x5571a4433c70 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5571a4433c58 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5571a4433798 <col:20> '_Bool' lvalue Var 0x5571a442d8a0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5571a4433ca0 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5571a4433c88 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5571a44337b8 <col:36> '_Bool' lvalue Var 0x5571a442d2e8 'z$r_buff0_thd3' '_Bool'
|   |     `-ParenExpr 0x5571a4433c38 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x5571a4433c08 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x5571a44339c8 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5571a44338e8 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5571a4433810 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5571a44337f8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5571a44337d8 <col:55> '_Bool' lvalue Var 0x5571a442d6b8 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5571a44338c8 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5571a4433860 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5571a4433848 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5571a4433828 <col:74> '_Bool' lvalue Var 0x5571a442d2e8 'z$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x5571a44338b0 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5571a4433898 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5571a4433878 <col:93> '_Bool' lvalue Var 0x5571a442d7b0 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5571a44339a8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5571a4433940 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5571a4433928 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5571a4433908 <col:112> '_Bool' lvalue Var 0x5571a442d2e8 'z$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x5571a4433990 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5571a4433978 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5571a4433958 <col:131> '_Bool' lvalue Var 0x5571a442d4c8 'z$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x5571a4433bf0 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5571a4433bd8 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5571a44339e8 <col:148> '_Bool' lvalue Var 0x5571a442d2e8 'z$r_buff0_thd3' '_Bool'
|   |         `-ParenExpr 0x5571a4433bb8 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x5571a4433b88 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x5571a4433aa8 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5571a4433a60 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5571a4433a48 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5571a4433a08 <col:166> '_Bool' lvalue Var 0x5571a442d6b8 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5571a4433a90 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5571a4433a78 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5571a4433a28 <col:184> '_Bool' lvalue Var 0x5571a442d2e8 'z$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x5571a4433b40 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5571a4433af8 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5571a4433ac8 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5571a4433b70 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x5571a4433b58 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x5571a4433b20 <col:212> '_Bool' lvalue Var 0x5571a442d2e8 'z$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x5571a44342d8 <line:783:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x5571a4433d20 <col:3> '_Bool' lvalue Var 0x5571a442d4c8 'z$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x5571a44342c0 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5571a4434290 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x5571a4434248 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5571a4434230 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5571a4433d40 <col:20> '_Bool' lvalue Var 0x5571a442d8a0 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x5571a4434278 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x5571a4434260 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x5571a4433d60 <col:36> '_Bool' lvalue Var 0x5571a442d4c8 'z$r_buff1_thd3' '_Bool'
|   |     `-ParenExpr 0x5571a4434210 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x5571a44341e0 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x5571a4433f70 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x5571a4433e90 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x5571a4433db8 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x5571a4433da0 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x5571a4433d80 <col:55> '_Bool' lvalue Var 0x5571a442d6b8 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x5571a4433e70 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x5571a4433e08 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x5571a4433df0 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x5571a4433dd0 <col:74> '_Bool' lvalue Var 0x5571a442d2e8 'z$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x5571a4433e58 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x5571a4433e40 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x5571a4433e20 <col:93> '_Bool' lvalue Var 0x5571a442d7b0 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x5571a4433f50 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x5571a4433ee8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x5571a4433ed0 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x5571a4433eb0 <col:112> '_Bool' lvalue Var 0x5571a442d2e8 'z$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x5571a4433f38 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x5571a4433f20 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x5571a4433f00 <col:131> '_Bool' lvalue Var 0x5571a442d4c8 'z$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x5571a44341c8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x5571a44341b0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x5571a4433f90 <col:148> '_Bool' lvalue Var 0x5571a442d4c8 'z$r_buff1_thd3' '_Bool'
|   |         `-ParenExpr 0x5571a4434190 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x5571a4434160 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x5571a4434060 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x5571a4434018 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x5571a4434000 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x5571a4433fb0 <col:166> '_Bool' lvalue Var 0x5571a442d6b8 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x5571a4434048 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x5571a4434030 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x5571a4433fe0 <col:184> '_Bool' lvalue Var 0x5571a442d2e8 'z$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x5571a4434130 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x5571a44340b0 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x5571a4434080 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x5571a4434148 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x5571a4434108 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x5571a44340d8 <col:219> 'int' 0
|   |-BinaryOperator 0x5571a4434350 <line:784:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x5571a44342f8 <col:3> 'int' lvalue Var 0x5571a442c8f0 '__unbuffered_p2_EAX' 'int'
|   | `-ImplicitCastExpr 0x5571a4434338 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5571a4434318 <col:25> 'int' lvalue Var 0x5571a442cff0 'z' 'int'
|   |-BinaryOperator 0x5571a4434480 <line:785:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x5571a4434370 <col:3> 'int' lvalue Var 0x5571a442cff0 'z' 'int'
|   | `-ConditionalOperator 0x5571a4434450 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x5571a4434408 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x5571a44343f0 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x5571a4434390 <col:7> '_Bool' lvalue Var 0x5571a442d088 'z$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x5571a4434420 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5571a44343b0 <col:25> 'int' lvalue Var 0x5571a442d108 'z$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x5571a4434438 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x5571a44343d0 <col:37> 'int' lvalue Var 0x5571a442cff0 'z' 'int'
|   |-BinaryOperator 0x5571a4434518 <line:786:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x5571a44344a0 <col:3> '_Bool' lvalue Var 0x5571a442d088 'z$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x5571a44344f0 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x5571a44344c0 <col:28> 'int' 0
|   |-CallExpr 0x5571a4434570 <line:787:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5571a4434558 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5571a4434538 <col:3> 'void ()' Function 0x5571a43d3410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5571a44345c8 <line:788:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5571a44345b0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5571a4434590 <col:3> 'void ()' Function 0x5571a43d3350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5571a4434640 <line:789:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x5571a44345e8 <col:3> 'int' lvalue Var 0x5571a442ca10 '__unbuffered_p2_EBX' 'int'
|   | `-ImplicitCastExpr 0x5571a4434628 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5571a4434608 <col:25> 'int' lvalue Var 0x5571a442cb30 'a' 'int'
|   |-CallExpr 0x5571a4434698 <line:790:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5571a4434680 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5571a4434660 <col:3> 'void ()' Function 0x5571a43d3410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5571a44346f0 <line:791:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5571a44346d8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5571a44346b8 <col:3> 'void ()' Function 0x5571a43d3350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5571a44349d8 <line:792:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x5571a4434710 <col:3> 'int' lvalue Var 0x5571a442cff0 'z' 'int'
|   | `-ConditionalOperator 0x5571a44349a8 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x5571a44347d0 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x5571a4434788 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x5571a4434770 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x5571a4434730 <col:7> '_Bool' lvalue Var 0x5571a442d6b8 'z$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x5571a44347b8 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x5571a44347a0 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x5571a4434750 <col:25> '_Bool' lvalue Var 0x5571a442d2e8 'z$r_buff0_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x5571a4434990 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5571a44347f0 <col:42> 'int' lvalue Var 0x5571a442d640 'z$w_buff0' 'int'
|   |   `-ParenExpr 0x5571a4434970 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x5571a4434940 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x5571a44348b0 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x5571a4434868 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x5571a4434850 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x5571a4434810 <col:55> '_Bool' lvalue Var 0x5571a442d7b0 'z$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x5571a4434898 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x5571a4434880 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x5571a4434830 <col:73> '_Bool' lvalue Var 0x5571a442d4c8 'z$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x5571a4434910 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x5571a44348d0 <col:90> 'int' lvalue Var 0x5571a442d738 'z$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x5571a4434928 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x5571a44348f0 <col:102> 'int' lvalue Var 0x5571a442cff0 'z' 'int'
|   |-BinaryOperator 0x5571a4434be0 <line:793:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5571a44349f8 <col:3> '_Bool' lvalue Var 0x5571a442d6b8 'z$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x5571a4434bc8 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5571a4434b98 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5571a4434ab8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5571a4434a70 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5571a4434a58 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5571a4434a18 <col:20> '_Bool' lvalue Var 0x5571a442d6b8 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5571a4434aa0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5571a4434a88 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5571a4434a38 <col:38> '_Bool' lvalue Var 0x5571a442d2e8 'z$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x5571a4434b50 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5571a4434b08 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5571a4434ad8 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5571a4434b80 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5571a4434b68 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5571a4434b30 <col:66> '_Bool' lvalue Var 0x5571a442d6b8 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x5571a4434ec8 <line:794:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5571a4434c00 <col:3> '_Bool' lvalue Var 0x5571a442d7b0 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x5571a4434eb0 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5571a4434e80 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5571a4434da0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5571a4434cc0 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5571a4434c78 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5571a4434c60 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5571a4434c20 <col:20> '_Bool' lvalue Var 0x5571a442d6b8 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5571a4434ca8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5571a4434c90 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5571a4434c40 <col:38> '_Bool' lvalue Var 0x5571a442d2e8 'z$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x5571a4434d80 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5571a4434d38 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5571a4434d20 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5571a4434ce0 <col:56> '_Bool' lvalue Var 0x5571a442d7b0 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5571a4434d68 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5571a4434d50 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5571a4434d00 <col:74> '_Bool' lvalue Var 0x5571a442d4c8 'z$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x5571a4434e38 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5571a4434df0 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5571a4434dc0 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5571a4434e68 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5571a4434e50 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5571a4434e18 <col:102> '_Bool' lvalue Var 0x5571a442d7b0 'z$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x5571a44350f8 <line:795:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x5571a4434ee8 <col:3> '_Bool' lvalue Var 0x5571a442d2e8 'z$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x5571a44350e0 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5571a44350b0 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x5571a4434fa8 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x5571a4434f60 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x5571a4434f48 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x5571a4434f08 <col:20> '_Bool' lvalue Var 0x5571a442d6b8 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x5571a4434f90 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x5571a4434f78 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x5571a4434f28 <col:38> '_Bool' lvalue Var 0x5571a442d2e8 'z$r_buff0_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x5571a4435068 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5571a4435020 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5571a4434ff0 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x5571a4435098 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5571a4435080 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5571a4435048 <col:66> '_Bool' lvalue Var 0x5571a442d2e8 'z$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x5571a44353e0 <line:796:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x5571a4435118 <col:3> '_Bool' lvalue Var 0x5571a442d4c8 'z$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x5571a44353c8 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x5571a4435398 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x5571a44352b8 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x5571a44351d8 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x5571a4435190 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x5571a4435178 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x5571a4435138 <col:20> '_Bool' lvalue Var 0x5571a442d6b8 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x5571a44351c0 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x5571a44351a8 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x5571a4435158 <col:38> '_Bool' lvalue Var 0x5571a442d2e8 'z$r_buff0_thd3' '_Bool'
|   |     | `-BinaryOperator 0x5571a4435298 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x5571a4435250 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x5571a4435238 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x5571a44351f8 <col:56> '_Bool' lvalue Var 0x5571a442d7b0 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x5571a4435280 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x5571a4435268 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x5571a4435218 <col:74> '_Bool' lvalue Var 0x5571a442d4c8 'z$r_buff1_thd3' '_Bool'
|   |     |-ImplicitCastExpr 0x5571a4435350 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x5571a4435308 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x5571a44352d8 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x5571a4435380 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x5571a4435368 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x5571a4435330 <col:102> '_Bool' lvalue Var 0x5571a442d4c8 'z$r_buff1_thd3' '_Bool'
|   |-CallExpr 0x5571a4435438 <line:797:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5571a4435420 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5571a4435400 <col:3> 'void ()' Function 0x5571a43d3410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x5571a4435490 <line:798:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x5571a4435478 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5571a4435458 <col:3> 'void ()' Function 0x5571a43d3350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x5571a4435548 <line:799:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x5571a44354b0 <col:3> 'int' lvalue Var 0x5571a442c590 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x5571a4435528 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x5571a4435510 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x5571a44354d0 <col:22> 'int' lvalue Var 0x5571a442c590 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x5571a44354f0 <col:41> 'int' 1
|   |-CallExpr 0x5571a44355a0 <line:800:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x5571a4435588 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x5571a4435568 <col:3> 'void ()' Function 0x5571a43d3410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x5571a4435618 <line:801:3, col:36>
|     `-CallExpr 0x5571a44355f8 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x5571a44355e0 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x5571a44355c0 <col:10> 'void *(void)' Function 0x5571a43d2e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x5571a44357a8 prev 0x5571a442c2d8 <line:803:1, line:805:1> line:803:6 fence 'void ()'
| `-CompoundStmt 0x5571a4435848 <line:804:1, line:805:1>
|-FunctionDecl 0x5571a4435878 prev 0x5571a442c398 <line:806:1, line:808:1> line:806:6 isync 'void ()'
| `-CompoundStmt 0x5571a4435918 <line:807:1, line:808:1>
|-FunctionDecl 0x5571a4435948 prev 0x5571a442c458 <line:809:1, line:811:1> line:809:6 lwfence 'void ()'
| `-CompoundStmt 0x5571a44359e8 <line:810:1, line:811:1>
`-FunctionDecl 0x5571a4435a58 <line:812:1, line:836:1> line:812:5 main 'int ()'
  `-CompoundStmt 0x5571a44377d0 <line:813:1, line:836:1>
    |-DeclStmt 0x5571a4435b70 <line:814:3, col:17>
    | `-VarDecl 0x5571a4435b08 <col:3, col:13> col:13 used t292 'pthread_t':'unsigned long'
    |-CallExpr 0x5571a4435d78 <line:815:3, col:53> 'int'
    | |-ImplicitCastExpr 0x5571a4435d60 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5571a4435b88 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x5571a44138f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x5571a4435bc8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x5571a4435ba8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x5571a4435b08 't292' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x5571a4435db8 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x5571a4435c40 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x5571a4435c18 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x5571a4435be0 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x5571a4435dd0 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5571a4435c60 <col:38> 'void *(void *)' Function 0x5571a442d9b8 'P0' 'void *(void *)'
    | `-ParenExpr 0x5571a4435ce0 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x5571a4435cb8 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x5571a4435c80 <col:51> 'int' 0
    |-DeclStmt 0x5571a4435e60 <line:816:3, col:17>
    | `-VarDecl 0x5571a4435df8 <col:3, col:13> col:13 used t293 'pthread_t':'unsigned long'
    |-CallExpr 0x5571a4436018 <line:817:3, col:53> 'int'
    | |-ImplicitCastExpr 0x5571a4436000 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5571a4435e78 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x5571a44138f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x5571a4435eb8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x5571a4435e98 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x5571a4435df8 't293' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x5571a4436058 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x5571a4435f30 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x5571a4435f08 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x5571a4435ed0 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x5571a4436070 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5571a4435f50 <col:38> 'void *(void *)' Function 0x5571a442e0a0 'P1' 'void *(void *)'
    | `-ParenExpr 0x5571a4435fd0 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x5571a4435fa8 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x5571a4435f70 <col:51> 'int' 0
    |-DeclStmt 0x5571a4436100 <line:818:3, col:17>
    | `-VarDecl 0x5571a4436098 <col:3, col:13> col:13 used t294 'pthread_t':'unsigned long'
    |-CallExpr 0x5571a44362a8 <line:819:3, col:53> 'int'
    | |-ImplicitCastExpr 0x5571a4436290 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5571a4436118 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x5571a44138f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x5571a4436158 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x5571a4436138 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x5571a4436098 't294' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x5571a44362e8 <col:25, col:35> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x5571a44361d0 <col:25, col:35> 'void *'
    | |   `-CStyleCastExpr 0x5571a44361a8 <col:26, col:34> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x5571a4436170 <col:34> 'int' 0
    | |-ImplicitCastExpr 0x5571a4436300 <col:38> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5571a44361f0 <col:38> 'void *(void *)' Function 0x5571a4431390 'P2' 'void *(void *)'
    | `-ParenExpr 0x5571a4436270 <col:42, col:52> 'void *'
    |   `-CStyleCastExpr 0x5571a4436248 <col:43, col:51> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x5571a4436210 <col:51> 'int' 0
    |-CallExpr 0x5571a4436350 <line:820:3, col:27> 'void'
    | `-ImplicitCastExpr 0x5571a4436338 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5571a4436318 <col:3> 'void ()' Function 0x5571a43d3350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x5571a4436420 <line:821:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x5571a4436370 <col:3> '_Bool' lvalue Var 0x5571a442cbc8 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x5571a4436408 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x5571a44363e8 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x5571a44363d0 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x5571a4436390 <col:21> 'int' lvalue Var 0x5571a442c590 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x5571a44363b0 <col:41> 'int' 3
    |-CallExpr 0x5571a4436478 <line:822:3, col:25> 'void'
    | `-ImplicitCastExpr 0x5571a4436460 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5571a4436440 <col:3> 'void ()' Function 0x5571a43d3410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x5571a44364f0 <line:823:3, col:36> 'void'
    | |-ImplicitCastExpr 0x5571a44364d8 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5571a4436498 <col:3> 'void (int)' Function 0x5571a43d2ca0 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x5571a4436530 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x5571a4436518 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x5571a44364b8 <col:21> '_Bool' lvalue Var 0x5571a442cbc8 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x5571a4436580 <line:824:3, col:27> 'void'
    | `-ImplicitCastExpr 0x5571a4436568 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5571a4436548 <col:3> 'void ()' Function 0x5571a43d3350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x5571a4436868 <line:825:3, col:103> 'int' '='
    | |-DeclRefExpr 0x5571a44365a0 <col:3> 'int' lvalue Var 0x5571a442cff0 'z' 'int'
    | `-ConditionalOperator 0x5571a4436838 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x5571a4436660 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x5571a4436618 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x5571a4436600 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x5571a44365c0 <col:7> '_Bool' lvalue Var 0x5571a442d6b8 'z$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x5571a4436648 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x5571a4436630 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x5571a44365e0 <col:25> '_Bool' lvalue Var 0x5571a442d180 'z$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x5571a4436820 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x5571a4436680 <col:42> 'int' lvalue Var 0x5571a442d640 'z$w_buff0' 'int'
    |   `-ParenExpr 0x5571a4436800 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x5571a44367d0 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x5571a4436740 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x5571a44366f8 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x5571a44366e0 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x5571a44366a0 <col:55> '_Bool' lvalue Var 0x5571a442d7b0 'z$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x5571a4436728 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x5571a4436710 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x5571a44366c0 <col:73> '_Bool' lvalue Var 0x5571a442d360 'z$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x5571a44367a0 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x5571a4436760 <col:90> 'int' lvalue Var 0x5571a442d738 'z$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x5571a44367b8 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x5571a4436780 <col:102> 'int' lvalue Var 0x5571a442cff0 'z' 'int'
    |-BinaryOperator 0x5571a4436a70 <line:826:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x5571a4436888 <col:3> '_Bool' lvalue Var 0x5571a442d6b8 'z$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x5571a4436a58 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5571a4436a28 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x5571a4436948 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x5571a4436900 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x5571a44368e8 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x5571a44368a8 <col:20> '_Bool' lvalue Var 0x5571a442d6b8 'z$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x5571a4436930 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x5571a4436918 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x5571a44368c8 <col:38> '_Bool' lvalue Var 0x5571a442d180 'z$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x5571a44369e0 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x5571a4436998 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x5571a4436968 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x5571a4436a10 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x5571a44369f8 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x5571a44369c0 <col:66> '_Bool' lvalue Var 0x5571a442d6b8 'z$w_buff0_used' '_Bool'
    |-BinaryOperator 0x5571a4436d58 <line:827:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x5571a4436a90 <col:3> '_Bool' lvalue Var 0x5571a442d7b0 'z$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x5571a4436d40 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5571a4436d10 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x5571a4436c30 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x5571a4436b50 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x5571a4436b08 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x5571a4436af0 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x5571a4436ab0 <col:20> '_Bool' lvalue Var 0x5571a442d6b8 'z$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x5571a4436b38 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x5571a4436b20 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x5571a4436ad0 <col:38> '_Bool' lvalue Var 0x5571a442d180 'z$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x5571a4436c10 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x5571a4436bc8 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x5571a4436bb0 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x5571a4436b70 <col:56> '_Bool' lvalue Var 0x5571a442d7b0 'z$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x5571a4436bf8 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x5571a4436be0 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x5571a4436b90 <col:74> '_Bool' lvalue Var 0x5571a442d360 'z$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x5571a4436cc8 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x5571a4436c80 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x5571a4436c50 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x5571a4436cf8 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x5571a4436ce0 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x5571a4436ca8 <col:102> '_Bool' lvalue Var 0x5571a442d7b0 'z$w_buff1_used' '_Bool'
    |-BinaryOperator 0x5571a4436f60 <line:828:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x5571a4436d78 <col:3> '_Bool' lvalue Var 0x5571a442d180 'z$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x5571a4436f48 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5571a4436f18 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x5571a4436e38 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x5571a4436df0 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x5571a4436dd8 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x5571a4436d98 <col:20> '_Bool' lvalue Var 0x5571a442d6b8 'z$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x5571a4436e20 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x5571a4436e08 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x5571a4436db8 <col:38> '_Bool' lvalue Var 0x5571a442d180 'z$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x5571a4436ed0 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x5571a4436e88 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x5571a4436e58 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x5571a4436f00 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x5571a4436ee8 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x5571a4436eb0 <col:66> '_Bool' lvalue Var 0x5571a442d180 'z$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x5571a4437260 <line:829:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x5571a4436f80 <col:3> '_Bool' lvalue Var 0x5571a442d360 'z$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x5571a4437248 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x5571a4437218 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x5571a4437138 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x5571a4437058 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x5571a4437010 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x5571a4436fe0 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x5571a4436fa0 <col:20> '_Bool' lvalue Var 0x5571a442d6b8 'z$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x5571a4437040 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x5571a4437028 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x5571a4436fc0 <col:38> '_Bool' lvalue Var 0x5571a442d180 'z$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x5571a4437118 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x5571a44370d0 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x5571a44370b8 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x5571a4437078 <col:56> '_Bool' lvalue Var 0x5571a442d7b0 'z$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x5571a4437100 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x5571a44370e8 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x5571a4437098 <col:74> '_Bool' lvalue Var 0x5571a442d360 'z$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x5571a44371d0 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x5571a4437188 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x5571a4437158 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x5571a4437200 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x5571a44371e8 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x5571a44371b0 <col:102> '_Bool' lvalue Var 0x5571a442d360 'z$r_buff1_thd0' '_Bool'
    |-CallExpr 0x5571a44372b8 <line:830:3, col:25> 'void'
    | `-ImplicitCastExpr 0x5571a44372a0 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5571a4437280 <col:3> 'void ()' Function 0x5571a43d3410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x5571a4437310 <line:831:3, col:27> 'void'
    | `-ImplicitCastExpr 0x5571a44372f8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5571a44372d8 <col:3> 'void ()' Function 0x5571a43d3350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x5571a4437678 <line:832:3, col:141> '_Bool' '='
    | |-DeclRefExpr 0x5571a4437330 <col:3> '_Bool' lvalue Var 0x5571a442cc40 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x5571a4437660 <col:21, col:141> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x5571a4437648 <col:21, col:141> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x5571a4437628 <col:22, col:141> 'int'
    |       `-BinaryOperator 0x5571a4437608 <col:23, col:140> 'int' '&&'
    |         |-BinaryOperator 0x5571a4437570 <col:23, col:112> 'int' '&&'
    |         | |-BinaryOperator 0x5571a44374d8 <col:23, col:84> 'int' '&&'
    |         | | |-BinaryOperator 0x5571a4437440 <col:23, col:56> 'int' '&&'
    |         | | | |-BinaryOperator 0x5571a44373a8 <col:23, col:28> 'int' '=='
    |         | | | | |-ImplicitCastExpr 0x5571a4437390 <col:23> 'int' <LValueToRValue>
    |         | | | | | `-DeclRefExpr 0x5571a4437350 <col:23> 'int' lvalue Var 0x5571a442cd40 'x' 'int'
    |         | | | | `-IntegerLiteral 0x5571a4437370 <col:28> 'int' 2
    |         | | | `-BinaryOperator 0x5571a4437420 <col:33, col:56> 'int' '=='
    |         | | |   |-ImplicitCastExpr 0x5571a4437408 <col:33> 'int' <LValueToRValue>
    |         | | |   | `-DeclRefExpr 0x5571a44373c8 <col:33> 'int' lvalue Var 0x5571a442c6b0 '__unbuffered_p1_EAX' 'int'
    |         | | |   `-IntegerLiteral 0x5571a44373e8 <col:56> 'int' 1
    |         | | `-BinaryOperator 0x5571a44374b8 <col:61, col:84> 'int' '=='
    |         | |   |-ImplicitCastExpr 0x5571a44374a0 <col:61> 'int' <LValueToRValue>
    |         | |   | `-DeclRefExpr 0x5571a4437460 <col:61> 'int' lvalue Var 0x5571a442c7d0 '__unbuffered_p1_EBX' 'int'
    |         | |   `-IntegerLiteral 0x5571a4437480 <col:84> 'int' 0
    |         | `-BinaryOperator 0x5571a4437550 <col:89, col:112> 'int' '=='
    |         |   |-ImplicitCastExpr 0x5571a4437538 <col:89> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x5571a44374f8 <col:89> 'int' lvalue Var 0x5571a442c8f0 '__unbuffered_p2_EAX' 'int'
    |         |   `-IntegerLiteral 0x5571a4437518 <col:112> 'int' 1
    |         `-BinaryOperator 0x5571a44375e8 <col:117, col:140> 'int' '=='
    |           |-ImplicitCastExpr 0x5571a44375d0 <col:117> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x5571a4437590 <col:117> 'int' lvalue Var 0x5571a442ca10 '__unbuffered_p2_EBX' 'int'
    |           `-IntegerLiteral 0x5571a44375b0 <col:140> 'int' 0
    |-CallExpr 0x5571a44376d0 <line:833:3, col:25> 'void'
    | `-ImplicitCastExpr 0x5571a44376b8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x5571a4437698 <col:3> 'void ()' Function 0x5571a43d3410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x5571a4437748 <line:834:3, col:36> 'void'
    | |-ImplicitCastExpr 0x5571a4437730 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x5571a44376f0 <col:3> 'void (int)' Function 0x5571a43d30d8 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x5571a4437788 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x5571a4437770 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x5571a4437710 <col:21> '_Bool' lvalue Var 0x5571a442cc40 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x5571a44377c0 <line:835:3, col:10>
      `-IntegerLiteral 0x5571a44377a0 <col:10> 'int' 0
