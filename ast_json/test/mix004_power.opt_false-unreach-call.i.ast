TranslationUnitDecl 0x56147b683f88 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x56147b684848 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x56147b684520 '__int128'
|-TypedefDecl 0x56147b6848b8 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x56147b684540 'unsigned __int128'
|-TypedefDecl 0x56147b684bc0 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x56147b684990 'struct __NSConstantString_tag'
|   `-Record 0x56147b684910 '__NSConstantString_tag'
|-TypedefDecl 0x56147b684c68 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x56147b684c20 'char *'
|   `-BuiltinType 0x56147b684020 'char'
|-TypedefDecl 0x56147b6c3b60 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'struct __va_list_tag [1]'
| `-ConstantArrayType 0x56147b684f00 'struct __va_list_tag [1]' 1 
|   `-RecordType 0x56147b684d40 'struct __va_list_tag'
|     `-Record 0x56147b684cc0 '__va_list_tag'
|-FunctionDecl 0x56147b6c3ca0 <pthread-wmm/mix004_power.opt_false-unreach-call.i:1:1, col:34> col:13 used __VERIFIER_assume 'void (int)' extern
| `-ParmVarDecl 0x56147b6c3bd0 <col:31> col:34 'int'
|-FunctionDecl 0x56147b6c3e68 <line:2:1, col:45> col:15 used __VERIFIER_nondet_pointer 'void *(void)' extern
|-FunctionDecl 0x56147b6c3f90 <line:3:1, col:61> col:13 used __VERIFIER_error 'void () __attribute__((noreturn))' extern
|-FunctionDecl 0x56147b6c40d8 <line:4:1, col:99> col:6 used __VERIFIER_assert 'void (int)'
| |-ParmVarDecl 0x56147b6c4048 <col:24, col:28> col:28 used expression 'int'
| `-CompoundStmt 0x56147b6c4308 <col:40, col:99>
|   |-IfStmt 0x56147b6c42d8 <col:42, col:88>
|   | |-UnaryOperator 0x56147b6c41b8 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x56147b6c41a0 <col:47> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x56147b6c4180 <col:47> 'int' lvalue ParmVar 0x56147b6c4048 'expression' 'int'
|   | `-CompoundStmt 0x56147b6c42c0 <col:59, col:88>
|   |   `-LabelStmt 0x56147b6c42a8 <col:61, col:85> 'ERROR'
|   |     `-CallExpr 0x56147b6c4238 <col:68, col:85> 'void'
|   |       `-ImplicitCastExpr 0x56147b6c4220 <col:68> 'void (*)() __attribute__((noreturn))' <FunctionToPointerDecay>
|   |         `-DeclRefExpr 0x56147b6c41d0 <col:68> 'void () __attribute__((noreturn))' Function 0x56147b6c3f90 '__VERIFIER_error' 'void () __attribute__((noreturn))'
|   |-NullStmt 0x56147b6c42f0 <col:89>
|   `-ReturnStmt 0x56147b6c42f8 <col:91>
|-FunctionDecl 0x56147b6c4350 <line:5:1, col:37> col:13 used __VERIFIER_atomic_begin 'void ()' extern
|-FunctionDecl 0x56147b6c4410 <line:6:1, col:35> col:13 used __VERIFIER_atomic_end 'void ()' extern
|-FunctionDecl 0x56147b6c4790 <line:8:1, line:10:76> line:8:13 __assert_fail 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x56147b6c44c8 <col:28, col:40> col:40 __assertion 'const char *'
| |-ParmVarDecl 0x56147b6c4548 <col:53, col:65> col:65 __file 'const char *'
| |-ParmVarDecl 0x56147b6c45c8 <line:9:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x56147b6c4648 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x56147b6c4850 <line:10:22>
|-FunctionDecl 0x56147b6ea8a0 <line:11:1, line:13:76> line:11:13 __assert_perror_fail 'void (int, const char *, unsigned int, const char *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x56147b6c48c0 <col:35, col:39> col:39 __errnum 'int'
| |-ParmVarDecl 0x56147b6c4940 <col:49, col:61> col:61 __file 'const char *'
| |-ParmVarDecl 0x56147b6c49c0 <line:12:7, col:20> col:20 __line 'unsigned int'
| |-ParmVarDecl 0x56147b6c4a40 <col:28, col:40> col:40 __function 'const char *'
| `-NoThrowAttr 0x56147b6ea960 <line:13:22>
|-FunctionDecl 0x56147b6eac10 <line:14:1, line:15:76> line:14:13 __assert 'void (const char *, const char *, int) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x56147b6ea9d0 <col:23, col:35> col:35 __assertion 'const char *'
| |-ParmVarDecl 0x56147b6eaa50 <col:48, col:60> col:60 __file 'const char *'
| |-ParmVarDecl 0x56147b6eaad0 <col:68, col:72> col:72 __line 'int'
| `-NoThrowAttr 0x56147b6eacc8 <line:15:22>
|-TypedefDecl 0x56147b6ead38 <line:17:1, col:23> col:23 __u_char 'unsigned char'
| `-BuiltinType 0x56147b6840e0 'unsigned char'
|-TypedefDecl 0x56147b6eada8 <line:18:1, col:28> col:28 __u_short 'unsigned short'
| `-BuiltinType 0x56147b684100 'unsigned short'
|-TypedefDecl 0x56147b6eae18 <line:19:1, col:22> col:22 __u_int 'unsigned int'
| `-BuiltinType 0x56147b684120 'unsigned int'
|-TypedefDecl 0x56147b6eae88 <line:20:1, col:27> col:27 __u_long 'unsigned long'
| `-BuiltinType 0x56147b684140 'unsigned long'
|-TypedefDecl 0x56147b6eaef8 <line:21:1, col:21> col:21 __int8_t 'signed char'
| `-BuiltinType 0x56147b684040 'signed char'
|-TypedefDecl 0x56147b6eaf68 <line:22:1, col:23> col:23 __uint8_t 'unsigned char'
| `-BuiltinType 0x56147b6840e0 'unsigned char'
|-TypedefDecl 0x56147b6eafd8 <line:23:1, col:26> col:26 __int16_t 'short'
| `-BuiltinType 0x56147b684060 'short'
|-TypedefDecl 0x56147b6eb048 <line:24:1, col:28> col:28 __uint16_t 'unsigned short'
| `-BuiltinType 0x56147b684100 'unsigned short'
|-TypedefDecl 0x56147b6eb0b8 <line:25:1, col:20> col:20 __int32_t 'int'
| `-BuiltinType 0x56147b684080 'int'
|-TypedefDecl 0x56147b6eb128 <line:26:1, col:22> col:22 __uint32_t 'unsigned int'
| `-BuiltinType 0x56147b684120 'unsigned int'
|-TypedefDecl 0x56147b6eb198 <line:27:1, col:25> col:25 __int64_t 'long'
| `-BuiltinType 0x56147b6840a0 'long'
|-TypedefDecl 0x56147b6eb208 <line:28:1, col:27> col:27 referenced __uint64_t 'unsigned long'
| `-BuiltinType 0x56147b684140 'unsigned long'
|-TypedefDecl 0x56147b6eb278 <line:29:1, col:18> col:18 referenced __quad_t 'long'
| `-BuiltinType 0x56147b6840a0 'long'
|-TypedefDecl 0x56147b6eb2e8 <line:30:1, col:27> col:27 __u_quad_t 'unsigned long'
| `-BuiltinType 0x56147b684140 'unsigned long'
|-TypedefDecl 0x56147b6eb358 <line:31:1, col:27> col:27 __dev_t 'unsigned long'
| `-BuiltinType 0x56147b684140 'unsigned long'
|-TypedefDecl 0x56147b6eb3c8 <line:32:1, col:22> col:22 __uid_t 'unsigned int'
| `-BuiltinType 0x56147b684120 'unsigned int'
|-TypedefDecl 0x56147b6eb438 <line:33:1, col:22> col:22 __gid_t 'unsigned int'
| `-BuiltinType 0x56147b684120 'unsigned int'
|-TypedefDecl 0x56147b6eb4a8 <line:34:1, col:27> col:27 __ino_t 'unsigned long'
| `-BuiltinType 0x56147b684140 'unsigned long'
|-TypedefDecl 0x56147b6eb518 <line:35:1, col:27> col:27 __ino64_t 'unsigned long'
| `-BuiltinType 0x56147b684140 'unsigned long'
|-TypedefDecl 0x56147b6eb588 <line:36:1, col:22> col:22 __mode_t 'unsigned int'
| `-BuiltinType 0x56147b684120 'unsigned int'
|-TypedefDecl 0x56147b6eb5f8 <line:37:1, col:27> col:27 __nlink_t 'unsigned long'
| `-BuiltinType 0x56147b684140 'unsigned long'
|-TypedefDecl 0x56147b6eb668 <line:38:1, col:18> col:18 __off_t 'long'
| `-BuiltinType 0x56147b6840a0 'long'
|-TypedefDecl 0x56147b6eb6d8 <line:39:1, col:18> col:18 referenced __off64_t 'long'
| `-BuiltinType 0x56147b6840a0 'long'
|-TypedefDecl 0x56147b6eb748 <line:40:1, col:13> col:13 referenced __pid_t 'int'
| `-BuiltinType 0x56147b684080 'int'
|-RecordDecl 0x56147b6eb7a0 <line:41:9, col:32> col:9 struct definition
| `-FieldDecl 0x56147b6eb918 <col:18, col:29> col:22 __val 'int [2]'
|-TypedefDecl 0x56147b6eb9d0 <col:1, col:34> col:34 __fsid_t 'struct __fsid_t':'__fsid_t'
| `-ElaboratedType 0x56147b6eb970 'struct __fsid_t' sugar
|   `-RecordType 0x56147b6eb820 '__fsid_t'
|     `-Record 0x56147b6eb7a0 ''
|-TypedefDecl 0x56147b6eba58 <line:42:1, col:18> col:18 referenced __clock_t 'long'
| `-BuiltinType 0x56147b6840a0 'long'
|-TypedefDecl 0x56147b6ebac8 <line:43:1, col:27> col:27 __rlim_t 'unsigned long'
| `-BuiltinType 0x56147b684140 'unsigned long'
|-TypedefDecl 0x56147b6ebb38 <line:44:1, col:27> col:27 __rlim64_t 'unsigned long'
| `-BuiltinType 0x56147b684140 'unsigned long'
|-TypedefDecl 0x56147b6ebba8 <line:45:1, col:22> col:22 __id_t 'unsigned int'
| `-BuiltinType 0x56147b684120 'unsigned int'
|-TypedefDecl 0x56147b6ebc18 <line:46:1, col:18> col:18 referenced __time_t 'long'
| `-BuiltinType 0x56147b6840a0 'long'
|-TypedefDecl 0x56147b6ebc88 <line:47:1, col:22> col:22 __useconds_t 'unsigned int'
| `-BuiltinType 0x56147b684120 'unsigned int'
|-TypedefDecl 0x56147b6ebcf8 <line:48:1, col:18> col:18 __suseconds_t 'long'
| `-BuiltinType 0x56147b6840a0 'long'
|-TypedefDecl 0x56147b6ebd68 <line:49:1, col:13> col:13 __daddr_t 'int'
| `-BuiltinType 0x56147b684080 'int'
|-TypedefDecl 0x56147b6ebdd8 <line:50:1, col:13> col:13 __key_t 'int'
| `-BuiltinType 0x56147b684080 'int'
|-TypedefDecl 0x56147b6ebe48 <line:51:1, col:13> col:13 referenced __clockid_t 'int'
| `-BuiltinType 0x56147b684080 'int'
|-TypedefDecl 0x56147b6ebeb8 <line:52:1, col:16> col:16 referenced __timer_t 'void *'
| `-PointerType 0x56147b6847a0 'void *'
|   `-BuiltinType 0x56147b683fe0 'void'
|-TypedefDecl 0x56147b6ebf28 <line:53:1, col:18> col:18 __blksize_t 'long'
| `-BuiltinType 0x56147b6840a0 'long'
|-TypedefDecl 0x56147b6ebf98 <line:54:1, col:18> col:18 __blkcnt_t 'long'
| `-BuiltinType 0x56147b6840a0 'long'
|-TypedefDecl 0x56147b6ec008 <line:55:1, col:18> col:18 __blkcnt64_t 'long'
| `-BuiltinType 0x56147b6840a0 'long'
|-TypedefDecl 0x56147b6ec078 <line:56:1, col:27> col:27 __fsblkcnt_t 'unsigned long'
| `-BuiltinType 0x56147b684140 'unsigned long'
|-TypedefDecl 0x56147b6ec0e8 <line:57:1, col:27> col:27 __fsblkcnt64_t 'unsigned long'
| `-BuiltinType 0x56147b684140 'unsigned long'
|-TypedefDecl 0x56147b6ec158 <line:58:1, col:27> col:27 __fsfilcnt_t 'unsigned long'
| `-BuiltinType 0x56147b684140 'unsigned long'
|-TypedefDecl 0x56147b6ec1c8 <line:59:1, col:27> col:27 __fsfilcnt64_t 'unsigned long'
| `-BuiltinType 0x56147b684140 'unsigned long'
|-TypedefDecl 0x56147b6ec238 <line:60:1, col:18> col:18 __fsword_t 'long'
| `-BuiltinType 0x56147b6840a0 'long'
|-TypedefDecl 0x56147b6ec2a8 <line:61:1, col:18> col:18 __ssize_t 'long'
| `-BuiltinType 0x56147b6840a0 'long'
|-TypedefDecl 0x56147b6ec318 <line:62:1, col:18> col:18 referenced __syscall_slong_t 'long'
| `-BuiltinType 0x56147b6840a0 'long'
|-TypedefDecl 0x56147b6ec388 <line:63:1, col:27> col:27 __syscall_ulong_t 'unsigned long'
| `-BuiltinType 0x56147b684140 'unsigned long'
|-TypedefDecl 0x56147b6ec418 <line:64:1, col:19> col:19 __loff_t '__off64_t':'long'
| `-TypedefType 0x56147b6ec3e0 '__off64_t' sugar
|   |-Typedef 0x56147b6eb6d8 '__off64_t'
|   `-BuiltinType 0x56147b6840a0 'long'
|-TypedefDecl 0x56147b6ec510 <line:65:1, col:19> col:19 __qaddr_t '__quad_t *'
| `-PointerType 0x56147b6ec4d0 '__quad_t *'
|   `-TypedefType 0x56147b6ec470 '__quad_t' sugar
|     |-Typedef 0x56147b6eb278 '__quad_t'
|     `-BuiltinType 0x56147b6840a0 'long'
|-TypedefDecl 0x56147b6ec580 <line:66:1, col:15> col:15 __caddr_t 'char *'
| `-PointerType 0x56147b684c20 'char *'
|   `-BuiltinType 0x56147b684020 'char'
|-TypedefDecl 0x56147b6ec5f0 <line:67:1, col:18> col:18 __intptr_t 'long'
| `-BuiltinType 0x56147b6840a0 'long'
|-TypedefDecl 0x56147b6ec660 <line:68:1, col:22> col:22 __socklen_t 'unsigned int'
| `-BuiltinType 0x56147b684120 'unsigned int'
|-FunctionDecl 0x56147b6ec7a8 <line:69:1, line:73:1> line:70:1 __bswap_32 'unsigned int (unsigned int)' static inline
| |-ParmVarDecl 0x56147b6ec6d0 <col:13, col:26> col:26 used __bsx 'unsigned int'
| `-CompoundStmt 0x56147b6ecae8 <line:71:1, line:73:1>
|   `-ReturnStmt 0x56147b6ecad8 <line:72:3, col:34>
|     `-CallExpr 0x56147b6eca98 <col:10, col:34> 'unsigned int'
|       |-ImplicitCastExpr 0x56147b6eca80 <col:10> 'unsigned int (*)(unsigned int)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x56147b6eca10 <col:10> '<builtin fn type>' Function 0x56147b6ec880 '__builtin_bswap32' 'unsigned int (unsigned int)'
|       `-ImplicitCastExpr 0x56147b6ecac0 <col:29> 'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x56147b6eca30 <col:29> 'unsigned int' lvalue ParmVar 0x56147b6ec6d0 '__bsx' 'unsigned int'
|-FunctionDecl 0x56147b6ec880 <col:10> col:10 implicit used __builtin_bswap32 'unsigned int (unsigned int)' extern
| |-ParmVarDecl 0x56147b6ec920 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-NoThrowAttr 0x56147b6ec990 <col:10> Implicit
| `-ConstAttr 0x56147b6ec9e8 <col:10> Implicit
|-FunctionDecl 0x56147b6ecc40 <line:74:1, line:78:1> line:75:1 __bswap_64 '__uint64_t (__uint64_t)' static inline
| |-ParmVarDecl 0x56147b6ecb38 <col:13, col:24> col:24 used __bsx '__uint64_t':'unsigned long'
| `-CompoundStmt 0x56147b6ecf58 <line:76:1, line:78:1>
|   `-ReturnStmt 0x56147b6ecf48 <line:77:3, col:34>
|     `-CallExpr 0x56147b6ecf08 <col:10, col:34> 'unsigned long'
|       |-ImplicitCastExpr 0x56147b6ecef0 <col:10> 'unsigned long (*)(unsigned long)' <BuiltinFnToFnPtr>
|       | `-DeclRefExpr 0x56147b6ece78 <col:10> '<builtin fn type>' Function 0x56147b6ecce8 '__builtin_bswap64' 'unsigned long (unsigned long)'
|       `-ImplicitCastExpr 0x56147b6ecf30 <col:29> '__uint64_t':'unsigned long' <LValueToRValue>
|         `-DeclRefExpr 0x56147b6ece98 <col:29> '__uint64_t':'unsigned long' lvalue ParmVar 0x56147b6ecb38 '__bsx' '__uint64_t':'unsigned long'
|-FunctionDecl 0x56147b6ecce8 <col:10> col:10 implicit used __builtin_bswap64 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x56147b6ecd88 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x56147b6ecdf8 <col:10> Implicit
| `-ConstAttr 0x56147b6ece50 <col:10> Implicit
|-TypedefDecl 0x56147b6ecf88 <line:79:1, col:27> col:27 referenced size_t 'unsigned long'
| `-BuiltinType 0x56147b684140 'unsigned long'
|-TypedefDecl 0x56147b6ed018 <line:81:1, col:18> col:18 referenced time_t '__time_t':'long'
| `-TypedefType 0x56147b6ecfe0 '__time_t' sugar
|   |-Typedef 0x56147b6ebc18 '__time_t'
|   `-BuiltinType 0x56147b6840a0 'long'
|-RecordDecl 0x56147b6ed070 <line:84:1, line:88:3> line:84:8 struct timespec definition
| |-FieldDecl 0x56147b6ed128 <line:86:5, col:14> col:14 tv_sec '__time_t':'long'
| `-FieldDecl 0x56147b6ed1b8 <line:87:5, col:23> col:23 tv_nsec '__syscall_slong_t':'long'
|-TypedefDecl 0x56147b6ed248 <line:89:1, col:17> col:17 referenced pid_t '__pid_t':'int'
| `-TypedefType 0x56147b6ed210 '__pid_t' sugar
|   |-Typedef 0x56147b6eb748 '__pid_t'
|   `-BuiltinType 0x56147b684080 'int'
|-RecordDecl 0x56147b6ed2a0 <line:90:1, line:93:3> line:90:8 struct sched_param definition
| `-FieldDecl 0x56147b6ed360 <line:92:5, col:9> col:9 __sched_priority 'int'
|-RecordDecl 0x56147b6ed3b0 <line:96:1, line:99:3> line:96:8 struct __sched_param definition
| `-FieldDecl 0x56147b6ed470 <line:98:5, col:9> col:9 __sched_priority 'int'
|-TypedefDecl 0x56147b6ed4d8 <line:100:1, col:27> col:27 referenced __cpu_mask 'unsigned long'
| `-BuiltinType 0x56147b684140 'unsigned long'
|-RecordDecl 0x56147b6ed530 <line:101:9, line:104:1> line:101:9 struct definition
| `-FieldDecl 0x56147b6ed7c0 <line:103:3, col:53> col:14 __bits '__cpu_mask [64]'
|-TypedefDecl 0x56147b6ef8b0 <line:101:1, line:104:3> col:3 referenced cpu_set_t 'struct cpu_set_t':'cpu_set_t'
| `-ElaboratedType 0x56147b6ed810 'struct cpu_set_t' sugar
|   `-RecordType 0x56147b6ed5b0 'cpu_set_t'
|     `-Record 0x56147b6ed530 ''
|-FunctionDecl 0x56147b6efb88 <line:106:1, line:107:42> line:106:12 __sched_cpucount 'int (size_t, const cpu_set_t *)' extern
| |-ParmVarDecl 0x56147b6ef958 <col:30, col:37> col:37 __setsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x56147b6efa60 <col:48, col:65> col:65 __setp 'const cpu_set_t *'
| `-NoThrowAttr 0x56147b6efc38 <line:107:19>
|-FunctionDecl 0x56147b6efe10 <line:108:1, col:92> col:19 __sched_cpualloc 'cpu_set_t *(size_t)' extern
| |-ParmVarDecl 0x56147b6efca0 <col:37, col:44> col:44 __count 'size_t':'unsigned long'
| `-NoThrowAttr 0x56147b6efeb8 <col:69>
|-FunctionDecl 0x56147b6f0030 <line:109:1, col:87> col:13 __sched_cpufree 'void (cpu_set_t *)' extern
| |-ParmVarDecl 0x56147b6eff20 <col:30, col:41> col:41 __set 'cpu_set_t *'
| `-NoThrowAttr 0x56147b6f00d8 <col:64>
|-FunctionDecl 0x56147b6f0398 <line:112:1, line:113:45> line:112:12 sched_setparam 'int (__pid_t, const struct sched_param *)' extern
| |-ParmVarDecl 0x56147b6f0140 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x56147b6f0278 <col:43, col:69> col:69 __param 'const struct sched_param *'
| `-NoThrowAttr 0x56147b6f0448 <line:113:22>
|-FunctionDecl 0x56147b6f06c8 <line:114:1, col:111> col:12 sched_getparam 'int (__pid_t, struct sched_param *)' extern
| |-ParmVarDecl 0x56147b6f04b0 <col:28, col:36> col:36 __pid '__pid_t':'int'
| |-ParmVarDecl 0x56147b6f05a8 <col:43, col:63> col:63 __param 'struct sched_param *'
| `-NoThrowAttr 0x56147b6f0778 <col:88>
|-FunctionDecl 0x56147b6f0a98 <line:115:1, line:116:85> line:115:12 sched_setscheduler 'int (__pid_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x56147b6f07e0 <col:32, col:40> col:40 __pid '__pid_t':'int'
| |-ParmVarDecl 0x56147b6f08c0 <col:47, col:51> col:51 __policy 'int'
| |-ParmVarDecl 0x56147b6f0950 <line:116:11, col:37> col:37 __param 'const struct sched_param *'
| `-NoThrowAttr 0x56147b6f0b50 <col:62>
|-FunctionDecl 0x56147b6f0cc8 <line:117:1, col:86> col:12 sched_getscheduler 'int (__pid_t)' extern
| |-ParmVarDecl 0x56147b6f0bb8 <col:32, col:40> col:40 __pid '__pid_t':'int'
| `-NoThrowAttr 0x56147b6f0d70 <col:63>
|-FunctionDecl 0x56147b6f0e98 <line:118:1, col:70> col:12 sched_yield 'int (void)' extern
| `-NoThrowAttr 0x56147b6f0f38 <col:47>
|-FunctionDecl 0x56147b6f1040 <line:119:1, col:92> col:12 sched_get_priority_max 'int (int)' extern
| |-ParmVarDecl 0x56147b6f0fa8 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x56147b6f10e8 <col:69>
|-FunctionDecl 0x56147b6f11f0 <line:120:1, col:92> col:12 sched_get_priority_min 'int (int)' extern
| |-ParmVarDecl 0x56147b6f1158 <col:36, col:40> col:40 __algorithm 'int'
| `-NoThrowAttr 0x56147b6f1298 <col:69>
|-FunctionDecl 0x56147b6f1558 <line:121:1, col:111> col:12 sched_rr_get_interval 'int (__pid_t, struct timespec *)' extern
| |-ParmVarDecl 0x56147b6f1300 <col:35, col:43> col:43 __pid '__pid_t':'int'
| |-ParmVarDecl 0x56147b6f1438 <col:50, col:67> col:67 __t 'struct timespec *'
| `-NoThrowAttr 0x56147b6f1608 <col:88>
|-TypedefDecl 0x56147b6f1698 <line:125:1, col:19> col:19 referenced clock_t '__clock_t':'long'
| `-TypedefType 0x56147b6f1660 '__clock_t' sugar
|   |-Typedef 0x56147b6eba58 '__clock_t'
|   `-BuiltinType 0x56147b6840a0 'long'
|-TypedefDecl 0x56147b6f1728 <line:128:1, col:21> col:21 referenced clockid_t '__clockid_t':'int'
| `-TypedefType 0x56147b6f16f0 '__clockid_t' sugar
|   |-Typedef 0x56147b6ebe48 '__clockid_t'
|   `-BuiltinType 0x56147b684080 'int'
|-TypedefDecl 0x56147b6f17b8 <line:129:1, col:19> col:19 referenced timer_t '__timer_t':'void *'
| `-TypedefType 0x56147b6f1780 '__timer_t' sugar
|   |-Typedef 0x56147b6ebeb8 '__timer_t'
|   `-PointerType 0x56147b6847a0 'void *'
|     `-BuiltinType 0x56147b683fe0 'void'
|-RecordDecl 0x56147b6f1810 <line:131:1, line:144:1> line:131:8 struct tm definition
| |-FieldDecl 0x56147b6f18e8 <line:133:3, col:7> col:7 tm_sec 'int'
| |-FieldDecl 0x56147b6f1950 <line:134:3, col:7> col:7 tm_min 'int'
| |-FieldDecl 0x56147b6f19b8 <line:135:3, col:7> col:7 tm_hour 'int'
| |-FieldDecl 0x56147b6f1a20 <line:136:3, col:7> col:7 tm_mday 'int'
| |-FieldDecl 0x56147b6f1a88 <line:137:3, col:7> col:7 tm_mon 'int'
| |-FieldDecl 0x56147b6f1af0 <line:138:3, col:7> col:7 tm_year 'int'
| |-FieldDecl 0x56147b6f1b58 <line:139:3, col:7> col:7 tm_wday 'int'
| |-FieldDecl 0x56147b6f1bc0 <line:140:3, col:7> col:7 tm_yday 'int'
| |-FieldDecl 0x56147b6f1c28 <line:141:3, col:7> col:7 tm_isdst 'int'
| |-FieldDecl 0x56147b6f1c90 <line:142:3, col:12> col:12 tm_gmtoff 'long'
| `-FieldDecl 0x56147b6f1cf8 <line:143:3, col:15> col:15 tm_zone 'const char *'
|-RecordDecl 0x56147b6f1d48 <line:147:1, line:151:3> line:147:8 struct itimerspec definition
| |-FieldDecl 0x56147b6f1e18 <line:149:5, col:21> col:21 it_interval 'struct timespec':'struct timespec'
| `-FieldDecl 0x56147b6f1e88 <line:150:5, col:21> col:21 it_value 'struct timespec':'struct timespec'
|-RecordDecl 0x56147b6f1f30 <line:152:1, col:8> col:8 struct sigevent
|-FunctionDecl 0x56147b6f2100 <line:154:1, col:68> col:16 clock 'clock_t (void)' extern
| `-NoThrowAttr 0x56147b6f21a0 <col:45>
|-FunctionDecl 0x56147b6f2380 <line:155:1, col:77> col:15 time 'time_t (time_t *)' extern
| |-ParmVarDecl 0x56147b6f2270 <col:21, col:29> col:29 __timer 'time_t *'
| `-NoThrowAttr 0x56147b6f2428 <col:54>
|-FunctionDecl 0x56147b6f2628 <line:156:1, line:157:73> line:156:15 difftime 'double (time_t, time_t)' extern
| |-ParmVarDecl 0x56147b6f2490 <col:25, col:32> col:32 __time1 'time_t':'long'
| |-ParmVarDecl 0x56147b6f2508 <col:41, col:48> col:48 __time0 'time_t':'long'
| |-NoThrowAttr 0x56147b6f26d8 <line:157:22>
| `-ConstAttr 0x56147b6f2730 <col:63>
|-FunctionDecl 0x56147b6f3560 <line:158:1, col:79> col:15 mktime 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x56147b6f2828 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x56147b6f3608 <col:56>
|-FunctionDecl 0x56147b6f39b0 <line:159:1, line:161:77> line:159:15 strftime 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict)' extern
| |-ParmVarDecl 0x56147b6f3678 <col:25, col:42> col:42 __s 'char *restrict'
| |-ParmVarDecl 0x56147b6f36f0 <col:47, col:54> col:54 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x56147b6f3770 <line:160:4, col:27> col:27 __format 'const char *restrict'
| |-ParmVarDecl 0x56147b6f3868 <line:161:4, col:32> col:32 __tp 'const struct tm *restrict'
| `-NoThrowAttr 0x56147b6f3a70 <col:54>
|-RecordDecl 0x56147b6f3ac8 <line:163:9, line:170:1> line:163:16 struct __locale_struct definition
| |-RecordDecl 0x56147b6f3b78 parent 0x56147b683f88 <line:165:3, col:10> col:10 struct __locale_data
| |-FieldDecl 0x56147b6f3dd8 <col:3, col:37> col:25 __locales 'struct __locale_data *[13]'
| |-FieldDecl 0x56147b6f3e78 <line:166:3, col:29> col:29 __ctype_b 'const unsigned short *'
| |-FieldDecl 0x56147b6f3ee0 <line:167:3, col:14> col:14 __ctype_tolower 'const int *'
| |-FieldDecl 0x56147b6f3f48 <line:168:3, col:14> col:14 __ctype_toupper 'const int *'
| `-FieldDecl 0x56147b6f4038 <line:169:3, col:25> col:15 __names 'const char *[13]'
|-TypedefDecl 0x56147b6f4158 <line:163:1, line:170:4> col:4 referenced __locale_t 'struct __locale_struct *'
| `-PointerType 0x56147b6f4100 'struct __locale_struct *'
|   `-ElaboratedType 0x56147b6f4090 'struct __locale_struct' sugar
|     `-RecordType 0x56147b6f3b50 'struct __locale_struct'
|       `-Record 0x56147b6f3ac8 '__locale_struct'
|-TypedefDecl 0x56147b6f4208 <line:171:1, col:20> col:20 locale_t '__locale_t':'struct __locale_struct *'
| `-TypedefType 0x56147b6f41d0 '__locale_t' sugar
|   |-Typedef 0x56147b6f4158 '__locale_t'
|   `-PointerType 0x56147b6f4100 'struct __locale_struct *'
|     `-ElaboratedType 0x56147b6f4090 'struct __locale_struct' sugar
|       `-RecordType 0x56147b6f3b50 'struct __locale_struct'
|         `-Record 0x56147b6f3ac8 '__locale_struct'
|-FunctionDecl 0x56147b6f4610 <line:172:1, line:175:63> line:172:15 strftime_l 'size_t (char *restrict, size_t, const char *restrict, const struct tm *restrict, __locale_t)' extern
| |-ParmVarDecl 0x56147b6f4278 <col:27, col:44> col:44 __s 'char *restrict'
| |-ParmVarDecl 0x56147b6f42f0 <col:49, col:56> col:56 __maxsize 'size_t':'unsigned long'
| |-ParmVarDecl 0x56147b6f4370 <line:173:6, col:29> col:29 __format 'const char *restrict'
| |-ParmVarDecl 0x56147b6f4400 <line:174:6, col:34> col:34 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x56147b6f4478 <line:175:6, col:17> col:17 __loc '__locale_t':'struct __locale_struct *'
| `-NoThrowAttr 0x56147b6f46d8 <col:40>
|-FunctionDecl 0x56147b6f48c8 <line:177:1, col:89> col:19 gmtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x56147b6f47a0 <col:27, col:41> col:41 __timer 'const time_t *'
| `-NoThrowAttr 0x56147b6f4970 <col:66>
|-FunctionDecl 0x56147b6f4a80 <line:178:1, col:92> col:19 localtime 'struct tm *(const time_t *)' extern
| |-ParmVarDecl 0x56147b6f49d8 <col:30, col:44> col:44 __timer 'const time_t *'
| `-NoThrowAttr 0x56147b6f4b28 <col:69>
|-FunctionDecl 0x56147b6f4d58 <line:180:1, line:181:75> line:180:19 gmtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x56147b6f4b90 <col:29, col:54> col:54 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x56147b6f4c20 <line:181:8, col:30> col:30 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x56147b6f4e08 <col:52>
|-FunctionDecl 0x56147b6f4fb0 <line:182:1, line:183:78> line:182:19 localtime_r 'struct tm *(const time_t *restrict, struct tm *restrict)' extern
| |-ParmVarDecl 0x56147b6f4e70 <col:32, col:57> col:57 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x56147b6f4f00 <line:183:11, col:33> col:33 __tp 'struct tm *restrict'
| `-NoThrowAttr 0x56147b6f5060 <col:55>
|-FunctionDecl 0x56147b6f51f8 <line:185:1, col:85> col:14 asctime 'char *(const struct tm *)' extern
| |-ParmVarDecl 0x56147b6f50e0 <col:23, col:40> col:40 __tp 'const struct tm *'
| `-NoThrowAttr 0x56147b6f52a0 <col:62>
|-FunctionDecl 0x56147b6f5418 <line:186:1, col:83> col:14 ctime 'char *(const time_t *)' extern
| |-ParmVarDecl 0x56147b6f5308 <col:21, col:35> col:35 __timer 'const time_t *'
| `-NoThrowAttr 0x56147b6f54c0 <col:60>
|-FunctionDecl 0x56147b6f5718 <line:188:1, line:189:67> line:188:14 asctime_r 'char *(const struct tm *restrict, char *restrict)' extern
| |-ParmVarDecl 0x56147b6f5578 <col:25, col:53> col:53 __tp 'const struct tm *restrict'
| |-ParmVarDecl 0x56147b6f55f8 <line:189:4, col:21> col:21 __buf 'char *restrict'
| `-NoThrowAttr 0x56147b6f57c8 <col:44>
|-FunctionDecl 0x56147b6f59d8 <line:190:1, line:191:72> line:190:14 ctime_r 'char *(const time_t *restrict, char *restrict)' extern
| |-ParmVarDecl 0x56147b6f5830 <col:23, col:48> col:48 __timer 'const time_t *restrict'
| |-ParmVarDecl 0x56147b6f58b0 <line:191:9, col:26> col:26 __buf 'char *restrict'
| `-NoThrowAttr 0x56147b6f5a88 <col:49>
|-VarDecl 0x56147b6f5b88 <line:192:1, col:24> col:14 __tzname 'char *[2]' extern
|-VarDecl 0x56147b6f5c08 <line:193:1, col:12> col:12 __daylight 'int' extern
|-VarDecl 0x56147b6f5c88 <line:194:1, col:17> col:17 __timezone 'long' extern
|-VarDecl 0x56147b6f5d50 <line:195:1, col:22> col:14 tzname 'char *[2]' extern
|-FunctionDecl 0x56147b6f5e80 <line:196:1, col:65> col:13 tzset 'void (void)' extern
| `-NoThrowAttr 0x56147b6f5f20 <col:42>
|-VarDecl 0x56147b6f5f90 <line:197:1, col:12> col:12 daylight 'int' extern
|-VarDecl 0x56147b6f6010 <line:198:1, col:17> col:17 timezone 'long' extern
|-FunctionDecl 0x56147b6f6198 <line:199:1, col:80> col:12 stime 'int (const time_t *)' extern
| |-ParmVarDecl 0x56147b6f6088 <col:19, col:33> col:33 __when 'const time_t *'
| `-NoThrowAttr 0x56147b6f6240 <col:57>
|-FunctionDecl 0x56147b6f6350 <line:200:1, col:79> col:15 timegm 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x56147b6f62c0 <col:23, col:34> col:34 __tp 'struct tm *'
| `-NoThrowAttr 0x56147b6f63f8 <col:56>
|-FunctionDecl 0x56147b6f7540 <line:201:1, col:82> col:15 timelocal 'time_t (struct tm *)' extern
| |-ParmVarDecl 0x56147b6f6478 <col:26, col:37> col:37 __tp 'struct tm *'
| `-NoThrowAttr 0x56147b6f75e8 <col:59>
|-FunctionDecl 0x56147b6f76f0 <line:202:1, col:99> col:12 dysize 'int (int)' extern
| |-ParmVarDecl 0x56147b6f7658 <col:20, col:24> col:24 __year 'int'
| |-NoThrowAttr 0x56147b6f7798 <col:48>
| `-ConstAttr 0x56147b6f77f0 <col:89>
|-FunctionDecl 0x56147b6f7a58 <line:203:1, line:204:37> line:203:12 nanosleep 'int (const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x56147b6f78a8 <col:23, col:46> col:46 __requested_time 'const struct timespec *'
| `-ParmVarDecl 0x56147b6f7938 <line:204:9, col:26> col:26 __remaining 'struct timespec *'
|-FunctionDecl 0x56147b6f7cb8 <line:205:1, col:111> col:12 clock_getres 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x56147b6f7b48 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x56147b6f7bd8 <col:48, col:65> col:65 __res 'struct timespec *'
| `-NoThrowAttr 0x56147b6f7d68 <col:88>
|-FunctionDecl 0x56147b6f7f00 <line:206:1, col:111> col:12 clock_gettime 'int (clockid_t, struct timespec *)' extern
| |-ParmVarDecl 0x56147b6f7dd0 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x56147b6f7e60 <col:49, col:66> col:66 __tp 'struct timespec *'
| `-NoThrowAttr 0x56147b6f7fb0 <col:88>
|-FunctionDecl 0x56147b6f81c8 <line:207:1, line:208:45> line:207:12 clock_settime 'int (clockid_t, const struct timespec *)' extern
| |-ParmVarDecl 0x56147b6f8018 <col:27, col:37> col:37 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x56147b6f80a8 <col:49, col:72> col:72 __tp 'const struct timespec *'
| `-NoThrowAttr 0x56147b6f8278 <line:208:22>
|-FunctionDecl 0x56147b6f85e8 <line:209:1, line:211:30> line:209:12 clock_nanosleep 'int (clockid_t, int, const struct timespec *, struct timespec *)' extern
| |-ParmVarDecl 0x56147b6f82e0 <col:29, col:39> col:39 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x56147b6f8360 <col:51, col:55> col:55 __flags 'int'
| |-ParmVarDecl 0x56147b6f83f0 <line:210:8, col:31> col:31 __req 'const struct timespec *'
| `-ParmVarDecl 0x56147b6f8480 <line:211:8, col:25> col:25 __rem 'struct timespec *'
|-FunctionDecl 0x56147b6f88e8 <line:212:1, col:108> col:12 clock_getcpuclockid 'int (pid_t, clockid_t *)' extern
| |-ParmVarDecl 0x56147b6f86e8 <col:33, col:39> col:39 __pid 'pid_t':'int'
| |-ParmVarDecl 0x56147b6f87c0 <col:46, col:57> col:57 __clock_id 'clockid_t *'
| `-NoThrowAttr 0x56147b6f8998 <col:85>
|-FunctionDecl 0x56147b6f8d88 <line:213:1, line:215:75> line:213:12 timer_create 'int (clockid_t, struct sigevent *restrict, timer_t *restrict)' extern
| |-ParmVarDecl 0x56147b6f8a00 <col:26, col:36> col:36 __clock_id 'clockid_t':'int'
| |-ParmVarDecl 0x56147b6f8b38 <line:214:5, col:33> col:33 __evp 'struct sigevent *restrict'
| |-ParmVarDecl 0x56147b6f8c40 <line:215:5, col:25> col:25 __timerid 'timer_t *restrict'
| `-NoThrowAttr 0x56147b6f8e40 <col:52>
|-FunctionDecl 0x56147b6f8fb8 <line:216:1, col:84> col:12 timer_delete 'int (timer_t)' extern
| |-ParmVarDecl 0x56147b6f8ea8 <col:26, col:34> col:34 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x56147b6f9060 <col:61>
|-FunctionDecl 0x56147b6f9560 <line:217:1, line:219:85> line:217:12 timer_settime 'int (timer_t, int, const struct itimerspec *restrict, struct itimerspec *restrict)' extern
| |-ParmVarDecl 0x56147b6f90c8 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x56147b6f9148 <col:46, col:50> col:50 __flags 'int'
| |-ParmVarDecl 0x56147b6f9278 <line:218:6, col:42> col:42 __value 'const struct itimerspec *restrict'
| |-ParmVarDecl 0x56147b6f9368 <line:219:6, col:36> col:36 __ovalue 'struct itimerspec *restrict'
| `-NoThrowAttr 0x56147b6f9620 <col:62>
|-FunctionDecl 0x56147b6f9838 <line:220:1, line:221:45> line:220:12 timer_gettime 'int (timer_t, struct itimerspec *)' extern
| |-ParmVarDecl 0x56147b6f9688 <col:27, col:35> col:35 __timerid 'timer_t':'void *'
| |-ParmVarDecl 0x56147b6f9718 <col:46, col:65> col:65 __value 'struct itimerspec *'
| `-NoThrowAttr 0x56147b6f98e8 <line:221:22>
|-FunctionDecl 0x56147b6f99e8 <line:222:1, col:88> col:12 timer_getoverrun 'int (timer_t)' extern
| |-ParmVarDecl 0x56147b6f9950 <col:30, col:38> col:38 __timerid 'timer_t':'void *'
| `-NoThrowAttr 0x56147b6f9a90 <col:65>
|-TypedefDecl 0x56147b6f9b00 <line:224:1, col:27> col:27 referenced pthread_t 'unsigned long'
| `-BuiltinType 0x56147b684140 'unsigned long'
|-RecordDecl 0x56147b6f9b58 <line:225:1, line:229:1> line:225:7 union pthread_attr_t definition
| |-FieldDecl 0x56147b6f9ca0 <line:227:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x56147b6f9d08 <line:228:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x56147b6f9db8 <line:230:1, col:30> col:30 referenced pthread_attr_t 'union pthread_attr_t':'union pthread_attr_t'
| `-ElaboratedType 0x56147b6f9d60 'union pthread_attr_t' sugar
|   `-RecordType 0x56147b6f9be0 'union pthread_attr_t'
|     `-Record 0x56147b6f9b58 'pthread_attr_t'
|-RecordDecl 0x56147b6f9e10 <line:231:9, line:235:1> line:231:16 struct __pthread_internal_list definition
| |-FieldDecl 0x56147b6f9f88 <line:233:3, col:35> col:35 __prev 'struct __pthread_internal_list *'
| `-FieldDecl 0x56147b6fa000 <line:234:3, col:35> col:35 __next 'struct __pthread_internal_list *'
|-TypedefDecl 0x56147b6fa0b0 <line:231:1, line:235:3> col:3 referenced __pthread_list_t 'struct __pthread_internal_list':'struct __pthread_internal_list'
| `-ElaboratedType 0x56147b6fa050 'struct __pthread_internal_list' sugar
|   `-RecordType 0x56147b6f9e90 'struct __pthread_internal_list'
|     `-Record 0x56147b6f9e10 '__pthread_internal_list'
|-RecordDecl 0x56147b6fa120 <line:236:9, line:250:1> line:236:9 union definition
| |-RecordDecl 0x56147b6fa1c8 parent 0x56147b683f88 <line:238:3, line:247:3> line:238:10 struct __pthread_mutex_s definition
| | |-FieldDecl 0x56147b6fa2a0 <line:240:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x56147b6fa308 <line:241:5, col:18> col:18 __count 'unsigned int'
| | |-FieldDecl 0x56147b6fa370 <line:242:5, col:9> col:9 __owner 'int'
| | |-FieldDecl 0x56147b6fa3d8 <line:243:5, col:18> col:18 __nusers 'unsigned int'
| | |-FieldDecl 0x56147b6fa440 <line:244:5, col:9> col:9 __kind 'int'
| | |-FieldDecl 0x56147b6fa4a8 <line:245:5, col:9> col:9 __spins 'int'
| | `-FieldDecl 0x56147b6fe580 <line:246:5, col:22> col:22 __list '__pthread_list_t':'struct __pthread_internal_list'
| |-FieldDecl 0x56147b6fe630 <line:238:3, line:247:5> col:5 __data 'struct __pthread_mutex_s':'struct __pthread_mutex_s'
| |-FieldDecl 0x56147b6fe720 <line:248:3, col:17> col:8 __size 'char [40]'
| `-FieldDecl 0x56147b6fe788 <line:249:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x56147b6fe910 <line:236:1, line:250:3> col:3 referenced pthread_mutex_t 'union pthread_mutex_t':'pthread_mutex_t'
| `-ElaboratedType 0x56147b6fe8b0 'union pthread_mutex_t' sugar
|   `-RecordType 0x56147b6fa1a0 'pthread_mutex_t'
|     `-Record 0x56147b6fa120 ''
|-RecordDecl 0x56147b6fe980 <line:251:9, line:255:1> line:251:9 union definition
| |-FieldDecl 0x56147b6feac0 <line:253:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x56147b6feb28 <line:254:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x56147b6febe0 <line:251:1, line:255:3> col:3 referenced pthread_mutexattr_t 'union pthread_mutexattr_t':'pthread_mutexattr_t'
| `-ElaboratedType 0x56147b6feb80 'union pthread_mutexattr_t' sugar
|   `-RecordType 0x56147b6fea00 'pthread_mutexattr_t'
|     `-Record 0x56147b6fe980 ''
|-RecordDecl 0x56147b6fec50 <line:256:9, line:271:1> line:256:9 union definition
| |-RecordDecl 0x56147b6fecf8 <line:258:3, line:268:3> line:258:3 struct definition
| | |-FieldDecl 0x56147b6fedc0 <line:260:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x56147b6fee28 <line:261:5, col:18> col:18 __futex 'unsigned int'
| | |-FieldDecl 0x56147b6fee90 <line:262:19, col:42> col:42 __total_seq 'unsigned long long'
| | |-FieldDecl 0x56147b6feef8 <line:263:19, col:42> col:42 __wakeup_seq 'unsigned long long'
| | |-FieldDecl 0x56147b6fef60 <line:264:19, col:42> col:42 __woken_seq 'unsigned long long'
| | |-FieldDecl 0x56147b6fefc8 <line:265:5, col:11> col:11 __mutex 'void *'
| | |-FieldDecl 0x56147b6ff030 <line:266:5, col:18> col:18 __nwaiters 'unsigned int'
| | `-FieldDecl 0x56147b6ff098 <line:267:5, col:18> col:18 __broadcast_seq 'unsigned int'
| |-FieldDecl 0x56147b6ff150 <line:258:3, line:268:5> col:5 __data 'struct (anonymous struct at pthread-wmm/mix004_power.opt_false-unreach-call.i:258:3)':'struct pthread_cond_t::(anonymous at pthread-wmm/mix004_power.opt_false-unreach-call.i:258:3)'
| |-FieldDecl 0x56147b6ff240 <line:269:3, col:17> col:8 __size 'char [48]'
| `-FieldDecl 0x56147b6ff2a8 <line:270:17, col:31> col:31 __align 'long long'
|-TypedefDecl 0x56147b6ff3e0 <line:256:1, line:271:3> col:3 referenced pthread_cond_t 'union pthread_cond_t':'pthread_cond_t'
| `-ElaboratedType 0x56147b6ff380 'union pthread_cond_t' sugar
|   `-RecordType 0x56147b6fecd0 'pthread_cond_t'
|     `-Record 0x56147b6fec50 ''
|-RecordDecl 0x56147b6ff450 <line:272:9, line:276:1> line:272:9 union definition
| |-FieldDecl 0x56147b6ff590 <line:274:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x56147b6ff5f8 <line:275:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x56147b6ff6b0 <line:272:1, line:276:3> col:3 referenced pthread_condattr_t 'union pthread_condattr_t':'pthread_condattr_t'
| `-ElaboratedType 0x56147b6ff650 'union pthread_condattr_t' sugar
|   `-RecordType 0x56147b6ff4d0 'pthread_condattr_t'
|     `-Record 0x56147b6ff450 ''
|-TypedefDecl 0x56147b6ff738 <line:277:1, col:22> col:22 referenced pthread_key_t 'unsigned int'
| `-BuiltinType 0x56147b684120 'unsigned int'
|-TypedefDecl 0x56147b6ff7a8 <line:278:1, col:13> col:13 referenced pthread_once_t 'int'
| `-BuiltinType 0x56147b684080 'int'
|-RecordDecl 0x56147b6ff800 <line:279:9, line:297:1> line:279:9 union definition
| |-RecordDecl 0x56147b6ff8a8 <line:281:3, line:294:3> line:281:3 struct definition
| | |-FieldDecl 0x56147b6ff970 <line:283:5, col:9> col:9 __lock 'int'
| | |-FieldDecl 0x56147b6ff9d8 <line:284:5, col:18> col:18 __nr_readers 'unsigned int'
| | |-FieldDecl 0x56147b6ffa40 <line:285:5, col:18> col:18 __readers_wakeup 'unsigned int'
| | |-FieldDecl 0x56147b6ffaa8 <line:286:5, col:18> col:18 __writer_wakeup 'unsigned int'
| | |-FieldDecl 0x56147b6ffb10 <line:287:5, col:18> col:18 __nr_readers_queued 'unsigned int'
| | |-FieldDecl 0x56147b6ffb78 <line:288:5, col:18> col:18 __nr_writers_queued 'unsigned int'
| | |-FieldDecl 0x56147b6ffbe0 <line:289:5, col:9> col:9 __writer 'int'
| | |-FieldDecl 0x56147b6ffc48 <line:290:5, col:9> col:9 __shared 'int'
| | |-FieldDecl 0x56147b6ffcb0 <line:291:5, col:23> col:23 __pad1 'unsigned long'
| | |-FieldDecl 0x56147b6ffd18 <line:292:5, col:23> col:23 __pad2 'unsigned long'
| | `-FieldDecl 0x56147b6ffd80 <line:293:5, col:18> col:18 __flags 'unsigned int'
| |-FieldDecl 0x56147b6ffe30 <line:281:3, line:294:5> col:5 __data 'struct (anonymous struct at pthread-wmm/mix004_power.opt_false-unreach-call.i:281:3)':'struct pthread_rwlock_t::(anonymous at pthread-wmm/mix004_power.opt_false-unreach-call.i:281:3)'
| |-FieldDecl 0x56147b6ffed8 <line:295:3, col:17> col:8 __size 'char [56]'
| `-FieldDecl 0x56147b6fff40 <line:296:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x56147b700090 <line:279:1, line:297:3> col:3 referenced pthread_rwlock_t 'union pthread_rwlock_t':'pthread_rwlock_t'
| `-ElaboratedType 0x56147b700030 'union pthread_rwlock_t' sugar
|   `-RecordType 0x56147b6ff880 'pthread_rwlock_t'
|     `-Record 0x56147b6ff800 ''
|-RecordDecl 0x56147b700100 <line:298:9, line:302:1> line:298:9 union definition
| |-FieldDecl 0x56147b700240 <line:300:3, col:16> col:8 __size 'char [8]'
| `-FieldDecl 0x56147b7002a8 <line:301:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x56147b700360 <line:298:1, line:302:3> col:3 referenced pthread_rwlockattr_t 'union pthread_rwlockattr_t':'pthread_rwlockattr_t'
| `-ElaboratedType 0x56147b700300 'union pthread_rwlockattr_t' sugar
|   `-RecordType 0x56147b700180 'pthread_rwlockattr_t'
|     `-Record 0x56147b700100 ''
|-TypedefDecl 0x56147b7003e8 <line:303:1, col:22> col:22 referenced pthread_spinlock_t 'volatile int'
| `-QualType 0x56147b684084 'volatile int' volatile
|   `-BuiltinType 0x56147b684080 'int'
|-RecordDecl 0x56147b700440 <line:304:9, line:308:1> line:304:9 union definition
| |-FieldDecl 0x56147b7025b0 <line:306:3, col:17> col:8 __size 'char [32]'
| `-FieldDecl 0x56147b702618 <line:307:3, col:12> col:12 __align 'long'
|-TypedefDecl 0x56147b7026d0 <line:304:1, line:308:3> col:3 referenced pthread_barrier_t 'union pthread_barrier_t':'pthread_barrier_t'
| `-ElaboratedType 0x56147b702670 'union pthread_barrier_t' sugar
|   `-RecordType 0x56147b7004c0 'pthread_barrier_t'
|     `-Record 0x56147b700440 ''
|-RecordDecl 0x56147b702740 <line:309:9, line:313:1> line:309:9 union definition
| |-FieldDecl 0x56147b702840 <line:311:3, col:16> col:8 __size 'char [4]'
| `-FieldDecl 0x56147b7028a8 <line:312:3, col:7> col:7 __align 'int'
|-TypedefDecl 0x56147b702960 <line:309:1, line:313:3> col:3 referenced pthread_barrierattr_t 'union pthread_barrierattr_t':'pthread_barrierattr_t'
| `-ElaboratedType 0x56147b702900 'union pthread_barrierattr_t' sugar
|   `-RecordType 0x56147b7027c0 'pthread_barrierattr_t'
|     `-Record 0x56147b702740 ''
|-TypedefDecl 0x56147b702a78 <line:314:1, col:29> col:18 referenced __jmp_buf 'long [8]'
| `-ConstantArrayType 0x56147b702a10 'long [8]' 8 
|   `-BuiltinType 0x56147b6840a0 'long'
|-EnumDecl 0x56147b702ad0 <line:315:1, line:319:1> line:315:1
| |-EnumConstantDecl 0x56147b702b98 <line:317:3> col:3 PTHREAD_CREATE_JOINABLE 'int'
| `-EnumConstantDecl 0x56147b702be8 <line:318:3> col:3 PTHREAD_CREATE_DETACHED 'int'
|-EnumDecl 0x56147b702c38 <line:320:1, line:331:1> line:320:1
| |-EnumConstantDecl 0x56147b702d08 <line:322:3> col:3 referenced PTHREAD_MUTEX_TIMED_NP 'int'
| |-EnumConstantDecl 0x56147b702d58 <line:323:3> col:3 referenced PTHREAD_MUTEX_RECURSIVE_NP 'int'
| |-EnumConstantDecl 0x56147b702da8 <line:324:3> col:3 referenced PTHREAD_MUTEX_ERRORCHECK_NP 'int'
| |-EnumConstantDecl 0x56147b702df8 <line:325:3> col:3 PTHREAD_MUTEX_ADAPTIVE_NP 'int'
| |-EnumConstantDecl 0x56147b702e80 <line:327:3, col:26> col:3 referenced PTHREAD_MUTEX_NORMAL 'int'
| | `-ConstantExpr 0x56147b702e68 <col:26> 'int'
| |   `-DeclRefExpr 0x56147b702e48 <col:26> 'int' EnumConstant 0x56147b702d08 'PTHREAD_MUTEX_TIMED_NP' 'int'
| |-EnumConstantDecl 0x56147b702f08 <line:328:3, col:29> col:3 PTHREAD_MUTEX_RECURSIVE 'int'
| | `-ConstantExpr 0x56147b702ef0 <col:29> 'int'
| |   `-DeclRefExpr 0x56147b702ed0 <col:29> 'int' EnumConstant 0x56147b702d58 'PTHREAD_MUTEX_RECURSIVE_NP' 'int'
| |-EnumConstantDecl 0x56147b702f90 <line:329:3, col:30> col:3 PTHREAD_MUTEX_ERRORCHECK 'int'
| | `-ConstantExpr 0x56147b702f78 <col:30> 'int'
| |   `-DeclRefExpr 0x56147b702f58 <col:30> 'int' EnumConstant 0x56147b702da8 'PTHREAD_MUTEX_ERRORCHECK_NP' 'int'
| `-EnumConstantDecl 0x56147b703018 <line:330:3, col:27> col:3 PTHREAD_MUTEX_DEFAULT 'int'
|   `-ConstantExpr 0x56147b703000 <col:27> 'int'
|     `-DeclRefExpr 0x56147b702fe0 <col:27> 'int' EnumConstant 0x56147b702e80 'PTHREAD_MUTEX_NORMAL' 'int'
|-EnumDecl 0x56147b703068 <line:332:1, line:338:1> line:332:1
| |-EnumConstantDecl 0x56147b703138 <line:334:3> col:3 referenced PTHREAD_MUTEX_STALLED 'int'
| |-EnumConstantDecl 0x56147b7031c0 <line:335:3, col:30> col:3 PTHREAD_MUTEX_STALLED_NP 'int'
| | `-ConstantExpr 0x56147b7031a8 <col:30> 'int'
| |   `-DeclRefExpr 0x56147b703188 <col:30> 'int' EnumConstant 0x56147b703138 'PTHREAD_MUTEX_STALLED' 'int'
| |-EnumConstantDecl 0x56147b703210 <line:336:3> col:3 referenced PTHREAD_MUTEX_ROBUST 'int'
| `-EnumConstantDecl 0x56147b703298 <line:337:3, col:29> col:3 PTHREAD_MUTEX_ROBUST_NP 'int'
|   `-ConstantExpr 0x56147b703280 <col:29> 'int'
|     `-DeclRefExpr 0x56147b703260 <col:29> 'int' EnumConstant 0x56147b703210 'PTHREAD_MUTEX_ROBUST' 'int'
|-EnumDecl 0x56147b7032e8 <line:339:1, line:344:1> line:339:1
| |-EnumConstantDecl 0x56147b7033b8 <line:341:3> col:3 PTHREAD_PRIO_NONE 'int'
| |-EnumConstantDecl 0x56147b703408 <line:342:3> col:3 PTHREAD_PRIO_INHERIT 'int'
| `-EnumConstantDecl 0x56147b703458 <line:343:3> col:3 PTHREAD_PRIO_PROTECT 'int'
|-EnumDecl 0x56147b7034a8 <line:345:1, line:351:1> line:345:1
| |-EnumConstantDecl 0x56147b7035c0 <line:347:3> col:3 referenced PTHREAD_RWLOCK_PREFER_READER_NP 'int'
| |-EnumConstantDecl 0x56147b703610 <line:348:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NP 'int'
| |-EnumConstantDecl 0x56147b703660 <line:349:3> col:3 PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP 'int'
| `-EnumConstantDecl 0x56147b7036e8 <line:350:3, col:31> col:3 PTHREAD_RWLOCK_DEFAULT_NP 'int'
|   `-ConstantExpr 0x56147b7036d0 <col:31> 'int'
|     `-DeclRefExpr 0x56147b7036b0 <col:31> 'int' EnumConstant 0x56147b7035c0 'PTHREAD_RWLOCK_PREFER_READER_NP' 'int'
|-EnumDecl 0x56147b703738 <line:352:1, line:356:1> line:352:1
| |-EnumConstantDecl 0x56147b703808 <line:354:3> col:3 PTHREAD_INHERIT_SCHED 'int'
| `-EnumConstantDecl 0x56147b703858 <line:355:3> col:3 PTHREAD_EXPLICIT_SCHED 'int'
|-EnumDecl 0x56147b7038a8 <line:357:1, line:361:1> line:357:1
| |-EnumConstantDecl 0x56147b703978 <line:359:3> col:3 PTHREAD_SCOPE_SYSTEM 'int'
| `-EnumConstantDecl 0x56147b7039c8 <line:360:3> col:3 PTHREAD_SCOPE_PROCESS 'int'
|-EnumDecl 0x56147b703a18 <line:362:1, line:366:1> line:362:1
| |-EnumConstantDecl 0x56147b703ae8 <line:364:3> col:3 PTHREAD_PROCESS_PRIVATE 'int'
| `-EnumConstantDecl 0x56147b703b38 <line:365:3> col:3 PTHREAD_PROCESS_SHARED 'int'
|-RecordDecl 0x56147b703b88 <line:367:1, line:373:1> line:367:8 struct _pthread_cleanup_buffer definition
| |-FieldDecl 0x56147b703dc8 <line:369:3, col:28> col:10 __routine 'void (*)(void *)'
| |-FieldDecl 0x56147b703e30 <line:370:3, col:9> col:9 __arg 'void *'
| |-FieldDecl 0x56147b703e98 <line:371:3, col:7> col:7 __canceltype 'int'
| `-FieldDecl 0x56147b703fb8 <line:372:3, col:35> col:35 __prev 'struct _pthread_cleanup_buffer *'
|-EnumDecl 0x56147b704008 <line:374:1, line:378:1> line:374:1
| |-EnumConstantDecl 0x56147b7040d8 <line:376:3> col:3 PTHREAD_CANCEL_ENABLE 'int'
| `-EnumConstantDecl 0x56147b704128 <line:377:3> col:3 PTHREAD_CANCEL_DISABLE 'int'
|-EnumDecl 0x56147b704178 <line:379:1, line:383:1> line:379:1
| |-EnumConstantDecl 0x56147b704248 <line:381:3> col:3 PTHREAD_CANCEL_DEFERRED 'int'
| `-EnumConstantDecl 0x56147b704298 <line:382:3> col:3 PTHREAD_CANCEL_ASYNCHRONOUS 'int'
|-FunctionDecl 0x56147b7048f8 <line:385:1, line:388:96> line:385:12 used pthread_create 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' extern
| |-ParmVarDecl 0x56147b704390 <col:28, col:50> col:50 __newthread 'pthread_t *restrict'
| |-ParmVarDecl 0x56147b7044a0 <line:386:7, col:40> col:40 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x56147b7046e0 <line:387:7, col:39> col:15 __start_routine 'void *(*)(void *)'
| |-ParmVarDecl 0x56147b704760 <line:388:7, col:24> col:24 __arg 'void *restrict'
| |-NoThrowAttr 0x56147b7049b8 <col:47>
| |-NonNullAttr 0x56147b704a10 <col:77, col:94> 1 3
| `-CallbackAttr 0x56147b704a48 <line:385:12> Implicit 2 3
|-FunctionDecl 0x56147b704b70 <line:389:1, col:72> col:13 pthread_exit 'void (void *) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x56147b704aa0 <col:27, col:33> col:33 __retval 'void *'
|-FunctionDecl 0x56147b704dc8 <line:390:1, col:64> col:12 pthread_join 'int (pthread_t, void **)' extern
| |-ParmVarDecl 0x56147b704c28 <col:26, col:36> col:36 __th 'pthread_t':'unsigned long'
| `-ParmVarDecl 0x56147b704ca8 <col:42, col:49> col:49 __thread_return 'void **'
|-FunctionDecl 0x56147b704f98 <line:391:1, col:83> col:12 pthread_detach 'int (pthread_t)' extern
| |-ParmVarDecl 0x56147b704e88 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
| `-NoThrowAttr 0x56147b705040 <col:60>
|-FunctionDecl 0x56147b705190 <line:392:1, col:105> col:18 pthread_self 'pthread_t (void)' extern
| |-NoThrowAttr 0x56147b705230 <col:54>
| `-ConstAttr 0x56147b705288 <col:95>
|-FunctionDecl 0x56147b705458 <line:393:1, line:394:70> line:393:12 pthread_equal 'int (pthread_t, pthread_t)' extern
| |-ParmVarDecl 0x56147b7052c0 <col:27, col:37> col:37 __thread1 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x56147b705338 <col:48, col:58> col:58 __thread2 'pthread_t':'unsigned long'
| |-NoThrowAttr 0x56147b705508 <line:394:19>
| `-ConstAttr 0x56147b705560 <col:60>
|-FunctionDecl 0x56147b705f68 <line:395:1, col:128> col:12 pthread_attr_init 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x56147b705e30 <col:31, col:47> col:47 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x56147b706010 <col:71>
| `-NonNullAttr 0x56147b706068 <col:112, col:126> 1
|-FunctionDecl 0x56147b706170 <line:396:1, line:397:79> line:396:12 pthread_attr_destroy 'int (pthread_attr_t *)' extern
| |-ParmVarDecl 0x56147b7060b8 <col:34, col:50> col:50 __attr 'pthread_attr_t *'
| |-NoThrowAttr 0x56147b706218 <line:397:22>
| `-NonNullAttr 0x56147b706270 <col:63, col:77> 1
|-FunctionDecl 0x56147b706498 <line:398:1, line:400:82> line:398:12 pthread_attr_getdetachstate 'int (const pthread_attr_t *, int *)' extern
| |-ParmVarDecl 0x56147b7062b8 <col:41, col:63> col:63 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x56147b706338 <line:399:6, col:11> col:11 __detachstate 'int *'
| |-NoThrowAttr 0x56147b706548 <line:400:22>
| `-NonNullAttr 0x56147b7065a0 <col:63, col:80> 1 2
|-FunctionDecl 0x56147b7067a8 <line:401:1, line:403:79> line:401:12 pthread_attr_setdetachstate 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x56147b7065e8 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x56147b706668 <line:402:6, col:10> col:10 __detachstate 'int'
| |-NoThrowAttr 0x56147b706858 <line:403:22>
| `-NonNullAttr 0x56147b7068b0 <col:63, col:77> 1
|-FunctionDecl 0x56147b706b08 <line:404:1, line:406:82> line:404:12 pthread_attr_getguardsize 'int (const pthread_attr_t *, size_t *)' extern
| |-ParmVarDecl 0x56147b7068f8 <col:39, col:61> col:61 __attr 'const pthread_attr_t *'
| |-ParmVarDecl 0x56147b7069a0 <line:405:11, col:19> col:19 __guardsize 'size_t *'
| |-NoThrowAttr 0x56147b706bb8 <line:406:22>
| `-NonNullAttr 0x56147b706c10 <col:63, col:80> 1 2
|-FunctionDecl 0x56147b707e48 <line:407:1, line:409:79> line:407:12 pthread_attr_setguardsize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x56147b706c58 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x56147b706cd0 <line:408:11, col:18> col:18 __guardsize 'size_t':'unsigned long'
| |-NoThrowAttr 0x56147b707ef8 <line:409:22>
| `-NonNullAttr 0x56147b707f50 <col:63, col:77> 1
|-FunctionDecl 0x56147b708188 <line:410:1, line:412:82> line:410:12 pthread_attr_getschedparam 'int (const pthread_attr_t *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x56147b707f98 <col:40, col:73> col:73 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x56147b708028 <line:411:12, col:43> col:43 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x56147b708238 <line:412:22>
| `-NonNullAttr 0x56147b708290 <col:63, col:80> 1 2
|-FunctionDecl 0x56147b7084c8 <line:413:1, line:415:97> line:413:12 pthread_attr_setschedparam 'int (pthread_attr_t *restrict, const struct sched_param *restrict)' extern
| |-ParmVarDecl 0x56147b7082d8 <col:40, col:67> col:67 __attr 'pthread_attr_t *restrict'
| |-ParmVarDecl 0x56147b708368 <line:414:12, line:415:12> col:12 __param 'const struct sched_param *restrict'
| |-NoThrowAttr 0x56147b708578 <col:37>
| `-NonNullAttr 0x56147b7085d0 <col:78, col:95> 1 2
|-FunctionDecl 0x56147b7087b8 <line:416:1, line:418:82> line:416:12 pthread_attr_getschedpolicy 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56147b708618 <col:41, line:417:6> col:6 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x56147b708698 <col:14, col:30> col:30 __policy 'int *restrict'
| |-NoThrowAttr 0x56147b708868 <line:418:22>
| `-NonNullAttr 0x56147b7088c0 <col:63, col:80> 1 2
|-FunctionDecl 0x56147b708a48 <line:419:1, line:420:79> line:419:12 pthread_attr_setschedpolicy 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x56147b708908 <col:41, col:57> col:57 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x56147b708988 <col:65, col:69> col:69 __policy 'int'
| |-NoThrowAttr 0x56147b708af8 <line:420:22>
| `-NonNullAttr 0x56147b708b50 <col:63, col:77> 1
|-FunctionDecl 0x56147b708cf8 <line:421:1, line:423:82> line:421:12 pthread_attr_getinheritsched 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56147b708b98 <col:42, line:422:7> col:7 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x56147b708c18 <col:15, col:31> col:31 __inherit 'int *restrict'
| |-NoThrowAttr 0x56147b708da8 <line:423:22>
| `-NonNullAttr 0x56147b709e30 <col:63, col:80> 1 2
|-FunctionDecl 0x56147b709fb8 <line:424:1, line:426:79> line:424:12 pthread_attr_setinheritsched 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x56147b709e78 <col:42, col:58> col:58 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x56147b709ef8 <line:425:7, col:11> col:11 __inherit 'int'
| |-NoThrowAttr 0x56147b70a068 <line:426:22>
| `-NonNullAttr 0x56147b70a0c0 <col:63, col:77> 1
|-FunctionDecl 0x56147b70a268 <line:427:1, line:429:82> line:427:12 pthread_attr_getscope 'int (const pthread_attr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56147b70a108 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x56147b70a188 <line:428:7, col:23> col:23 __scope 'int *restrict'
| |-NoThrowAttr 0x56147b70a318 <line:429:22>
| `-NonNullAttr 0x56147b70a370 <col:63, col:80> 1 2
|-FunctionDecl 0x56147b70a4f8 <line:430:1, line:431:79> line:430:12 pthread_attr_setscope 'int (pthread_attr_t *, int)' extern
| |-ParmVarDecl 0x56147b70a3b8 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x56147b70a438 <col:59, col:63> col:63 __scope 'int'
| |-NoThrowAttr 0x56147b70a5a8 <line:431:22>
| `-NonNullAttr 0x56147b70a600 <col:63, col:77> 1
|-FunctionDecl 0x56147b70a828 <line:432:1, line:434:115> line:432:12 pthread_attr_getstackaddr 'int (const pthread_attr_t *restrict, void **restrict)' extern
| |-ParmVarDecl 0x56147b70a648 <col:39, line:433:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x56147b70a6c8 <col:19, col:37> col:37 __stackaddr 'void **restrict'
| |-NoThrowAttr 0x56147b70a8d8 <line:434:22>
| |-NonNullAttr 0x56147b70a930 <col:63, col:80> 1 2
| `-DeprecatedAttr 0x56147b70a968 <col:100> "" ""
|-FunctionDecl 0x56147b70ab78 <line:435:1, line:437:112> line:435:12 pthread_attr_setstackaddr 'int (pthread_attr_t *, void *)' extern
| |-ParmVarDecl 0x56147b70a9b8 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x56147b70aa38 <line:436:11, col:17> col:17 __stackaddr 'void *'
| |-NoThrowAttr 0x56147b70ac28 <line:437:22>
| |-NonNullAttr 0x56147b70ac80 <col:63, col:77> 1
| `-DeprecatedAttr 0x56147b70acb8 <col:97> "" ""
|-FunctionDecl 0x56147b70aeb8 <line:438:1, line:440:82> line:438:12 pthread_attr_getstacksize 'int (const pthread_attr_t *restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x56147b70ad08 <col:39, line:439:11> col:11 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x56147b70ad80 <col:19, col:38> col:38 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x56147b70af68 <line:440:22>
| `-NonNullAttr 0x56147b70afc0 <col:63, col:80> 1 2
|-FunctionDecl 0x56147b70b140 <line:441:1, line:443:79> line:441:12 pthread_attr_setstacksize 'int (pthread_attr_t *, size_t)' extern
| |-ParmVarDecl 0x56147b70b008 <col:39, col:55> col:55 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x56147b70b080 <line:442:11, col:18> col:18 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x56147b70b1f0 <line:443:22>
| `-NonNullAttr 0x56147b70b248 <col:63, col:77> 1
|-FunctionDecl 0x56147b70b538 <line:444:1, line:447:85> line:444:12 pthread_attr_getstack 'int (const pthread_attr_t *restrict, void **restrict, size_t *restrict)' extern
| |-ParmVarDecl 0x56147b70b298 <col:35, col:68> col:68 __attr 'const pthread_attr_t *restrict'
| |-ParmVarDecl 0x56147b70b318 <line:445:7, col:25> col:25 __stackaddr 'void **restrict'
| |-ParmVarDecl 0x56147b70b390 <line:446:7, col:26> col:26 __stacksize 'size_t *restrict'
| |-NoThrowAttr 0x56147b70b5f0 <line:447:22>
| `-NonNullAttr 0x56147b70b648 <col:63, col:83> 1 2 3
|-FunctionDecl 0x56147b70b8f8 <line:448:1, line:449:100> line:448:12 pthread_attr_setstack 'int (pthread_attr_t *, void *, size_t)' extern
| |-ParmVarDecl 0x56147b70b6a0 <col:35, col:51> col:51 __attr 'pthread_attr_t *'
| |-ParmVarDecl 0x56147b70b720 <col:59, col:65> col:65 __stackaddr 'void *'
| |-ParmVarDecl 0x56147b70b798 <line:449:7, col:14> col:14 __stacksize 'size_t':'unsigned long'
| |-NoThrowAttr 0x56147b70b9b0 <col:43>
| `-NonNullAttr 0x56147b70ba08 <col:84, col:98> 1
|-FunctionDecl 0x56147b70bcc8 <line:450:1, line:452:79> line:450:12 pthread_setschedparam 'int (pthread_t, int, const struct sched_param *)' extern
| |-ParmVarDecl 0x56147b70ba58 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x56147b70bad8 <col:62, col:66> col:66 __policy 'int'
| |-ParmVarDecl 0x56147b70bb68 <line:451:7, col:33> col:33 __param 'const struct sched_param *'
| |-NoThrowAttr 0x56147b70bd80 <line:452:22>
| `-NonNullAttr 0x56147b70bdd8 <col:63, col:77> 3
|-FunctionDecl 0x56147b70c0e8 <line:453:1, line:456:82> line:453:12 pthread_getschedparam 'int (pthread_t, int *restrict, struct sched_param *restrict)' extern
| |-ParmVarDecl 0x56147b70be50 <col:35, col:45> col:45 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x56147b70bed0 <line:454:7, col:23> col:23 __policy 'int *restrict'
| |-ParmVarDecl 0x56147b70bf60 <line:455:7, col:38> col:38 __param 'struct sched_param *restrict'
| |-NoThrowAttr 0x56147b70c1a0 <line:456:22>
| `-NonNullAttr 0x56147b70c1f8 <col:63, col:80> 2 3
|-FunctionDecl 0x56147b70c3e8 <line:457:1, line:458:45> line:457:12 pthread_setschedprio 'int (pthread_t, int)' extern
| |-ParmVarDecl 0x56147b70c248 <col:34, col:44> col:44 __target_thread 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x56147b70c2c8 <col:61, col:65> col:65 __prio 'int'
| `-NoThrowAttr 0x56147b70c498 <line:458:22>
|-FunctionDecl 0x56147b70c868 <line:459:1, line:460:71> line:459:12 pthread_once 'int (pthread_once_t *, void (*)(void))' extern
| |-ParmVarDecl 0x56147b70c560 <col:26, col:42> col:42 __once_control 'pthread_once_t *'
| |-ParmVarDecl 0x56147b70c700 <line:460:5, col:33> col:12 __init_routine 'void (*)(void)'
| `-NonNullAttr 0x56147b70c918 <col:52, col:69> 1 2
|-FunctionDecl 0x56147b70cac0 <line:461:1, col:64> col:12 pthread_setcancelstate 'int (int, int *)' extern
| |-ParmVarDecl 0x56147b70c9a0 <col:36, col:40> col:40 __state 'int'
| `-ParmVarDecl 0x56147b70ca20 <col:49, col:54> col:54 __oldstate 'int *'
|-FunctionDecl 0x56147b70cca8 <line:462:1, col:61> col:12 pthread_setcanceltype 'int (int, int *)' extern
| |-ParmVarDecl 0x56147b70cb88 <col:35, col:39> col:39 __type 'int'
| `-ParmVarDecl 0x56147b70cc08 <col:47, col:52> col:52 __oldtype 'int *'
|-FunctionDecl 0x56147b70ce60 <line:463:1, col:42> col:12 pthread_cancel 'int (pthread_t)' extern
| `-ParmVarDecl 0x56147b70cd68 <col:28, col:38> col:38 __th 'pthread_t':'unsigned long'
|-FunctionDecl 0x56147b70cfa0 <line:464:1, col:37> col:13 pthread_testcancel 'void (void)' extern
|-RecordDecl 0x56147b70d040 <line:465:9, line:473:1> line:465:9 struct definition
| |-RecordDecl 0x56147b70d0e8 <line:467:3, line:471:3> line:467:3 struct definition
| | |-FieldDecl 0x56147b70d1d8 <line:469:5, col:15> col:15 __cancel_jmp_buf '__jmp_buf':'long [8]'
| | `-FieldDecl 0x56147b70d240 <line:470:5, col:9> col:9 __mask_was_saved 'int'
| |-FieldDecl 0x56147b70d410 <line:467:3, line:471:23> col:5 __cancel_jmp_buf 'struct (anonymous struct at pthread-wmm/mix004_power.opt_false-unreach-call.i:467:3) [1]'
| `-FieldDecl 0x56147b70d508 <line:472:3, col:16> col:9 __pad 'void *[4]'
|-TypedefDecl 0x56147b70d5c0 <line:465:1, line:473:3> col:3 referenced __pthread_unwind_buf_t 'struct __pthread_unwind_buf_t':'__pthread_unwind_buf_t'
| |-ElaboratedType 0x56147b70d560 'struct __pthread_unwind_buf_t' sugar
| | `-RecordType 0x56147b70d0c0 '__pthread_unwind_buf_t'
| |   `-Record 0x56147b70d040 ''
| `-AlignedAttr 0x56147b70d618 <col:42> aligned
|   `-<<<NULL>>>
|-RecordDecl 0x56147b70d690 <line:474:1, line:480:1> line:474:8 struct __pthread_cleanup_frame definition
| |-FieldDecl 0x56147b70d7f0 <line:476:3, col:35> col:10 __cancel_routine 'void (*)(void *)'
| |-FieldDecl 0x56147b70d858 <line:477:3, col:9> col:9 __cancel_arg 'void *'
| |-FieldDecl 0x56147b70d8c0 <line:478:3, col:7> col:7 __do_it 'int'
| `-FieldDecl 0x56147b70d928 <line:479:3, col:7> col:7 __cancel_type 'int'
|-FunctionDecl 0x56147b70db30 <line:481:1, col:69> col:13 __pthread_register_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x56147b70da20 <col:40, col:64> col:64 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x56147b70dc78 <line:483:1, col:71> col:13 __pthread_unregister_cancel 'void (__pthread_unwind_buf_t *)' extern
| `-ParmVarDecl 0x56147b70dbe8 <col:42, col:66> col:66 __buf '__pthread_unwind_buf_t *'
|-FunctionDecl 0x56147b70de70 <line:485:1, line:487:31> line:485:13 __pthread_unwind_next 'void (__pthread_unwind_buf_t *) __attribute__((noreturn))' extern
| |-ParmVarDecl 0x56147b70dd30 <col:36, col:60> col:60 __buf '__pthread_unwind_buf_t *'
| `-WeakAttr 0x56147b70df18 <line:487:22>
|-RecordDecl 0x56147b70df70 <line:489:1, col:8> col:8 struct __jmp_buf_tag
|-FunctionDecl 0x56147b70e288 <line:490:1, col:98> col:12 __sigsetjmp 'int (struct __jmp_buf_tag *, int)' extern
| |-ParmVarDecl 0x56147b70e0e8 <col:25, col:47> col:47 __env 'struct __jmp_buf_tag *'
| |-ParmVarDecl 0x56147b70e168 <col:54, col:58> col:58 __savemask 'int'
| |-NoThrowAttr 0x56147b70e338 <col:86>
| `-ReturnsTwiceAttr 0x56147b70e390 <col:12> Implicit
|-FunctionDecl 0x56147b70e6b8 <line:491:1, line:493:79> line:491:12 pthread_mutex_init 'int (pthread_mutex_t *, const pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x56147b70e460 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-ParmVarDecl 0x56147b70e570 <line:492:11, col:38> col:38 __mutexattr 'const pthread_mutexattr_t *'
| |-NoThrowAttr 0x56147b70e768 <line:493:22>
| `-NonNullAttr 0x56147b70e7c0 <col:63, col:77> 1
|-FunctionDecl 0x56147b70e938 <line:494:1, line:495:79> line:494:12 pthread_mutex_destroy 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x56147b70e808 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x56147b70e9e0 <line:495:22>
| `-NonNullAttr 0x56147b70ea38 <col:63, col:77> 1
|-FunctionDecl 0x56147b70eb40 <line:496:1, line:497:68> line:496:12 pthread_mutex_trylock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x56147b70ea88 <col:35, col:52> col:52 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x56147b70ebe8 <line:497:22>
| `-NonNullAttr 0x56147b70ec40 <col:52, col:66> 1
|-FunctionDecl 0x56147b70ed40 <line:498:1, line:499:68> line:498:12 pthread_mutex_lock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x56147b70ec88 <col:32, col:49> col:49 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x56147b70ede8 <line:499:22>
| `-NonNullAttr 0x56147b70ee40 <col:52, col:66> 1
|-FunctionDecl 0x56147b70f088 <line:500:1, line:502:85> line:500:12 pthread_mutex_timedlock 'int (pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x56147b70ee98 <col:37, col:65> col:65 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x56147b70ef28 <line:501:9, line:502:9> col:9 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x56147b70f138 <col:36>
| `-NonNullAttr 0x56147b70f190 <col:66, col:83> 1 2
|-FunctionDecl 0x56147b70f290 <line:503:1, line:504:68> line:503:12 pthread_mutex_unlock 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x56147b70f1d8 <col:34, col:51> col:51 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x56147b70f338 <line:504:22>
| `-NonNullAttr 0x56147b70f390 <col:52, col:66> 1
|-FunctionDecl 0x56147b70f628 <line:505:1, line:508:82> line:505:12 pthread_mutex_getprioceiling 'int (const pthread_mutex_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56147b70f440 <col:42, line:506:18> col:18 __mutex 'const pthread_mutex_t *restrict'
| |-ParmVarDecl 0x56147b70f4c0 <line:507:7, col:23> col:23 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x56147b70f6d8 <line:508:22>
| `-NonNullAttr 0x56147b70f730 <col:63, col:80> 1 2
|-FunctionDecl 0x56147b70f9f8 <line:509:1, line:512:82> line:509:12 pthread_mutex_setprioceiling 'int (pthread_mutex_t *restrict, int, int *restrict)' extern
| |-ParmVarDecl 0x56147b70f778 <col:42, col:70> col:70 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x56147b70f7f8 <line:510:7, col:11> col:11 __prioceiling 'int'
| |-ParmVarDecl 0x56147b70f878 <line:511:7, col:23> col:23 __old_ceiling 'int *restrict'
| |-NoThrowAttr 0x56147b70fab0 <line:512:22>
| `-NonNullAttr 0x56147b70fb08 <col:63, col:80> 1 3
|-FunctionDecl 0x56147b70fc10 <line:513:1, line:514:79> line:513:12 pthread_mutex_consistent 'int (pthread_mutex_t *)' extern
| |-ParmVarDecl 0x56147b70fb58 <col:38, col:55> col:55 __mutex 'pthread_mutex_t *'
| |-NoThrowAttr 0x56147b70fcb8 <line:514:22>
| `-NonNullAttr 0x56147b70fd10 <col:63, col:77> 1
|-FunctionDecl 0x56147b70ff38 <line:515:1, line:516:79> line:515:12 pthread_mutexattr_init 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x56147b70fdc0 <col:36, col:57> col:57 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x56147b70ffe0 <line:516:22>
| `-NonNullAttr 0x56147b710038 <col:63, col:77> 1
|-FunctionDecl 0x56147b710140 <line:517:1, line:518:79> line:517:12 pthread_mutexattr_destroy 'int (pthread_mutexattr_t *)' extern
| |-ParmVarDecl 0x56147b710088 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-NoThrowAttr 0x56147b7101e8 <line:518:22>
| `-NonNullAttr 0x56147b710240 <col:63, col:77> 1
|-FunctionDecl 0x56147b710468 <line:519:1, line:522:82> line:519:12 pthread_mutexattr_getpshared 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56147b710288 <col:42, line:520:18> col:18 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x56147b710308 <line:521:7, col:23> col:23 __pshared 'int *restrict'
| |-NoThrowAttr 0x56147b710518 <line:522:22>
| `-NonNullAttr 0x56147b710570 <col:63, col:80> 1 2
|-FunctionDecl 0x56147b710778 <line:523:1, line:525:79> line:523:12 pthread_mutexattr_setpshared 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x56147b7105b8 <col:42, col:63> col:63 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x56147b710638 <line:524:7, col:11> col:11 __pshared 'int'
| |-NoThrowAttr 0x56147b710828 <line:525:22>
| `-NonNullAttr 0x56147b710880 <col:63, col:77> 1
|-FunctionDecl 0x56147b710a28 <line:526:1, line:528:82> line:526:12 pthread_mutexattr_gettype 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56147b7108c8 <col:39, line:527:11> col:11 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x56147b710948 <col:19, col:35> col:35 __kind 'int *restrict'
| |-NoThrowAttr 0x56147b710ad8 <line:528:22>
| `-NonNullAttr 0x56147b710b30 <col:63, col:80> 1 2
|-FunctionDecl 0x56147b710cb8 <line:529:1, line:530:79> line:529:12 pthread_mutexattr_settype 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x56147b710b78 <col:39, col:60> col:60 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x56147b710bf8 <col:68, col:72> col:72 __kind 'int'
| |-NoThrowAttr 0x56147b710d68 <line:530:22>
| `-NonNullAttr 0x56147b710dc0 <col:63, col:77> 1
|-FunctionDecl 0x56147b711f90 <line:531:1, line:534:82> line:531:12 pthread_mutexattr_getprotocol 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56147b710e08 <col:43, line:532:19> col:19 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x56147b711eb0 <line:533:8, col:24> col:24 __protocol 'int *restrict'
| |-NoThrowAttr 0x56147b712040 <line:534:22>
| `-NonNullAttr 0x56147b712098 <col:63, col:80> 1 2
|-FunctionDecl 0x56147b712228 <line:535:1, line:537:79> line:535:12 pthread_mutexattr_setprotocol 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x56147b7120e8 <col:43, col:64> col:64 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x56147b712168 <line:536:8, col:12> col:12 __protocol 'int'
| |-NoThrowAttr 0x56147b7122d8 <line:537:22>
| `-NonNullAttr 0x56147b712330 <col:63, col:77> 1
|-FunctionDecl 0x56147b7124d8 <line:538:1, line:541:82> line:538:12 pthread_mutexattr_getprioceiling 'int (const pthread_mutexattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56147b712378 <col:46, line:539:22> col:22 __attr 'const pthread_mutexattr_t *restrict'
| |-ParmVarDecl 0x56147b7123f8 <line:540:11, col:27> col:27 __prioceiling 'int *restrict'
| |-NoThrowAttr 0x56147b712588 <line:541:22>
| `-NonNullAttr 0x56147b7125e0 <col:63, col:80> 1 2
|-FunctionDecl 0x56147b712768 <line:542:1, line:544:79> line:542:12 pthread_mutexattr_setprioceiling 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x56147b712628 <col:46, col:67> col:67 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x56147b7126a8 <line:543:11, col:15> col:15 __prioceiling 'int'
| |-NoThrowAttr 0x56147b712818 <line:544:22>
| `-NonNullAttr 0x56147b712870 <col:63, col:77> 1
|-FunctionDecl 0x56147b712a58 <line:545:1, line:547:82> line:545:12 pthread_mutexattr_getrobust 'int (const pthread_mutexattr_t *, int *)' extern
| |-ParmVarDecl 0x56147b7128b8 <col:41, col:68> col:68 __attr 'const pthread_mutexattr_t *'
| |-ParmVarDecl 0x56147b712938 <line:546:6, col:11> col:11 __robustness 'int *'
| |-NoThrowAttr 0x56147b712b08 <line:547:22>
| `-NonNullAttr 0x56147b712b60 <col:63, col:80> 1 2
|-FunctionDecl 0x56147b712ce8 <line:548:1, line:550:79> line:548:12 pthread_mutexattr_setrobust 'int (pthread_mutexattr_t *, int)' extern
| |-ParmVarDecl 0x56147b712ba8 <col:41, col:62> col:62 __attr 'pthread_mutexattr_t *'
| |-ParmVarDecl 0x56147b712c28 <line:549:6, col:10> col:10 __robustness 'int'
| |-NoThrowAttr 0x56147b712d98 <line:550:22>
| `-NonNullAttr 0x56147b712df0 <col:63, col:77> 1
|-FunctionDecl 0x56147b714168 <line:551:1, line:553:86> line:551:12 pthread_rwlock_init 'int (pthread_rwlock_t *restrict, const pthread_rwlockattr_t *restrict)' extern
| |-ParmVarDecl 0x56147b713f10 <col:33, col:62> col:62 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x56147b714020 <line:552:5, line:553:5> col:5 __attr 'const pthread_rwlockattr_t *restrict'
| |-NoThrowAttr 0x56147b714218 <col:29>
| `-NonNullAttr 0x56147b714270 <col:70, col:84> 1
|-FunctionDecl 0x56147b7143e8 <line:554:1, line:555:79> line:554:12 pthread_rwlock_destroy 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x56147b7142b8 <col:36, col:54> col:54 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x56147b714490 <line:555:22>
| `-NonNullAttr 0x56147b7144e8 <col:63, col:77> 1
|-FunctionDecl 0x56147b7145f0 <line:556:1, line:557:68> line:556:12 pthread_rwlock_rdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x56147b714538 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x56147b714698 <line:557:22>
| `-NonNullAttr 0x56147b7146f0 <col:52, col:66> 1
|-FunctionDecl 0x56147b7147f0 <line:558:1, line:559:65> line:558:12 pthread_rwlock_tryrdlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x56147b714738 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x56147b714898 <line:559:19>
| `-NonNullAttr 0x56147b7148f0 <col:49, col:63> 1
|-FunctionDecl 0x56147b714b28 <line:560:1, line:562:88> line:560:12 pthread_rwlock_timedrdlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x56147b714938 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x56147b7149c8 <line:561:12, line:562:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x56147b714bd8 <col:39>
| `-NonNullAttr 0x56147b714c30 <col:69, col:86> 1 2
|-FunctionDecl 0x56147b714d30 <line:563:1, line:564:68> line:563:12 pthread_rwlock_wrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x56147b714c78 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x56147b714dd8 <line:564:22>
| `-NonNullAttr 0x56147b714e30 <col:52, col:66> 1
|-FunctionDecl 0x56147b714f98 <line:565:1, line:566:68> line:565:12 pthread_rwlock_trywrlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x56147b714ee0 <col:38, col:56> col:56 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x56147b715040 <line:566:22>
| `-NonNullAttr 0x56147b715098 <col:52, col:66> 1
|-FunctionDecl 0x56147b715258 <line:567:1, line:569:88> line:567:12 pthread_rwlock_timedwrlock 'int (pthread_rwlock_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x56147b7150e8 <col:40, col:69> col:69 __rwlock 'pthread_rwlock_t *restrict'
| |-ParmVarDecl 0x56147b715178 <line:568:12, line:569:12> col:12 __abstime 'const struct timespec *restrict'
| |-NoThrowAttr 0x56147b715308 <col:39>
| `-NonNullAttr 0x56147b715360 <col:69, col:86> 1 2
|-FunctionDecl 0x56147b715460 <line:570:1, line:571:68> line:570:12 pthread_rwlock_unlock 'int (pthread_rwlock_t *)' extern
| |-ParmVarDecl 0x56147b7153a8 <col:35, col:53> col:53 __rwlock 'pthread_rwlock_t *'
| |-NoThrowAttr 0x56147b715508 <line:571:22>
| `-NonNullAttr 0x56147b715560 <col:52, col:66> 1
|-FunctionDecl 0x56147b715748 <line:572:1, line:573:79> line:572:12 pthread_rwlockattr_init 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x56147b715610 <col:37, col:59> col:59 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x56147b7157f0 <line:573:22>
| `-NonNullAttr 0x56147b715848 <col:63, col:77> 1
|-FunctionDecl 0x56147b715950 <line:574:1, line:575:79> line:574:12 pthread_rwlockattr_destroy 'int (pthread_rwlockattr_t *)' extern
| |-ParmVarDecl 0x56147b715898 <col:40, col:62> col:62 __attr 'pthread_rwlockattr_t *'
| |-NoThrowAttr 0x56147b7159f8 <line:575:22>
| `-NonNullAttr 0x56147b715a50 <col:63, col:77> 1
|-FunctionDecl 0x56147b715c78 <line:576:1, line:579:82> line:576:12 pthread_rwlockattr_getpshared 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56147b715a98 <col:43, line:577:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x56147b715b18 <line:578:8, col:24> col:24 __pshared 'int *restrict'
| |-NoThrowAttr 0x56147b715d28 <line:579:22>
| `-NonNullAttr 0x56147b715d80 <col:63, col:80> 1 2
|-FunctionDecl 0x56147b715fa8 <line:580:1, line:582:79> line:580:12 pthread_rwlockattr_setpshared 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x56147b715dc8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x56147b715e48 <line:581:8, col:12> col:12 __pshared 'int'
| |-NoThrowAttr 0x56147b716058 <line:582:22>
| `-NonNullAttr 0x56147b7160b0 <col:63, col:77> 1
|-FunctionDecl 0x56147b716258 <line:583:1, line:586:82> line:583:12 pthread_rwlockattr_getkind_np 'int (const pthread_rwlockattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56147b7160f8 <col:43, line:584:19> col:19 __attr 'const pthread_rwlockattr_t *restrict'
| |-ParmVarDecl 0x56147b716178 <line:585:8, col:24> col:24 __pref 'int *restrict'
| |-NoThrowAttr 0x56147b716308 <line:586:22>
| `-NonNullAttr 0x56147b716360 <col:63, col:80> 1 2
|-FunctionDecl 0x56147b7164e8 <line:587:1, line:588:93> line:587:12 pthread_rwlockattr_setkind_np 'int (pthread_rwlockattr_t *, int)' extern
| |-ParmVarDecl 0x56147b7163a8 <col:43, col:65> col:65 __attr 'pthread_rwlockattr_t *'
| |-ParmVarDecl 0x56147b716428 <line:588:8, col:12> col:12 __pref 'int'
| |-NoThrowAttr 0x56147b716598 <col:36>
| `-NonNullAttr 0x56147b7165f0 <col:77, col:91> 1
|-FunctionDecl 0x56147b716928 <line:589:1, line:591:79> line:589:12 pthread_cond_init 'int (pthread_cond_t *restrict, const pthread_condattr_t *restrict)' extern
| |-ParmVarDecl 0x56147b7166d0 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x56147b7167e0 <line:590:10, col:47> col:47 __cond_attr 'const pthread_condattr_t *restrict'
| |-NoThrowAttr 0x56147b7169d8 <line:591:22>
| `-NonNullAttr 0x56147b716a30 <col:63, col:77> 1
|-FunctionDecl 0x56147b716ba8 <line:592:1, line:593:79> line:592:12 pthread_cond_destroy 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x56147b716a78 <col:34, col:50> col:50 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x56147b716c50 <line:593:22>
| `-NonNullAttr 0x56147b716ca8 <col:63, col:77> 1
|-FunctionDecl 0x56147b716db0 <line:594:1, line:595:68> line:594:12 pthread_cond_signal 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x56147b716cf8 <col:33, col:49> col:49 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x56147b716e58 <line:595:22>
| `-NonNullAttr 0x56147b716eb0 <col:52, col:66> 1
|-FunctionDecl 0x56147b716fc8 <line:596:1, line:597:68> line:596:12 pthread_cond_broadcast 'int (pthread_cond_t *)' extern
| |-ParmVarDecl 0x56147b716f10 <col:36, col:52> col:52 __cond 'pthread_cond_t *'
| |-NoThrowAttr 0x56147b717070 <line:597:22>
| `-NonNullAttr 0x56147b7170c8 <col:52, col:66> 1
|-FunctionDecl 0x56147b7172f8 <line:598:1, line:600:41> line:598:12 pthread_cond_wait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict)' extern
| |-ParmVarDecl 0x56147b717118 <col:31, col:58> col:58 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x56147b717190 <line:599:10, col:38> col:38 __mutex 'pthread_mutex_t *restrict'
| `-NonNullAttr 0x56147b7173a8 <line:600:22, col:39> 1 2
|-FunctionDecl 0x56147b7176d8 <line:601:1, line:604:44> line:601:12 pthread_cond_timedwait 'int (pthread_cond_t *restrict, pthread_mutex_t *restrict, const struct timespec *restrict)' extern
| |-ParmVarDecl 0x56147b717428 <col:36, col:63> col:63 __cond 'pthread_cond_t *restrict'
| |-ParmVarDecl 0x56147b7174a0 <line:602:8, col:36> col:36 __mutex 'pthread_mutex_t *restrict'
| |-ParmVarDecl 0x56147b717530 <line:603:8, col:42> col:42 __abstime 'const struct timespec *restrict'
| `-NonNullAttr 0x56147b717790 <line:604:22, col:42> 1 2 3
|-FunctionDecl 0x56147b7179a8 <line:605:1, line:606:79> line:605:12 pthread_condattr_init 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x56147b717870 <col:35, col:55> col:55 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x56147b717a50 <line:606:22>
| `-NonNullAttr 0x56147b717aa8 <col:63, col:77> 1
|-FunctionDecl 0x56147b717bb0 <line:607:1, line:608:79> line:607:12 pthread_condattr_destroy 'int (pthread_condattr_t *)' extern
| |-ParmVarDecl 0x56147b717af8 <col:38, col:58> col:58 __attr 'pthread_condattr_t *'
| |-NoThrowAttr 0x56147b717c58 <line:608:22>
| `-NonNullAttr 0x56147b717cb0 <col:63, col:77> 1
|-FunctionDecl 0x56147b717f10 <line:609:1, line:612:82> line:609:12 pthread_condattr_getpshared 'int (const pthread_condattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56147b717cf8 <col:41, line:610:17> col:17 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x56147b717d78 <line:611:6, col:22> col:22 __pshared 'int *restrict'
| |-NoThrowAttr 0x56147b717fc0 <line:612:22>
| `-NonNullAttr 0x56147b718018 <col:63, col:80> 1 2
|-FunctionDecl 0x56147b718228 <line:613:1, line:614:94> line:613:12 pthread_condattr_setpshared 'int (pthread_condattr_t *, int)' extern
| |-ParmVarDecl 0x56147b718068 <col:41, col:61> col:61 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x56147b7180e8 <line:614:6, col:10> col:10 __pshared 'int'
| |-NoThrowAttr 0x56147b7182d8 <col:37>
| `-NonNullAttr 0x56147b718330 <col:78, col:92> 1
|-FunctionDecl 0x56147b718548 <line:615:1, line:618:82> line:615:12 pthread_condattr_getclock 'int (const pthread_condattr_t *restrict, __clockid_t *restrict)' extern
| |-ParmVarDecl 0x56147b718378 <col:39, line:616:22> col:22 __attr 'const pthread_condattr_t *restrict'
| |-ParmVarDecl 0x56147b718420 <line:617:11, col:35> col:35 __clock_id '__clockid_t *restrict'
| |-NoThrowAttr 0x56147b7185f8 <line:618:22>
| `-NonNullAttr 0x56147b718650 <col:63, col:80> 1 2
|-FunctionDecl 0x56147b718818 <line:619:1, line:621:79> line:619:12 pthread_condattr_setclock 'int (pthread_condattr_t *, __clockid_t)' extern
| |-ParmVarDecl 0x56147b718698 <col:39, col:59> col:59 __attr 'pthread_condattr_t *'
| |-ParmVarDecl 0x56147b718710 <line:620:11, col:23> col:23 __clock_id '__clockid_t':'int'
| |-NoThrowAttr 0x56147b7188c8 <line:621:22>
| `-NonNullAttr 0x56147b718920 <col:63, col:77> 1
|-FunctionDecl 0x56147b718bc8 <line:622:1, line:623:79> line:622:12 pthread_spin_init 'int (pthread_spinlock_t *, int)' extern
| |-ParmVarDecl 0x56147b718a00 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-ParmVarDecl 0x56147b718a80 <col:59, col:63> col:63 __pshared 'int'
| |-NoThrowAttr 0x56147b718c78 <line:623:22>
| `-NonNullAttr 0x56147b718cd0 <col:63, col:77> 1
|-FunctionDecl 0x56147b718e48 <line:624:1, line:625:79> line:624:12 pthread_spin_destroy 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x56147b718d18 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x56147b718f20 <line:625:22>
| `-NonNullAttr 0x56147b718f78 <col:63, col:77> 1
|-FunctionDecl 0x56147b719080 <line:626:1, line:627:68> line:626:12 pthread_spin_lock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x56147b718fc8 <col:31, col:51> col:51 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x56147b719128 <line:627:22>
| `-NonNullAttr 0x56147b719180 <col:52, col:66> 1
|-FunctionDecl 0x56147b719280 <line:628:1, line:629:68> line:628:12 pthread_spin_trylock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x56147b7191c8 <col:34, col:54> col:54 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x56147b719328 <line:629:22>
| `-NonNullAttr 0x56147b719380 <col:52, col:66> 1
|-FunctionDecl 0x56147b719480 <line:630:1, line:631:68> line:630:12 pthread_spin_unlock 'int (pthread_spinlock_t *)' extern
| |-ParmVarDecl 0x56147b7193c8 <col:33, col:53> col:53 __lock 'pthread_spinlock_t *'
| |-NoThrowAttr 0x56147b719528 <line:631:22>
| `-NonNullAttr 0x56147b719580 <col:52, col:66> 1
|-FunctionDecl 0x56147b719958 <line:632:1, line:635:79> line:632:12 pthread_barrier_init 'int (pthread_barrier_t *restrict, const pthread_barrierattr_t *restrict, unsigned int)' extern
| |-ParmVarDecl 0x56147b719660 <col:34, col:64> col:64 __barrier 'pthread_barrier_t *restrict'
| |-ParmVarDecl 0x56147b719770 <line:633:6, line:634:6> col:6 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x56147b7197f0 <col:14, col:27> col:27 __count 'unsigned int'
| |-NoThrowAttr 0x56147b719a10 <line:635:22>
| `-NonNullAttr 0x56147b719a68 <col:63, col:77> 1
|-FunctionDecl 0x56147b719be8 <line:636:1, line:637:79> line:636:12 pthread_barrier_destroy 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x56147b719ab8 <col:37, col:56> col:56 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x56147b719c90 <line:637:22>
| `-NonNullAttr 0x56147b719ce8 <col:63, col:77> 1
|-FunctionDecl 0x56147b719df0 <line:638:1, line:639:68> line:638:12 pthread_barrier_wait 'int (pthread_barrier_t *)' extern
| |-ParmVarDecl 0x56147b719d38 <col:34, col:53> col:53 __barrier 'pthread_barrier_t *'
| |-NoThrowAttr 0x56147b719e98 <line:639:22>
| `-NonNullAttr 0x56147b719ef0 <col:52, col:66> 1
|-FunctionDecl 0x56147b71a0e8 <line:640:1, line:641:79> line:640:12 pthread_barrierattr_init 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x56147b719fb0 <col:38, col:61> col:61 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x56147b71a190 <line:641:22>
| `-NonNullAttr 0x56147b71a1e8 <col:63, col:77> 1
|-FunctionDecl 0x56147b71a2f0 <line:642:1, line:643:79> line:642:12 pthread_barrierattr_destroy 'int (pthread_barrierattr_t *)' extern
| |-ParmVarDecl 0x56147b71a238 <col:41, col:64> col:64 __attr 'pthread_barrierattr_t *'
| |-NoThrowAttr 0x56147b71a398 <line:643:22>
| `-NonNullAttr 0x56147b71a3f0 <col:63, col:77> 1
|-FunctionDecl 0x56147b71a618 <line:644:1, line:647:82> line:644:12 pthread_barrierattr_getpshared 'int (const pthread_barrierattr_t *restrict, int *restrict)' extern
| |-ParmVarDecl 0x56147b71a438 <col:44, line:645:20> col:20 __attr 'const pthread_barrierattr_t *restrict'
| |-ParmVarDecl 0x56147b71a4b8 <line:646:9, col:25> col:25 __pshared 'int *restrict'
| |-NoThrowAttr 0x56147b71a6c8 <line:647:22>
| `-NonNullAttr 0x56147b71a720 <col:63, col:80> 1 2
|-FunctionDecl 0x56147b71a928 <line:648:1, line:650:79> line:648:12 pthread_barrierattr_setpshared 'int (pthread_barrierattr_t *, int)' extern
| |-ParmVarDecl 0x56147b71a768 <col:44, col:67> col:67 __attr 'pthread_barrierattr_t *'
| |-ParmVarDecl 0x56147b71a7e8 <line:649:9, col:13> col:13 __pshared 'int'
| |-NoThrowAttr 0x56147b71a9d8 <line:650:22>
| `-NonNullAttr 0x56147b71aa30 <col:63, col:77> 1
|-FunctionDecl 0x56147b71ad78 <line:651:1, line:653:79> line:651:12 pthread_key_create 'int (pthread_key_t *, void (*)(void *))' extern
| |-ParmVarDecl 0x56147b71ab10 <col:32, col:47> col:47 __key 'pthread_key_t *'
| |-ParmVarDecl 0x56147b71ac30 <line:652:11, col:43> col:18 __destr_function 'void (*)(void *)'
| |-NoThrowAttr 0x56147b71ae28 <line:653:22>
| `-NonNullAttr 0x56147b71ae80 <col:63, col:77> 1
|-FunctionDecl 0x56147b71afe8 <line:654:1, col:92> col:12 pthread_key_delete 'int (pthread_key_t)' extern
| |-ParmVarDecl 0x56147b71aec8 <col:32, col:46> col:46 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x56147b71b090 <col:69>
|-FunctionDecl 0x56147b71b208 <line:655:1, col:95> col:14 pthread_getspecific 'void *(pthread_key_t)' extern
| |-ParmVarDecl 0x56147b71b0f8 <col:35, col:49> col:49 __key 'pthread_key_t':'unsigned int'
| `-NoThrowAttr 0x56147b71b2b0 <col:72>
|-FunctionDecl 0x56147b71b4e8 <line:656:1, line:657:67> line:656:12 pthread_setspecific 'int (pthread_key_t, const void *)' extern
| |-ParmVarDecl 0x56147b71b318 <col:33, col:47> col:47 __key 'pthread_key_t':'unsigned int'
| |-ParmVarDecl 0x56147b71b3c8 <line:657:5, col:17> col:17 __pointer 'const void *'
| `-NoThrowAttr 0x56147b71b598 <col:44>
|-FunctionDecl 0x56147b71b7b8 <line:658:1, line:660:79> line:658:12 pthread_getcpuclockid 'int (pthread_t, __clockid_t *)' extern
| |-ParmVarDecl 0x56147b71b600 <col:35, col:45> col:45 __thread_id 'pthread_t':'unsigned long'
| |-ParmVarDecl 0x56147b71b678 <line:659:7, col:20> col:20 __clock_id '__clockid_t *'
| |-NoThrowAttr 0x56147b71b868 <line:660:22>
| `-NonNullAttr 0x56147b71b8c0 <col:63, col:77> 2
|-FunctionDecl 0x56147b71bd08 <line:661:1, line:663:70> line:661:12 pthread_atfork 'int (void (*)(void), void (*)(void), void (*)(void))' extern
| |-ParmVarDecl 0x56147b71b9a0 <col:28, col:51> col:35 __prepare 'void (*)(void)'
| |-ParmVarDecl 0x56147b71bab0 <line:662:7, col:29> col:14 __parent 'void (*)(void)'
| |-ParmVarDecl 0x56147b71bbc0 <line:663:7, col:28> col:14 __child 'void (*)(void)'
| `-NoThrowAttr 0x56147b71bdc0 <col:47>
|-FunctionDecl 0x56147b71cf60 <line:665:1, col:20> col:8 used P0 'void *(void *)'
| `-ParmVarDecl 0x56147b71be30 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x56147b71d0b8 <line:666:1, col:20> col:8 used P1 'void *(void *)'
| `-ParmVarDecl 0x56147b71d020 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x56147b71d210 <line:667:1, col:20> col:8 used P2 'void *(void *)'
| `-ParmVarDecl 0x56147b71d178 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x56147b71d368 <line:668:1, col:20> col:8 used P3 'void *(void *)'
| `-ParmVarDecl 0x56147b71d2d0 <col:11, col:17> col:17 arg 'void *'
|-FunctionDecl 0x56147b71d430 <line:669:1, col:12> col:6 fence 'void ()'
|-FunctionDecl 0x56147b71d4f0 <line:670:1, col:12> col:6 isync 'void ()'
|-FunctionDecl 0x56147b71d5b0 <line:671:1, col:14> col:6 lwfence 'void ()'
|-VarDecl 0x56147b71d668 <line:672:1, col:5> col:5 used __unbuffered_cnt 'int'
|-VarDecl 0x56147b71d6e8 prev 0x56147b71d668 <line:673:1, col:24> col:5 used __unbuffered_cnt 'int' cinit
| `-IntegerLiteral 0x56147b71d750 <col:24> 'int' 0
|-VarDecl 0x56147b71d788 <line:674:1, col:5> col:5 used __unbuffered_p0_EAX 'int'
|-VarDecl 0x56147b71d808 prev 0x56147b71d788 <line:675:1, col:27> col:5 used __unbuffered_p0_EAX 'int' cinit
| `-IntegerLiteral 0x56147b71d870 <col:27> 'int' 0
|-VarDecl 0x56147b71d8a8 <line:676:1, col:5> col:5 used __unbuffered_p1_EAX 'int'
|-VarDecl 0x56147b71d928 prev 0x56147b71d8a8 <line:677:1, col:27> col:5 used __unbuffered_p1_EAX 'int' cinit
| `-IntegerLiteral 0x56147b71d990 <col:27> 'int' 0
|-VarDecl 0x56147b71d9c8 <line:678:1, col:5> col:5 used __unbuffered_p2_EAX 'int'
|-VarDecl 0x56147b71da48 prev 0x56147b71d9c8 <line:679:1, col:27> col:5 used __unbuffered_p2_EAX 'int' cinit
| `-IntegerLiteral 0x56147b71dab0 <col:27> 'int' 0
|-VarDecl 0x56147b71dae8 <line:680:1, col:5> col:5 used __unbuffered_p2_EBX 'int'
|-VarDecl 0x56147b71db68 prev 0x56147b71dae8 <line:681:1, col:27> col:5 used __unbuffered_p2_EBX 'int' cinit
| `-IntegerLiteral 0x56147b71dbd0 <col:27> 'int' 0
|-VarDecl 0x56147b71dc08 <line:682:1, col:5> col:5 used __unbuffered_p3_EAX 'int'
|-VarDecl 0x56147b71dc88 prev 0x56147b71dc08 <line:683:1, col:27> col:5 used __unbuffered_p3_EAX 'int' cinit
| `-IntegerLiteral 0x56147b71dcf0 <col:27> 'int' 0
|-VarDecl 0x56147b71dd28 <line:684:1, col:5> col:5 used __unbuffered_p3_EBX 'int'
|-VarDecl 0x56147b71dda8 prev 0x56147b71dd28 <line:685:1, col:27> col:5 used __unbuffered_p3_EBX 'int' cinit
| `-IntegerLiteral 0x56147b71de10 <col:27> 'int' 0
|-VarDecl 0x56147b71de48 <line:686:1, col:5> col:5 used a 'int'
|-VarDecl 0x56147b71dec8 prev 0x56147b71de48 <line:687:1, col:9> col:5 used a 'int' cinit
| `-IntegerLiteral 0x56147b71df30 <col:9> 'int' 0
|-VarDecl 0x56147b71df70 <line:688:1, col:7> col:7 used main$tmp_guard0 '_Bool'
|-VarDecl 0x56147b71dfe8 <line:689:1, col:7> col:7 used main$tmp_guard1 '_Bool'
|-VarDecl 0x56147b71e068 <line:690:1, col:5> col:5 used x 'int'
|-VarDecl 0x56147b71e0e8 prev 0x56147b71e068 <line:691:1, col:9> col:5 used x 'int' cinit
| `-IntegerLiteral 0x56147b71e150 <col:9> 'int' 0
|-VarDecl 0x56147b71e188 <line:692:1, col:5> col:5 used y 'int'
|-VarDecl 0x56147b71e208 prev 0x56147b71e188 <line:693:1, col:9> col:5 used y 'int' cinit
| `-IntegerLiteral 0x56147b71e270 <col:9> 'int' 0
|-VarDecl 0x56147b71e2a8 <line:694:1, col:5> col:5 used z 'int'
|-VarDecl 0x56147b71e328 prev 0x56147b71e2a8 <line:695:1, col:9> col:5 used z 'int' cinit
| `-IntegerLiteral 0x56147b71e390 <col:9> 'int' 0
|-VarDecl 0x56147b71e3c0 <line:696:1, col:7> col:7 used z$flush_delayed '_Bool'
|-VarDecl 0x56147b71e440 <line:697:1, col:5> col:5 used z$mem_tmp 'int'
|-VarDecl 0x56147b71e4b8 <line:698:1, col:7> col:7 used z$r_buff0_thd0 '_Bool'
|-VarDecl 0x56147b71e530 <line:699:1, col:7> col:7 used z$r_buff0_thd1 '_Bool'
|-VarDecl 0x56147b71e5a8 <line:700:1, col:7> col:7 used z$r_buff0_thd2 '_Bool'
|-VarDecl 0x56147b71e620 <line:701:1, col:7> col:7 used z$r_buff0_thd3 '_Bool'
|-VarDecl 0x56147b71e698 <line:702:1, col:7> col:7 used z$r_buff0_thd4 '_Bool'
|-VarDecl 0x56147b71e710 <line:703:1, col:7> col:7 used z$r_buff1_thd0 '_Bool'
|-VarDecl 0x56147b71e788 <line:704:1, col:7> col:7 used z$r_buff1_thd1 '_Bool'
|-VarDecl 0x56147b71e800 <line:705:1, col:7> col:7 used z$r_buff1_thd2 '_Bool'
|-VarDecl 0x56147b71e878 <line:706:1, col:7> col:7 used z$r_buff1_thd3 '_Bool'
|-VarDecl 0x56147b71e8f0 <line:707:1, col:7> col:7 used z$r_buff1_thd4 '_Bool'
|-VarDecl 0x56147b71e968 <line:708:1, col:7> col:7 z$read_delayed '_Bool'
|-VarDecl 0x56147b71e9e8 <line:709:1, col:6> col:6 z$read_delayed_var 'int *'
|-VarDecl 0x56147b71ea68 <line:710:1, col:5> col:5 used z$w_buff0 'int'
|-VarDecl 0x56147b71eae0 <line:711:1, col:7> col:7 used z$w_buff0_used '_Bool'
|-VarDecl 0x56147b71eb60 <line:712:1, col:5> col:5 used z$w_buff1 'int'
|-VarDecl 0x56147b71ebd8 <line:713:1, col:7> col:7 used z$w_buff1_used '_Bool'
|-VarDecl 0x56147b71ec50 <line:714:1, col:7> col:7 used weak$$choice0 '_Bool'
|-VarDecl 0x56147b71ecc8 <line:715:1, col:7> col:7 used weak$$choice2 '_Bool'
|-FunctionDecl 0x56147b71ede0 prev 0x56147b71cf60 <line:716:1, line:730:1> line:716:8 used P0 'void *(void *)'
| |-ParmVarDecl 0x56147b71ed48 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x56147b71f3d8 <line:717:1, line:730:1>
|   |-CallExpr 0x56147b71eef8 <line:718:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56147b71eee0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56147b71ee88 <col:3> 'void ()' Function 0x56147b6c4350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56147b71ef80 <line:719:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x56147b71ef18 <col:3> 'int' lvalue Var 0x56147b71dec8 'a' 'int'
|   | `-IntegerLiteral 0x56147b71ef38 <col:7> 'int' 1
|   |-CallExpr 0x56147b71efd8 <line:720:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56147b71efc0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56147b71efa0 <col:3> 'void ()' Function 0x56147b6c4410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56147b71f030 <line:721:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56147b71f018 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56147b71eff8 <col:3> 'void ()' Function 0x56147b6c4350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56147b71f0a8 <line:722:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x56147b71f050 <col:3> 'int' lvalue Var 0x56147b71d808 '__unbuffered_p0_EAX' 'int'
|   | `-ImplicitCastExpr 0x56147b71f090 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x56147b71f070 <col:25> 'int' lvalue Var 0x56147b71e0e8 'x' 'int'
|   |-CallExpr 0x56147b71f100 <line:723:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56147b71f0e8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56147b71f0c8 <col:3> 'void ()' Function 0x56147b6c4410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56147b71f158 <line:724:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56147b71f140 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56147b71f120 <col:3> 'void ()' Function 0x56147b6c4350 '__VERIFIER_atomic_begin' 'void ()'
|   |-CallExpr 0x56147b71f1b0 <line:725:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56147b71f198 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56147b71f178 <col:3> 'void ()' Function 0x56147b6c4410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56147b71f208 <line:726:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56147b71f1f0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56147b71f1d0 <col:3> 'void ()' Function 0x56147b6c4350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56147b71f2c0 <line:727:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x56147b71f228 <col:3> 'int' lvalue Var 0x56147b71d6e8 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x56147b71f2a0 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x56147b71f288 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56147b71f248 <col:22> 'int' lvalue Var 0x56147b71d6e8 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x56147b71f268 <col:41> 'int' 1
|   |-CallExpr 0x56147b71f318 <line:728:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56147b71f300 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56147b71f2e0 <col:3> 'void ()' Function 0x56147b6c4410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x56147b71f3c8 <line:729:3, col:36>
|     `-CallExpr 0x56147b71f3a8 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x56147b71f390 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x56147b71f338 <col:10> 'void *(void)' Function 0x56147b6c3e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x56147b71f4f8 prev 0x56147b71d0b8 <line:731:1, line:745:1> line:731:8 used P1 'void *(void *)'
| |-ParmVarDecl 0x56147b71f460 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x56147b71fa58 <line:732:1, line:745:1>
|   |-CallExpr 0x56147b71f5d8 <line:733:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56147b71f5c0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56147b71f5a0 <col:3> 'void ()' Function 0x56147b6c4350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56147b71f638 <line:734:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x56147b71f5f8 <col:3> 'int' lvalue Var 0x56147b71e0e8 'x' 'int'
|   | `-IntegerLiteral 0x56147b71f618 <col:7> 'int' 1
|   |-CallExpr 0x56147b71f690 <line:735:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56147b71f678 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56147b71f658 <col:3> 'void ()' Function 0x56147b6c4410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56147b71f6e8 <line:736:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56147b71f6d0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56147b71f6b0 <col:3> 'void ()' Function 0x56147b6c4350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56147b71f760 <line:737:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x56147b71f708 <col:3> 'int' lvalue Var 0x56147b71d928 '__unbuffered_p1_EAX' 'int'
|   | `-ImplicitCastExpr 0x56147b71f748 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x56147b71f728 <col:25> 'int' lvalue Var 0x56147b71e208 'y' 'int'
|   |-CallExpr 0x56147b71f7b8 <line:738:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56147b71f7a0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56147b71f780 <col:3> 'void ()' Function 0x56147b6c4410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56147b71f810 <line:739:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56147b71f7f8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56147b71f7d8 <col:3> 'void ()' Function 0x56147b6c4350 '__VERIFIER_atomic_begin' 'void ()'
|   |-CallExpr 0x56147b71f868 <line:740:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56147b71f850 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56147b71f830 <col:3> 'void ()' Function 0x56147b6c4410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56147b71f8c0 <line:741:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56147b71f8a8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56147b71f888 <col:3> 'void ()' Function 0x56147b6c4350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56147b71f978 <line:742:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x56147b71f8e0 <col:3> 'int' lvalue Var 0x56147b71d6e8 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x56147b71f958 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x56147b71f940 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56147b71f900 <col:22> 'int' lvalue Var 0x56147b71d6e8 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x56147b71f920 <col:41> 'int' 1
|   |-CallExpr 0x56147b71f9d0 <line:743:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56147b71f9b8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56147b71f998 <col:3> 'void ()' Function 0x56147b6c4410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x56147b71fa48 <line:744:3, col:36>
|     `-CallExpr 0x56147b71fa28 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x56147b71fa10 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x56147b71f9f0 <col:10> 'void *(void)' Function 0x56147b6c3e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x56147b71fb78 prev 0x56147b71d210 <line:746:1, line:776:1> line:746:8 used P2 'void *(void *)'
| |-ParmVarDecl 0x56147b71fae0 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x56147b722ba8 <line:747:1, line:776:1>
|   |-CallExpr 0x56147b71fc58 <line:748:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56147b71fc40 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56147b71fc20 <col:3> 'void ()' Function 0x56147b6c4350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56147b71fcb8 <line:749:3, col:7> 'int' '='
|   | |-DeclRefExpr 0x56147b71fc78 <col:3> 'int' lvalue Var 0x56147b71e208 'y' 'int'
|   | `-IntegerLiteral 0x56147b71fc98 <col:7> 'int' 1
|   |-CallExpr 0x56147b71fd10 <line:750:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56147b71fcf8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56147b71fcd8 <col:3> 'void ()' Function 0x56147b6c4410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56147b71fd68 <line:751:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56147b71fd50 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56147b71fd30 <col:3> 'void ()' Function 0x56147b6c4350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56147b71fde0 <line:752:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x56147b71fd88 <col:3> 'int' lvalue Var 0x56147b71da48 '__unbuffered_p2_EAX' 'int'
|   | `-ImplicitCastExpr 0x56147b71fdc8 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x56147b71fda8 <col:25> 'int' lvalue Var 0x56147b71e208 'y' 'int'
|   |-CallExpr 0x56147b71fe38 <line:753:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56147b71fe20 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56147b71fe00 <col:3> 'void ()' Function 0x56147b6c4410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56147b71fe90 <line:754:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56147b71fe78 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56147b71fe58 <col:3> 'void ()' Function 0x56147b6c4350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56147b71ff40 <line:755:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x56147b71feb0 <col:3> '_Bool' lvalue Var 0x56147b71ec50 'weak$$choice0' '_Bool'
|   | `-ImplicitCastExpr 0x56147b71ff28 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x56147b71ff08 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x56147b71fef0 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x56147b71fed0 <col:19> 'void *(void)' Function 0x56147b6c3e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x56147b720000 <line:756:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x56147b71ff60 <col:3> '_Bool' lvalue Var 0x56147b71ecc8 'weak$$choice2' '_Bool'
|   | `-ImplicitCastExpr 0x56147b71ffe8 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x56147b71ffc8 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x56147b71ffb0 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x56147b71ff90 <col:19> 'void *(void)' Function 0x56147b6c3e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x56147b720078 <line:757:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x56147b720020 <col:3> '_Bool' lvalue Var 0x56147b71e3c0 'z$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x56147b720060 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x56147b720040 <col:21> '_Bool' lvalue Var 0x56147b71ecc8 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x56147b7200f0 <line:758:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x56147b720098 <col:3> 'int' lvalue Var 0x56147b71e440 'z$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x56147b7200d8 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x56147b7200b8 <col:15> 'int' lvalue Var 0x56147b71e328 'z' 'int'
|   |-BinaryOperator 0x56147b720528 <line:759:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x56147b720110 <col:3> 'int' lvalue Var 0x56147b71e328 'z' 'int'
|   | `-ConditionalOperator 0x56147b7204f8 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x56147b720320 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x56147b720240 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x56147b720168 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x56147b720150 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x56147b720130 <col:8> '_Bool' lvalue Var 0x56147b71eae0 'z$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x56147b720220 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x56147b7201b8 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x56147b7201a0 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x56147b720180 <col:27> '_Bool' lvalue Var 0x56147b71e620 'z$r_buff0_thd3' '_Bool'
|   |   | |   `-UnaryOperator 0x56147b720208 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x56147b7201f0 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x56147b7201d0 <col:46> '_Bool' lvalue Var 0x56147b71ebd8 'z$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x56147b720300 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x56147b720298 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x56147b720280 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x56147b720260 <col:65> '_Bool' lvalue Var 0x56147b71e620 'z$r_buff0_thd3' '_Bool'
|   |   |   `-UnaryOperator 0x56147b7202e8 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x56147b7202d0 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x56147b7202b0 <col:84> '_Bool' lvalue Var 0x56147b71e878 'z$r_buff1_thd3' '_Bool'
|   |   |-ImplicitCastExpr 0x56147b7204e0 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56147b720340 <col:101> 'int' lvalue Var 0x56147b71e328 'z' 'int'
|   |   `-ParenExpr 0x56147b7204c0 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x56147b720490 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x56147b720400 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x56147b7203b8 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x56147b7203a0 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x56147b720360 <col:106> '_Bool' lvalue Var 0x56147b71eae0 'z$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x56147b7203e8 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x56147b7203d0 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x56147b720380 <col:124> '_Bool' lvalue Var 0x56147b71e620 'z$r_buff0_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x56147b720460 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x56147b720420 <col:141> 'int' lvalue Var 0x56147b71ea68 'z$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x56147b720478 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x56147b720440 <col:153> 'int' lvalue Var 0x56147b71eb60 'z$w_buff1' 'int'
|   |-BinaryOperator 0x56147b720a38 <line:760:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x56147b720548 <col:3> 'int' lvalue Var 0x56147b71ea68 'z$w_buff0' 'int'
|   | `-ConditionalOperator 0x56147b720a08 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x56147b7209d8 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x56147b7209c0 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x56147b720568 <col:15> '_Bool' lvalue Var 0x56147b71ecc8 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x56147b7209f0 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56147b720588 <col:31> 'int' lvalue Var 0x56147b71ea68 'z$w_buff0' 'int'
|   |   `-ParenExpr 0x56147b7209a0 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x56147b720970 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x56147b720798 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x56147b7206b8 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x56147b7205e0 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x56147b7205c8 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x56147b7205a8 <col:45> '_Bool' lvalue Var 0x56147b71eae0 'z$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x56147b720698 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x56147b720630 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x56147b720618 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x56147b7205f8 <col:64> '_Bool' lvalue Var 0x56147b71e620 'z$r_buff0_thd3' '_Bool'
|   |       | |   `-UnaryOperator 0x56147b720680 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x56147b720668 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x56147b720648 <col:83> '_Bool' lvalue Var 0x56147b71ebd8 'z$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x56147b720778 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x56147b720710 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x56147b7206f8 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x56147b7206d8 <col:102> '_Bool' lvalue Var 0x56147b71e620 'z$r_buff0_thd3' '_Bool'
|   |       |   `-UnaryOperator 0x56147b720760 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x56147b720748 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x56147b720728 <col:121> '_Bool' lvalue Var 0x56147b71e878 'z$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x56147b720958 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x56147b7207b8 <col:138> 'int' lvalue Var 0x56147b71ea68 'z$w_buff0' 'int'
|   |       `-ParenExpr 0x56147b720938 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x56147b720908 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x56147b720878 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x56147b720830 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x56147b720818 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x56147b7207d8 <col:151> '_Bool' lvalue Var 0x56147b71eae0 'z$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x56147b720860 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x56147b720848 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x56147b7207f8 <col:169> '_Bool' lvalue Var 0x56147b71e620 'z$r_buff0_thd3' '_Bool'
|   |           |-ImplicitCastExpr 0x56147b7208d8 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x56147b720898 <col:186> 'int' lvalue Var 0x56147b71ea68 'z$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x56147b7208f0 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x56147b7208b8 <col:198> 'int' lvalue Var 0x56147b71ea68 'z$w_buff0' 'int'
|   |-BinaryOperator 0x56147b720f48 <line:761:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x56147b720a58 <col:3> 'int' lvalue Var 0x56147b71eb60 'z$w_buff1' 'int'
|   | `-ConditionalOperator 0x56147b720f18 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x56147b720ee8 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x56147b720ed0 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x56147b720a78 <col:15> '_Bool' lvalue Var 0x56147b71ecc8 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x56147b720f00 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56147b720a98 <col:31> 'int' lvalue Var 0x56147b71eb60 'z$w_buff1' 'int'
|   |   `-ParenExpr 0x56147b720eb0 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x56147b720e80 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x56147b720ca8 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x56147b720bc8 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x56147b720af0 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x56147b720ad8 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x56147b720ab8 <col:45> '_Bool' lvalue Var 0x56147b71eae0 'z$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x56147b720ba8 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x56147b720b40 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x56147b720b28 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x56147b720b08 <col:64> '_Bool' lvalue Var 0x56147b71e620 'z$r_buff0_thd3' '_Bool'
|   |       | |   `-UnaryOperator 0x56147b720b90 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x56147b720b78 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x56147b720b58 <col:83> '_Bool' lvalue Var 0x56147b71ebd8 'z$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x56147b720c88 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x56147b720c20 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x56147b720c08 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x56147b720be8 <col:102> '_Bool' lvalue Var 0x56147b71e620 'z$r_buff0_thd3' '_Bool'
|   |       |   `-UnaryOperator 0x56147b720c70 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x56147b720c58 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x56147b720c38 <col:121> '_Bool' lvalue Var 0x56147b71e878 'z$r_buff1_thd3' '_Bool'
|   |       |-ImplicitCastExpr 0x56147b720e68 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x56147b720cc8 <col:138> 'int' lvalue Var 0x56147b71eb60 'z$w_buff1' 'int'
|   |       `-ParenExpr 0x56147b720e48 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x56147b720e18 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x56147b720d88 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x56147b720d40 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x56147b720d28 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x56147b720ce8 <col:151> '_Bool' lvalue Var 0x56147b71eae0 'z$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x56147b720d70 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x56147b720d58 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x56147b720d08 <col:169> '_Bool' lvalue Var 0x56147b71e620 'z$r_buff0_thd3' '_Bool'
|   |           |-ImplicitCastExpr 0x56147b720de8 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x56147b720da8 <col:186> 'int' lvalue Var 0x56147b71eb60 'z$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x56147b720e00 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x56147b720dc8 <col:198> 'int' lvalue Var 0x56147b71eb60 'z$w_buff1' 'int'
|   |-BinaryOperator 0x56147b721508 <line:762:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x56147b720f68 <col:3> '_Bool' lvalue Var 0x56147b71eae0 'z$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x56147b7214f0 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56147b7214c0 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x56147b721478 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x56147b721460 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x56147b720fa0 <col:20> '_Bool' lvalue Var 0x56147b71ecc8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x56147b7214a8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x56147b721490 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x56147b720fc0 <col:36> '_Bool' lvalue Var 0x56147b71eae0 'z$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x56147b721440 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x56147b721410 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x56147b7211d0 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x56147b7210f0 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x56147b721018 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x56147b721000 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x56147b720fe0 <col:55> '_Bool' lvalue Var 0x56147b71eae0 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x56147b7210d0 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x56147b721068 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x56147b721050 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x56147b721030 <col:74> '_Bool' lvalue Var 0x56147b71e620 'z$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x56147b7210b8 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x56147b7210a0 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x56147b721080 <col:93> '_Bool' lvalue Var 0x56147b71ebd8 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x56147b7211b0 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x56147b721148 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x56147b721130 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x56147b721110 <col:112> '_Bool' lvalue Var 0x56147b71e620 'z$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x56147b721198 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x56147b721180 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x56147b721160 <col:131> '_Bool' lvalue Var 0x56147b71e878 'z$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x56147b7213f8 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x56147b7213e0 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x56147b7211f0 <col:148> '_Bool' lvalue Var 0x56147b71eae0 'z$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x56147b7213c0 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x56147b721390 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x56147b7212b0 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x56147b721268 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x56147b721250 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x56147b721210 <col:166> '_Bool' lvalue Var 0x56147b71eae0 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x56147b721298 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x56147b721280 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x56147b721230 <col:184> '_Bool' lvalue Var 0x56147b71e620 'z$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x56147b721348 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x56147b721300 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x56147b7212d0 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x56147b721378 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x56147b721360 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x56147b721328 <col:212> '_Bool' lvalue Var 0x56147b71eae0 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x56147b721ad0 <line:763:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x56147b721528 <col:3> '_Bool' lvalue Var 0x56147b71ebd8 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x56147b721ab8 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56147b721a88 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x56147b721a40 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x56147b721a28 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x56147b721548 <col:20> '_Bool' lvalue Var 0x56147b71ecc8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x56147b721a70 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x56147b721a58 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x56147b721568 <col:36> '_Bool' lvalue Var 0x56147b71ebd8 'z$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x56147b721a08 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x56147b7219d8 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x56147b721778 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x56147b721698 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x56147b7215c0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x56147b7215a8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x56147b721588 <col:55> '_Bool' lvalue Var 0x56147b71eae0 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x56147b721678 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x56147b721610 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x56147b7215f8 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x56147b7215d8 <col:74> '_Bool' lvalue Var 0x56147b71e620 'z$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x56147b721660 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x56147b721648 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x56147b721628 <col:93> '_Bool' lvalue Var 0x56147b71ebd8 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x56147b721758 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x56147b7216f0 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x56147b7216d8 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x56147b7216b8 <col:112> '_Bool' lvalue Var 0x56147b71e620 'z$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x56147b721740 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x56147b721728 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x56147b721708 <col:131> '_Bool' lvalue Var 0x56147b71e878 'z$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x56147b7219c0 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x56147b7219a8 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x56147b721798 <col:148> '_Bool' lvalue Var 0x56147b71ebd8 'z$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x56147b721988 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x56147b721958 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x56147b721858 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x56147b721810 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x56147b7217f8 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x56147b7217b8 <col:166> '_Bool' lvalue Var 0x56147b71eae0 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x56147b721840 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x56147b721828 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x56147b7217d8 <col:184> '_Bool' lvalue Var 0x56147b71e620 'z$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x56147b721928 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x56147b7218a8 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x56147b721878 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x56147b721940 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x56147b721900 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x56147b7218d0 <col:219> 'int' 0
|   |-BinaryOperator 0x56147b7220a8 <line:764:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x56147b721af0 <col:3> '_Bool' lvalue Var 0x56147b71e620 'z$r_buff0_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x56147b722090 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56147b722060 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x56147b722018 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x56147b722000 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x56147b721b10 <col:20> '_Bool' lvalue Var 0x56147b71ecc8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x56147b722048 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x56147b722030 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x56147b721b30 <col:36> '_Bool' lvalue Var 0x56147b71e620 'z$r_buff0_thd3' '_Bool'
|   |     `-ParenExpr 0x56147b721fe0 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x56147b721fb0 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x56147b721d40 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x56147b721c60 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x56147b721b88 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x56147b721b70 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x56147b721b50 <col:55> '_Bool' lvalue Var 0x56147b71eae0 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x56147b721c40 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x56147b721bd8 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x56147b721bc0 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x56147b721ba0 <col:74> '_Bool' lvalue Var 0x56147b71e620 'z$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x56147b721c28 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x56147b721c10 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x56147b721bf0 <col:93> '_Bool' lvalue Var 0x56147b71ebd8 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x56147b721d20 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x56147b721cb8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x56147b721ca0 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x56147b721c80 <col:112> '_Bool' lvalue Var 0x56147b71e620 'z$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x56147b721d08 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x56147b721cf0 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x56147b721cd0 <col:131> '_Bool' lvalue Var 0x56147b71e878 'z$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x56147b721f68 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x56147b721f50 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x56147b721d60 <col:148> '_Bool' lvalue Var 0x56147b71e620 'z$r_buff0_thd3' '_Bool'
|   |         `-ParenExpr 0x56147b721f30 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x56147b721f00 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x56147b721e20 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x56147b721dd8 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x56147b721dc0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x56147b721d80 <col:166> '_Bool' lvalue Var 0x56147b71eae0 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x56147b721e08 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x56147b721df0 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x56147b721da0 <col:184> '_Bool' lvalue Var 0x56147b71e620 'z$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x56147b721eb8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x56147b721e70 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x56147b721e40 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x56147b721ee8 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x56147b721ed0 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x56147b721e98 <col:212> '_Bool' lvalue Var 0x56147b71e620 'z$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x56147b722670 <line:765:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x56147b7220c8 <col:3> '_Bool' lvalue Var 0x56147b71e878 'z$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x56147b722658 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56147b722628 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x56147b7225e0 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x56147b7225c8 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x56147b7220e8 <col:20> '_Bool' lvalue Var 0x56147b71ecc8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x56147b722610 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x56147b7225f8 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x56147b722108 <col:36> '_Bool' lvalue Var 0x56147b71e878 'z$r_buff1_thd3' '_Bool'
|   |     `-ParenExpr 0x56147b7225a8 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x56147b722578 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x56147b722318 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x56147b722238 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x56147b722160 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x56147b722148 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x56147b722128 <col:55> '_Bool' lvalue Var 0x56147b71eae0 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x56147b722218 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x56147b7221b0 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x56147b722198 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x56147b722178 <col:74> '_Bool' lvalue Var 0x56147b71e620 'z$r_buff0_thd3' '_Bool'
|   |         | |   `-UnaryOperator 0x56147b722200 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x56147b7221e8 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x56147b7221c8 <col:93> '_Bool' lvalue Var 0x56147b71ebd8 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x56147b7222f8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x56147b722290 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x56147b722278 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x56147b722258 <col:112> '_Bool' lvalue Var 0x56147b71e620 'z$r_buff0_thd3' '_Bool'
|   |         |   `-UnaryOperator 0x56147b7222e0 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x56147b7222c8 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x56147b7222a8 <col:131> '_Bool' lvalue Var 0x56147b71e878 'z$r_buff1_thd3' '_Bool'
|   |         |-ImplicitCastExpr 0x56147b722560 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x56147b722548 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x56147b722338 <col:148> '_Bool' lvalue Var 0x56147b71e878 'z$r_buff1_thd3' '_Bool'
|   |         `-ParenExpr 0x56147b722528 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x56147b7224f8 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x56147b7223f8 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x56147b7223b0 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x56147b722398 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x56147b722358 <col:166> '_Bool' lvalue Var 0x56147b71eae0 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x56147b7223e0 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x56147b7223c8 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x56147b722378 <col:184> '_Bool' lvalue Var 0x56147b71e620 'z$r_buff0_thd3' '_Bool'
|   |             |-ImplicitCastExpr 0x56147b7224c8 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x56147b722448 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x56147b722418 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x56147b7224e0 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x56147b7224a0 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x56147b722470 <col:219> 'int' 0
|   |-BinaryOperator 0x56147b7226e8 <line:766:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x56147b722690 <col:3> 'int' lvalue Var 0x56147b71db68 '__unbuffered_p2_EBX' 'int'
|   | `-ImplicitCastExpr 0x56147b7226d0 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x56147b7226b0 <col:25> 'int' lvalue Var 0x56147b71e328 'z' 'int'
|   |-BinaryOperator 0x56147b722818 <line:767:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x56147b722708 <col:3> 'int' lvalue Var 0x56147b71e328 'z' 'int'
|   | `-ConditionalOperator 0x56147b7227e8 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x56147b7227a0 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x56147b722788 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x56147b722728 <col:7> '_Bool' lvalue Var 0x56147b71e3c0 'z$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x56147b7227b8 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56147b722748 <col:25> 'int' lvalue Var 0x56147b71e440 'z$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x56147b7227d0 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x56147b722768 <col:37> 'int' lvalue Var 0x56147b71e328 'z' 'int'
|   |-BinaryOperator 0x56147b7228b0 <line:768:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x56147b722838 <col:3> '_Bool' lvalue Var 0x56147b71e3c0 'z$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x56147b722888 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x56147b722858 <col:28> 'int' 0
|   |-CallExpr 0x56147b722908 <line:769:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56147b7228f0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56147b7228d0 <col:3> 'void ()' Function 0x56147b6c4410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56147b722960 <line:770:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56147b722948 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56147b722928 <col:3> 'void ()' Function 0x56147b6c4350 '__VERIFIER_atomic_begin' 'void ()'
|   |-CallExpr 0x56147b7229b8 <line:771:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56147b7229a0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56147b722980 <col:3> 'void ()' Function 0x56147b6c4410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56147b722a10 <line:772:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56147b7229f8 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56147b7229d8 <col:3> 'void ()' Function 0x56147b6c4350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56147b722ac8 <line:773:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x56147b722a30 <col:3> 'int' lvalue Var 0x56147b71d6e8 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x56147b722aa8 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x56147b722a90 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56147b722a50 <col:22> 'int' lvalue Var 0x56147b71d6e8 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x56147b722a70 <col:41> 'int' 1
|   |-CallExpr 0x56147b722b20 <line:774:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56147b722b08 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56147b722ae8 <col:3> 'void ()' Function 0x56147b6c4410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x56147b722b98 <line:775:3, col:36>
|     `-CallExpr 0x56147b722b78 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x56147b722b60 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x56147b722b40 <col:10> 'void *(void)' Function 0x56147b6c3e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x56147b722d48 prev 0x56147b71d368 <line:777:1, line:822:1> line:777:8 used P3 'void *(void *)'
| |-ParmVarDecl 0x56147b722cb0 <col:11, col:17> col:17 arg 'void *'
| `-CompoundStmt 0x56147b727088 <line:778:1, line:822:1>
|   |-CallExpr 0x56147b722e28 <line:779:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56147b722e10 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56147b722df0 <col:3> 'void ()' Function 0x56147b6c4350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56147b722ea0 <line:780:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x56147b722e48 <col:3> 'int' lvalue Var 0x56147b71eb60 'z$w_buff1' 'int'
|   | `-ImplicitCastExpr 0x56147b722e88 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x56147b722e68 <col:15> 'int' lvalue Var 0x56147b71ea68 'z$w_buff0' 'int'
|   |-BinaryOperator 0x56147b722f00 <line:781:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x56147b722ec0 <col:3> 'int' lvalue Var 0x56147b71ea68 'z$w_buff0' 'int'
|   | `-IntegerLiteral 0x56147b722ee0 <col:15> 'int' 1
|   |-BinaryOperator 0x56147b722f78 <line:782:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x56147b722f20 <col:3> '_Bool' lvalue Var 0x56147b71ebd8 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x56147b722f60 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x56147b722f40 <col:20> '_Bool' lvalue Var 0x56147b71eae0 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x56147b723038 <line:783:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x56147b722fc0 <col:3> '_Bool' lvalue Var 0x56147b71eae0 'z$w_buff0_used' '_Bool'
|   | `-CStyleCastExpr 0x56147b723010 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x56147b722fe0 <col:27> 'int' 1
|   |-CallExpr 0x56147b7231b8 <line:784:3, col:56> 'void'
|   | |-ImplicitCastExpr 0x56147b7231a0 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x56147b723058 <col:3> 'void (int)' Function 0x56147b6c40d8 '__VERIFIER_assert' 'void (int)'
|   | `-UnaryOperator 0x56147b723158 <col:21, col:55> 'int' prefix '!' cannot overflow
|   |   `-ParenExpr 0x56147b723138 <col:22, col:55> 'int'
|   |     `-BinaryOperator 0x56147b723118 <col:23, col:41> 'int' '&&'
|   |       |-ImplicitCastExpr 0x56147b7230d0 <col:23> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x56147b7230b8 <col:23> '_Bool' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x56147b723078 <col:23> '_Bool' lvalue Var 0x56147b71ebd8 'z$w_buff1_used' '_Bool'
|   |       `-ImplicitCastExpr 0x56147b723100 <col:41> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x56147b7230e8 <col:41> '_Bool' <LValueToRValue>
|   |           `-DeclRefExpr 0x56147b723098 <col:41> '_Bool' lvalue Var 0x56147b71eae0 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x56147b723238 <line:785:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x56147b7231e0 <col:3> '_Bool' lvalue Var 0x56147b71e710 'z$r_buff1_thd0' '_Bool'
|   | `-ImplicitCastExpr 0x56147b723220 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x56147b723200 <col:20> '_Bool' lvalue Var 0x56147b71e4b8 'z$r_buff0_thd0' '_Bool'
|   |-BinaryOperator 0x56147b7232b0 <line:786:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x56147b723258 <col:3> '_Bool' lvalue Var 0x56147b71e788 'z$r_buff1_thd1' '_Bool'
|   | `-ImplicitCastExpr 0x56147b723298 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x56147b723278 <col:20> '_Bool' lvalue Var 0x56147b71e530 'z$r_buff0_thd1' '_Bool'
|   |-BinaryOperator 0x56147b723328 <line:787:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x56147b7232d0 <col:3> '_Bool' lvalue Var 0x56147b71e800 'z$r_buff1_thd2' '_Bool'
|   | `-ImplicitCastExpr 0x56147b723310 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x56147b7232f0 <col:20> '_Bool' lvalue Var 0x56147b71e5a8 'z$r_buff0_thd2' '_Bool'
|   |-BinaryOperator 0x56147b7233a0 <line:788:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x56147b723348 <col:3> '_Bool' lvalue Var 0x56147b71e878 'z$r_buff1_thd3' '_Bool'
|   | `-ImplicitCastExpr 0x56147b723388 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x56147b723368 <col:20> '_Bool' lvalue Var 0x56147b71e620 'z$r_buff0_thd3' '_Bool'
|   |-BinaryOperator 0x56147b723418 <line:789:3, col:20> '_Bool' '='
|   | |-DeclRefExpr 0x56147b7233c0 <col:3> '_Bool' lvalue Var 0x56147b71e8f0 'z$r_buff1_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x56147b723400 <col:20> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x56147b7233e0 <col:20> '_Bool' lvalue Var 0x56147b71e698 'z$r_buff0_thd4' '_Bool'
|   |-BinaryOperator 0x56147b7234b0 <line:790:3, col:27> '_Bool' '='
|   | |-DeclRefExpr 0x56147b723438 <col:3> '_Bool' lvalue Var 0x56147b71e698 'z$r_buff0_thd4' '_Bool'
|   | `-CStyleCastExpr 0x56147b723488 <col:20, col:27> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x56147b723458 <col:27> 'int' 1
|   |-CallExpr 0x56147b723508 <line:791:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56147b7234f0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56147b7234d0 <col:3> 'void ()' Function 0x56147b6c4410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56147b723560 <line:792:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56147b723548 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56147b723528 <col:3> 'void ()' Function 0x56147b6c4350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56147b723610 <line:793:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x56147b723580 <col:3> '_Bool' lvalue Var 0x56147b71ec50 'weak$$choice0' '_Bool'
|   | `-ImplicitCastExpr 0x56147b7235f8 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x56147b7235d8 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x56147b7235c0 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x56147b7235a0 <col:19> 'void *(void)' Function 0x56147b6c3e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x56147b7236c0 <line:794:3, col:45> '_Bool' '='
|   | |-DeclRefExpr 0x56147b723630 <col:3> '_Bool' lvalue Var 0x56147b71ecc8 'weak$$choice2' '_Bool'
|   | `-ImplicitCastExpr 0x56147b7236a8 <col:19, col:45> '_Bool' <PointerToBoolean>
|   |   `-CallExpr 0x56147b723688 <col:19, col:45> 'void *'
|   |     `-ImplicitCastExpr 0x56147b723670 <col:19> 'void *(*)(void)' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x56147b723650 <col:19> 'void *(void)' Function 0x56147b6c3e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|   |-BinaryOperator 0x56147b723738 <line:795:3, col:21> '_Bool' '='
|   | |-DeclRefExpr 0x56147b7236e0 <col:3> '_Bool' lvalue Var 0x56147b71e3c0 'z$flush_delayed' '_Bool'
|   | `-ImplicitCastExpr 0x56147b723720 <col:21> '_Bool' <LValueToRValue>
|   |   `-DeclRefExpr 0x56147b723700 <col:21> '_Bool' lvalue Var 0x56147b71ecc8 'weak$$choice2' '_Bool'
|   |-BinaryOperator 0x56147b7237b0 <line:796:3, col:15> 'int' '='
|   | |-DeclRefExpr 0x56147b723758 <col:3> 'int' lvalue Var 0x56147b71e440 'z$mem_tmp' 'int'
|   | `-ImplicitCastExpr 0x56147b723798 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x56147b723778 <col:15> 'int' lvalue Var 0x56147b71e328 'z' 'int'
|   |-BinaryOperator 0x56147b723be8 <line:797:3, col:162> 'int' '='
|   | |-DeclRefExpr 0x56147b7237d0 <col:3> 'int' lvalue Var 0x56147b71e328 'z' 'int'
|   | `-ConditionalOperator 0x56147b723bb8 <col:7, col:162> 'int'
|   |   |-BinaryOperator 0x56147b7239e0 <col:7, col:84> 'int' '||'
|   |   | |-BinaryOperator 0x56147b723900 <col:7, col:46> 'int' '||'
|   |   | | |-UnaryOperator 0x56147b723828 <col:7, col:8> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x56147b723810 <col:8> '_Bool' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x56147b7237f0 <col:8> '_Bool' lvalue Var 0x56147b71eae0 'z$w_buff0_used' '_Bool'
|   |   | | `-BinaryOperator 0x56147b7238e0 <col:26, col:46> 'int' '&&'
|   |   | |   |-UnaryOperator 0x56147b723878 <col:26, col:27> 'int' prefix '!' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x56147b723860 <col:27> '_Bool' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x56147b723840 <col:27> '_Bool' lvalue Var 0x56147b71e698 'z$r_buff0_thd4' '_Bool'
|   |   | |   `-UnaryOperator 0x56147b7238c8 <col:45, col:46> 'int' prefix '!' cannot overflow
|   |   | |     `-ImplicitCastExpr 0x56147b7238b0 <col:46> '_Bool' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x56147b723890 <col:46> '_Bool' lvalue Var 0x56147b71ebd8 'z$w_buff1_used' '_Bool'
|   |   | `-BinaryOperator 0x56147b7239c0 <col:64, col:84> 'int' '&&'
|   |   |   |-UnaryOperator 0x56147b723958 <col:64, col:65> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x56147b723940 <col:65> '_Bool' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x56147b723920 <col:65> '_Bool' lvalue Var 0x56147b71e698 'z$r_buff0_thd4' '_Bool'
|   |   |   `-UnaryOperator 0x56147b7239a8 <col:83, col:84> 'int' prefix '!' cannot overflow
|   |   |     `-ImplicitCastExpr 0x56147b723990 <col:84> '_Bool' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x56147b723970 <col:84> '_Bool' lvalue Var 0x56147b71e8f0 'z$r_buff1_thd4' '_Bool'
|   |   |-ImplicitCastExpr 0x56147b723ba0 <col:101> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56147b723a00 <col:101> 'int' lvalue Var 0x56147b71e328 'z' 'int'
|   |   `-ParenExpr 0x56147b723b80 <col:105, col:162> 'int'
|   |     `-ConditionalOperator 0x56147b723b50 <col:106, col:153> 'int'
|   |       |-BinaryOperator 0x56147b723ac0 <col:106, col:124> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x56147b723a78 <col:106> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x56147b723a60 <col:106> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x56147b723a20 <col:106> '_Bool' lvalue Var 0x56147b71eae0 'z$w_buff0_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x56147b723aa8 <col:124> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x56147b723a90 <col:124> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x56147b723a40 <col:124> '_Bool' lvalue Var 0x56147b71e698 'z$r_buff0_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x56147b723b20 <col:141> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x56147b723ae0 <col:141> 'int' lvalue Var 0x56147b71ea68 'z$w_buff0' 'int'
|   |       `-ImplicitCastExpr 0x56147b723b38 <col:153> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x56147b723b00 <col:153> 'int' lvalue Var 0x56147b71eb60 'z$w_buff1' 'int'
|   |-BinaryOperator 0x56147b724118 <line:798:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x56147b723c08 <col:3> 'int' lvalue Var 0x56147b71ea68 'z$w_buff0' 'int'
|   | `-ConditionalOperator 0x56147b7240e8 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x56147b7240b8 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x56147b7240a0 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x56147b723c28 <col:15> '_Bool' lvalue Var 0x56147b71ecc8 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x56147b7240d0 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56147b723c48 <col:31> 'int' lvalue Var 0x56147b71ea68 'z$w_buff0' 'int'
|   |   `-ParenExpr 0x56147b724080 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x56147b724050 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x56147b723e58 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x56147b723d78 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x56147b723ca0 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x56147b723c88 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x56147b723c68 <col:45> '_Bool' lvalue Var 0x56147b71eae0 'z$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x56147b723d58 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x56147b723cf0 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x56147b723cd8 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x56147b723cb8 <col:64> '_Bool' lvalue Var 0x56147b71e698 'z$r_buff0_thd4' '_Bool'
|   |       | |   `-UnaryOperator 0x56147b723d40 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x56147b723d28 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x56147b723d08 <col:83> '_Bool' lvalue Var 0x56147b71ebd8 'z$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x56147b723e38 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x56147b723dd0 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x56147b723db8 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x56147b723d98 <col:102> '_Bool' lvalue Var 0x56147b71e698 'z$r_buff0_thd4' '_Bool'
|   |       |   `-UnaryOperator 0x56147b723e20 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x56147b723e08 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x56147b723de8 <col:121> '_Bool' lvalue Var 0x56147b71e8f0 'z$r_buff1_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x56147b724038 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x56147b723e78 <col:138> 'int' lvalue Var 0x56147b71ea68 'z$w_buff0' 'int'
|   |       `-ParenExpr 0x56147b724018 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x56147b723fe8 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x56147b723f38 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x56147b723ef0 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x56147b723ed8 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x56147b723e98 <col:151> '_Bool' lvalue Var 0x56147b71eae0 'z$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x56147b723f20 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x56147b723f08 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x56147b723eb8 <col:169> '_Bool' lvalue Var 0x56147b71e698 'z$r_buff0_thd4' '_Bool'
|   |           |-ImplicitCastExpr 0x56147b723f98 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x56147b723f58 <col:186> 'int' lvalue Var 0x56147b71ea68 'z$w_buff0' 'int'
|   |           `-ImplicitCastExpr 0x56147b723fd0 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x56147b723f78 <col:198> 'int' lvalue Var 0x56147b71ea68 'z$w_buff0' 'int'
|   |-BinaryOperator 0x56147b724628 <line:799:3, col:208> 'int' '='
|   | |-DeclRefExpr 0x56147b724138 <col:3> 'int' lvalue Var 0x56147b71eb60 'z$w_buff1' 'int'
|   | `-ConditionalOperator 0x56147b7245f8 <col:15, col:208> 'int'
|   |   |-ImplicitCastExpr 0x56147b7245c8 <col:15> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x56147b7245b0 <col:15> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x56147b724158 <col:15> '_Bool' lvalue Var 0x56147b71ecc8 'weak$$choice2' '_Bool'
|   |   |-ImplicitCastExpr 0x56147b7245e0 <col:31> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56147b724178 <col:31> 'int' lvalue Var 0x56147b71eb60 'z$w_buff1' 'int'
|   |   `-ParenExpr 0x56147b724590 <col:43, col:208> 'int'
|   |     `-ConditionalOperator 0x56147b724560 <col:44, col:207> 'int'
|   |       |-BinaryOperator 0x56147b724388 <col:44, col:121> 'int' '||'
|   |       | |-BinaryOperator 0x56147b7242a8 <col:44, col:83> 'int' '||'
|   |       | | |-UnaryOperator 0x56147b7241d0 <col:44, col:45> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x56147b7241b8 <col:45> '_Bool' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x56147b724198 <col:45> '_Bool' lvalue Var 0x56147b71eae0 'z$w_buff0_used' '_Bool'
|   |       | | `-BinaryOperator 0x56147b724288 <col:63, col:83> 'int' '&&'
|   |       | |   |-UnaryOperator 0x56147b724220 <col:63, col:64> 'int' prefix '!' cannot overflow
|   |       | |   | `-ImplicitCastExpr 0x56147b724208 <col:64> '_Bool' <LValueToRValue>
|   |       | |   |   `-DeclRefExpr 0x56147b7241e8 <col:64> '_Bool' lvalue Var 0x56147b71e698 'z$r_buff0_thd4' '_Bool'
|   |       | |   `-UnaryOperator 0x56147b724270 <col:82, col:83> 'int' prefix '!' cannot overflow
|   |       | |     `-ImplicitCastExpr 0x56147b724258 <col:83> '_Bool' <LValueToRValue>
|   |       | |       `-DeclRefExpr 0x56147b724238 <col:83> '_Bool' lvalue Var 0x56147b71ebd8 'z$w_buff1_used' '_Bool'
|   |       | `-BinaryOperator 0x56147b724368 <col:101, col:121> 'int' '&&'
|   |       |   |-UnaryOperator 0x56147b724300 <col:101, col:102> 'int' prefix '!' cannot overflow
|   |       |   | `-ImplicitCastExpr 0x56147b7242e8 <col:102> '_Bool' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x56147b7242c8 <col:102> '_Bool' lvalue Var 0x56147b71e698 'z$r_buff0_thd4' '_Bool'
|   |       |   `-UnaryOperator 0x56147b724350 <col:120, col:121> 'int' prefix '!' cannot overflow
|   |       |     `-ImplicitCastExpr 0x56147b724338 <col:121> '_Bool' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x56147b724318 <col:121> '_Bool' lvalue Var 0x56147b71e8f0 'z$r_buff1_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x56147b724548 <col:138> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x56147b7243a8 <col:138> 'int' lvalue Var 0x56147b71eb60 'z$w_buff1' 'int'
|   |       `-ParenExpr 0x56147b724528 <col:150, col:207> 'int'
|   |         `-ConditionalOperator 0x56147b7244f8 <col:151, col:198> 'int'
|   |           |-BinaryOperator 0x56147b724468 <col:151, col:169> 'int' '&&'
|   |           | |-ImplicitCastExpr 0x56147b724420 <col:151> 'int' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x56147b724408 <col:151> '_Bool' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x56147b7243c8 <col:151> '_Bool' lvalue Var 0x56147b71eae0 'z$w_buff0_used' '_Bool'
|   |           | `-ImplicitCastExpr 0x56147b724450 <col:169> 'int' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x56147b724438 <col:169> '_Bool' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x56147b7243e8 <col:169> '_Bool' lvalue Var 0x56147b71e698 'z$r_buff0_thd4' '_Bool'
|   |           |-ImplicitCastExpr 0x56147b7244c8 <col:186> 'int' <LValueToRValue>
|   |           | `-DeclRefExpr 0x56147b724488 <col:186> 'int' lvalue Var 0x56147b71eb60 'z$w_buff1' 'int'
|   |           `-ImplicitCastExpr 0x56147b7244e0 <col:198> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x56147b7244a8 <col:198> 'int' lvalue Var 0x56147b71eb60 'z$w_buff1' 'int'
|   |-BinaryOperator 0x56147b724bd0 <line:800:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x56147b724648 <col:3> '_Bool' lvalue Var 0x56147b71eae0 'z$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x56147b724bb8 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56147b724b88 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x56147b724b40 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x56147b724b28 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x56147b724668 <col:20> '_Bool' lvalue Var 0x56147b71ecc8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x56147b724b70 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x56147b724b58 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x56147b724688 <col:36> '_Bool' lvalue Var 0x56147b71eae0 'z$w_buff0_used' '_Bool'
|   |     `-ParenExpr 0x56147b724b08 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x56147b724ad8 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x56147b724898 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x56147b7247b8 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x56147b7246e0 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x56147b7246c8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x56147b7246a8 <col:55> '_Bool' lvalue Var 0x56147b71eae0 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x56147b724798 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x56147b724730 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x56147b724718 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x56147b7246f8 <col:74> '_Bool' lvalue Var 0x56147b71e698 'z$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x56147b724780 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x56147b724768 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x56147b724748 <col:93> '_Bool' lvalue Var 0x56147b71ebd8 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x56147b724878 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x56147b724810 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x56147b7247f8 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x56147b7247d8 <col:112> '_Bool' lvalue Var 0x56147b71e698 'z$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x56147b724860 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x56147b724848 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x56147b724828 <col:131> '_Bool' lvalue Var 0x56147b71e8f0 'z$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x56147b724ac0 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x56147b724aa8 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x56147b7248b8 <col:148> '_Bool' lvalue Var 0x56147b71eae0 'z$w_buff0_used' '_Bool'
|   |         `-ParenExpr 0x56147b724a88 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x56147b724a58 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x56147b724978 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x56147b724930 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x56147b724918 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x56147b7248d8 <col:166> '_Bool' lvalue Var 0x56147b71eae0 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x56147b724960 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x56147b724948 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x56147b7248f8 <col:184> '_Bool' lvalue Var 0x56147b71e698 'z$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x56147b724a10 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x56147b7249c8 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x56147b724998 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x56147b724a40 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x56147b724a28 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x56147b7249f0 <col:212> '_Bool' lvalue Var 0x56147b71eae0 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x56147b7251b0 <line:801:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x56147b724bf0 <col:3> '_Bool' lvalue Var 0x56147b71ebd8 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x56147b725198 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56147b725168 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x56147b725120 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x56147b725108 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x56147b724c10 <col:20> '_Bool' lvalue Var 0x56147b71ecc8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x56147b725150 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x56147b725138 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x56147b724c30 <col:36> '_Bool' lvalue Var 0x56147b71ebd8 'z$w_buff1_used' '_Bool'
|   |     `-ParenExpr 0x56147b7250e8 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x56147b7250b8 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x56147b724e40 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x56147b724d60 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x56147b724c88 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x56147b724c70 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x56147b724c50 <col:55> '_Bool' lvalue Var 0x56147b71eae0 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x56147b724d40 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x56147b724cd8 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x56147b724cc0 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x56147b724ca0 <col:74> '_Bool' lvalue Var 0x56147b71e698 'z$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x56147b724d28 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x56147b724d10 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x56147b724cf0 <col:93> '_Bool' lvalue Var 0x56147b71ebd8 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x56147b724e20 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x56147b724db8 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x56147b724da0 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x56147b724d80 <col:112> '_Bool' lvalue Var 0x56147b71e698 'z$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x56147b724e08 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x56147b724df0 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x56147b724dd0 <col:131> '_Bool' lvalue Var 0x56147b71e8f0 'z$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x56147b7250a0 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x56147b725088 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x56147b724e60 <col:148> '_Bool' lvalue Var 0x56147b71ebd8 'z$w_buff1_used' '_Bool'
|   |         `-ParenExpr 0x56147b725068 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x56147b725038 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x56147b724f20 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x56147b724ed8 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x56147b724ec0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x56147b724e80 <col:166> '_Bool' lvalue Var 0x56147b71eae0 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x56147b724f08 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x56147b724ef0 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x56147b724ea0 <col:184> '_Bool' lvalue Var 0x56147b71e698 'z$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x56147b725008 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x56147b724f70 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x56147b724f40 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x56147b725020 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x56147b724fe0 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x56147b724f98 <col:219> 'int' 0
|   |-BinaryOperator 0x56147b725758 <line:802:3, col:227> '_Bool' '='
|   | |-DeclRefExpr 0x56147b7251d0 <col:3> '_Bool' lvalue Var 0x56147b71e698 'z$r_buff0_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x56147b725740 <col:20, col:227> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56147b725710 <col:20, col:227> 'int'
|   |     |-ImplicitCastExpr 0x56147b7256c8 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x56147b7256b0 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x56147b7251f0 <col:20> '_Bool' lvalue Var 0x56147b71ecc8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x56147b7256f8 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x56147b7256e0 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x56147b725210 <col:36> '_Bool' lvalue Var 0x56147b71e698 'z$r_buff0_thd4' '_Bool'
|   |     `-ParenExpr 0x56147b725690 <col:53, col:227> 'int'
|   |       `-ConditionalOperator 0x56147b725660 <col:54, col:226> 'int'
|   |         |-BinaryOperator 0x56147b725420 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x56147b725340 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x56147b725268 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x56147b725250 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x56147b725230 <col:55> '_Bool' lvalue Var 0x56147b71eae0 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x56147b725320 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x56147b7252b8 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x56147b7252a0 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x56147b725280 <col:74> '_Bool' lvalue Var 0x56147b71e698 'z$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x56147b725308 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x56147b7252f0 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x56147b7252d0 <col:93> '_Bool' lvalue Var 0x56147b71ebd8 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x56147b725400 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x56147b725398 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x56147b725380 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x56147b725360 <col:112> '_Bool' lvalue Var 0x56147b71e698 'z$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x56147b7253e8 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x56147b7253d0 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x56147b7253b0 <col:131> '_Bool' lvalue Var 0x56147b71e8f0 'z$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x56147b725648 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x56147b725630 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x56147b725440 <col:148> '_Bool' lvalue Var 0x56147b71e698 'z$r_buff0_thd4' '_Bool'
|   |         `-ParenExpr 0x56147b725610 <col:165, col:226> 'int'
|   |           `-ConditionalOperator 0x56147b7255e0 <col:166, col:212> 'int'
|   |             |-BinaryOperator 0x56147b725500 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x56147b7254b8 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x56147b7254a0 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x56147b725460 <col:166> '_Bool' lvalue Var 0x56147b71eae0 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x56147b7254e8 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x56147b7254d0 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x56147b725480 <col:184> '_Bool' lvalue Var 0x56147b71e698 'z$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x56147b725598 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x56147b725550 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x56147b725520 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x56147b7255c8 <col:212> 'int' <IntegralCast>
|   |               `-ImplicitCastExpr 0x56147b7255b0 <col:212> '_Bool' <LValueToRValue>
|   |                 `-DeclRefExpr 0x56147b725578 <col:212> '_Bool' lvalue Var 0x56147b71e698 'z$r_buff0_thd4' '_Bool'
|   |-BinaryOperator 0x56147b725d20 <line:803:3, col:221> '_Bool' '='
|   | |-DeclRefExpr 0x56147b725778 <col:3> '_Bool' lvalue Var 0x56147b71e8f0 'z$r_buff1_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x56147b725d08 <col:20, col:221> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56147b725cd8 <col:20, col:221> 'int'
|   |     |-ImplicitCastExpr 0x56147b725c90 <col:20> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x56147b725c78 <col:20> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x56147b725798 <col:20> '_Bool' lvalue Var 0x56147b71ecc8 'weak$$choice2' '_Bool'
|   |     |-ImplicitCastExpr 0x56147b725cc0 <col:36> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x56147b725ca8 <col:36> '_Bool' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x56147b7257b8 <col:36> '_Bool' lvalue Var 0x56147b71e8f0 'z$r_buff1_thd4' '_Bool'
|   |     `-ParenExpr 0x56147b725c58 <col:53, col:221> 'int'
|   |       `-ConditionalOperator 0x56147b725c28 <col:54, col:220> 'int'
|   |         |-BinaryOperator 0x56147b7259c8 <col:54, col:131> 'int' '||'
|   |         | |-BinaryOperator 0x56147b7258e8 <col:54, col:93> 'int' '||'
|   |         | | |-UnaryOperator 0x56147b725810 <col:54, col:55> 'int' prefix '!' cannot overflow
|   |         | | | `-ImplicitCastExpr 0x56147b7257f8 <col:55> '_Bool' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x56147b7257d8 <col:55> '_Bool' lvalue Var 0x56147b71eae0 'z$w_buff0_used' '_Bool'
|   |         | | `-BinaryOperator 0x56147b7258c8 <col:73, col:93> 'int' '&&'
|   |         | |   |-UnaryOperator 0x56147b725860 <col:73, col:74> 'int' prefix '!' cannot overflow
|   |         | |   | `-ImplicitCastExpr 0x56147b725848 <col:74> '_Bool' <LValueToRValue>
|   |         | |   |   `-DeclRefExpr 0x56147b725828 <col:74> '_Bool' lvalue Var 0x56147b71e698 'z$r_buff0_thd4' '_Bool'
|   |         | |   `-UnaryOperator 0x56147b7258b0 <col:92, col:93> 'int' prefix '!' cannot overflow
|   |         | |     `-ImplicitCastExpr 0x56147b725898 <col:93> '_Bool' <LValueToRValue>
|   |         | |       `-DeclRefExpr 0x56147b725878 <col:93> '_Bool' lvalue Var 0x56147b71ebd8 'z$w_buff1_used' '_Bool'
|   |         | `-BinaryOperator 0x56147b7259a8 <col:111, col:131> 'int' '&&'
|   |         |   |-UnaryOperator 0x56147b725940 <col:111, col:112> 'int' prefix '!' cannot overflow
|   |         |   | `-ImplicitCastExpr 0x56147b725928 <col:112> '_Bool' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x56147b725908 <col:112> '_Bool' lvalue Var 0x56147b71e698 'z$r_buff0_thd4' '_Bool'
|   |         |   `-UnaryOperator 0x56147b725990 <col:130, col:131> 'int' prefix '!' cannot overflow
|   |         |     `-ImplicitCastExpr 0x56147b725978 <col:131> '_Bool' <LValueToRValue>
|   |         |       `-DeclRefExpr 0x56147b725958 <col:131> '_Bool' lvalue Var 0x56147b71e8f0 'z$r_buff1_thd4' '_Bool'
|   |         |-ImplicitCastExpr 0x56147b725c10 <col:148> 'int' <IntegralCast>
|   |         | `-ImplicitCastExpr 0x56147b725bf8 <col:148> '_Bool' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x56147b7259e8 <col:148> '_Bool' lvalue Var 0x56147b71e8f0 'z$r_buff1_thd4' '_Bool'
|   |         `-ParenExpr 0x56147b725bd8 <col:165, col:220> 'int'
|   |           `-ConditionalOperator 0x56147b725ba8 <col:166, col:219> 'int'
|   |             |-BinaryOperator 0x56147b725aa8 <col:166, col:184> 'int' '&&'
|   |             | |-ImplicitCastExpr 0x56147b725a60 <col:166> 'int' <IntegralCast>
|   |             | | `-ImplicitCastExpr 0x56147b725a48 <col:166> '_Bool' <LValueToRValue>
|   |             | |   `-DeclRefExpr 0x56147b725a08 <col:166> '_Bool' lvalue Var 0x56147b71eae0 'z$w_buff0_used' '_Bool'
|   |             | `-ImplicitCastExpr 0x56147b725a90 <col:184> 'int' <IntegralCast>
|   |             |   `-ImplicitCastExpr 0x56147b725a78 <col:184> '_Bool' <LValueToRValue>
|   |             |     `-DeclRefExpr 0x56147b725a28 <col:184> '_Bool' lvalue Var 0x56147b71e698 'z$r_buff0_thd4' '_Bool'
|   |             |-ImplicitCastExpr 0x56147b725b78 <col:201, col:208> 'int' <IntegralCast>
|   |             | `-CStyleCastExpr 0x56147b725af8 <col:201, col:208> '_Bool' <IntegralToBoolean>
|   |             |   `-IntegerLiteral 0x56147b725ac8 <col:208> 'int' 0
|   |             `-ImplicitCastExpr 0x56147b725b90 <col:212, col:219> 'int' <IntegralCast>
|   |               `-CStyleCastExpr 0x56147b725b50 <col:212, col:219> '_Bool' <IntegralToBoolean>
|   |                 `-IntegerLiteral 0x56147b725b20 <col:219> 'int' 0
|   |-BinaryOperator 0x56147b725d98 <line:804:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x56147b725d40 <col:3> 'int' lvalue Var 0x56147b71dc88 '__unbuffered_p3_EAX' 'int'
|   | `-ImplicitCastExpr 0x56147b725d80 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x56147b725d60 <col:25> 'int' lvalue Var 0x56147b71e328 'z' 'int'
|   |-BinaryOperator 0x56147b725ec8 <line:805:3, col:37> 'int' '='
|   | |-DeclRefExpr 0x56147b725db8 <col:3> 'int' lvalue Var 0x56147b71e328 'z' 'int'
|   | `-ConditionalOperator 0x56147b725e98 <col:7, col:37> 'int'
|   |   |-ImplicitCastExpr 0x56147b725e50 <col:7> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x56147b725e38 <col:7> '_Bool' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x56147b725dd8 <col:7> '_Bool' lvalue Var 0x56147b71e3c0 'z$flush_delayed' '_Bool'
|   |   |-ImplicitCastExpr 0x56147b725e68 <col:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56147b725df8 <col:25> 'int' lvalue Var 0x56147b71e440 'z$mem_tmp' 'int'
|   |   `-ImplicitCastExpr 0x56147b725e80 <col:37> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x56147b725e18 <col:37> 'int' lvalue Var 0x56147b71e328 'z' 'int'
|   |-BinaryOperator 0x56147b725f60 <line:806:3, col:28> '_Bool' '='
|   | |-DeclRefExpr 0x56147b725ee8 <col:3> '_Bool' lvalue Var 0x56147b71e3c0 'z$flush_delayed' '_Bool'
|   | `-CStyleCastExpr 0x56147b725f38 <col:21, col:28> '_Bool' <IntegralToBoolean>
|   |   `-IntegerLiteral 0x56147b725f08 <col:28> 'int' 0
|   |-CallExpr 0x56147b725fb8 <line:807:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56147b725fa0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56147b725f80 <col:3> 'void ()' Function 0x56147b6c4410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56147b726028 <line:808:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56147b726010 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56147b725ff0 <col:3> 'void ()' Function 0x56147b6c4350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56147b7260a0 <line:809:3, col:25> 'int' '='
|   | |-DeclRefExpr 0x56147b726048 <col:3> 'int' lvalue Var 0x56147b71dda8 '__unbuffered_p3_EBX' 'int'
|   | `-ImplicitCastExpr 0x56147b726088 <col:25> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x56147b726068 <col:25> 'int' lvalue Var 0x56147b71dec8 'a' 'int'
|   |-CallExpr 0x56147b7260f8 <line:810:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56147b7260e0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56147b7260c0 <col:3> 'void ()' Function 0x56147b6c4410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56147b726150 <line:811:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56147b726138 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56147b726118 <col:3> 'void ()' Function 0x56147b6c4350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56147b726438 <line:812:3, col:103> 'int' '='
|   | |-DeclRefExpr 0x56147b726170 <col:3> 'int' lvalue Var 0x56147b71e328 'z' 'int'
|   | `-ConditionalOperator 0x56147b726408 <col:7, col:103> 'int'
|   |   |-BinaryOperator 0x56147b726230 <col:7, col:25> 'int' '&&'
|   |   | |-ImplicitCastExpr 0x56147b7261e8 <col:7> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x56147b7261d0 <col:7> '_Bool' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x56147b726190 <col:7> '_Bool' lvalue Var 0x56147b71eae0 'z$w_buff0_used' '_Bool'
|   |   | `-ImplicitCastExpr 0x56147b726218 <col:25> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x56147b726200 <col:25> '_Bool' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x56147b7261b0 <col:25> '_Bool' lvalue Var 0x56147b71e698 'z$r_buff0_thd4' '_Bool'
|   |   |-ImplicitCastExpr 0x56147b7263f0 <col:42> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56147b726250 <col:42> 'int' lvalue Var 0x56147b71ea68 'z$w_buff0' 'int'
|   |   `-ParenExpr 0x56147b7263d0 <col:54, col:103> 'int'
|   |     `-ConditionalOperator 0x56147b7263a0 <col:55, col:102> 'int'
|   |       |-BinaryOperator 0x56147b726310 <col:55, col:73> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x56147b7262c8 <col:55> 'int' <IntegralCast>
|   |       | | `-ImplicitCastExpr 0x56147b7262b0 <col:55> '_Bool' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x56147b726270 <col:55> '_Bool' lvalue Var 0x56147b71ebd8 'z$w_buff1_used' '_Bool'
|   |       | `-ImplicitCastExpr 0x56147b7262f8 <col:73> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x56147b7262e0 <col:73> '_Bool' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x56147b726290 <col:73> '_Bool' lvalue Var 0x56147b71e8f0 'z$r_buff1_thd4' '_Bool'
|   |       |-ImplicitCastExpr 0x56147b726370 <col:90> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x56147b726330 <col:90> 'int' lvalue Var 0x56147b71eb60 'z$w_buff1' 'int'
|   |       `-ImplicitCastExpr 0x56147b726388 <col:102> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x56147b726350 <col:102> 'int' lvalue Var 0x56147b71e328 'z' 'int'
|   |-BinaryOperator 0x56147b726640 <line:813:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x56147b726458 <col:3> '_Bool' lvalue Var 0x56147b71eae0 'z$w_buff0_used' '_Bool'
|   | `-ImplicitCastExpr 0x56147b726628 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56147b7265f8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x56147b726518 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x56147b7264d0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x56147b7264b8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x56147b726478 <col:20> '_Bool' lvalue Var 0x56147b71eae0 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x56147b726500 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x56147b7264e8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x56147b726498 <col:38> '_Bool' lvalue Var 0x56147b71e698 'z$r_buff0_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x56147b7265b0 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x56147b726568 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x56147b726538 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x56147b7265e0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x56147b7265c8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x56147b726590 <col:66> '_Bool' lvalue Var 0x56147b71eae0 'z$w_buff0_used' '_Bool'
|   |-BinaryOperator 0x56147b726928 <line:814:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x56147b726660 <col:3> '_Bool' lvalue Var 0x56147b71ebd8 'z$w_buff1_used' '_Bool'
|   | `-ImplicitCastExpr 0x56147b726910 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56147b7268e0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x56147b726800 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x56147b726720 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x56147b7266d8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x56147b7266c0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x56147b726680 <col:20> '_Bool' lvalue Var 0x56147b71eae0 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x56147b726708 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x56147b7266f0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x56147b7266a0 <col:38> '_Bool' lvalue Var 0x56147b71e698 'z$r_buff0_thd4' '_Bool'
|   |     | `-BinaryOperator 0x56147b7267e0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x56147b726798 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x56147b726780 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x56147b726740 <col:56> '_Bool' lvalue Var 0x56147b71ebd8 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x56147b7267c8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x56147b7267b0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x56147b726760 <col:74> '_Bool' lvalue Var 0x56147b71e8f0 'z$r_buff1_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x56147b726898 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x56147b726850 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x56147b726820 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x56147b7268c8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x56147b7268b0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x56147b726878 <col:102> '_Bool' lvalue Var 0x56147b71ebd8 'z$w_buff1_used' '_Bool'
|   |-BinaryOperator 0x56147b726b30 <line:815:3, col:66> '_Bool' '='
|   | |-DeclRefExpr 0x56147b726948 <col:3> '_Bool' lvalue Var 0x56147b71e698 'z$r_buff0_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x56147b726b18 <col:20, col:66> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56147b726ae8 <col:20, col:66> 'int'
|   |     |-BinaryOperator 0x56147b726a08 <col:20, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x56147b7269c0 <col:20> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x56147b7269a8 <col:20> '_Bool' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x56147b726968 <col:20> '_Bool' lvalue Var 0x56147b71eae0 'z$w_buff0_used' '_Bool'
|   |     | `-ImplicitCastExpr 0x56147b7269f0 <col:38> 'int' <IntegralCast>
|   |     |   `-ImplicitCastExpr 0x56147b7269d8 <col:38> '_Bool' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x56147b726988 <col:38> '_Bool' lvalue Var 0x56147b71e698 'z$r_buff0_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x56147b726aa0 <col:55, col:62> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x56147b726a58 <col:55, col:62> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x56147b726a28 <col:62> 'int' 0
|   |     `-ImplicitCastExpr 0x56147b726ad0 <col:66> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x56147b726ab8 <col:66> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x56147b726a80 <col:66> '_Bool' lvalue Var 0x56147b71e698 'z$r_buff0_thd4' '_Bool'
|   |-BinaryOperator 0x56147b726e18 <line:816:3, col:102> '_Bool' '='
|   | |-DeclRefExpr 0x56147b726b50 <col:3> '_Bool' lvalue Var 0x56147b71e8f0 'z$r_buff1_thd4' '_Bool'
|   | `-ImplicitCastExpr 0x56147b726e00 <col:20, col:102> '_Bool' <IntegralToBoolean>
|   |   `-ConditionalOperator 0x56147b726dd0 <col:20, col:102> 'int'
|   |     |-BinaryOperator 0x56147b726cf0 <col:20, col:74> 'int' '||'
|   |     | |-BinaryOperator 0x56147b726c10 <col:20, col:38> 'int' '&&'
|   |     | | |-ImplicitCastExpr 0x56147b726bc8 <col:20> 'int' <IntegralCast>
|   |     | | | `-ImplicitCastExpr 0x56147b726bb0 <col:20> '_Bool' <LValueToRValue>
|   |     | | |   `-DeclRefExpr 0x56147b726b70 <col:20> '_Bool' lvalue Var 0x56147b71eae0 'z$w_buff0_used' '_Bool'
|   |     | | `-ImplicitCastExpr 0x56147b726bf8 <col:38> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x56147b726be0 <col:38> '_Bool' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x56147b726b90 <col:38> '_Bool' lvalue Var 0x56147b71e698 'z$r_buff0_thd4' '_Bool'
|   |     | `-BinaryOperator 0x56147b726cd0 <col:56, col:74> 'int' '&&'
|   |     |   |-ImplicitCastExpr 0x56147b726c88 <col:56> 'int' <IntegralCast>
|   |     |   | `-ImplicitCastExpr 0x56147b726c70 <col:56> '_Bool' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x56147b726c30 <col:56> '_Bool' lvalue Var 0x56147b71ebd8 'z$w_buff1_used' '_Bool'
|   |     |   `-ImplicitCastExpr 0x56147b726cb8 <col:74> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x56147b726ca0 <col:74> '_Bool' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x56147b726c50 <col:74> '_Bool' lvalue Var 0x56147b71e8f0 'z$r_buff1_thd4' '_Bool'
|   |     |-ImplicitCastExpr 0x56147b726d88 <col:91, col:98> 'int' <IntegralCast>
|   |     | `-CStyleCastExpr 0x56147b726d40 <col:91, col:98> '_Bool' <IntegralToBoolean>
|   |     |   `-IntegerLiteral 0x56147b726d10 <col:98> 'int' 0
|   |     `-ImplicitCastExpr 0x56147b726db8 <col:102> 'int' <IntegralCast>
|   |       `-ImplicitCastExpr 0x56147b726da0 <col:102> '_Bool' <LValueToRValue>
|   |         `-DeclRefExpr 0x56147b726d68 <col:102> '_Bool' lvalue Var 0x56147b71e8f0 'z$r_buff1_thd4' '_Bool'
|   |-CallExpr 0x56147b726e70 <line:817:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56147b726e58 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56147b726e38 <col:3> 'void ()' Function 0x56147b6c4410 '__VERIFIER_atomic_end' 'void ()'
|   |-CallExpr 0x56147b726ec8 <line:818:3, col:27> 'void'
|   | `-ImplicitCastExpr 0x56147b726eb0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56147b726e90 <col:3> 'void ()' Function 0x56147b6c4350 '__VERIFIER_atomic_begin' 'void ()'
|   |-BinaryOperator 0x56147b726f80 <line:819:3, col:41> 'int' '='
|   | |-DeclRefExpr 0x56147b726ee8 <col:3> 'int' lvalue Var 0x56147b71d6e8 '__unbuffered_cnt' 'int'
|   | `-BinaryOperator 0x56147b726f60 <col:22, col:41> 'int' '+'
|   |   |-ImplicitCastExpr 0x56147b726f48 <col:22> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x56147b726f08 <col:22> 'int' lvalue Var 0x56147b71d6e8 '__unbuffered_cnt' 'int'
|   |   `-IntegerLiteral 0x56147b726f28 <col:41> 'int' 1
|   |-CallExpr 0x56147b727000 <line:820:3, col:25> 'void'
|   | `-ImplicitCastExpr 0x56147b726fc0 <col:3> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x56147b726fa0 <col:3> 'void ()' Function 0x56147b6c4410 '__VERIFIER_atomic_end' 'void ()'
|   `-ReturnStmt 0x56147b727078 <line:821:3, col:36>
|     `-CallExpr 0x56147b727058 <col:10, col:36> 'void *'
|       `-ImplicitCastExpr 0x56147b727040 <col:10> 'void *(*)(void)' <FunctionToPointerDecay>
|         `-DeclRefExpr 0x56147b727020 <col:10> 'void *(void)' Function 0x56147b6c3e68 '__VERIFIER_nondet_pointer' 'void *(void)'
|-FunctionDecl 0x56147b727210 prev 0x56147b71d430 <line:823:1, line:825:1> line:823:6 fence 'void ()'
| `-CompoundStmt 0x56147b7272b0 <line:824:1, line:825:1>
|-FunctionDecl 0x56147b7272e0 prev 0x56147b71d4f0 <line:826:1, line:828:1> line:826:6 isync 'void ()'
| `-CompoundStmt 0x56147b727380 <line:827:1, line:828:1>
|-FunctionDecl 0x56147b7273b0 prev 0x56147b71d5b0 <line:829:1, line:831:1> line:829:6 lwfence 'void ()'
| `-CompoundStmt 0x56147b727450 <line:830:1, line:831:1>
`-FunctionDecl 0x56147b7274b8 <line:832:1, line:858:1> line:832:5 main 'int ()'
  `-CompoundStmt 0x56147b729558 <line:833:1, line:858:1>
    |-DeclStmt 0x56147b7275d0 <line:834:3, col:16>
    | `-VarDecl 0x56147b727568 <col:3, col:13> col:13 used t95 'pthread_t':'unsigned long'
    |-CallExpr 0x56147b7277d8 <line:835:3, col:52> 'int'
    | |-ImplicitCastExpr 0x56147b7277c0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x56147b7275e8 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x56147b7048f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x56147b727628 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x56147b727608 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x56147b727568 't95' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x56147b727818 <col:24, col:34> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x56147b7276a0 <col:24, col:34> 'void *'
    | |   `-CStyleCastExpr 0x56147b727678 <col:25, col:33> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x56147b727640 <col:33> 'int' 0
    | |-ImplicitCastExpr 0x56147b727830 <col:37> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x56147b7276c0 <col:37> 'void *(void *)' Function 0x56147b71ede0 'P0' 'void *(void *)'
    | `-ParenExpr 0x56147b727740 <col:41, col:51> 'void *'
    |   `-CStyleCastExpr 0x56147b727718 <col:42, col:50> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x56147b7276e0 <col:50> 'int' 0
    |-DeclStmt 0x56147b7278c0 <line:836:3, col:16>
    | `-VarDecl 0x56147b727858 <col:3, col:13> col:13 used t96 'pthread_t':'unsigned long'
    |-CallExpr 0x56147b727a68 <line:837:3, col:52> 'int'
    | |-ImplicitCastExpr 0x56147b727a50 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x56147b7278d8 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x56147b7048f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x56147b727918 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x56147b7278f8 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x56147b727858 't96' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x56147b727aa8 <col:24, col:34> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x56147b727990 <col:24, col:34> 'void *'
    | |   `-CStyleCastExpr 0x56147b727968 <col:25, col:33> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x56147b727930 <col:33> 'int' 0
    | |-ImplicitCastExpr 0x56147b727ac0 <col:37> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x56147b7279b0 <col:37> 'void *(void *)' Function 0x56147b71f4f8 'P1' 'void *(void *)'
    | `-ParenExpr 0x56147b727a30 <col:41, col:51> 'void *'
    |   `-CStyleCastExpr 0x56147b727a08 <col:42, col:50> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x56147b7279d0 <col:50> 'int' 0
    |-DeclStmt 0x56147b727b50 <line:838:3, col:16>
    | `-VarDecl 0x56147b727ae8 <col:3, col:13> col:13 used t97 'pthread_t':'unsigned long'
    |-CallExpr 0x56147b727cf8 <line:839:3, col:52> 'int'
    | |-ImplicitCastExpr 0x56147b727ce0 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x56147b727b68 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x56147b7048f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x56147b727ba8 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x56147b727b88 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x56147b727ae8 't97' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x56147b727d38 <col:24, col:34> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x56147b727c20 <col:24, col:34> 'void *'
    | |   `-CStyleCastExpr 0x56147b727bf8 <col:25, col:33> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x56147b727bc0 <col:33> 'int' 0
    | |-ImplicitCastExpr 0x56147b727d50 <col:37> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x56147b727c40 <col:37> 'void *(void *)' Function 0x56147b71fb78 'P2' 'void *(void *)'
    | `-ParenExpr 0x56147b727cc0 <col:41, col:51> 'void *'
    |   `-CStyleCastExpr 0x56147b727c98 <col:42, col:50> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x56147b727c60 <col:50> 'int' 0
    |-DeclStmt 0x56147b727de0 <line:840:3, col:16>
    | `-VarDecl 0x56147b727d78 <col:3, col:13> col:13 used t98 'pthread_t':'unsigned long'
    |-CallExpr 0x56147b727f88 <line:841:3, col:52> 'int'
    | |-ImplicitCastExpr 0x56147b727f70 <col:3> 'int (*)(pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x56147b727df8 <col:3> 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)' Function 0x56147b7048f8 'pthread_create' 'int (pthread_t *restrict, const pthread_attr_t *restrict, void *(*)(void *), void *restrict)'
    | |-UnaryOperator 0x56147b727e38 <col:18, col:19> 'pthread_t *' prefix '&' cannot overflow
    | | `-DeclRefExpr 0x56147b727e18 <col:19> 'pthread_t':'unsigned long' lvalue Var 0x56147b727d78 't98' 'pthread_t':'unsigned long'
    | |-ImplicitCastExpr 0x56147b727fc8 <col:24, col:34> 'const pthread_attr_t *' <NullToPointer>
    | | `-ParenExpr 0x56147b727eb0 <col:24, col:34> 'void *'
    | |   `-CStyleCastExpr 0x56147b727e88 <col:25, col:33> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x56147b727e50 <col:33> 'int' 0
    | |-ImplicitCastExpr 0x56147b727fe0 <col:37> 'void *(*)(void *)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x56147b727ed0 <col:37> 'void *(void *)' Function 0x56147b722d48 'P3' 'void *(void *)'
    | `-ParenExpr 0x56147b727f50 <col:41, col:51> 'void *'
    |   `-CStyleCastExpr 0x56147b727f28 <col:42, col:50> 'void *' <NullToPointer>
    |     `-IntegerLiteral 0x56147b727ef0 <col:50> 'int' 0
    |-CallExpr 0x56147b728048 <line:842:3, col:27> 'void'
    | `-ImplicitCastExpr 0x56147b728030 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x56147b728010 <col:3> 'void ()' Function 0x56147b6c4350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x56147b728118 <line:843:3, col:41> '_Bool' '='
    | |-DeclRefExpr 0x56147b728068 <col:3> '_Bool' lvalue Var 0x56147b71df70 'main$tmp_guard0' '_Bool'
    | `-ImplicitCastExpr 0x56147b728100 <col:21, col:41> '_Bool' <IntegralToBoolean>
    |   `-BinaryOperator 0x56147b7280e0 <col:21, col:41> 'int' '=='
    |     |-ImplicitCastExpr 0x56147b7280c8 <col:21> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x56147b728088 <col:21> 'int' lvalue Var 0x56147b71d6e8 '__unbuffered_cnt' 'int'
    |     `-IntegerLiteral 0x56147b7280a8 <col:41> 'int' 4
    |-CallExpr 0x56147b728170 <line:844:3, col:25> 'void'
    | `-ImplicitCastExpr 0x56147b728158 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x56147b728138 <col:3> 'void ()' Function 0x56147b6c4410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x56147b7281e8 <line:845:3, col:36> 'void'
    | |-ImplicitCastExpr 0x56147b7281d0 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x56147b728190 <col:3> 'void (int)' Function 0x56147b6c3ca0 '__VERIFIER_assume' 'void (int)'
    | `-ImplicitCastExpr 0x56147b728228 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x56147b728210 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x56147b7281b0 <col:21> '_Bool' lvalue Var 0x56147b71df70 'main$tmp_guard0' '_Bool'
    |-CallExpr 0x56147b728278 <line:846:3, col:27> 'void'
    | `-ImplicitCastExpr 0x56147b728260 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x56147b728240 <col:3> 'void ()' Function 0x56147b6c4350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x56147b728560 <line:847:3, col:103> 'int' '='
    | |-DeclRefExpr 0x56147b728298 <col:3> 'int' lvalue Var 0x56147b71e328 'z' 'int'
    | `-ConditionalOperator 0x56147b728530 <col:7, col:103> 'int'
    |   |-BinaryOperator 0x56147b728358 <col:7, col:25> 'int' '&&'
    |   | |-ImplicitCastExpr 0x56147b728310 <col:7> 'int' <IntegralCast>
    |   | | `-ImplicitCastExpr 0x56147b7282f8 <col:7> '_Bool' <LValueToRValue>
    |   | |   `-DeclRefExpr 0x56147b7282b8 <col:7> '_Bool' lvalue Var 0x56147b71eae0 'z$w_buff0_used' '_Bool'
    |   | `-ImplicitCastExpr 0x56147b728340 <col:25> 'int' <IntegralCast>
    |   |   `-ImplicitCastExpr 0x56147b728328 <col:25> '_Bool' <LValueToRValue>
    |   |     `-DeclRefExpr 0x56147b7282d8 <col:25> '_Bool' lvalue Var 0x56147b71e4b8 'z$r_buff0_thd0' '_Bool'
    |   |-ImplicitCastExpr 0x56147b728518 <col:42> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x56147b728378 <col:42> 'int' lvalue Var 0x56147b71ea68 'z$w_buff0' 'int'
    |   `-ParenExpr 0x56147b7284f8 <col:54, col:103> 'int'
    |     `-ConditionalOperator 0x56147b7284c8 <col:55, col:102> 'int'
    |       |-BinaryOperator 0x56147b728438 <col:55, col:73> 'int' '&&'
    |       | |-ImplicitCastExpr 0x56147b7283f0 <col:55> 'int' <IntegralCast>
    |       | | `-ImplicitCastExpr 0x56147b7283d8 <col:55> '_Bool' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x56147b728398 <col:55> '_Bool' lvalue Var 0x56147b71ebd8 'z$w_buff1_used' '_Bool'
    |       | `-ImplicitCastExpr 0x56147b728420 <col:73> 'int' <IntegralCast>
    |       |   `-ImplicitCastExpr 0x56147b728408 <col:73> '_Bool' <LValueToRValue>
    |       |     `-DeclRefExpr 0x56147b7283b8 <col:73> '_Bool' lvalue Var 0x56147b71e710 'z$r_buff1_thd0' '_Bool'
    |       |-ImplicitCastExpr 0x56147b728498 <col:90> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x56147b728458 <col:90> 'int' lvalue Var 0x56147b71eb60 'z$w_buff1' 'int'
    |       `-ImplicitCastExpr 0x56147b7284b0 <col:102> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x56147b728478 <col:102> 'int' lvalue Var 0x56147b71e328 'z' 'int'
    |-BinaryOperator 0x56147b728768 <line:848:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x56147b728580 <col:3> '_Bool' lvalue Var 0x56147b71eae0 'z$w_buff0_used' '_Bool'
    | `-ImplicitCastExpr 0x56147b728750 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x56147b728720 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x56147b728640 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x56147b7285f8 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x56147b7285e0 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x56147b7285a0 <col:20> '_Bool' lvalue Var 0x56147b71eae0 'z$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x56147b728628 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x56147b728610 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x56147b7285c0 <col:38> '_Bool' lvalue Var 0x56147b71e4b8 'z$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x56147b7286d8 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x56147b728690 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x56147b728660 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x56147b728708 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x56147b7286f0 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x56147b7286b8 <col:66> '_Bool' lvalue Var 0x56147b71eae0 'z$w_buff0_used' '_Bool'
    |-BinaryOperator 0x56147b728a50 <line:849:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x56147b728788 <col:3> '_Bool' lvalue Var 0x56147b71ebd8 'z$w_buff1_used' '_Bool'
    | `-ImplicitCastExpr 0x56147b728a38 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x56147b728a08 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x56147b728928 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x56147b728848 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x56147b728800 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x56147b7287e8 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x56147b7287a8 <col:20> '_Bool' lvalue Var 0x56147b71eae0 'z$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x56147b728830 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x56147b728818 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x56147b7287c8 <col:38> '_Bool' lvalue Var 0x56147b71e4b8 'z$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x56147b728908 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x56147b7288c0 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x56147b7288a8 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x56147b728868 <col:56> '_Bool' lvalue Var 0x56147b71ebd8 'z$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x56147b7288f0 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x56147b7288d8 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x56147b728888 <col:74> '_Bool' lvalue Var 0x56147b71e710 'z$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x56147b7289c0 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x56147b728978 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x56147b728948 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x56147b7289f0 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x56147b7289d8 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x56147b7289a0 <col:102> '_Bool' lvalue Var 0x56147b71ebd8 'z$w_buff1_used' '_Bool'
    |-BinaryOperator 0x56147b728c58 <line:850:3, col:66> '_Bool' '='
    | |-DeclRefExpr 0x56147b728a70 <col:3> '_Bool' lvalue Var 0x56147b71e4b8 'z$r_buff0_thd0' '_Bool'
    | `-ImplicitCastExpr 0x56147b728c40 <col:20, col:66> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x56147b728c10 <col:20, col:66> 'int'
    |     |-BinaryOperator 0x56147b728b30 <col:20, col:38> 'int' '&&'
    |     | |-ImplicitCastExpr 0x56147b728ae8 <col:20> 'int' <IntegralCast>
    |     | | `-ImplicitCastExpr 0x56147b728ad0 <col:20> '_Bool' <LValueToRValue>
    |     | |   `-DeclRefExpr 0x56147b728a90 <col:20> '_Bool' lvalue Var 0x56147b71eae0 'z$w_buff0_used' '_Bool'
    |     | `-ImplicitCastExpr 0x56147b728b18 <col:38> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x56147b728b00 <col:38> '_Bool' <LValueToRValue>
    |     |     `-DeclRefExpr 0x56147b728ab0 <col:38> '_Bool' lvalue Var 0x56147b71e4b8 'z$r_buff0_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x56147b728bc8 <col:55, col:62> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x56147b728b80 <col:55, col:62> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x56147b728b50 <col:62> 'int' 0
    |     `-ImplicitCastExpr 0x56147b728bf8 <col:66> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x56147b728be0 <col:66> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x56147b728ba8 <col:66> '_Bool' lvalue Var 0x56147b71e4b8 'z$r_buff0_thd0' '_Bool'
    |-BinaryOperator 0x56147b728f40 <line:851:3, col:102> '_Bool' '='
    | |-DeclRefExpr 0x56147b728c78 <col:3> '_Bool' lvalue Var 0x56147b71e710 'z$r_buff1_thd0' '_Bool'
    | `-ImplicitCastExpr 0x56147b728f28 <col:20, col:102> '_Bool' <IntegralToBoolean>
    |   `-ConditionalOperator 0x56147b728ef8 <col:20, col:102> 'int'
    |     |-BinaryOperator 0x56147b728e18 <col:20, col:74> 'int' '||'
    |     | |-BinaryOperator 0x56147b728d38 <col:20, col:38> 'int' '&&'
    |     | | |-ImplicitCastExpr 0x56147b728cf0 <col:20> 'int' <IntegralCast>
    |     | | | `-ImplicitCastExpr 0x56147b728cd8 <col:20> '_Bool' <LValueToRValue>
    |     | | |   `-DeclRefExpr 0x56147b728c98 <col:20> '_Bool' lvalue Var 0x56147b71eae0 'z$w_buff0_used' '_Bool'
    |     | | `-ImplicitCastExpr 0x56147b728d20 <col:38> 'int' <IntegralCast>
    |     | |   `-ImplicitCastExpr 0x56147b728d08 <col:38> '_Bool' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x56147b728cb8 <col:38> '_Bool' lvalue Var 0x56147b71e4b8 'z$r_buff0_thd0' '_Bool'
    |     | `-BinaryOperator 0x56147b728df8 <col:56, col:74> 'int' '&&'
    |     |   |-ImplicitCastExpr 0x56147b728db0 <col:56> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x56147b728d98 <col:56> '_Bool' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x56147b728d58 <col:56> '_Bool' lvalue Var 0x56147b71ebd8 'z$w_buff1_used' '_Bool'
    |     |   `-ImplicitCastExpr 0x56147b728de0 <col:74> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x56147b728dc8 <col:74> '_Bool' <LValueToRValue>
    |     |       `-DeclRefExpr 0x56147b728d78 <col:74> '_Bool' lvalue Var 0x56147b71e710 'z$r_buff1_thd0' '_Bool'
    |     |-ImplicitCastExpr 0x56147b728eb0 <col:91, col:98> 'int' <IntegralCast>
    |     | `-CStyleCastExpr 0x56147b728e68 <col:91, col:98> '_Bool' <IntegralToBoolean>
    |     |   `-IntegerLiteral 0x56147b728e38 <col:98> 'int' 0
    |     `-ImplicitCastExpr 0x56147b728ee0 <col:102> 'int' <IntegralCast>
    |       `-ImplicitCastExpr 0x56147b728ec8 <col:102> '_Bool' <LValueToRValue>
    |         `-DeclRefExpr 0x56147b728e90 <col:102> '_Bool' lvalue Var 0x56147b71e710 'z$r_buff1_thd0' '_Bool'
    |-CallExpr 0x56147b728f98 <line:852:3, col:25> 'void'
    | `-ImplicitCastExpr 0x56147b728f80 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x56147b728f60 <col:3> 'void ()' Function 0x56147b6c4410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x56147b728ff0 <line:853:3, col:27> 'void'
    | `-ImplicitCastExpr 0x56147b728fd8 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x56147b728fb8 <col:3> 'void ()' Function 0x56147b6c4350 '__VERIFIER_atomic_begin' 'void ()'
    |-BinaryOperator 0x56147b729400 <line:854:3, col:187> '_Bool' '='
    | |-DeclRefExpr 0x56147b729020 <col:3> '_Bool' lvalue Var 0x56147b71dfe8 'main$tmp_guard1' '_Bool'
    | `-ImplicitCastExpr 0x56147b7293e8 <col:21, col:187> '_Bool' <IntegralToBoolean>
    |   `-UnaryOperator 0x56147b7293d0 <col:21, col:187> 'int' prefix '!' cannot overflow
    |     `-ParenExpr 0x56147b7293b0 <col:22, col:187> 'int'
    |       `-BinaryOperator 0x56147b729390 <col:23, col:186> 'int' '&&'
    |         |-BinaryOperator 0x56147b7292f8 <col:23, col:158> 'int' '&&'
    |         | |-BinaryOperator 0x56147b729260 <col:23, col:130> 'int' '&&'
    |         | | |-BinaryOperator 0x56147b7291c8 <col:23, col:102> 'int' '&&'
    |         | | | |-BinaryOperator 0x56147b729130 <col:23, col:74> 'int' '&&'
    |         | | | | |-BinaryOperator 0x56147b729098 <col:23, col:46> 'int' '=='
    |         | | | | | |-ImplicitCastExpr 0x56147b729080 <col:23> 'int' <LValueToRValue>
    |         | | | | | | `-DeclRefExpr 0x56147b729040 <col:23> 'int' lvalue Var 0x56147b71d808 '__unbuffered_p0_EAX' 'int'
    |         | | | | | `-IntegerLiteral 0x56147b729060 <col:46> 'int' 0
    |         | | | | `-BinaryOperator 0x56147b729110 <col:51, col:74> 'int' '=='
    |         | | | |   |-ImplicitCastExpr 0x56147b7290f8 <col:51> 'int' <LValueToRValue>
    |         | | | |   | `-DeclRefExpr 0x56147b7290b8 <col:51> 'int' lvalue Var 0x56147b71d928 '__unbuffered_p1_EAX' 'int'
    |         | | | |   `-IntegerLiteral 0x56147b7290d8 <col:74> 'int' 0
    |         | | | `-BinaryOperator 0x56147b7291a8 <col:79, col:102> 'int' '=='
    |         | | |   |-ImplicitCastExpr 0x56147b729190 <col:79> 'int' <LValueToRValue>
    |         | | |   | `-DeclRefExpr 0x56147b729150 <col:79> 'int' lvalue Var 0x56147b71da48 '__unbuffered_p2_EAX' 'int'
    |         | | |   `-IntegerLiteral 0x56147b729170 <col:102> 'int' 1
    |         | | `-BinaryOperator 0x56147b729240 <col:107, col:130> 'int' '=='
    |         | |   |-ImplicitCastExpr 0x56147b729228 <col:107> 'int' <LValueToRValue>
    |         | |   | `-DeclRefExpr 0x56147b7291e8 <col:107> 'int' lvalue Var 0x56147b71db68 '__unbuffered_p2_EBX' 'int'
    |         | |   `-IntegerLiteral 0x56147b729208 <col:130> 'int' 0
    |         | `-BinaryOperator 0x56147b7292d8 <col:135, col:158> 'int' '=='
    |         |   |-ImplicitCastExpr 0x56147b7292c0 <col:135> 'int' <LValueToRValue>
    |         |   | `-DeclRefExpr 0x56147b729280 <col:135> 'int' lvalue Var 0x56147b71dc88 '__unbuffered_p3_EAX' 'int'
    |         |   `-IntegerLiteral 0x56147b7292a0 <col:158> 'int' 1
    |         `-BinaryOperator 0x56147b729370 <col:163, col:186> 'int' '=='
    |           |-ImplicitCastExpr 0x56147b729358 <col:163> 'int' <LValueToRValue>
    |           | `-DeclRefExpr 0x56147b729318 <col:163> 'int' lvalue Var 0x56147b71dda8 '__unbuffered_p3_EBX' 'int'
    |           `-IntegerLiteral 0x56147b729338 <col:186> 'int' 0
    |-CallExpr 0x56147b729458 <line:855:3, col:25> 'void'
    | `-ImplicitCastExpr 0x56147b729440 <col:3> 'void (*)()' <FunctionToPointerDecay>
    |   `-DeclRefExpr 0x56147b729420 <col:3> 'void ()' Function 0x56147b6c4410 '__VERIFIER_atomic_end' 'void ()'
    |-CallExpr 0x56147b7294d0 <line:856:3, col:36> 'void'
    | |-ImplicitCastExpr 0x56147b7294b8 <col:3> 'void (*)(int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x56147b729478 <col:3> 'void (int)' Function 0x56147b6c40d8 '__VERIFIER_assert' 'void (int)'
    | `-ImplicitCastExpr 0x56147b729510 <col:21> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x56147b7294f8 <col:21> '_Bool' <LValueToRValue>
    |     `-DeclRefExpr 0x56147b729498 <col:21> '_Bool' lvalue Var 0x56147b71dfe8 'main$tmp_guard1' '_Bool'
    `-ReturnStmt 0x56147b729548 <line:857:3, col:10>
      `-IntegerLiteral 0x56147b729528 <col:10> 'int' 0
